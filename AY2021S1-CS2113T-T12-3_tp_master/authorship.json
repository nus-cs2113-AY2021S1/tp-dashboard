[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 1,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003cimg src\u003d \"https://commons.wikimedia.org/wiki/File:Red_Panda_(28072942347).jpg\" width\u003d150\u003e | Lusi Wu Qi | [Github](https://github.com/lusi711) | [Portfolio](team/lusi.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d \"https://raw.githubusercontent.com/chuckiex3/tp/MooiSuetYengFrancene-AboutUs.md/docs/images/raccoon-holding-cat-56a9a1535f9b58b7d0fd836e.jpg\" width\u003d150\u003e | Mooi Suet Yeng, Francene | [Github](https://github.com/chuckiex3) | [Portfolio](team/francene.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://raw.githubusercontent.com/NeilBaner/tp/neilbaner-AboutUs/docs/images/neil_coverimage.jpg\" width\u003d150\u003e | Neil Banerjee | [Github](https://github.com/neilbaner) | [Portfolio](team/neilbaner.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://imgur.com/AruRSrV.jpg\" width\u003d150\u003e | Neo Yao Jie, Joel | [Github](https://github.com/yaowzers) | [Portfolio](team/joel.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d\"https://thumbs.dreamstime.com/b/cat-looking-computer-screen-curious-young-blue-tabby-maine-coon-standing-chair-front-table-notebook-190121850.jpg\" width\u003d150\u003e | Nguyen Ngoc Long | [Github](https://github.com/longngng) | [Portfolio](team/longnguyen.md)"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4,
      "Lusi711": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "# Developer Guide for Zer0Note"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[1. Introduction](#1-introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u0026nbsp;\u0026nbsp;[1.1. Welcome!](#11-welcome)\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u0026nbsp;\u0026nbsp;[1.2. How to use this document](#12-how-to-use-this-document)\u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[2. Setting up](#2-setting-up) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[2.1. Prerequisites](#21-prerequisites) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[2.2. Setting up the project in your computer](#22-setting-up-the-project-in-your-computer) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[2.3. Verifying the setup](#23-verifying-the-setup) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[2.4. Configure coding style](#24-configure-the-coding-style) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[3. Design](#3-design) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.1. Architecture](#31-architecture) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.2. Commands](#32-commands) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.3. Notebooks](#33-notebooks) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.4. Tasks](#34-tasks) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[4. Implementation](#4-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[4.1. Mode Switch Feature](#41-mode-switch-feature) \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.1.1. Implementation](#411-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.1.2. Design Considerations](#412-design-considerations) \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[4.2. Timetable Mode](#42-timetable-mode) \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.1. Tasklist Management Feature](#421-tasklist-management-feature) \u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.1.1. Implementation](#4211-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.1.2. Design Considerations](#4212-design-considerations) \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.2. List Feature](#421-tasklist-management-feature) \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.2.1. Implementation](#4211-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.2.2.2. Design Considerations](#4212-design-considerations) \u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[4.3. Notebook Mode](#43-notebook-mode) \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.3.1. Notebook Management Feature](#431-notebook-management-feature) \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[4.4. [Proposed] Find duplicates](#44-find-duplicates) \u003cbr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.4.1 Proposed implementation](#441-proposed-implementation) \u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[4.4.2 Design considerations](#442-design-considerations) \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[5. Documentation](#5-documentation) \u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[5.1. Setting up and maintaining the project website](#51-setting-up-and-maintaining-the-project-website) \u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[5.2. Style guidance](#52-style-guidance) \u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[5.3. Diagrams](#53-diagrams) \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[5.4. Converting a document to the PDF Format](#54-converting-a-document-to-the-pdf-format) \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[6. Testing](#6-testing) \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[6.1. Running tests](#61-running-tests) \u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u0026nbsp;\u0026nbsp;[6.2. Types of tests](#62-types-of-tests) \u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix A: Project Scope](#appendix-a-project-scope) \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix B: User Stores](#appendix-b-user-stories) \u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix C: Use Cases](#appendix-c-use-cases) \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix D: Non-Functional Requirements](#appendix-d-non-functional-requirements) \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix E: Glossary](#appendix-e-glossary) \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[Appendix F: Instructions for manual testing](#appendix-f-instructions-for-manual-testing) \u003cbr\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "### 1.1. Welcome!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Welcome, and thank you for choosing to help contribute to Zer0Note! Zer0Note is a command-line based note-taking and"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "organisation application. It is designed to combine the features of graphical tools like OneNote and Notion, with"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "the editing speed of applications like vim and emacs. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "This document is written for developers intending to improve Zer0Note, by fixing bugs, or perhaps adding entirely new"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "features. It explains how the project is set up, the architecture used, and the code style you should adopt when"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "contributing code to the project. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "### 1.2. How to use this document"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Text that looks like this is normal text. It should be read as-is; it has no special meaning beyond what it says. "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example: The sequence diagram below shows the operation of the delete command. "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "`Text that looks like this denotes a keyword or small extract of code.`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example: The `CliUserInterface` is used to handle input and output to and from the console. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    Text that looks like this denotes a larger extract of code. "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```java"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    System.out.println(\"This is a code block!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "**`Text that looks like this denotes a button, or other UI element you may see on screen. `**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example: Click **`Configure` ** \u003e **`Project Defaults`** \u003e **`Project Structure`**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003cbr\u003e "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e Text that looks like this indicates a tip, providing additional information that is useful but not critically"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e important"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e We use this method because Chrome\u0027s built-in PDF viewer preserves hyperlinks. "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e :exclamation: Text that looks like this, beginning with the :exclamation: sign indicates information that is very"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e important, such as warnings about potential mistakes or common problems"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e :exclamation: **Caution** Follow the steps in the following guide precisely. "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 2. Setting up"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "The following section describes how to set up the coding environment on your own computer, in order to start writing"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "code to improve Zer0Note. "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 2.1. Prerequisites"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. **JDK** 11"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. **IntelliJ** IDEA"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 2.2. Setting up the project in your computer"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "\u003e:exclamation: **Caution:** Follow the steps in the following guide precisely."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eThings will not work out if you deviate in some steps."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. **Fork** this repo, and **clone** the fork into your computer."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    a. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    b. Click `New...` and find the directory of the JDK."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "4. Click `Import Project`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "5. Locate the `build.gradle` file and select it. Click `OK`."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "6. Click `Open as Project`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "7. Click `OK` to accept the default settings."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 2.3. Verifying the setup"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. Run the `seedu.duke.Duke`."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Try a few commands."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. [Run the tests](#61-running-tests) to ensure they all pass."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 2.4. Configure the coding style"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "If using IDEA, follow the guide [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "to set up IDEA’s coding style to match ours."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eOptionally, you can follow the guide [[se-edu/guides] Using Checkstyle](https://se-education.org/guides/tutorials/checkstyle.html)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003eto find how to use the CheckStyle within IDEA e.g., to report problems as you write code."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 3. Design"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "The following section describes the design and implementation of the product. UML diagrams and code snippets are used"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "to explain some aspects of the code. If you are unfamiliar with UML, the diagrams should still be fairly"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "understandable. However, you may wish to consult [[CS2113/T] Modeling](https://nus-cs2113-ay2021s1.github.io/website/se"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "-book-adapted/chapters/modeling.html) for a quick introduction to UML. "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "**How the architecture components interact with each other**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "The Sequence Diagram below shows how the components interact with each other for the scenario..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* work in progress */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 3.2 UserInterface Component"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "The UserInterface Component is made up of `AppMode`, `AppState`, `CliMessages`, `CliUserInterface`, `InputParser`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "The `UserInterface` component,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "* Executes user commands using the `Commands` component."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "* // how it interacts with the other components"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* TODO explain the various variables and methods */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 3.3. Commands Component"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![UML diagram for Timetable Commands](/diagrams/class/jpeg/timetable_commands.jpg)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![UML diagrams for Notebook Commands](/diagrams/class/jpeg/notebook_commands.jpg)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* to insert UML diagram */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "The `Commands` component, "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "// TODO add components"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 3.4. Tasks Component"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* to insert UML diagram */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 3.5 Notebooks Component"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![UML diagram for Notebooks](/diagrams/class/jpeg/notebooks.jpg)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* TODO explain the various variables and methods */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 3.6. Storage Component"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* to insert UML diagram */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "The following section describes the implementation of certain key features in the current version of Zer0Note. It also"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "provides some background into our (the original developers of Zer0Note) thinking and the rationale behind the"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "decisions. "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 4.1. Mode Switch Feature"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "#### 4.1.1. Implementation"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* work in progress */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "#### 4.1.2. Design Considerations"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* work in progress */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 4.2. Timetable Mode"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "#### 4.2.1. Tasklist Management Feature"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "##### 4.2.1.1. Implementation"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "`TaskList` is implemented to manage and store the tasks input by the user. It comprises of an `ArrayList` list of"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " `Task`s, and a few helper methods. "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "This means that multiple operations such as addition and deletion can be done on a `Task`, without affecting"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "the contents of other `Task` in the `TaskList`."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "{Introduce how the addition command works}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "The figure below shows how the delete task command works:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d \"https://user-images.githubusercontent.com/60319628/96657942-02dc6900-1376-11eb-9284-38322e1a2b09.png\"\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. The `CliUserInterface` receives the \"delete 1\" input by the user and passes it to the `InputParser` class."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. `InputParser` parses the input to determine the type of command and the index of the task that is required to delete."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "The Parser then constructs a `RemoveCommandTimetableMode` with constructor as shown below."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```java"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public RemoveCommandTimetableMode(int indexToRemove, AppState uiMode) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    this.setAppState(uiMode);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. Method **execute()** then calls the `TaskList` stored in `AppState` to update the deletion of the task."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "It also constructs `CliMessages` to display messages to the user."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "4. If the deletion is successful, `CliMessages` displays the message to the user."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "##### 4.2.1.2. Design Considerations"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "###### Aspect: How to store tasks in `TaskList`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "- **Alternative 1 (current choice):** Store as an `ArrayList` of tasks"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - Pros: It is easier to implement because the code base are list based."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - Cons: It is unoptimized in terms of complexity, which requires more work for scaling of the application."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "- **Alternative 2:** Store as a Hash Table with the key as the index and value as `Task`"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - Pros: It has a better time complexity and reduce the work in scaling stage since this data structure is more optimized (O(1) can be achieved)."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    - Cons: It takes more resources to implement. The constant factor for a hashing algorithm is significant and not"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     worth the tradeoff for smaller amounts of data, like a typical user would be likely to generate. "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 4.2.2. List feature"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "#### 4.2.2.1. Implementation"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "longngng"
        },
        "content": "The following sequence diagram shows how the list operation works:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![Sequence Diagram for List command](/diagrams/class/jpeg/SequenceDiagram_List.jpg)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 4.3. Notebook Mode"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "#### 4.3.1. Notebook Management Feature"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "As shown in Figure 1, the `NotebookShelf` class comprises instances of `Notebook` class. `Notebook` comprises `Section`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "and `Section` comprises `Page`. The navigability is not bidirectional. Multiple operations such as addition and deletion"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "can be done without affecting other instances at all, while updating the `Notebook` it is in."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "The figure below shows how the delete task command works:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003cimg src\u003d\"https://user-images.githubusercontent.com/60319628/96821973-9176e600-145b-11eb-95b7-5bf885ea1867.png\"\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "After calling `InputParser#getCommandFromInput` from `CliUserInterface`:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. `InputParser` parses the input to return the `notebookTitleToRemove`, `sectionTitleToRemove` and `pageNumberToRemove`."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Some of these members may be empty."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. `InputParser` constructs and returns the `RemoveCommandNotebookMode` class with constructor as shown below:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "```java"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public RemoveCommandNotebookMode(String notebookTitle, String sectionTitle,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                                     int pageNumber, AppState appState) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    this.appState \u003d appState;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    notebookTitleToRemove \u003d notebookTitle;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    sectionTitleToRemove \u003d sectionTitle;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    pageNumberToRemove \u003d pageNumber;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    currentBookshelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "3. Method **execute()** is called by `CliUserInterface` to delete a notebook, section, or page, depending on the input."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "A switch-case block is used to determine the method to call based on the `appMode`."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "4. If the deletion is successful, `CliMessages` displays the message to the user."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 4.4 [Proposed] Find duplicate feature"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 4.4.1 Proposed implementation"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The proposed find duplicate function is facilitated by a method in the classes `Task List`, `Notebook Shelf`, `Notebook` and `Section`."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Given below is an example usage scenario and how the find duplicates function behaves."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 1. The user launches the application for the first time. CliUserInterface#executeCommand is called when the user adds a task into the task list."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 2. The user types `add /tTask /by19-10-2020 1900`. The `add` command is passed through `InputParser#getCommandFromInput`, which then calls `AddCommandTimetableMode#execute()`."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 3. `execute()` is called, which then calls `InputParser#parseTaskTitle`, which first extracts the `title` from the user\u0027s input."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 4. The `title` is then passed to the `findDuplicate` method in `TaskList`."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 5. The `findDuplicate` method returns false, since it is the first task titled `Task` to be added into the `TaskList`. Conversely, the `findDuplicate` method returns true when a task with the same `title` already exists in the `TaskList`."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 6. `InputParser#parseDeadline` is then called, which returns the `deadline` to `AddCommandTimetableMode#execute()`."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 7. `TaskList#addTask` is then called and a new `Task`, with `title` and `deadline`, is initialised."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Step 8. To signal that the user has successfully added a task, a message is printed with `CliMessages#printAddedTaskMessage`."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The sequence diagram below shows how the find duplicate command works:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "![Sequence diagram for finding duplicates](/diagrams/class/jpeg/duplicates_francene.jpg)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 4.4.2 Design consideration"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "##### Aspect: Where findDuplicate should be placed"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* **Alternative 1 (current choice)**: findDuplicate should be saved in the class that potentially creates duplicates."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  * Pros: Easier to access previously saved tasks/notebooks/notebook sections."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  * Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "* **Alternative 2**: findDuplicate should be saved in the command that creates it."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  * Pros: Less time spent in passing variables to different classes."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  * Cons: We must grant access to private objects that are not within the command class."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 5. Documentation"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "The following section describes how documentation for the project should be written. Note: documentation is all"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " written in [GitHub-Flavoured Markdown](https://github.github.com/gfm/). "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 5.1. Setting up and maintaining the project website."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- We use **Jekyll** to manage documentation."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- The `docs/` folder is used for documentation."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- To learn how to set it up and maintain the project website, follow the guide"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[[se-edu/guides] Using Jekyll for project documentation](https://se-education.org/guides/tutorials/jekyll.html)."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 5.2. Style guidance"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- Follow the [Google developer documentation style guide](https://developers.google.com/style)."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- Also relevant is the [[se-edu/guides] Markdown coding standard](https://se-education.org/guides/conventions/markdown.html)."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "### 5.3. Diagrams"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "We use Microsoft Visio Professional 2019 to draw our UML diagrams. If you do not have access to this software, free"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "alternatives such as [Lucidchart](https://www.lucidchart.com/pages/), [Google Drawings](https://docs.google.com/drawings),"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "[LibreOffice Draw](https://www.libreoffice.org/discover/draw/) and many others are also available. If you wish to "
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "contribute diagrams (which we recommend you do if you contribute new features!), you may use any software of your"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "choosing to draw the diagrams, as long as the finished product somewhat resembles those we already have and follows"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "UML syntax strictly. "
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 5.4. Converting a document to the PDF Format"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "We use **Chrome** for converting documentation to PDF format."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e Reason: Chrome\u0027s PDF engine preserves hyperlinks used in Web pages."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. Go to your generated documentation site on GitHub using Chrome."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Within Chrome, click on the `Print` option in Chrome’s menu."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003cimg src\u003d \"https://se-education.org/guides/tutorials/images/chrome_save_as_pdf.png\"\u003e"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## 6. Testing"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "The following section describes the testing methodologies followed in this project to ensure high-quality, bug-free"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "code as far as possible. "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 6.1. Running tests"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- **Method 1: Using IntelliJ JUnit test runner**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - To run all tests, right-click on the `src/test/java` and choose `Run \u0027Tests in tp.test\u0027`"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- **Method 2: Using Gradle**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    - Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### 6.2. Types of tests"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "{Describe the type of testing used in the code}"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "This project has one type of test:"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Unit tests targeting the lowest level methods/classes."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "e.g. `seedu.duke.userinterface.command.notebook.AddNotebookTest`"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix A: Project Scope"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "**Target user profile**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- student with multiple courses"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- has a need to multiple notes"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- has a need to view upcoming tasks swiftly"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- prefer desktop apps over other forms"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "- is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "**Value proposition**:\u003cbr\u003e"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "manage both tasks and notes faster and lighter than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix B: User Stories"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|Priority| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|`***`|user|record and save my notes|review them later|"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|`***`|student|view all tasks and sections of my notebook|have a clear view of my progress|"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|`***`|new user|have usage instructions|refer to instructions when I forget how to use the App|"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|`**`|forgetful user|see the most urgent tasks|prioritise my tasks|"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "|`*`|long-time user|have personalised messages|feel attached to my notes|"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix C: Use Cases"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/* work in progress */"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix D: Non-Functional Requirements"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1. Should work on any *mainstream OS* as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix E: Glossary"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "* **Mainstream OS**: Windows, Linux, macOS"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* **Notebook shelf**: a list of all notebooks entered by the user"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Appendix F: Instructions for manual testing"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e**Note**: These instructions only provide a starting point for testers to work on;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003etesters are expected to do more *exploratory* testing."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 52,
      "Lusi711": 212,
      "yAOwzers": 41,
      "neilbaner": 101,
      "longngng": 4,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# Zer0Note"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Zer0Note is a *note taking and organisation* app that combines the features of OneNote \u0026 Notion with the speed of vim \u0026 emacs​."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[1. Introduction](#1-introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[1.1. About](#11-about) \u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[2. Quick Start](#2-quick-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[3. Features](#3-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.1 Viewing the user guide: `help`](#31-viewing-the-user-guide-help) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.2 Switching between the two modes: `mode`](#32-switching-between-the-two-modes-mode) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.3 Timetable Mode](#33-timetable-mode) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.1 Adding a task: `add`](#331-adding-a-task-add) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.2 Marking a task as done: `done`](#332-marking-a-task-as-done-done) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.3 Listing tasks: `list`](#333-listing-tasks-list) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.3.1 Listing all tasks](#3331-listing-all-tasks) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.3.2 Listing done tasks](#3332-listing-done-tasks) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.3.3 Listing undone tasks](#3333-listing-undone-tasks) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.3.4 Listing urgent tasks](#3334-listing-urgent-tasks) \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3.4. Deleting a task: `delete`](#334-deleting-a-task-delete) \u003cbr\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;[3.4 Notebook Mode](#34-notebook-mode) \u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.1 Add contents: `add`](#341-add-feature-add) \u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.1.1 Adding a notebook](#3411-adding-a-notebook) \u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.1.2 Adding a section](#3412-adding-a-section) \u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.1.3 Adding a page](#3413-adding-a-page) \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.2 Select contents: `select`](#342-select-feature-select) \u003cbr\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.3 List contents: `list`](#343-listing-contents-list) \u003cbr\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4.4 Delete contents: `delete`](#344-delete-contents-delete) \u003cbr\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[4. FAQ](#4-faq) \u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[5. Command Summary](#5-command-summary) \u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Zer0Note** is a note taking and organisation application meant for students(especially those who can type fast). It combines the features of note-taking apps (like OneNote) with the interaction speed of command-line based tools like vim and emacs. It helps students (like yourself!) to keep track of deadlines and take notes quickly. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Zer0Note** can operate in two different modes: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Timetable Mode"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "2. Notebook Mode"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 1.1 About"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "This app is targeted towards students, especially those who enjoy typing! This user guide will give you a step-by-step tutorial on how to use each of the commands. By using these commands, you will be able to keep track of your deadlines and notes!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e Here are some icons that will be used in this User Guide: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e\u003e :exclamation: : Thing(s) to note"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e\u003e :bulb: : Tip(s)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e :exclamation: Notes about the format:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* Words/sections that look like this: `example`, are code snippets."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* Words/phrases within `[square brackets]` are the expected user inputs."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  e.g. in `add /n[NOTEBOOK]`, `NOTEBOOK` is a parameter which can be used as `add /nCS2101`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* Words within `(parentheses)` are optional user inputs."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "  e.g. in `list (/urgent)`, `/urgent` is an optional parameter."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "* Within a code segment, `\u003e\u003e\u003e` denotes the command typed by the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " Example:  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  \u003e\u003e\u003e select /sChapter 1"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        now in notebook section: Chapter 1"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e `select /sChapter 1` is the user\u0027s input, and `now in notebook section: Chapter 1` is the output message.      "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Download the latest version of `Zer0Note` from [here](https://github.com/AY2021S1-CS2113T-T12-3/tp/releases)."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Zer0Note."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "4. Open a terminal on your computer and navigate to the folder containing the jar file. In the following example, the file has been saved in the Downloads folder."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    ![Change directory](/images/command-change-dir.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    Figure 1. Changing directory in Windows command prompt"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "5. Type `java -jar Zer0Note.jar` and press Enter."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "6. If successful, you will see the following message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    ![Welcome message](/images/welcome.png) "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    Figure 2. Welcome message on successful run"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Great! Now that you have successfully run Zer0Note, go ahead and try out the different commands available (shown in the next section, 3. Features)."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The following sections will explain more about the different commands that can be used in anywhere, "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "and commands specific to [Timetable Mode](#33-timetable-mode) and [Notebook Mode](#34-notebook-mode)."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.1 Viewing the user guide: `help`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "To view the full user guide, type in `help`."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "To view the user guide for the timetable mode, type in `help timetable`."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "To view the user guide for the notebook mode, type in `help notebook`."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.2 Switching between the two modes: `mode`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Switches from notebook mode (at the bookshelf level) to the timetable mode or vice versa."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "- Switch to the notebook mode"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `mode /n`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "- Switch to the timetable mode"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `mode /t`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 3.3 Timetable Mode"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Keeping up with deadlines may seem like a daunting task, especially when you\u0027re already busy with school. "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "With Zer0Note\u0027s Timetable Mode, you\u0027ll be able to manage a list of tasks. "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "You can `add`, `delete`, `list` and mark your deadlines as `done`!"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The following sections explain the various features you can use while you are in the Timetable Mode."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.3.1 Adding a task: `add`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "This command adds a task with a `deadline` to the task list. "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `add /t[TASK] /by[dd-MM-yyyy] [hhmm]`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `TASK`: name of the task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "* `dd-MM-yyyy`: the due date of the task, in the format day/month/year."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `hhmm`: time the task is due, in 24h format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Let\u0027s say you have to read a book for one of your modules. "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e add /tRead book /by19-10-2020 1800"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Added: coding"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "1:[x] Read book (by: Oct 19 2020 06.00 PM)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.3.2 Marking a task as done: `done`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Marks an existing `task` as done in the current task list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Format: `done [INDEX]`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "* `INDEX`: Index of the existing task in the current task list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e done 1"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Yay! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " [o] Read book"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.3.3 Listing tasks: `list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.3.3.1 Listing all tasks"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out all the existing tasks."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "longngng"
        },
        "content": "1:[o] Read book (by: Oct 19 2020 06.00 PM)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "longngng"
        },
        "content": "2:[x] Return book (by: Oct 23 2020 12.00 PM)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "longngng"
        },
        "content": "3:[x] Submit assignment (by: Oct 18 2020 04.00 PM)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "longngng"
        },
        "content": "4:[x] CS2113T Quiz (by: Oct 23 2020 11.00 PM)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "longngng"
        },
        "content": "5:[o] CS2101 OP2 (by: Oct 25 2020 11.00 AM)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.3.3.2 Listing done tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out all the tasks that are marked as done."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list /d`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /d"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "longngng"
        },
        "content": "1:[o] Read book (by: Oct 19 2020 06.00 PM)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "longngng"
        },
        "content": "2:[o] CS2101 OP2 (by: Oct 25 2020 11.00 AM)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.3.3.3 Listing undone tasks"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out all the tasks that are not marked as done."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list /u`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /u"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "longngng"
        },
        "content": "1:[x] Return book (by: Oct 23 2020 12.00 PM)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "longngng"
        },
        "content": "2:[x] Submit assignment (by: Oct 18 2020 04.00 PM)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "longngng"
        },
        "content": "3:[x] CS2113T Quiz (by: Oct 23 2020 11.00 PM)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.3.3.4 Listing urgent tasks"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out top urgent tasks that has not been done, sorted by deadlines. If there are many undone tasks, top three urgent ones will be displayed."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list /urgent`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /urgent"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "longngng"
        },
        "content": "1:[x] Submit assignment (by: Oct 18 2020 04.00 PM)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "longngng"
        },
        "content": "2:[x] CS2113T Quiz (by: Oct 23 2020 11.00 PM)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "longngng"
        },
        "content": "3:[x] Return book (by: Oct 23 2020 12.00 PM)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.3.4 Deleting a task: `delete`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Deletes an existing task from the task list."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `delete [INDEX]`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `INDEX` refers to the index number of the intended task in the full task list"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e delete 1"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "[x] Read book (by: Oct 19 2020 06.00 PM)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 3.4 Notebook Mode"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "In `Notebook mode`, you can manage a shelf of notebooks."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Each notebook contains sections, and each section contains pages. Each page holds your type-written notes."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.4.1 Add Feature: `add`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.4.1.1 Adding a notebook"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `notebook`  into the `notebook shelf`."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /n[NOTEBOOK]`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `NOTEBOOK`: the name of the notebook."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e add /nCS2101"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Added notebook with title: CS2101"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.4.1.2 Adding a section"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `section`  into the [selected](#342-select-feature-select) `notebook`."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:bulb: You must select a `notebook` before adding a section!"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /s[SECTION]`"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `SECTION`: the name of the section in the selected `notebook`."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e add /sW1: Java"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Added section with title: W1: Java"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### 3.4.1.3 Adding a page"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a `page`  into the [selected](#342-select-feature-select) `section`."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:bulb: You must select a `section` before adding a page!"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `add /p[PAGE]; [PAGE CONTENT]`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `PAGE`: the name of the page in the selected `section`."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `PAGE CONTENT`: the contents that you would like to store in the `page`."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e add /pHELLO WORLD; System.out.println(\"Hello World!\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Added page with title: HELLO WORLD"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.4.2 Select Feature: `select`"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Select a `notebook`, `section`, `page` or a combination of the three."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `select /n[NOTEBOOK] /s[SECTION] /p[NUMBER]`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `NOTEBOOK`: the title of the expected `notebook`."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `SECTION`: the title of the expected `section` in `notebook`."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `NUMBER`: the page number in the expected `section`."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In *NOTEBOOK MODE*:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /nCS2101 /sW2 /p1` - selects page 1 in the notebook `CS2101`, under the section `W2`."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `select /nCS2101 /sW2` - selects section titled `W2` in the notebook `CS2101`."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `select /nCS2101` - selects the notebook titled `CS2101`."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /all` - navigates back into `NOTEBOOK MODE`, where you can list to see all available notebooks."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e These commands can be run anywhere(i.e in a selected notebook or section) once you\u0027re in NOTEBOOK MODE.  "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *NOTEBOOK*:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /s1: What is OOP? /p1` - selects page 1 in the section `1: What is OOP?`, in the selected `notebook`."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /s1: What is OOP?` - selects the section entitled `1: What is OOP?` in the selected `notebook`."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *SECTION*:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `select /p1` - selects page 1 in the selected `section`."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "\u003e\u003e\u003e select /nCS2101"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "now in notebook book: CS2101"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "```"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.4.3 Listing contents: `list`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out the content of the bookshelf, a selected book or a selected section."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list (/s) (/a)`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list` display contents in one level below the current selected object"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list /s` display the notebooks together with titles of sections in NOTEBOOK mode"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list /a` display all notebooks, sections and pages."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In *NOTEBOOK MODE*,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list` displays the titles of notebooks in the shelf."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list /s` displays the titles of notebooks together with titles of sections."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list /a` displays all notebooks, sections and pages."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2113"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CG2271"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2101"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /s"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2113"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 1"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 2"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CG2271"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2101"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 1"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 2"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 3"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /a"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2113"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 1"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 2"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CG2271"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "longngng"
        },
        "content": "* CS2101"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 1"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "longngng"
        },
        "content": "        |-- Writing email"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "longngng"
        },
        "content": "            Lorem ipsum"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "longngng"
        },
        "content": "        |-- Team meeting"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "longngng"
        },
        "content": "            Lorem ipsum"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 2"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Chapter 3"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *NOTEBOOK*:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list` displays the titles of all the sections in the selected notebook."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list /a` displays all sections and pages in the selected notebook."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e select /nCS2101"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "longngng"
        },
        "content": "now in notebook book: CS2101"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003elist"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 1"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 2"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 3"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list /a"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 1"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Writing email"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Lorem ipsum"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "longngng"
        },
        "content": "  |-- Team meeting"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Lorem ipsum"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 2"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Chapter 3"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "In a selected *SECTION*:"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "longngng"
        },
        "content": "- `list` displays all the pages in the selected section."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "longngng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e select /sChapter 1"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "longngng"
        },
        "content": "now in notebook section: Chapter 1"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e list"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Writing email"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "longngng"
        },
        "content": "    Lorem ipsum"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "longngng"
        },
        "content": "* Team meeting"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "longngng"
        },
        "content": "    Lorem ipsum"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### 3.4.4 Delete Contents: `delete`"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Deletes an existing notebook, section or page."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e :exclamation: The current selection determines the type you can delete."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Format: `delete /n[NOTEBOOK] /s[SECTION] /p[NUMBER]`"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `NOTEBOOK`: the title of the notebook to be deleted"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `SECTION`: the title of the section to be deleted in the selected `NOTEBOOK`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `NUMBER`: the page number of the page to be deleted in the selected `SECTION`."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "In *NOTEBOOK MODE*,"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /nCS2113T /sW10 /p1` deletes page `1` under the section `W10` of the notebook `CS2113T`."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /nCS2113T /sW10` deletes the entire section titled `W10` in the notebook `CS2113T`."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /nCS2113T` deletes the entire notebook titled `CS2113T`."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "In a selected *NOTEBOOK*,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /s1: What is OOP? /p1` deletes page `1` of the section titled `1: What is OOP?` of the selected notebook."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /s1: What is OOP?` deletes the section titled `1: What is OOP?` of the selected notebook."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "In a selected *SECTION*,"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "* `delete /p1` deletes page `1` of the selected section."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e mode /n"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "You are now in notebook mode"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e delete /nCS2113T /sW10 /p1"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Noted. I\u0027ve removed this page: HELLO WORLD"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "System.out.println(\"Hello World!\")"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e delete /nCS2113T /sW10"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Noted. I\u0027ve removed this section:"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\tW10"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "\u003e\u003e\u003e delete /nCS2113T"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "Noted. I\u0027ve removed this notebook:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    CS2113T"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "```"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "This section answers some frequently asked questions. "
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## 5. Command Summary"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "This section lists all the commands available in **Zer0Note**! There are general commands that can be used anywhere, as well as commands that are specific to the mode you are in!"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e :bulb: You can click on each of the commands to navigate to its section."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### General Commands"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The following table shows you a list of commands that can be used anywhere, and in any mode."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "###### Table: Commands that can be used anywhere"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Command** | **Format** | **Example**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "----------- | ---------- | -----------"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Help](#31-viewing-the-user-guide-help): `help` | 1) help 2) help timetable 3) help notebook |"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "### Timetable Mode"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The following table is a cheatsheet of the commands available in Timetable Mode."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "###### Table: Cheatsheet of the commands available in Timetable Mode "
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "**Command** | **Format** | **Example**"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "----------- | ---------- | -----------"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Add a task](#331-adding-a-task-add): `add` | add /tTASK /by[dd-MM-yyyy] [hhmm] | add /tcoding /by19-10-2020 1705"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Mark a task as done](#332-marking-a-task-as-done-done): `done` | done [INDEX] | done 1"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[List tasks](#333-listing-tasks-list): `list` | list (/u) (/d) (/urgent) |"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Delete](#334-deleting-a-task-delete): `delete` | delete [INDEX] | delete 1"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Switch to notebook mode](#32-switching-between-the-two-modes-mode): `mode` | mode /n |"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### Notebook Mode"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "The following table is a cheatsheet of the commands available in Notebook Mode."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "###### Table: Cheatsheet of the commands available in Notebook Mode"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Command** | **Format** | **Example**"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "----------- | ---------- | -----------"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Add](#341-add-feature-add): `add` | 1) add /nNOTEBOOK 2) add /sSECTION 3) add /pPAGE; CONTENT | add /nCS2101"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Select](#342-select-feature-select): `select` | 1) select /nNOTEBOOK 2) select /sSECTION 3) select /pNUMBER | select /nCS2101"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[List contents](#343-listing-contents-list): `list` | list (/s) (/a) |"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Delete](#344-delete-contents-delete): `delete` | 1) select /nNOTEBOOK /sSECTION /pNUMBER | select /nCS2113T /sW10 /p1"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "[Switch to timetable mode](#32-switching-between-the-two-modes-mode): `mode` | mode /t |"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 194,
      "Lusi711": 56,
      "yAOwzers": 40,
      "neilbaner": 6,
      "longngng": 144,
      "-": 36
    }
  },
  {
    "path": "docs/originalUG.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Q**: How do I transfer my data to another computer?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 42
    }
  },
  {
    "path": "docs/team/francene.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# Mooi Suet Yeng, Francene - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 6
    }
  },
  {
    "path": "docs/team/joel.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "# Neo Yao Jie, Joel - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/lusi.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "# Lusi Wu Qi - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 6
    }
  },
  {
    "path": "docs/team/neilbaner.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "# Neil Banerjee"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliUserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliUserInterface ui \u003d new CliUserInterface();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 4,
      "neilbaner": 2,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/AddCommandNotebookException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user is unable to add a notebook, section or page."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddCommandNotebookException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public AddCommandNotebookException(String problematicInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(problematicInput);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Unable to add notebook/section/page\" + problematicInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/EmptyPageException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an empty page."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class EmptyPageException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Empty page!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding a page: add /pPAGE TITLE; PAGE CONTENT\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/IncorrectAppModeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@Lusi711"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class IncorrectAppModeException extends ZeroNoteException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Please check that you are in the correct mode.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1,
      "Lusi711": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/IncorrectDeadlineFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input the date/time wrongly."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class IncorrectDeadlineFormatException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"You have entered the date and time wrongly. \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Oops! Your deadline should be in this format\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"dd-MM-yyyy HHmm where time is in 24h\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 10,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@Lusi711"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidCommandException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public InvalidCommandException(String problematicInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        super(problematicInput);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"You have entered an invalid command: \" + problematicInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 9,
      "Lusi711": 4,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidNotebookException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid notebook name."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidNotebookException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public InvalidNotebookException(String problematicInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d problematicInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"You have entered an invalid notebook name \" + problematicInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding notebook: add /nNOTEBOOK TITLE\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting notebook: select /nNOTEBOOK TITLE\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 14,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidPageException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid page name."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidPageException extends ZeroNoteException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Entered invalid page\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding page: add /pPAGE; CONTENT\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting page: select /pNUMBER\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 10,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidSectionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input an invalid section name."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InvalidSectionException extends ZeroNoteException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public InvalidSectionException(String problematicInput) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d problematicInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Invalid Section Name \" + problematicInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for adding section: add /sSECTION\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Format for selecting section: select /sSECTION\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 13,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/InvalidUserInputException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class InvalidUserInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/NotebookOutOfBoundsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user has input a notebook that does not exist."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class NotebookOutOfBoundsException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public NotebookOutOfBoundsException(int input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.problematicInput \u003d Integer.toString(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Notebook at index: \" + problematicInput + \"does not exist.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskTitleException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user\u0027s input is missing a title."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskTitleException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Your task is missing a title!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Please type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 10,
      "neilbaner": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/TaskWrongFormatException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user\u0027s input does not follow the correct format expected."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskWrongFormatException extends ZeroNoteException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"The input \\\"\" + problematicInput + \"\\\" doesn\u0027t follow the format expected. \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 8,
      "neilbaner": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ZeroNoteException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class ZeroNoteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String problematicInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ZeroNoteException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ZeroNoteException(String enteredCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.problematicInput \u003d enteredCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public abstract void printErrorMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Notebook.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Notebook {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cSection\u003e sectionArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Notebook(String title) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        sectionArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Get the title of this notebook."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the title of the notebook"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Set the title of this notebook."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the desired new title of the notebook"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTag(String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tag \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Add a new section with a given title to this notebook."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the section to be added"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addSection(String title) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        sectionArrayList.add(new Section(title));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Remove a section from the notebook."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param indexToRemove the index of the section to remove"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Section removeSection(int indexToRemove) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return sectionArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Find a section with a given title in this notebook."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param searchKey the title of the section to search for in the notebook"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the index of the section with the given title, -1 if not found"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int findSection(String searchKey) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Section s : sectionArrayList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (s.getTitle().equals(searchKey)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Section getSectionAtIndex(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return sectionArrayList.get(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ArrayList\u003cSection\u003e getSectionArrayList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return sectionArrayList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 5,
      "Lusi711": 11,
      "neilbaner": 56,
      "longngng": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/NotebookShelf.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class NotebookShelf {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final ArrayList\u003cNotebook\u003e notebooksArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public NotebookShelf() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        notebooksArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cNotebook\u003e getNotebooksArrayList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return notebooksArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Find the notebook on the shelf with the given title."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the notebook we want to find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return the index of the notebook we want to find"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int findNotebook(String title) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Notebook n : notebooksArrayList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (n.getTitle().equals(title)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Get the notebook at a particular index in the ArrayList. Use findNotebook() to get an index from a given title."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param index the index of the notebook to be found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return The notebook at that index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Notebook getNotebookAtIndex(int index) throws NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (index \u003c 0 | index \u003e notebooksArrayList.size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new NotebookOutOfBoundsException(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return notebooksArrayList.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Add a notebook with a given title to the shelf."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param title the title of the notebook to be added"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addNotebook(String title) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        notebooksArrayList.add(new Notebook(title));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Notebook removeNotebook(int indexToRemove) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return notebooksArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7,
      "Lusi711": 10,
      "neilbaner": 43,
      "longngng": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Page.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Page {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Page(String title, String content) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setContent(String content) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printPage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTag(String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tag \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4,
      "Lusi711": 9,
      "neilbaner": 6,
      "longngng": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/notebooks/Section.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.notebooks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Section {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cPage\u003e pageArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Section(String title) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        pageArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addPage(String title, String content) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        pageArrayList.add(new Page(title, content));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int getPage(String searchKey) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Page p : pageArrayList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (p.getTitle().equals(searchKey)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void getPage(int pageIndex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Page page \u003d pageArrayList.get(pageIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            page.printPage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IndexOutOfBoundsException | NullPointerException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"page \u003c\" + (pageIndex + 1) + \"\u003e doesn\u0027t exist\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Page removePage(int indexToRemove) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return pageArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void removePage(String titleToRemove) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int indexToRemove \u003d getPage(titleToRemove);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (indexToRemove \u003e\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            removePage(indexToRemove);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"doesn\u0027t exist\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Page getPageAtIndex(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return pageArrayList.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ArrayList\u003cPage\u003e getPageArrayList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return pageArrayList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTag(String description) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tag \u003d description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 13,
      "Lusi711": 11,
      "neilbaner": 36,
      "longngng": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " * Represents the storage of where Zer0Note is loading from and saving information to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    // To include String filepath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    // Saves the given task to txt format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void saveTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        File file \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.getParentFile().mkdir(); // create a directory"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            file.createNewFile(); // create a .txt file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            // checks whether the file exist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            if (file.length() \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter saveFile \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.write(System.lineSeparator() + task.toTxtFormat());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                FileWriter saveFile \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.write(task.toTxtFormat());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "                saveFile.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            System.out.println(\"Error in IO!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void saveToFile(AppState currentAppState) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        // TODO: Implement"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AppState readFromFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        // TODO: Implement"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return new AppState();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yAOwzers": 42,
      "neilbaner": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat dateTime \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\"); // in 24h format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy hh.mm aa\"); // in 12h format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private LocalDate dueDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private LocalTime dueTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Date dueDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Task(String title, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Date getDueDateTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return dueDateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        dueDate \u003d LocalDate.parse(dayTime[0].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        dueTime \u003d LocalTime.parse(dayTime[1].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return dueTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String reformatDate() throws ParseException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Date date \u003d dateTime.parse(by);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.dueDateTime \u003d date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return outputFormat.format(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return (isDone ? \"o\" : \"x\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTag(String description) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        tag \u003d description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return (tag.equals(\"\") ? tag : \"(tag: \" + tag + \")\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return \"[\" + getStatusIcon() + \"] \" + getTitle() + \" (by: \" + reformatDate() + \")\" + getTag();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tAn error occurred while reading the given deadline.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String getTaskInMessagesFormat() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.title;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String toTxtFormat() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        // ..."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 46,
      "Lusi711": 12,
      "yAOwzers": 16,
      "neilbaner": 7,
      "longngng": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskArrayList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task removeTask(int indexToRemove) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task removedTask \u003d taskArrayList.remove(indexToRemove);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return taskArrayList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return taskArrayList.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task markAsDone(int i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskArrayList.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 6,
      "Lusi711": 13,
      "yAOwzers": 6,
      "neilbaner": 9,
      "longngng": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/AppMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public enum AppMode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    TIMETABLE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    NOTEBOOK_SHELF,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    NOTEBOOK_BOOK,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    NOTEBOOK_SECTION,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    NOTEBOOK_PAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case TIMETABLE:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return \"timetable\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook book\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook section\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_PAGE:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"notebook page\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return \"notebook\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 9,
      "longngng": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/AppState.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class AppState {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private AppMode appMode;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private NotebookShelf currentBookShelf;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Notebook currentNotebook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Section currentSection;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Page currentPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private int indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private int indexOfCurrentSection;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private int indexOfCurrentPage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public AppState() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        appMode \u003d AppMode.TIMETABLE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentBookShelf \u003d new NotebookShelf();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public AppMode getAppMode() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return appMode;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setAppMode(AppMode appMode) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.appMode \u003d appMode;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public NotebookShelf getCurrentBookShelf() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return currentBookShelf;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setCurrentBookShelf(NotebookShelf currentBookShelf) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.currentBookShelf \u003d currentBookShelf;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Notebook getCurrentNotebook() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return currentNotebook;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setCurrentNotebook(Notebook currentNotebook) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.currentNotebook \u003d currentNotebook;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Section getCurrentSection() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return currentSection;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setCurrentSection(Section currentSection) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.currentSection \u003d currentSection;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public Page getCurrentPage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return currentPage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setCurrentPage(Page currentPage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.currentPage \u003d currentPage;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public int getIndexOfCurrentNotebook() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setIndexOfCurrentNotebook(int indexOfCurrentNotebook) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.indexOfCurrentNotebook \u003d indexOfCurrentNotebook;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public Task markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        Task task \u003d this.taskList.markAsDone(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int getIndexOfCurrentSection() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return indexOfCurrentSection;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setIndexOfCurrentSection(int indexOfCurrentSection) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.indexOfCurrentSection \u003d indexOfCurrentSection;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public int getIndexOfCurrentPage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return indexOfCurrentPage;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void setIndexOfCurrentPage(int indexOfCurrentPage) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.indexOfCurrentPage \u003d indexOfCurrentPage;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 16,
      "Lusi711": 41,
      "yAOwzers": 7,
      "neilbaner": 3,
      "longngng": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/CliMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * A class containing all the messages displayed to the user during operation."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class CliMessages {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static final String REMOVE_TASK_SUCCESS_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemoveNotebookMessage(Notebook notebook) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this notebook: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"\\t\" + notebook.getTitle());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemoveSectionMessage(Section section) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this section: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"\\t\" + section.getTitle());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static void printRemovePageMessage(Page page) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this page: \" + page.getTitle());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        page.printPage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printRemoveTaskMessage(Task deletedTask, int numberOfTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(REMOVE_TASK_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(deletedTask.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tNow you have \" + numberOfTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tNow you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printAddedTaskMessage(TaskList tasksList, String title) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Added: \" + title);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(tasksList.getNumberOfTasks() + \":\" + tasksList.getTask(tasksList.getNumberOfTasks() - 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAddTaskHelp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To add a task with a deadline to the task list: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /t[TASK] /by[dd/MM/yyyy] [hhmm]\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Example of usage: \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /tcoding /by19-10-2020 1900\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAddNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddNotebookHelp();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddSectionHelp();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddPageHelp();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void printAddPageHelp() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To add a page into the selected section:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /p[PAGE]; [PAGE CONTENT]\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Example of usage: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /pHELLO WORLD; System.out.println(\\\"Hello World!\\\");\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void printAddSectionHelp() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To add a section into the selected notebook: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /s[SECTION]\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Example of usage: \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /sW1: Java\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void printAddNotebookHelp() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To add a notebook into the notebook shelf: \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /n[NOTEBOOK]\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Example of usage: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"add /nCS2101\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printDoneTaskHelp() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printExitHelp() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To quit Zer0Note:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"exit\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printListTaskHelp() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printListNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printModeSwitchHelp() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To switch to timetable mode: \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"mode /t\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To switch to notebook mode: \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"mode /n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printRemoveTaskHelp() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To delete an existing task from the task list: \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete [INDEX]\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Example of usage: \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete 1\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printRemoveNotebookSectionPageHelp() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To delete and existing notebook, section or page: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete /n[NOTEBOOK] /s[SECTION] /p[NUMBER]\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Examples of usage: \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete /nCS2113T /sW10 /p1\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete /nCS2113T /sW10\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"delete /nCS2113T\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printSelectHelp() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"To select a notebook, section, page, or a combination of the three: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /n[NOTEBOOK] /s[SECTION] /p[NUMBER]\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Examples of usage: \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"In any context: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /nCS2101 /sW2 /p1\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /nCS2101 /sW2\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /nCS2101\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /all\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"In a selected notebook\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /s1: What is OOP? /p1\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /s1: What is OOP?\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"In a selected section\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"select /p1\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printNotebookModeHelp() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some commands to help you work with the Notebook mode: \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printListNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printSelectHelp();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printRemoveNotebookSectionPageHelp();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printTimetableModeHelp() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some commands to help you work with the Timetable mode: \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printAddTaskHelp();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDoneTaskHelp();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printListTaskHelp();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printRemoveTaskHelp();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printGeneralHelp() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are some general commands that will work throughout Zer0Note: \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printModeSwitchHelp();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printExitHelp();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printOnlineGuideLink() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Access the full user guide for Zer0Note online, at: \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printAllHelp() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are all the commands you need to know to operate Zer0Note: \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printGeneralHelp();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printNotebookModeHelp();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printTimetableModeHelp();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printOnlineGuideLink();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Bye!\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public void printMarkDone(Task task) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String markDoneMessage \u003d \"Yay! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(markDoneMessage + \"\\n \" + task);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printTagNotebookMessage(String description, String tag) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String createTagMessage \u003d \"Got it! I\u0027ve tagged this as:\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(createTagMessage + description + \" (tag: \" + tag + \")\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printTagTaskMessage(Task task) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String createTagMessage \u003d \"Got it! I\u0027ve tagged this as:\\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(createTagMessage + task);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printFoundNotebooksMessage(ArrayList\u003cNotebook\u003e notebooks) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Notebooks:\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Notebook notebook : notebooks) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(index + \". \" + notebook.getTitle());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printFoundSectionsMessage(ArrayList\u003cSection\u003e sections) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Sections:\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Section section : sections) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(index + \". \" + section.getTitle());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void printFoundPagesMessage(ArrayList\u003cPage\u003e pagesFound) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Pages:\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Page page : pagesFound) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(index + \". \" + page.getTitle());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 11,
      "Lusi711": 80,
      "yAOwzers": 3,
      "neilbaner": 138
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/CliUserInterface.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.Exit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class CliUserInterface {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private AppState appState;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private boolean toQuit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public CliUserInterface() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void loadState() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        appState \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void saveState() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        storage.saveToFile(appState);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        startUI();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        loadState();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Scanner keyboard \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        while (!toQuit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            userInput \u003d keyboard.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (userInput.equals(Exit.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                saveState();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                toQuit \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                executeCommand(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                e.printErrorMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private void executeCommand(String userInput) throws ZeroNoteException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "        CliCommand command \u003d parser.getCommandFromInput(userInput, appState);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private void startUI() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"Welcome to\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\" _ _ _                  _ _ _   _    _            _\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"|_ _  |   _ _    _  _  |  _  | |  \\\\ | |   _ _   _| |_    _ _\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"  /  /  /  _  \\\\ | |/_\\\\ | | | | |   \\\\| |  /   \\\\ |_   _| /   _ \\\\\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\" /  /_  |  _ _/ | |    | |_| | |  |\\\\  | |  [] |  | |_  |  _ _/\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"|_ _ _|  \\\\ _ _| |_|    |_ _ _| | _| \\\\_|  \\\\ _ /   |_ _|  \\\\ _ _|\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"You are now in timetable mode\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    public String printExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        return \"GOODBYE HOPE TO SEE YOU AGAIN\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 23,
      "yAOwzers": 6,
      "neilbaner": 35,
      "longngng": 5
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/InputParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.EmptyPageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidNotebookException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidPageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidSectionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskTitleException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.notebook.FindCommandNotebookMode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.notebook.TagCommandNotebookMode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.DoneCommandTimetableMode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.Exit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.command.Help;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.command.ModeSwitch;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.AddCommandNotebookMode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.ListCommandNotebookMode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.RemoveCommandNotebookMode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.notebook.SelectCommandNotebookMode;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.AddCommandTimetableMode;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.timetable.FindCommandTimetableMode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.ListCommandTimetableMode;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.RemoveCommandTimetableMode;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.timetable.TagCommandTimetableMode;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.CONTENT_DELIMITER;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.NOTEBOOK_DELIMITER;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.PAGE_DELIMITER;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.AddCommandNotebookMode.SECTION_DELIMITER;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static seedu.duke.userinterface.command.notebook.SelectCommandNotebookMode.SHOW_ALL;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static seedu.duke.userinterface.command.timetable.AddCommandTimetableMode.DEADLINE_DELIMITER;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static seedu.duke.userinterface.command.timetable.AddCommandTimetableMode.TASK_DELIMITER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the user\u0027s input to extract the task title in TIMETABLE mode."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the task title."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskWrongFormatException when the user\u0027s input does not include the TASK_DELIMITER."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskTitleException       when the user\u0027s input does not include a task title."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parseTaskTitle(String input)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throws TaskWrongFormatException, TaskTitleException, IncorrectDeadlineFormatException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(TASK_DELIMITER)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskTitle \u003d input.replace(TASK_DELIMITER, \"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskTitle.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TaskTitleException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskTitle.contains(DEADLINE_DELIMITER)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                int indexPos \u003d taskTitle.indexOf(\"/by\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskTitle \u003d taskTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                return taskTitle;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TaskWrongFormatException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses user\u0027s input to extract deadline in TIMETABLE mode."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return deadline in the format dd-MM-yyyy hhMM, where time is in 24h format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws IncorrectDeadlineFormatException when the deadline input is in the wrong format."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TaskWrongFormatException         when the deadline input is blank."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parseDeadline(String input) throws TaskWrongFormatException, IncorrectDeadlineFormatException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.contains(DEADLINE_DELIMITER)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPos \u003d input.indexOf(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String deadline \u003d input.replace(DEADLINE_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (deadline.isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (!correctTimeFormat(deadline)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new IncorrectDeadlineFormatException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Checks if [deadline] input by the user is in the correct format."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param by is the string containing the deadline\u0027s due date and time."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return true when the input is in the correct format, otherwise false."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private boolean correctTimeFormat(String by) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        DateTimeFormatter dateTime \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(by, dateTime);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses user\u0027s input to extract notebook title, section title or page number whenever applicable."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument contains notebook title, section title or/and page number."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the state of the application."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractParams(String argument, AppState appState)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throws InvalidNotebookException, InvalidSectionException, InvalidPageException, InvalidCommandException,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.startsWith(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            extractNotebookParams(argument, appState);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            extractSectionParams(argument, appState);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Section section \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (argument.startsWith(SHOW_ALL)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SHELF);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidCommandException(argument);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Extracts the notebook title, as well as the section title and page number, if provided."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument is the user\u0027s input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the current mode the user is in."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidNotebookException when the notebook title input by the user does not exist."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException  when the section title input by the user does not exist."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException     when the page number input by the user does not exist."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractNotebookParams(String argument, AppState appState)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throws InvalidNotebookException, InvalidSectionException, InvalidPageException,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Notebook notebook;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Section section \u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String notebookTitle \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        NotebookShelf notebookShelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int notebookIndex \u003d notebookShelf.findNotebook(notebookTitle);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (notebookIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidNotebookException(notebookTitle);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        notebook \u003d notebookShelf.getNotebookAtIndex(notebookIndex);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_BOOK);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setCurrentNotebook(notebook);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentNotebook().getTitle());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String sectionTitle \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int sectionIndex \u003d notebook.findSection(sectionTitle);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidSectionException(sectionTitle);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section \u003d notebook.getSectionAtIndex(sectionIndex);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SECTION);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            appState.setCurrentSection(section);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentSection().getTitle());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(PAGE_DELIMITER) \u0026\u0026 section !\u003d null) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the user\u0027s input to extract the section title, and the page number if provided by the user."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param argument is the user\u0027s input."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param appState is the current mode the user is in."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException when the section title input by the user does not exist."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException    when the page number input by the user does not exist."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void extractSectionParams(String argument, AppState appState) throws InvalidSectionException,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            InvalidPageException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Notebook notebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String sectionTitle \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int sectionIndex \u003d notebook.findSection(sectionTitle);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (sectionIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(sectionTitle);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Section section \u003d notebook.getSectionAtIndex(sectionIndex);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_SECTION);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setCurrentSection(section);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"now in \" + appState.getAppMode() + \": \" + appState.getCurrentSection().getTitle());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (argument.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int pageNum \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (pageNum \u003e section.getPageArrayList().size()) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            section.getPage(pageNum);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses notebook title from the user\u0027s input."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the input from the user."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the notebook title input by the user."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidNotebookException when user\u0027s input is in the wrong format."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parseNotebookTitle(String input) throws InvalidNotebookException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String notebookTitle \u003d input.replace(NOTEBOOK_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (notebookTitle.isBlank()) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidNotebookException(null);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (notebookTitle.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                int indexPos \u003d notebookTitle.indexOf(SECTION_DELIMITER);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                notebookTitle \u003d notebookTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return notebookTitle;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidNotebookException(input);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses section title from the user\u0027s input."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the section title input by the user."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidSectionException when the user\u0027s input does not contain the section delimiter, or when the"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                                 section title is blank."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parseSectionTitle(String input) throws InvalidSectionException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPos \u003d input.indexOf(SECTION_DELIMITER);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(input);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String sectionTitle \u003d input.replace(SECTION_DELIMITER, \"\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionTitle.isBlank()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidSectionException(null);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (sectionTitle.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                int indexPos \u003d sectionTitle.indexOf(PAGE_DELIMITER);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                sectionTitle \u003d sectionTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return sectionTitle;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidSectionException(input);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int parseTaskIndex(String args) throws NumberFormatException {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page number input by the user."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the page number input by the user."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the page input by the user is blank, or when the user\u0027s input is in the"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                              wrong format."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public int parsePageNumber(String input) throws InvalidPageException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPos \u003d input.indexOf(PAGE_DELIMITER);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String page \u003d input.replace(PAGE_DELIMITER, \"\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                if (page.isBlank()) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    throw new InvalidPageException();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                return Integer.parseInt(page) - 1;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page title input by the user."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the page title input by the user."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the user\u0027s input is in the wrong format, or when the page title is blank."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws EmptyPageException   when the user\u0027s page input does not contain the content delimiter."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parsePageTitle(String input) throws InvalidPageException, EmptyPageException {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String pageTitle \u003d input.replace(PAGE_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (pageTitle.isBlank()) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new InvalidPageException();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (!pageTitle.contains(CONTENT_DELIMITER)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new EmptyPageException();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int indexPos \u003d pageTitle.indexOf(CONTENT_DELIMITER);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            pageTitle \u003d pageTitle.substring(0, indexPos).trim();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return pageTitle;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Parses the page contents of the user\u0027s input."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the user\u0027s input."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return contents in the page input by the user."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws InvalidPageException when the user\u0027s input does not contain the page content delimiter, or when there"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *                              is no content."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String parsePageContent(String input) throws InvalidPageException, EmptyPageException {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        int dividerPos \u003d input.indexOf(CONTENT_DELIMITER);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        input \u003d input.substring(dividerPos);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.startsWith(CONTENT_DELIMITER)) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String content \u003d input.replace(CONTENT_DELIMITER, \"\").trim();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (content.isBlank()) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new EmptyPageException();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return content;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidPageException();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public String[] parseTagDescription(String input) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return input.split(TASK_DELIMITER,2);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public CliCommand getCommandFromInput(String userInput, AppState appState) throws ZeroNoteException {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String trimmedInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String[] input \u003d trimmedInput.split(\" \", 2); // split input into command and arguments"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String commandWord \u003d input[0];"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String argument \u003d \"\";"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (input.length \u003e 1) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            argument \u003d input[1].trim();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case AddCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return new AddCommandTimetableMode(argument, appState);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String titleToAdd;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String contentToAdd;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_SHELF) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    titleToAdd \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, appState);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                } else if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_BOOK) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    titleToAdd \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, appState);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                } else if (appState.getAppMode() \u003d\u003d AppMode.NOTEBOOK_SECTION) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    titleToAdd \u003d parsePageTitle(argument);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    contentToAdd \u003d parsePageContent(argument);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    return new AddCommandNotebookMode(titleToAdd, contentToAdd, appState);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    throw new InvalidCommandException(userInput);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case FindCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String[] splitParams \u003d parseTagDescription(argument);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE \u0026\u0026 argument.contains(\"/t\")) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new FindCommandTimetableMode(splitParams[0].trim(),splitParams[1].trim(),appState);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE \u0026\u0026 !argument.contains(\"/t\")) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new FindCommandTimetableMode(splitParams[0].trim(), \"\", appState);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else if (argument.contains(\"/t\")) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new FindCommandNotebookMode(splitParams[0].trim(),splitParams[1].trim(),appState);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new FindCommandNotebookMode(splitParams[0].trim(),\"\",appState);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case ListCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new ListCommandTimetableMode(argument, appState);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new ListCommandNotebookMode(argument, appState);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case SelectCommandNotebookMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() !\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new SelectCommandNotebookMode(argument, appState);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        case TagCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            splitParams \u003d parseTagDescription(argument);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                int index \u003d parseTaskIndex(splitParams[0].trim());"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new TagCommandTimetableMode(index, splitParams[1].trim(), appState);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new TagCommandNotebookMode(splitParams[1], appState);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case RemoveCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (appState.getAppMode() \u003d\u003d AppMode.TIMETABLE) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                return new RemoveCommandTimetableMode(parseTaskIndex(argument), appState);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                String notebookTitleToRemove \u003d \"\";"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                String sectionTitleToRemove \u003d \"\";"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                int pageNumberToRemove \u003d -1;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(NOTEBOOK_DELIMITER)) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    notebookTitleToRemove \u003d parseNotebookTitle(argument);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(SECTION_DELIMITER)) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    sectionTitleToRemove \u003d parseSectionTitle(argument);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (argument.contains(PAGE_DELIMITER)) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    pageNumberToRemove \u003d parsePageNumber(argument);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                return new RemoveCommandNotebookMode(notebookTitleToRemove,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                        sectionTitleToRemove, pageNumberToRemove, appState);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case Exit.COMMAND_WORD:"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new Exit(argument, appState);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case Help.COMMAND_WORD:"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return new Help(argument);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case DoneCommandTimetableMode.COMMAND_WORD:"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            return new DoneCommandTimetableMode(argument, appState);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case ModeSwitch.COMMAND_WORD:"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return new ModeSwitch(argument, appState);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new InvalidCommandException(userInput);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 333,
      "Lusi711": 60,
      "neilbaner": 39,
      "longngng": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/CliCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class CliCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"mode\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    protected AppState appState;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String commandParams;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String getCommandWord() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public abstract void execute() throws InvalidCommandException, IncorrectAppModeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AppState getAppState() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return appState;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setAppState(AppState appState) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getCommandParams() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return commandParams;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setCommandParams(String params) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        commandParams \u003d params;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 5,
      "Lusi711": 1,
      "neilbaner": 20,
      "longngng": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Exit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Exit extends CliCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Exit(String argument, AppState appState) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        messages.printGoodBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 10,
      "longngng": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * This class is to be instantiated when the user enters the keyword \"help\". The arguments for the command are then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * passed into the Help object, and executing it will display help appropriately."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Help extends CliCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // the arguments added by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String commandArgs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Constructor for Help."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param commandArgs the arguments input by the user. Precondition: these must be all lowercase, and with all"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     *                    leading and trailing spaces stripped."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Help(String commandArgs) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.commandArgs \u003d commandArgs.toLowerCase();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Executes the command, based on the arguments entered by the user. If the arguments are not recognised, then we"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * print all the help available."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        switch (commandArgs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case \"notebook\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printNotebookModeHelp();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        case \"timetable\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printTimetableModeHelp();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printAllHelp();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 47
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/ModeSwitch.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ModeSwitch extends CliCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"mode\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ModeSwitch(String argument, AppState appState) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (commandParams) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"/t\"):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "            appState.setAppMode(AppMode.TIMETABLE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"You are now in \" + appState.getAppMode() + \" mode\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"/n\"):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            appState.setAppMode(AppMode.NOTEBOOK_SHELF);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"You are now in \" + appState.getAppMode() + \" mode\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Error\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 2,
      "neilbaner": 8,
      "longngng": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/AddCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.AddCommandNotebookException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class AddCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String NOTEBOOK_DELIMITER \u003d \"/n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String SECTION_DELIMITER \u003d \"/s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String PAGE_DELIMITER \u003d \"/p\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String CONTENT_DELIMITER \u003d \";\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final NotebookShelf currentBookshelf;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final Notebook currentNotebook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final Section currentSection;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandNotebookMode(String title, AppState appState) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assert title !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentBookshelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandNotebookMode(String title, String content, AppState appState) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this(title, appState);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentBookshelf.addNotebook(title);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added notebook with title: \" + title);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentNotebook.addSection(title);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added section with title : \" + title);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentSection.addPage(title, content);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.out.println(\"Added page with title: \" + title);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new AddCommandNotebookException(title);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 16,
      "neilbaner": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/FindCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class FindCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cNotebook\u003e notebooksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cSection\u003e sectionsFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cPage\u003e pagesFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public FindCommandNotebookMode(String keyword, String tag, AppState appState) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.tag \u003d tag.toLowerCase();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (tag.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getAllWithTitleContainingKeyword();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getAllWithTagsContainingKeyword();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        printFoundListsMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void printFoundListsMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Here are what I found:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        cliMessages.printFoundNotebooksMessage(notebooksFound);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        cliMessages.printFoundSectionsMessage(sectionsFound);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        cliMessages.printFoundPagesMessage(pagesFound);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getAllWithTitleContainingKeyword() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        NotebookShelf currentNotebookShelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Notebook notebook : currentNotebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String notebookTitle \u003d notebook.getTitle();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (isMatching(notebookTitle, keyword)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                notebooksFound.add(notebook);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getSectionsWithTitleContainingKeyword(notebook);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getSectionsWithTitleContainingKeyword(Notebook notebook) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String sectionTitle \u003d section.getTitle();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (isMatching(sectionTitle, keyword)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                sectionsFound.add(section);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getPagesWithTitleContainingKeyword(section);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getPagesWithTitleContainingKeyword(Section section) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String pageTitle \u003d page.getTitle();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (isMatching(pageTitle, keyword)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                pagesFound.add(page);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getAllWithTagsContainingKeyword() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        NotebookShelf currentNotebookShelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Notebook notebook : currentNotebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String notebookTag \u003d notebook.getTag();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (!notebookTag.equals(\"\") \u0026\u0026 isMatching(notebookTag, tag)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                notebooksFound.add(notebook);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getSectionsWithTagContainingKeyword(notebook);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getSectionsWithTagContainingKeyword(Notebook notebook) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String sectionTag \u003d section.getTag();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (!sectionTag.equals(\"\") \u0026\u0026 isMatching(sectionTag, tag)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                sectionsFound.add(section);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            getPagesWithTagContainingKeyword(section);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void getPagesWithTagContainingKeyword(Section section) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            String pageTag \u003d page.getTag();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (!pageTag.equals(\"\") \u0026\u0026 isMatching(pageTag, tag)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                pagesFound.add(page);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private boolean isMatching(String title, String keyword) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Set\u003cString\u003e wordsInDescription \u003d new HashSet\u003c\u003e(getWordsInTitle(title));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return wordsInDescription.contains(keyword);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private List\u003cString\u003e getWordsInTitle(String title) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return Arrays.asList(title.toLowerCase().split(\" \"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 117
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/ListCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ListCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ListCommandNotebookMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setCommandParams(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_nsp(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + section.getTitle());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "                for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"        |-- \" + page.getTitle());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"            \" + page.getContent());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_ns(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + section.getTitle());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listBookshelf_n(NotebookShelf notebookShelf) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Notebook notebook : notebookShelf.getNotebooksArrayList()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + notebook.getTitle());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listNotebook_sp(Notebook notebook) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + section.getTitle());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"  |-- \" + page.getTitle());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"        \" + page.getContent());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listNotebook_s(Notebook notebook) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Section section : notebook.getSectionArrayList()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + section.getTitle());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    // TODO: Break into functions and avoid repeated code, arrowhead code"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void listSection(Section section) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Page page : section.getPageArrayList()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"* \" + page.getTitle());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"    \" + page.getContent());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void execute() throws IncorrectAppModeException, InvalidCommandException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/s\"):"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_ns(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/a\"):"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_nsp(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case(\"\"):"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listBookshelf_n(appState.getCurrentBookShelf());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "                throw new InvalidCommandException(\"There not exists such options\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case (\"/a\"):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "                listNotebook_sp(appState.getCurrentNotebook());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case(\"\"):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": "                listNotebook_s(appState.getCurrentNotebook());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "                throw new InvalidCommandException(\"There not exists such options\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case(\"\"):"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                listSection(appState.getCurrentSection());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": "                throw new InvalidCommandException(\"There not exists such options\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 28,
      "yAOwzers": 1,
      "neilbaner": 16,
      "longngng": 76
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/RemoveCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.NotebookOutOfBoundsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class RemoveCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private static CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private NotebookShelf currentBookshelf;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Notebook currentNotebook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String notebookTitleToRemove;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private Section currentSection;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String sectionTitleToRemove;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private int pageNumberToRemove;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public RemoveCommandNotebookMode(String notebookTitle, String sectionTitle,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                                     int pageNumber, AppState appState) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        notebookTitleToRemove \u003d notebookTitle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        sectionTitleToRemove \u003d sectionTitle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        pageNumberToRemove \u003d pageNumber;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentBookshelf \u003d appState.getCurrentBookShelf();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromNotebookShelf();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromNotebook();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                removeFromSection();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ZeroNoteException zne) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            zne.printErrorMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void removeFromSection() throws InvalidCommandException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d currentSection.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            cliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void removeFromNotebook() throws InvalidCommandException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (!sectionTitleToRemove.equals(\"\") \u0026\u0026 pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d currentNotebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section section \u003d currentNotebook.getSectionAtIndex(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d section.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            cliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!sectionTitleToRemove.equals(\"\") \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d currentNotebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section sectionRemoved \u003d currentNotebook.removeSection(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            cliMessages.printRemoveSectionMessage(sectionRemoved);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /sSECTION /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private void removeFromNotebookShelf() throws InvalidCommandException, NotebookOutOfBoundsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        int indexOfNotebookToRemove \u003d currentBookshelf.findNotebook(notebookTitleToRemove);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 !sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003e -1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebook \u003d currentBookshelf.getNotebookAtIndex(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d notebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section section \u003d notebook.getSectionAtIndex(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Page pageRemoved \u003d section.removePage(pageNumberToRemove);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemovePageMessage(pageRemoved);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 !sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebook \u003d currentBookshelf.getNotebookAtIndex(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            int indexOfSectionToRemove \u003d notebook.findSection(sectionTitleToRemove);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Section sectionRemoved \u003d notebook.removeSection(indexOfSectionToRemove);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveSectionMessage(sectionRemoved);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else if (!notebookTitleToRemove.equals(\"\") \u0026\u0026 sectionTitleToRemove.equals(\"\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                \u0026\u0026 pageNumberToRemove \u003d\u003d -1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Notebook notebookRemoved \u003d currentBookshelf.removeNotebook(indexOfNotebookToRemove);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            CliMessages.printRemoveNotebookMessage(notebookRemoved);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            throw new InvalidCommandException(\"Please enter in the format:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    + \"delete /nNOTEBOOK /sSECTION /pPAGE_NUMBER\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1,
      "Lusi711": 100,
      "neilbaner": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/SelectCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class SelectCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"select\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String SHOW_ALL \u003d \"/all\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public SelectCommandNotebookMode(String argument, AppState uiMode) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.setAppState(uiMode);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_SHELF:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                parser.extractParams(argument, appState);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tError occurred when selecting\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ZeroNoteException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printErrorMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 27,
      "neilbaner": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/notebook/TagCommandNotebookMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class TagCommandNotebookMode extends CliCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"tag\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Notebook currentNotebook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Section currentSection;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private final Page currentPage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TagCommandNotebookMode(String params, AppState appState) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.setCommandParams(params);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assert this.commandParams !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentNotebook \u003d appState.getCurrentNotebook();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentSection \u003d appState.getCurrentSection();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        currentPage \u003d appState.getCurrentPage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            switch (appState.getAppMode()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_BOOK:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                currentNotebook.setTag(commandParams);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                cliMessages.printTagNotebookMessage(currentNotebook.getTitle(),currentNotebook.getTag());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_SECTION:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                currentSection.setTag(commandParams);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                cliMessages.printTagNotebookMessage(currentSection.getTitle(),currentSection.getTag());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            case NOTEBOOK_PAGE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                currentPage.setTag(commandParams);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                cliMessages.printTagNotebookMessage(currentPage.getTitle(),currentPage.getTag());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                throw new IncorrectAppModeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (ZeroNoteException zne) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            zne.printErrorMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/AddCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskTitleException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class AddCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    //TODO have subclasses of CliCommand for commands with and without arguments, and the subclass with arguments could"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    // contain these fields to be overridden."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String TASK_DELIMITER \u003d \"/t\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String DEADLINE_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private final CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public AddCommandTimetableMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        TaskList currentTaskList \u003d appState.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (argument.contains(\"/by\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String title \u003d parser.parseTaskTitle(argument);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String deadline \u003d parser.parseDeadline(argument);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                currentTaskList.addTask(new Task(title, deadline));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                messages.printAddedTaskMessage(currentTaskList, title);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TaskWrongFormatException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (TaskTitleException t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tYour task is missing a title!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tPlease type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | TaskWrongFormatException w) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tPlease type in the format: add /tTITLE /byDEADLINE\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IncorrectDeadlineFormatException d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tOops! Your deadline should be in this format\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tdd-MM-yyyy HHmm where time is in 24h\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 34,
      "Lusi711": 1,
      "neilbaner": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/DoneCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.InvalidUserInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.notebooks.NotebookShelf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.CliUserInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class DoneCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private AppState appState;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private CliMessages messages \u003d new CliMessages();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public DoneCommandTimetableMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            int indexOfNumberAfterDone \u003d Integer.parseInt(this.argument);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Task taskDone \u003d this.appState.markTaskAsDone(indexOfNumberAfterDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            messages.printMarkDone(taskDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"I\u0027m sorry, please enter a valid number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/FindCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class FindCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public FindCommandTimetableMode(String keyword, String tag, AppState appState) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.tag \u003d tag.toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        TaskList tasks \u003d appState.getTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        if (tag.equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            tasksFound \u003d getTasksWithTitleContainingKeyword(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            tasksFound \u003d getTasksWithTagsContainingKeyword(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        System.out.println(\"Here are the tasks I found:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (Task task : tasksFound) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cTask\u003e getTasksWithTitleContainingKeyword(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Set\u003cString\u003e wordsInTitle \u003d new HashSet\u003c\u003e(getWordsInTag(task.getTitle()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (wordsInTitle.contains(keyword)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                matchedTasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return matchedTasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private ArrayList\u003cTask\u003e getTasksWithTagsContainingKeyword(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            Set\u003cString\u003e wordsInTag \u003d new HashSet\u003c\u003e(getWordsInTag(task.getTag()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            for (String word : wordsInTag) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                if (!tag.equals(\"\") \u0026\u0026 word.contains(tag)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                    matchedTasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return matchedTasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private List\u003cString\u003e getWordsInTag(String description) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        return Arrays.asList(description.toLowerCase().split(\" \"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 68
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/ListCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ListCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ListCommandTimetableMode(String argument, AppState appState) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.setAppState(appState);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.commandParams \u003d argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void execute() throws InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            switch (commandParams) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"/d\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printDoneTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"/u\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printUndoneTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"/urgent\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printUrgentTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case \"\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printAllTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "                throw new InvalidCommandException(\"There not exists such options\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of tasks is empty\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printUrgentTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ArrayList\u003cTask\u003e urgentTaskLists \u003d appState.getTaskList().getTaskArrayList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Collections.sort(urgentTaskLists, new SortByDate());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : urgentTaskLists) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (task.isDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (i \u003d\u003d 4) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of urgent tasks is empty\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printAllTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of tasks is empty\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printDoneTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of done tasks is empty\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private void printUndoneTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : appState.getTaskList().getTaskArrayList()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (!task.isDone()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print(i++ + \":\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of undone tasks is empty\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 1,
      "neilbaner": 4,
      "longngng": 95
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/RemoveCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class RemoveCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private final int indexToRemove;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public RemoveCommandTimetableMode(int indexToRemove, AppState uiMode) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.setAppState(uiMode);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            TaskList taskList \u003d appState.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Task deletedTask \u003d taskList.removeTask(indexToRemove);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            numberOfTasks \u003d taskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            cliMessages.printRemoveTaskMessage(deletedTask, numberOfTasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        } catch (IndexOutOfBoundsException ioe) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            if (numberOfTasks \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"Please enter a valid index between 1 and \" + numberOfTasks + \".\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "                System.out.println(\"There are no tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"Please enter a valid number.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 27,
      "neilbaner": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/SortByDate.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class SortByDate implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public int compare(Task o1, Task o2) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (o1.getDueDateTime() \u003d\u003d null || o2.getDueDateTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return o1.getDueDateTime().compareTo(o2.getDueDateTime());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/userinterface/command/timetable/TagCommandTimetableMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Notebook;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Page;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.notebooks.Section;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.CliMessages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.command.CliCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "public class TagCommandTimetableMode extends CliCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"tag\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private int indexOfTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    private CliMessages cliMessages \u003d new CliMessages();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public TagCommandTimetableMode(int index, String tag, AppState appState) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        indexOfTask \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assert this.tag !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        this.appState \u003d appState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Task targetTask \u003d appState.getTaskList().getTask(indexOfTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        targetTask.setTag(tag);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        cliMessages.printTagTaskMessage(targetTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 31
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/InputParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "package seedu.duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.exceptions.ZeroNoteException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.concurrent.atomic.AtomicReference;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "class InputParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void parseTaskIndex_validNumber_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String num \u003d \"2\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assertEquals(1,parser.parseTaskIndex(num));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void parseTaskIndex_InvalidString_numberFormatExceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String num \u003d \"num\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        Assertions.assertThrows(NumberFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "            parser.parseTaskIndex(num);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseTaskTitle_correctFormat() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/tBlowing Bubbles /by2020-10-10\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            assertEquals(\"Blowing Bubbles\", parser.parseTaskTitle(input));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseTaskTitle_withSpaces() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/t Blowing Bubbles /by 2020-10-10\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            assertEquals(\"Blowing Bubbles\", parser.parseTaskTitle(input));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseTaskTitle_noDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/t Blowing Bubbles\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertThrows(ZeroNoteException.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String output \u003d parser.parseTaskTitle(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseDeadline_validFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/tBlowing Bubbles /by10-10-2020 1000\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            assertEquals(\"10-10-2020 1000\", parser.parseDeadline(input));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseDeadline_validFormatWithSpaces() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/t Blowing Bubbles /by 10-10-2020 1000\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            assertEquals(\"10-10-2020 1000\", parser.parseDeadline(input));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseDeadline_invalidFormat() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/tBlowing Bubbles /by 2020-10-10 12\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertThrows(IncorrectDeadlineFormatException.class, () -\u003e parser.parseDeadline(input));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseDeadline_noDate() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/tBlowing Bubbles\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertThrows(IncorrectDeadlineFormatException.class, () -\u003e parser.parseDeadline(input));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void parseDeadline_blankDate() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input \u003d \"/tBlowing Bubbles /by\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertThrows(IncorrectDeadlineFormatException.class, () -\u003e parser.parseDeadline(input));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 24,
      "neilbaner": 82
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/HelpTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package seedu.duke.userinterface.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * Tests for the \"help\" command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class HelpTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String lineSeparator \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String expectedOutputNotebook \u003d \"Here are some commands to help you work with the Notebook mode: \" + lineSeparator"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To add a notebook into the notebook shelf: \" + lineSeparator + \"add /n[NOTEBOOK]\" + lineSeparator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"Example of usage: \" + lineSeparator + \"add /nCS2101\" + lineSeparator + \"\" + lineSeparator"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To add a section into the selected notebook: \" + lineSeparator + \"add /s[SECTION]\" + lineSeparator"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"Example of usage: \" + lineSeparator + \"add /sW1: Java\" + lineSeparator + \"\" + lineSeparator"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To add a page into the selected section:\" + lineSeparator + \"add /p[PAGE]; [PAGE CONTENT]\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"Example of usage: \" + lineSeparator"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"add /pHELLO WORLD; System.out.println(\\\"Hello World!\\\");\" + lineSeparator + \"\" + lineSeparator"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To select a notebook, section, page, or a combination of the three: \" + lineSeparator"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"select /n[NOTEBOOK] /s[SECTION] /p[NUMBER]\" + lineSeparator + \"Examples of usage: \" + lineSeparator"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"In any context: \" + lineSeparator + \"select /nCS2101 /sW2 /p1\" + lineSeparator + \"select /nCS2101 /sW2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"select /nCS2101\" + lineSeparator + \"select /all\" + lineSeparator + \"\" + lineSeparator"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"In a selected notebook\" + lineSeparator + \"select /s1: What is OOP? /p1\" + lineSeparator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"select /s1: What is OOP?\" + lineSeparator + \"\" + lineSeparator + \"In a selected section\" + lineSeparator"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"select /p1\" + lineSeparator + \"\" + lineSeparator + \"To delete and existing notebook, section or page: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"delete /n[NOTEBOOK] /s[SECTION] /p[NUMBER]\" + lineSeparator + \"Examples of usage: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"delete /nCS2113T /sW10 /p1\" + lineSeparator + \"delete /nCS2113T /sW10\" + lineSeparator"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"delete /nCS2113T\" + lineSeparator + \"\" + lineSeparator;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String expectedOutputTimetable \u003d \"Here are some commands to help you work with the Timetable mode: \" + lineSeparator"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To add a task with a deadline to the task list: \" + lineSeparator + \"add /t[TASK] /by[dd/MM/yyyy] [hhmm]\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"Example of usage: \" + lineSeparator + \"add /tcoding /by19-10-2020 1900\" + lineSeparator"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"\" + lineSeparator + \"To delete an existing task from the task list: \" + lineSeparator + \"delete [INDEX]\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + lineSeparator + \"Example of usage: \" + lineSeparator + \"delete 1\" + lineSeparator + \"\" + lineSeparator;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    String expectedOutputNoParams \u003d \"Here are all the commands you need to know to operate Zer0Note: \" + lineSeparator"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"Here are some general commands that will work throughout Zer0Note: \" + lineSeparator"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To switch to timetable mode: \" + lineSeparator + \"mode /t\" + lineSeparator"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To switch to notebook mode: \" + lineSeparator + \"mode /n\" + lineSeparator + \"\" + lineSeparator"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"To quit Zer0Note:\" + lineSeparator + \"exit\" + lineSeparator + expectedOutputNotebook"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + expectedOutputTimetable + \"Access the full user guide for Zer0Note online, at: \" + lineSeparator"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            + \"https://ay2021s1-cs2113t-t12-3.github.io/tp/UserGuide.html\" + lineSeparator + lineSeparator;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_noParams() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputNoParams);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_randomParams() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"lmao rekt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputNoParams);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_notebook() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"notebook\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputNotebook);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_notebookMixedCase() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"nOtEbOoK\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputNotebook);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_timetable() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"timetable\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputTimetable);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    void help_timetableMixedCase() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Help help \u003d new Help(\"TiMeTaBlE\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertDoesNotThrow(help::execute);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        output \u003d os.toString();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        assertEquals(output, expectedOutputTimetable);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 140
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/notebook/AddNotebookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddNotebookTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addNotebook_wrongFormat_expectException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_PAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"add notebook\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addNotebook_wrongMode_expectException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_PAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"add /nNOTEBOOK\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/notebook/ListCommandNotebookModeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@longngng"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "class ListCommandNotebookModeTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    void execute_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String input \u003d \"list /d\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ListCommandNotebookMode listCommandNotebookMode \u003d new ListCommandNotebookMode(input, appState);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        appState.setAppMode(AppMode.NOTEBOOK_SHELF);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            listCommandNotebookMode.execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            assertEquals(\"There not exists such options\", e.problematicInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (IncorrectAppModeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1,
      "longngng": 30
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/notebook/SelectNotebookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectAppModeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class SelectNotebookTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void selectNotebook_in_wrongMode() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        appState.setAppMode(AppMode.TIMETABLE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"select /nNOTEBOOK\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(IncorrectAppModeException.class, () -\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.getCommandFromInput(inputString, appState);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/timetable/AddTaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.IncorrectDeadlineFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.exceptions.TaskWrongFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import seedu.duke.userinterface.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@chuckiex3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddTaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addTask_dateFormat_expectException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"/by18 Oct\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertThrows(IncorrectDeadlineFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            parser.parseDeadline(inputString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    void addTask_correctFormat() throws TaskWrongFormatException, IncorrectDeadlineFormatException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        InputParser parser \u003d new InputParser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String inputString \u003d \"/by18-10-2020 1900\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String expectedString \u003d \"18-10-2020 1900\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        assertEquals(expectedString, parser.parseDeadline(inputString));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 30
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/timetable/ListCommandTimetableModeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@longngng"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "class ListCommandTimetableModeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    void execute_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String input \u003d \"list /d\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ListCommandTimetableMode listCommandTimetableMode \u003d new ListCommandTimetableMode(input, appState);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "            listCommandTimetableMode.execute();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            assertEquals(\"There not exists such options\", e.problematicInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1,
      "longngng": 25
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/timetable/MarkAsDoneTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.command.timetable.AddCommandTimetableMode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import seedu.duke.userinterface.command.timetable.DoneCommandTimetableMode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@yAOwzers"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "public class MarkAsDoneTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    void execute_MarkAsDoneTwo_IndexOutOfBound() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        String input \u003d \"add /tTask1 /by12-10-2020 2252\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        AddCommandTimetableMode addTimetableMode \u003d new AddCommandTimetableMode(input, appState);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        addTimetableMode.execute();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "            appState.getTaskList().markAsDone(2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "yAOwzers": 24
    }
  },
  {
    "path": "src/test/java/seedu/duke/userinterface/command/timetable/RemoveTaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package seedu.duke.userinterface.command.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import seedu.duke.userinterface.AppState;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.AddCommandTimetableMode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import seedu.duke.userinterface.command.timetable.RemoveCommandTimetableMode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "//@@Lusi711"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "class RemoveTaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    void execute_DeleteTaskOne_NoTasksInTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        TaskList taskslist \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        AppState appState \u003d new AppState();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        String input \u003d \"add /tTask1 /by12-10-2020 2252\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        AddCommandTimetableMode addTimetableMode \u003d new AddCommandTimetableMode(input,appState);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        addTimetableMode.execute();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        RemoveCommandTimetableMode removeTimetableMode \u003d new RemoveCommandTimetableMode(1,appState);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        removeTimetableMode.execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lusi711"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "        assertEquals(taskslist.getNumberOfTasks(), 0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "Lusi711": 19,
      "neilbaner": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "add /ttask /by15-10-2020 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yAOwzers"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "mode /n"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "add /nNotebook 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "select /nNotebook 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "add /sSection 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "select /sSection 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "add /pPage 1; some text"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "add /pPage 3; some text"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "mode /n"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "delete /nNotebook 1 /sSection 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lusi711"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "Lusi711": 10,
      "yAOwzers": 3,
      "neilbaner": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "FC ACTUAL.TXT EXPECTED-WIN.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 1,
      "-": 18
    }
  }
]
