[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | R Ramana | [Github](https://github.com/R-Ramana) | [Portfolio](docs/team/ramana.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jun Xiang | [Github](https://github.com/Chongjx) | [Portfolio](docs/team/junxiang.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Brandon Yeow | [Github](https://github.com/brandonywl) | [Portfolio](docs/team/brandon.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Prachi Goenka | [Github](https://github.com/prachi2023) | [Portfolio](docs/team/prachigoenka.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nazryl Lim | [Github](https://github.com/Nazryl/) | [Portfolio](docs/team/nazrylLim.md)"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 1,
      "Chongjx": 1,
      "brandonywl": 1,
      "prachi2023": 1,
      "Nazryl": 1,
      "-": 4
    }
  },
  {
    "path": "docs/team/brandon.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandonywl"
        },
        "content": "# Brandon - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "brandonywl": 1,
      "-": 5
    }
  },
  {
    "path": "docs/team/junxiang.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "# Jun Xiang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 6
    }
  },
  {
    "path": "docs/team/nazrylLim.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "# Nazryl Lim"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "## Education"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "* National University of Singapore"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "## Work Experience"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "* Work from home"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "## Accomplishments"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "* CS2113 Student"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "* Work from home"
      }
    ],
    "authorContributionMap": {
      "Nazryl": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import seedu.duke.data.exception.SystemException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Notebook;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.TagManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Timetable;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.storage.StorageManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.ui.InterfaceManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.util.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Entry point of the NotUS application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private InterfaceManager interfaceManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Notebook notebook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Timetable timetable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private TagManager tagManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Initializes the required managers."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.interfaceManager \u003d new InterfaceManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.notebook \u003d new Notebook();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.timetable \u003d new Timetable();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagManager \u003d new TagManager();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Reads the user command and executes it until the user exits the program. */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private void runCommandLoop() throws SystemException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            interfaceManager.prints(\"Enter command:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String userCommandText \u003d interfaceManager.getUserCommandInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            interfaceManager.prints(result);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        interfaceManager.prints(\"BYE\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Exits the application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private void run() throws SystemException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        runCommandLoop();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String executeCommand(Command command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        command.setData(notebook, timetable, tagManager);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String result \u003d command.execute();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        //storageManager.saveAll(notebook, timetable);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Main entry-point for the application."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void main(String[] args) throws SystemException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());*/"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 66,
      "R-Ramana": 4,
      "-": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.exception.SystemException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_DELIMITER;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TITLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_PIN;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Adds a Note into the Notebook or an Event into the Timetable."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_NOTE \u003d \"add-n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"add-e\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_NOTE \u003d COMMAND_WORD_NOTE + \": Adds a note to notebook. Parameters: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + PREFIX_DELIMITER + PREFIX_TITLE + \" TITLE \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + \"[\" + PREFIX_DELIMITER + PREFIX_TAG + \" TAGS] \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + \"[\" + PREFIX_DELIMITER + PREFIX_PIN + \" PIN]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_EVENT \u003d COMMAND_WORD_EVENT + \": Adds an event to timetable. Parameters: \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Note note;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isAddNote;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs an AddCommand to add a Note into the Notebook."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note to be added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public AddCommand(Note note) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.event \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isAddNote \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs an AddCommand to add an Event into the Timetable."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param event to be added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public AddCommand(Event event) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.note \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isAddNote \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            ArrayList\u003cNote\u003e filteredTaskList \u003d (ArrayList\u003cNote\u003e) notebook.getNotes().stream()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    .filter((s) -\u003e s.getTitle().equals(note.getTitle()))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    .collect(toList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            if (!filteredTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                throw new SystemException(SystemException.ExceptionType.EXCEPTION_DUPLICATE_NOTE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // rebind the tags if there are duplicated tags"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagManager.rebindTags(note);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            notebook.addNote(note);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return \"New note added: \" + note.getTitle();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return exception.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 49,
      "Nazryl": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.TagManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected Notebook notebook;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected Timetable timetable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected TagManager tagManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected static final int NULL_INT \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Executes the command and returns the result. Method to be implemented by child class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return result of the command execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public abstract String execute();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Sets the data that the command will operate on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notebook referenced Notebook data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param timetable referenced Timetable data."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagManager referenced TagManager."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setData(Notebook notebook, Timetable timetable, TagManager tagManager) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.notebook \u003d notebook;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.timetable \u003d timetable;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagManager \u003d tagManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 37,
      "Nazryl": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/CreateTagCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.TagManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_DELIMITER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Creates Tag for the notes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class CreateTagCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"create-t\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_SUCCESSFUL_MESSAGE \u003d \"Created a tag!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_UNSUCCESSFUL_MESSAGE \u003d \"Tag already exists!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Creates a tag. Parameters: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + PREFIX_DELIMITER + PREFIX_TAG + \" TAG NAME [TAG COLOR]\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + \"Available colors: \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_BLACK_STRING + \", \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_RED_STRING + \", \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_GREEN_STRING + \", \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_BLUE_STRING + \", \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_YELLOW_STRING + \", \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_PURPLE_STRING + \", \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_CYAN_STRING + \", \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + Tag.COLOR_WHITE_STRING;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagColor;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a TagCommand to list all the Tags."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public CreateTagCommand(String tagName, String tagColor) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagColor \u003d tagColor;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean executeSuccessful \u003d tagManager.createTag(tagName, tagColor);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String executeMessage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (executeSuccessful) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            executeMessage \u003d COMMAND_SUCCESSFUL_MESSAGE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            executeMessage \u003d COMMAND_UNSUCCESSFUL_MESSAGE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        executeMessage \u003d executeMessage.concat(tagManager.getTag(tagName).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return executeMessage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.exception.SystemException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Deletes a Note from the Notebook or an Event from the Timetable."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_NOTE \u003d \"delete-n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"delete-e\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_NOTE \u003d COMMAND_WORD_NOTE + \": Deletes a note. Parameters: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_EVENT \u003d COMMAND_WORD_EVENT + \": Deletes an event. Parameters: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isDeleteNote;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a DeleteCommand to delete a Note or an Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index        of the item to be deleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isDeleteNote determines to delete a Note or an Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public DeleteCommand(int index, boolean isDeleteNote) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isDeleteNote \u003d isDeleteNote;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        if (isDeleteNote) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                String title \u003d notebook.getNotes().get(index - 1).getTitle();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                notebook.deleteNote(index - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                return \"Note deleted: \" + title;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            } catch (IndexOutOfBoundsException | SystemException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                return \"This note does not exists in the notebook\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return \"Event deleted\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 27,
      "Nazryl": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteTagCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Deletes an existing Tag."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class DeleteTagCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete-t\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_SUCCESSFUL_MESSAGE \u003d \"Deleted the tag!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_UNSUCCESSFUL_MESSAGE \u003d \"The tag does not exist!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Deletes a tag. Parameters: TAG NAME\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public DeleteTagCommand(String tagName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean executeSuccessful \u003d tagManager.deleteTag(tagName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (executeSuccessful) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return COMMAND_SUCCESSFUL_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return COMMAND_UNSUCCESSFUL_MESSAGE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/EditCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Edits a Note in the Notebook or an Event from the Timetable."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_NOTE \u003d \"edit-n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"edit-e\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_NOTE \u003d COMMAND_WORD_NOTE + \": Edits a note in the notebook. Parameters: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE_EVENT \u003d COMMAND_WORD_EVENT + \": Edits an event in the timetable. \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + \"Parameters: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Note note;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isEditNote;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs an EditCommand to edit a Note."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index of the Note to be edited."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note to be edited."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public EditCommand(int index, Note note) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.event \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isEditNote \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs an EditCommand to edit an Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index of the Event to be edited."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param event to be edited."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public EditCommand(int index, Event event) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.note \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isEditNote \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 49,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Exits the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Exits the program.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 15,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import seedu.duke.ui.InterfaceManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Finds Notes in the Notebook.(Possible to add find in event too)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find-n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Finds a note. Parameters: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a FindCommand to find Notes in the Notebook given the keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param keywords to look for in the Notebook."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public FindCommand(String keywords) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String notes \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ArrayList\u003cNote\u003e filteredNotes \u003d (ArrayList\u003cNote\u003e) notebook.getNotes().stream()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                .filter((s) -\u003e s.getTitle().contains(keywords))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        for (int i \u003d 0; i \u003c filteredNotes.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            notes +\u003d (i + 1) + \".\" + filteredNotes.get(i).toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if (filteredNotes.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return \"There are no matching notes. Please try another search query.\" + InterfaceManager.LS;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return \"Here are the matching notes in your list:\" + InterfaceManager.LS + notes;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 21,
      "Chongjx": 22,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Lists all the commands and usage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String HELP_STRING \u003d \"This is a help command. Currently all commands are recognise as Help \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + \"command.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return HELP_STRING;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 13,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nazryl"
        },
        "content": " * Represents an incorrect command. Upon execution, produces a message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nazryl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public final String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public IncorrectCommand(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nazryl": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListEventCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Lists all the Events in the Timetable."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class ListEventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list-e\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": List all the events in the Timetable. Parameters: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isListByDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListEventCommand to list all the Events in the Timetable."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListEventCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isListByDate \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListEventCommand to list all the Events in the Timetable."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param date of the Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListEventCommand(LocalDate date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isListByDate \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListNoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Tag;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Lists all the Notes in the Notebook."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class ListNoteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list-n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Lists all the notes in the Notebook. Parameters: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private ArrayList\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isSorted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isAscendingOrder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListCommand to list all the Notes in the Notebook in a sorted order."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isAscendingOrder determines the order of the sorting of the Notes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListNoteCommand(boolean isAscendingOrder) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isSorted \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isAscendingOrder \u003d isAscendingOrder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListNoteCommand to list all the Notes in the Notebook in the default order."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListNoteCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isSorted \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isAscendingOrder \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListNoteCommand to list all the Notes in the Notebook that has the tag(s)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tags tags of the Notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListNoteCommand(ArrayList\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ListNoteCommand to list all the Notes in the Notebook, that has the tag(s), in a sorted order."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isAscendingOrder order of the sort."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tags tags of the Notes."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ListNoteCommand(boolean isAscendingOrder, ArrayList\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this(isAscendingOrder);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListTagCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Lists all the Tags."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class ListTagCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list-t\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Lists all the tags.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagManager.listTags();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/PinCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Pins or unpins a Note in the Notebook."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class PinCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"pin-n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Pins or unpins a note. Parameters: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isPinByIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a PinCommand to pin or unpin a Note in the Notebook by the index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index of the Note."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public PinCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isPinByIndex \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a PinCommand to pin or unpin a Note in the Notebook by the title."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the Note."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public PinCommand(String title) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d NULL_INT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isPinByIndex \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 38,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/RemindCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Sets the reminder status of an Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class RemindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remind-e\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Set a reminder for an event. Parameters: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isToRemind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a RemindCommand to set the reminder status of an Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index of the Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isToRemind the reminder status of the Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public RemindCommand(int index, boolean isToRemind) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isToRemind \u003d isToRemind;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 26,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/TagCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Tag;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_DELIMITER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Tags or untags a Note."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"tag\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String ADD_TAG_MESSAGE \u003d \"Added the tag to the note!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String REMOVE_TAG_MESSAGE \u003d \"Removed the tag from the note!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Tags or untags a note. Parameters: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + PREFIX_DELIMITER + PREFIX_INDEX + \" INDEX \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            + PREFIX_DELIMITER + PREFIX_TAG + \" TAG NAME [TAG COLOR]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagColor;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public TagCommand(int index, String tagName, String tagColor) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagColor \u003d tagColor;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Tag tag \u003d tagManager.getTag(tagName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Note note \u003d notebook.getNotes().get(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Remove the tag from the note if it does not have the Tag"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (note.getTags().contains(tag)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagManager.removeTag(note, tag);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return REMOVE_TAG_MESSAGE + tag;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagManager.tagNote(note, tagName, tagColor);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return ADD_TAG_MESSAGE + tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ViewNoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Views a specific Note in the Notebook."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class ViewNoteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view-n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Views a note. Parameters: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean isViewByIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ViewNoteCommand to view a Note by the index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param index of the Note."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ViewNoteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isViewByIndex \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a ViewNoteCommand to view a Note by the title."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the Note."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ViewNoteCommand(String title) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.index \u003d NULL_INT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isViewByIndex \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 38,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/exception/SystemException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Signals the different type of possible exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class SystemException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Types of exception. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public enum ExceptionType {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        EXCEPTION_MISSING_DESCRIPTION(\"Missing description!\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        EXCEPTION_MISSING_TITLE(\"Missing title!\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        EXCEPTION_DUPLICATE_NOTE(\"This note already exists in the notebook!\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        EXCEPTION_MISSING_NOTE(\"This note does not exists in the notebook!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        /** The exception message. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        private final String exceptionMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         * Constructor of an ExceptionType."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         * @param exceptionMessage The exception message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        ExceptionType(String exceptionMessage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.exceptionMessage \u003d exceptionMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         * Overrides the parent toString method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         * @return The exception message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "         */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return exceptionMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public SystemException(ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        super(exceptionType.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 34,
      "Nazryl": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/notebook/Note.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a Note. Contains all the information of a note."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Note {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Boolean isPinned;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private ArrayList\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a Note object with its title, content and pinned status provided."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the note."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param content of the note."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isPinned status of the note."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Note(String title, String content, Boolean isPinned) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isPinned \u003d isPinned;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Constructs a Note object with its title, content, pinned status and tags provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the note."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param content of the note."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isPinned status of the note."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tags of the note."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Note(String title, String content, Boolean isPinned, ArrayList\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this(title, content, isPinned);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setContent(String content) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public String getPinned() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        return (isPinned ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setPinned(Boolean pinned) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        isPinned \u003d pinned;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ArrayList\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTags(ArrayList\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 57,
      "Nazryl": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/notebook/Notebook.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.exception.SystemException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a Notebook object. Contains all the notes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Notebook {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private ArrayList\u003cNote\u003e notes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a new list of notes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Notebook() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a list of notes from existing data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notes of existing data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Notebook(ArrayList\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ArrayList\u003cNote\u003e getNotes() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return this.notes;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setNotes(ArrayList\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Adds a note into the notebook."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "     * @throws SystemException if an error occurs."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public void addNote(Note note) throws SystemException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        notes.add(note);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Removes a note from the timetable."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "     * @throws SystemException if an error occurs."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public void deleteNote(int note) throws SystemException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        notes.remove(note);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 43,
      "Nazryl": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/notebook/Tag.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a tag with respective color bind to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_RED_STRING \u003d \"RED\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_GREEN_STRING \u003d \"GREEN\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_BLUE_STRING \u003d \"BLUE\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_YELLOW_STRING \u003d \"YELLOW\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_PURPLE_STRING \u003d \"PURPLE\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_CYAN_STRING \u003d \"CYAN\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_BLACK_STRING \u003d \"BLACK\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String COLOR_WHITE_STRING \u003d \"WHITE\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Types of color."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private enum TagColor {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_WHITE(\"\\u001B[30m\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_RED(\"\\u001B[31m\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_GREEN(\"\\u001B[32m\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_YELLOW(\"\\u001B[33m\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_BLUE(\"\\u001B[34m\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_PURPLE(\"\\u001B[35m\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_CYAN(\"\\u001B[36m\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_BLACK(\"\\u001B[37m\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        COLOR_CLEAR(\"\\u001B[0m\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        private final String color;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        TagColor(String color) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.color \u003d color;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String tagName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private TagColor tagColor;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagColor \u003d TagColor.COLOR_BLACK;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Overloaded constructor to take in the color of the tag."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the tag."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagColor color of the tag."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Tag(String tagName, String tagColor) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (tagColor.toUpperCase()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_RED_STRING:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_RED;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_GREEN_STRING:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_GREEN;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_BLUE_STRING:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_BLUE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_YELLOW_STRING:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_YELLOW;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_PURPLE_STRING:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_PURPLE;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_CYAN_STRING:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_CYAN;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_WHITE_STRING:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_WHITE;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case COLOR_BLACK_STRING:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            this.tagColor \u003d TagColor.COLOR_BLACK;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Getter function for the name of the tag. */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getTagName() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagName;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Setter function for the name of the tag. */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTagName(String tagName) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Getter function for the color of the tag. */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public TagColor getTagColor() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagColor;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Setter function for the color of the tag. */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTagColor(TagColor tagColor) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.tagColor \u003d tagColor;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Overrides the parent class toString function to return the tag with its tag color."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return tagName with its respective tag color."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagColor.color + \"[\" + tagName + \"]\" + TagColor.COLOR_CLEAR.color;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 109,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/notebook/TagManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.ui.InterfaceManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a TagManager. Manages the tags for the notes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class TagManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Map\u003cTag, ArrayList\u003cNote\u003e\u003e tagMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public TagManager() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Map\u003cTag, ArrayList\u003cNote\u003e\u003e getTagMap() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Checks if the Tag exists in the Map."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag to check."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return true if Tag exists, false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private boolean containsTag(String tagName) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (Tag t : tagMap.keySet()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (t.getTagName().equalsIgnoreCase(tagName)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Tag getTag(String tagName) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (Tag t : tagMap.keySet()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (t.getTagName().equalsIgnoreCase(tagName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                return t;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a Tag with the provided name."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void createTag(String tagName) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean isTagExist \u003d containsTag(tagName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (!isTagExist) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagMap.put(new Tag(tagName), new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a Tag with the provided name and color."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagColor color of the Tag."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public boolean createTag(String tagName, String tagColor) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean isTagExist \u003d containsTag(tagName);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (!isTagExist) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagMap.put(new Tag(tagName, tagColor), new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a Tag with the provided Tag."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tag provided Tag."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void createTag(Tag tag) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagMap.put(tag, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Tags a Note with the provided name. Creates a new Tag if the Tag does not exist."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note Note to be tagged."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /*public void tagNote(Note note, String tagName) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean isTagExist \u003d containsTag(tagName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if(!isTagExist) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            createTag(tagName);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for(Tag t : tagMap.keySet()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if(t.getTagName().equalsIgnoreCase(tagName)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                //note.getTags().add(t);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagMap.get(t).add(note);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Tags a Note with the provided name. Creates a new Tag if the Tag does not exist."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note Note to be tagged."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagColor color of the Tag."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void tagNote(Note note, String tagName, String tagColor) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        boolean isTagExist \u003d containsTag(tagName);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (!isTagExist) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            createTag(tagName, tagColor);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Tag tag \u003d getTag(tagName);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagNote(note, tag);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Tags a Note with the provided Tag."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note Note to be tagged."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tag Provided Tag."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void tagNote(Note note, Tag tag) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagMap.get(tag).add(note);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        note.getTags().add(tag);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Removes a Tag from the Note."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note Note to be untagged."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void removeTag(Note note, String tagName) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Tag tag \u003d getTag(tagName);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (tag !\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            removeTag(note, tag);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Removes a Tag from the Note."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param note Note to be untagged."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tag to be removed."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void removeTag(Note note, Tag tag) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagMap.remove(tag, note);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        note.getTags().remove(tag);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Deletes a Tag from the Map. Notes that have the Tag will be untagged."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param tagName name of the Tag to be deleted."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public boolean deleteTag(String tagName) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        Tag tag \u003d getTag(tagName);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        if (tag \u003d\u003d null) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (Note n : tagMap.get(tag)) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            n.getTags().remove(tag);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        tagMap.remove(tag);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Lists all the Tags in the map."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return all the Tags."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String listTags() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagList \u003d \"\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (Tag t : tagMap.keySet()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            tagList \u003d tagList.concat(t.toString() + InterfaceManager.LS);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return tagList;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void rebindTags(Note note) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        int numTagsToCheck \u003d note.getTags().size();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (int i \u003d 0; i \u003c numTagsToCheck; ++i) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Tag tag \u003d note.getTags().get(0);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            Tag existingTag \u003d getTag(tag.getTagName());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            note.getTags().remove(tag);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (existingTag \u003d\u003d null) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                createTag(tag);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagNote(note, tag);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            } else if (!note.getTags().contains(existingTag)) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagNote(note, existingTag);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 212
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/timetable/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents an Event. Contains all the information of an Event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Can be combined into LocalDateTime"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Boolean isToRemind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Boolean isRecurring;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates an Event object with its title, date and time provided."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param date of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Event(String title, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isToRemind \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isRecurring \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates an Event object with its title, date, time, isToRemind and isRecurring provided."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param title of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param date of the event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param time of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isToRemind status of the event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param isRecurring status of the event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Event(String title, LocalDate date, LocalTime time, Boolean isToRemind, Boolean isRecurring) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this(title, date, time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isToRemind \u003d isToRemind;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.isRecurring \u003d isRecurring;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Boolean getToRemind() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return isToRemind;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setToRemind(Boolean toRemind) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        isToRemind \u003d toRemind;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Boolean getRecurring() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return isRecurring;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setRecurring(Boolean recurring) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        isRecurring \u003d recurring;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 82,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/data/timetable/Timetable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.data.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a TimeTable object. Contains all the events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Timetable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private ArrayList\u003cEvent\u003e events;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a new list of events."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Timetable() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Creates a list of events from existing data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param events from existing data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public Timetable(ArrayList\u003cEvent\u003e events) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.events \u003d events;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public ArrayList\u003cEvent\u003e getEvents() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return events;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void setEvents(ArrayList\u003cEvent\u003e events) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.events \u003d events;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Adds an event into the timetable."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param event to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Removes an event from the timetable."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param event to be removed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void deleteEvent(Event event) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 51,
      "Nazryl": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/StorageManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Notebook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Timetable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a StorageManager. Manages the saving and loading of task list data."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Default folders directory. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String FOLDER_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String NOTES_DIR \u003d \"/notes\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** Default file path. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String NOTEBOOK_FILE_PATH \u003d \"notebook.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final String TIMETABLE_FILE_PATH \u003d \"timetable.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Saves all the Notes in the Notebook to the storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notebook The Notebook containing all the notes to be saved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void saveNotebook(Notebook notebook) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Saves all the Events in the Timetable to the storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param timetable The Timetable containing all the events to be saved."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void saveTimetable(Timetable timetable) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Saves all the Notes in the Notebook and the Events in the Timetable to the storage file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notebook The Notebook containing all the notes to be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param timetable The Timetable containing all the events to be saved."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void saveAll(Notebook notebook, Timetable timetable) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        saveNotebook(notebook);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        saveTimetable(timetable);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Loads the Notebook and Timetable from the storage file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notebook The Notebook to be loaded into."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param timeTable The Timetable to be loaded into."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void loadAll(Notebook notebook, Timetable timeTable) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/InterfaceManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Notebook;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.timetable.Timetable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a InterfaceManager. Manages the input and output of the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class InterfaceManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /** A platform independent line separator. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public InterfaceManager() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public InterfaceManager(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Returns the command based on user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return user input command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public String getUserCommandInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Prints a message with a default format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param message Message to be printed out."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public void prints(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Prints the list of notes in the notebook."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param notebook Containing the notes."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void prints(Notebook notebook) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Prints all the events in the timetable."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param timetable Containing all the events."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private void prints(Timetable timetable) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 64,
      "R-Ramana": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/DateTimeManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Represents a DateTimeManager. Manages the date and time info."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "public class DateTimeManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.EditCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.PinCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ListNoteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ViewNoteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.CreateTagCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.DeleteTagCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ListTagCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.TagCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ListEventCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.RemindCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.IncorrectCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.command.HelpCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.exception.SystemException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import seedu.duke.data.notebook.Note;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import seedu.duke.data.notebook.Tag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TITLE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_PIN;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_END;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_INDEX;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.PREFIX_DELIMITER;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import static seedu.duke.util.PrefixSyntax.STRING_SPLIT_DELIMITER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chongjx"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private static final int CONTAINS_TAG_COLOR_INFO \u003d 2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Parses userInput string into a Command to be executed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param userInput Original string of the userInput."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Command parseCommand(String userInput) throws SystemException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String[] userCommandAndArguments \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String commandString \u003d userCommandAndArguments[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String userMessage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userMessage \u003d userCommandAndArguments[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            userMessage \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        switch (commandString.toLowerCase()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case AddCommand.COMMAND_WORD_NOTE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return prepareAddNote(userMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareAddEvent(userMessage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ListNoteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareListNote(userMessage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ListEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareListEvent(userMessage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ViewNoteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareViewNote(userMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case EditCommand.COMMAND_WORD_NOTE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareEditNote(userMessage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case EditCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareEditEvent(userMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case DeleteCommand.COMMAND_WORD_NOTE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return prepareDeleteNote(userMessage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case DeleteCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareDeleteEvent(userMessage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return prepareFind(userMessage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case PinCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return preparePin(userMessage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case CreateTagCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return prepareCreateTag(userMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case DeleteTagCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return prepareDeleteTag(userMessage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ListTagCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new ListTagCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case TagCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return prepareTag(userMessage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case RemindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            // return prepareRemind(userMessage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * Splits the userMessage into the respective info by the delimiter."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @param userMessage Original string of the userInput."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @return Split strings."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     * @throws NullPointerException when the userMessage is empty."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private ArrayList\u003cString[]\u003e splitInfoDetails(String userMessage) throws NullPointerException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String[] splitMessage \u003d userMessage.split(PREFIX_DELIMITER);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        ArrayList\u003cString[]\u003e splitMessageContent \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Splits the prefix and the remaining content"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        for (String s : splitMessage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            splitMessageContent.add(s.split(STRING_SPLIT_DELIMITER, 2));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        // Remove the first element as it is always empty"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        splitMessageContent.remove(0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return splitMessageContent;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareAddNote(String userMessage) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        Note note;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        String title \u003d null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        Boolean isPinned \u003d false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003cTag\u003e();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            ArrayList\u003cString[]\u003e splitInfo \u003d splitInfoDetails(userMessage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            for (String[] infoDetails : splitInfo) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                String prefix \u003d infoDetails[0];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                case PREFIX_TITLE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    title \u003d infoDetails[1].trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                case PREFIX_TAG:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    Tag tag;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    String[] tagInfo \u003d infoDetails[1].split(\" \", 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (tagInfo[0].isBlank()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    } else if (tagInfo.length \u003d\u003d CONTAINS_TAG_COLOR_INFO) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        tag \u003d new Tag(tagInfo[0].trim(), tagInfo[1].trim());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        tag \u003d new Tag(tagInfo[0].trim());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    tags.add(tag);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                case PREFIX_PIN:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    isPinned \u003d Boolean.parseBoolean(infoDetails[1].trim());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (title.isBlank()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_TITLE);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            // Get Content"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            System.out.println(\"Enter Note:\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            content \u003d inputContent();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            // Add to note"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            note \u003d tags.isEmpty() ? new Note(title, content, isPinned) : new Note(title, content, isPinned, tags);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new AddCommand(note);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return new IncorrectCommand(exception.getMessage());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | NullPointerException exception) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(\"Missing description!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public String inputContent() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        StringBuilder commandInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        // Type note"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            commandInput.append(input.nextLine());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (!commandInput.equals(PREFIX_END)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                commandInput.append(\"\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            if (commandInput.toString().contains(\"/d\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                deleteLine(commandInput, \"\\n/d\\n\", 0);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                deleteLine(commandInput, \"\\n\", 1);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } while (!commandInput.toString().contains(PREFIX_END));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        deleteLine(commandInput, \"\\n/end\\n\", 0);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        return commandInput.toString();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    // Deletes the last line when typing"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public void deleteLine(StringBuilder commandInput, String characters, int noOfChar) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        int lastChar \u003d commandInput.lastIndexOf(characters) + noOfChar;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        commandInput.delete(lastChar, commandInput.length());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    private Command prepareDeleteNote(String userMessage) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            ArrayList\u003cString[]\u003e splitInfo \u003d splitInfoDetails(userMessage);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            for (String[] infoDetails : splitInfo) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                String prefix \u003d infoDetails[0];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                case PREFIX_INDEX:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    index \u003d Integer.parseInt(infoDetails[1].trim());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return new DeleteCommand(index, true);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return new IncorrectCommand(exception.getMessage());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "            return new IncorrectCommand(\"Invalid format\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private Command prepareFind(String userMessage) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if (userMessage.isBlank()) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new IncorrectCommand(\"No search query input. Please enter a keyword for search results.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return new FindCommand(userMessage);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareAddEvent(String userMessage) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    return new AddCommand(event);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareListNote(String userMessage) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return new ListNoteCommand();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareListEvent(String userMessage) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return new ListEventCommand();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareViewNote(String userMessage) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new ViewNoteCommand();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareEditNote(String userMessage) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new EditCommand(index, note);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareEditEvent(String userMessage) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new EditCommand(index, event);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareDeleteEvent(String userMessage) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new EditCommand(index, false);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command preparePin(String userMessage) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new PinCommand(index);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareCreateTag(String userMessage) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagName \u003d \"\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagColor \u003d \"\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            String[] tagInfo \u003d userMessage.split(\" \", 2);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (tagInfo[0].isBlank()) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagName \u003d tagInfo[0].trim();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (tagInfo.length \u003d\u003d CONTAINS_TAG_COLOR_INFO) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagColor \u003d tagInfo[1].trim();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(\"Missing description!\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(exception.getMessage());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return new CreateTagCommand(tagName, tagColor);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareDeleteTag(String userMessage) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagName \u003d \"\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            if (userMessage.isBlank()) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                tagName \u003d userMessage.trim();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (NullPointerException exception) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(\"Missing description!\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(exception.getMessage());"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return new DeleteTagCommand(tagName);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareTag(String userMessage) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagName \u003d \"\";"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        String tagColor \u003d \"\";"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            ArrayList\u003cString[]\u003e splitInfo \u003d splitInfoDetails(userMessage);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            for (String[] infoDetails : splitInfo) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                String prefix \u003d infoDetails[0];"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                case PREFIX_TAG:"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    String[] tagInfo \u003d infoDetails[1].split(\" \", 2);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (tagInfo[0].isBlank()) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        tagName \u003d tagInfo[0].trim();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (tagInfo.length \u003d\u003d CONTAINS_TAG_COLOR_INFO) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        tagColor \u003d tagInfo[1].trim();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                case PREFIX_INDEX:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    if (infoDetails[1].isBlank()) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                        throw new SystemException(SystemException.ExceptionType.EXCEPTION_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    index \u003d Integer.parseInt(infoDetails[1].trim());"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (NullPointerException | ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(\"Missing description!\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (SystemException exception) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(exception.getMessage());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "            return new IncorrectCommand(\"Invalid format!\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "        return new TagCommand(index, tagName, tagColor);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    private Command prepareRemind(String userMessage) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "       return new RemindCommand(index, isToRemind);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 266,
      "R-Ramana": 10,
      "Nazryl": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/PrefixSyntax.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "package seedu.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nazryl"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nazryl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "public class PrefixSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nazryl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public static final String PREFIX_TITLE \u003d \"t\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public static final String PREFIX_TAG \u003d \"tag\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public static final String PREFIX_PIN \u003d \"pin\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String PREFIX_END \u003d \"/end\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public static final String PREFIX_DELETE_LINE \u003d \"/d\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "    public static final String PREFIX_INDEX \u003d \"i\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String PREFIX_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    public static final String STRING_SPLIT_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nazryl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 3,
      "Nazryl": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/CreateTagCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class CreateTagCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/DeleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/DeleteTagCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class DeleteTagCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/EditCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class EditCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ExitCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/FindCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/HelpCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class HelpCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ListEventCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ListEventCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ListNoteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ListNoteCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ListTagCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ListTagCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/PinCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class PinCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/RemindCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class RemindCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/TagCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class TagCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/ViewNoteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ViewNoteCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/exception/SystemExceptionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class SystemExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/notebook/NoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class NoteTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/notebook/NotebookTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class NotebookTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void addNote() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void deleteNote() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/notebook/TagTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.notebook;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class TagTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/timetable/EventTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/data/timetable/TimetableTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.data.timetable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class TimetableTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void addEvent() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void deleteEvent() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/storage/StorageManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class StorageManagerTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void saveAll() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void loadAll() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/ui/InterfaceManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class InterfaceManagerTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void getUserCommandInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void prints() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/util/DateTimeManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class DateTimeManagerTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 5
    }
  },
  {
    "path": "src/test/java/seedu/duke/util/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "package seedu.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chongjx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    void parseCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chongjx"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "Chongjx": 3
    }
  }
]
