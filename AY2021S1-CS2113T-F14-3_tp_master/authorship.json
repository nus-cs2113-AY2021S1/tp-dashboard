[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wamika Malik | [Github](https://github.com/wamikamalik) | [Portfolio](docs/team/wamikamalik.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lezn0"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Fish Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Johnson-Yee"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Johnson Yee | [Github](https://github.com/Johnson-Yee) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Shuyi | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "NUS SO FUN!"
      }
    ],
    "authorContributionMap": {
      "Johnson-Yee": 1,
      "Lezn0": 1,
      "EthanWong2212": 1,
      "mrwsy1": 1,
      "-": 6,
      "wamikamalik": 1
    }
  },
  {
    "path": "docs/team/wamikamalik.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "# Wamika Malik - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/BusRoute.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class BusRoute {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    String[] zoneA \u003d {\"AA1\", \"AA2\"};"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    String[] aa1 \u003d {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"PGP\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Kent Ridge MRT Station\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Opp University Health Center\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Yusof Ishak House\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Central Library\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Kent Ridge\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Museum\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"University Town\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"University Health Centre\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Opp Kent RIdge MRT station\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"PGPR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    String[] aa2 \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"PGP\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Kent Ridge MRT Station\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Opp University Health Centre\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"University Town\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Raffles Hall\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Kent Vale\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"EA\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"NUS IT\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"University Health Centre\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"Opp Kent Ridge MRT Station\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        \"PGPR\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.exceptions.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.logic.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        boolean isOngoing \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        while (isOngoing) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                parser.getCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                isOngoing \u003d parser.extractType();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            } catch (CustomException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                Ui.showError(error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "wamikamalik": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/CustomException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class CustomException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private ExceptionType exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public CustomException(ExceptionType exception) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.exception \u003d exception;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return (exception.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/ExceptionType.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    INVALID_COMMAND(\"I do not understand!!\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    ExceptionType(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public abstract void executeCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public boolean isOngoing() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/commands/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public void executeCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public boolean isOngoing() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/logic/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.exceptions.CustomException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.exceptions.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import seedu.duke.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    Command com;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public void getCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * Split sentence to derive command and rest of the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @return String Array with two element: Command and the rest of the user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private String[] splitCommands() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        final String[] split \u003d userInput.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \" \"};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public boolean extractType() throws CustomException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        String command \u003d splitCommands()[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/route\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/routemap\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/bus\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/allbus\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/liststops\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //        case \"/help\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        //            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        case \"/exit\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            com \u003d new ExitCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            throw new CustomException(ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        com.executeCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return com.isOngoing();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private String[] splitRouteMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        final String[] split \u003d splitCommands()[1].trim().split(\"\\\\s+\", 3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return split.length \u003d\u003d 3 ? split : new String[]{split[0], \" \"};"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(\"How can I help?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static void showError(Exception error) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static void commandList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(\"So long buddy!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "/exit"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "wamikamalik": 1
    }
  }
]
