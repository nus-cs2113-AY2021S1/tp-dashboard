[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 1,
      "-": 63
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    mainClassName \u003d \"seedu.eduke8.Eduke8\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    archiveBaseName \u003d \"eduke8\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 3,
      "Zhi-You": 2,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tang Zhi You | [Github](https://github.com/Zhi-You) | [Portfolio](docs/team/zhiyou.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joseph Abraham | [Github](https://github.com/josephhhhhhhhh) | [Portfolio](docs/team/joseph.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lim An Qi | [Github](https://github.com/anqi20) | [Portfolio](docs/team/anqi.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joel Ng | [Github](https://github.com/joelngyx) | [Portfolio](docs/team/joel.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kingston Kuan | [Github](https://github.com/kstonekuan) | [Portfolio](docs/team/kingston.md)"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# Developer Guide for E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- [Developer Guide for E-Duke-8](#developer-guide-for-e-duke-8)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [1.1. Software Overview](#11-software-overview)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [1.2. Setting up](#12-setting-up)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [2. Design \u0026 implementation](#2-design--implementation)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [2.1. Architecture](#21-architecture)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [2.2. Model Component](#22-model-component)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.2.1. Design of TopicList](#221-design-of-topiclist)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.2.2. Implementation of TopicList](#222-implementation-of-topiclist)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.2.3. Implementation of Notes](#223-implementation-of-notes)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.2.4. Design of Option and OptionList](#224-design-of-option-and-optionlist)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "      - [2.2.5. Implementation of Option and OptionList](#225-implementation-of-option-and-optionlist)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [2.3. Logic Component](#23-logic-component)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.3.1. Design of Parser](#231-design-of-parser)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.3.2. Implementation of MenuParser](#232-implementation-of-menuparser)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.3.3. Design of QuizQuestionsManager](#233-design-of-quizquestionsmanager)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.3.4. Implementation of QuizQuestionsManager](#234-implementation-of-quizquestionsmanager)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.3.5 Design of Stats Feature](#235-design-of-stats-feature)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      - [2.3.6. Implementation of Stats Feature](#236-implementation-of-stats-feature)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [2.4. Storage Component](#24-storage-component)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.4.1. Design of TopicsStorage](#241-design-of-topicsstorage)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.4.2. Implementation of TopicsStorage](#242-implementation-of-topicsstorage)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.4.3. Design of UserStorage](#243-design-of-userstorage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.4.4. Implementation of UserStorage](#244-implementation-of-userstorage)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [2.5. UI Component](#25-ui-component)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      - [2.5.1. Implementation of Ui](#251-implementation-of-ui)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [3. Product scope](#3-product-scope)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.1. Target user profile](#31-target-user-profile)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.2. Value proposition](#32-value-proposition)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [4. User Stories](#4-user-stories)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [5. Non-Functional Requirements](#5-non-functional-requirements)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [6. Glossary](#6-glossary)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - [7. Appendix](#7-appendix)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [7.1. Instructions for manual testing](#71-instructions-for-manual-testing)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 1.1. Software Overview"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and OOP principles** through a gamified"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On this desktop application, CS2113/T students can attempt bite-sized quizzes, through the **Command Line Interface (CLI)**, to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8, comprises of a Logic component, UI component, Storage component, and Model component. Each component comprises of multiple classes that work in tandem, to fulfil the purpose of our program. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The purpose of this developer guide is to allow any interested contributors, who wish to develop this learning companion further, understand the inner workings of the program. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "This understanding will enable such contributors to add value to the current code, by improving its performance, level of interaction or capabilities. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 1.2. Setting up"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "First, fork this repo, and clone the fork into your computer."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You are recommended to use Intellij IDEA to edit the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1. **Configure the JDK**: Ensure Intellij is configured to use JDK 11."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2. **Import the project as a Gradle project**: Choose the option to import the project as a Gradle project when prompted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "3. **Verify the setup**: Enter some commands to ensure E-Duke-8 functions as expected. Refer to our [User Guide](https://ay2021s1-cs2113t-f12-3.github.io/tp/UserGuide.html) for more information."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 2. Design \u0026 implementation"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.1. Architecture"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The high-level design of our program is based on a 3-tier architecture which consists of the Presentation, Application and Database layers. The Logic component, UI component, Storage component, and Model component can be found in each layer as shown in the architecture diagram below."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Architecture](images/Architecture.png)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.2. Model Component"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The data model is centered around `DisplayableList` objects which hold `Displayable` objects. This implementation allows us to create various topics with questions, options, hints and explanations. This was also extended to creating bookmarks and notes."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "####  2.2.1. Design of TopicList"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "TopicList is an ArrayList of type Displayable, which is one of two interfaces implemented "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi20"
        },
        "content": "in the code for E-Duke-8. As such, many of the commands that manipulate the TopicList make "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "use of the package java.util.ArrayList. The TopicList is used to store Topics. Additionally,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "each topic stores a NoteList, which contains Notes."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1. Listing topics in TopicList"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "2. Adding a new note"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "3. Deleting an existing note"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "4. Listing out all notes in a topic"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![TopicList_Class_Diagram](./images/TopicListAndNotes.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.2.2. Implementation of TopicList"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Listing topics in TopicList:**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![TopicListSampleSequence](./images/TopicListSampleSequence.png)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "This task is performed by the `TopicList.showTopics()` method."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. The `parseCommand()` method instantiates a `TopicsCommand` object which then calls the "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        `TopicList.showTopics()` method."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `TopicList.showTopics()` method then calls the method `Ui.printTopicList()`. The "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        current `TopicList` is passed into the called method."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 3. The `Ui.printTopicList()` method then prints out the description of each topic in the "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        `TopicList`. "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "`NoteList` is also an `ArrayList` of type `Displayable`, which is one of two interfaces implemented in the code for "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "E-Duke-8. As such, many of the commands that manipulate the `TopicList` make use of the package `java.util.ArrayList`. "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "The `NoteList` stores `Note` objects. Each topic has 1 `NoteList`. "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.2.3. Implementation of Notes"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Adding a new note:**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "This task is performed by the `NoteList.add()` method."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. The `parseCommand()` method instantiates a `NoteCommand` object which then calls the `NoteList.add()` method. "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        A new `Note` object is passed into its parameter."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `NoteList.add()` method makes use of `ArrayList` API, specifically the `ArrayList.add()` method, to add "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        the `Note` object into `NoteList`."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Deleting a note:**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This task is performed by the `NoteList.delete()` method."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. The `parseCommand()` method instantiates a `NoteCommand` object which then calls the `NoteList.delete()` method. "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        An integer that represents the index of the `Note` object to be deleted within the `NoteList` is passed into "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this method."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `NoteList.delete()` method makes use of `ArrayList` API, specifically the `ArrayList.remove()` method, to "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        delete the `Note` object in `NoteList`."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Listing out all notes in a topic**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This task is performed by the `Ui.printNoteList()` method."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. The `parseCommand()` method instantiates a `NoteCommand` object which then instantiates an Ui object"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "and calls the `Ui.listInteraction` method. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `Ui.listInteraction` method calls the `Ui.printNoteList()` method. The topic\u0027s `NoteList` is passed into "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "this method. `Ui.printNoteList()` prints out the descriptions and texts of all the `Note` objects in the "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "topic\u0027s `NoteList`."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.2.4. Design of Option and OptionList "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` and `OptionList` classes implements the `Displayable` and `DisplayableList` interfaces respectively. "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` object stores one option of a question while the `OptionList` object stores all 4 options of the same "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": "question. The class diagram below illustrates the structure of both classes. "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` class implements the `Displayable` interface while the `OptionList` class implements the `DisplayableList` interface. The illustration below shows the class diagram of `Option` and `OptionList`. "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Option_and_OptionList_Class](./images/Option.png)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` object stores the description of one option from a question. It also indicates if the option is the correct answer for the question by using the `isCorrectAnswer` boolean. "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `OptionList` object stores all 4 options of the same question. "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi20"
        },
        "content": "#### 2.2.5. Implementation of Option and OptionList"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "anqi20"
        },
        "content": "An example of when the `Option` and `OptionList` classes are used is when the quiz mode is activated. The quiz requires all the options of a particular question to be printed out. "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Option_and_OptionList_Sequence](./images/OptionSequence.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. When a quiz is started, the `SingleTopicQuiz()` method will instantiate a `SingleTopicQuiz` object which calls the `getOptionList()` method. "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `OptionList` object then calls the `getInnerList()` method, a getter method, to get the list of options for the same question. "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 3. The `printOption()` method is then called to print out all the options for the user to see. The `options.get(i)` parameter will get the description of the specific option and the `i+1` parameter "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "anqi20"
        },
        "content": "will handle the numbering of the options. The printing out of the options will be handled by the `Ui` class. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.3. Logic Component"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The main application logic, such as provisioning quizes, is handled by the Logic component. This component also acts as the middleman between the backend and frontend by processing data before passing it to the user interface and parsing user input from the user interface."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.1. Design of Parser"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Parser Diagram](./images/ParserDiagram.png)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "1. After constructing a new MenuParser() in the `Eduke8` class, the parseCommand() method is used to parse the "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   user command."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2. This results in a `Command` object, which is executed by `Command` class itself, using the execute() method."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "3. The `Ui` object in the `Command` object is used to display the requested information, or to display the required task "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "to be completed as per the user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.2. Implementation of MenuParser"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Below is the sequence diagram for how the Parser component of `Eduke8` works with commands to show output to the user."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Parser Sample Sequence](./images/ParserSampleSequence.png)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The command parsing feature is our program’s way of reading the user’s input into the command line. It makes use of a "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "single method `parseCommand` that identifies what command the user is calling for and then calls the command. There are "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "two parsers in our program that implements a single `Parser` interface. One parser is for choosing menu options and is "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "named `MenuParser`. The other parser is used during quizzes, in order to answer questions or request for hints, and is "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "called `QuizParser`. Given below is an example usage scenario of how the command parsing feature works at each step, "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "when the user types in input to get help in order to see what commands are available to the user."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 1. The user launches the program for the first time. The `MenuParser()` will be initialised and awaiting the user’s"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        input to proceed."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 2. The user types in \"help\" into the command line interface and presses enter. This user input “help” is stored as "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        a string and is put into the `parseCommand()` method as a parameter, together with the list of topics. This "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        topic list is not relevant to the help command for now."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 3. The user input string is subjected to the `lang.string.trim()` and `lang.string.split()` functions of a string "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        in the Java libraries in order to remove redundant spaces around the input, and to discern the number of words "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        in the input. The `lang.string.split()` function uses a blank space string, “ “, as the delimiter to split the "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        string into its individual components."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 4. Each subsequent string separated by a space is stored in a string array named `commandArr`. The 0th index of the "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        `commandArr` array is the first word, the 1st index is the second word, and so on. In this case there is only "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        one word stored in the array, at the 0th index, which is “help”."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Step 5. The string at the 0th index is then used in a switch statement, where each case represents the different menu "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        options available. As such, the contents of the case with reference “help” is run, which is a return statement "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        containing a new `HelpCommand()`. This leads to the execution of the `help` command."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.3. Design of QuizQuestionsManager"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To start a quiz in E-Duke-8, the user will have to indicate the number of questions that he wants to attempt, as well as the topic to get the questions from. Thereafter, questions will be shown to the user one by one until all them are attempted. "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The class diagram given below explains the high-level design of the Quiz system in E-Duke-8. Given below it is a quick overview of each component."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![QuizQuestionsManager_Class_Diagram](./images/QuizQuestionsManager.png)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An object of `SingleTopicQuiz` class represents an instance of the quiz in E-Duke-8. Its `numberOfQuestions` attribute and `Topic` object correspond to the user\u0027s specified number of questions and topic for the quiz respectively."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The `startQuiz(:Ui)` method call from the `SingleTopicQuiz` object initializes an object of `QuizQuestionsManager` by passing into it `numberOfQuestions`, as well as an ArrayList of questions from the `Topic` object. The `QuizQuestionsManager` object will then randomly select `numberOfQuestions` questions from the topic the user has chosen, using its `setQuizQuestions(:int, :ArrayList\u003cDisplayable\u003e)` method. "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Thereafter, by making use of `QuizQuestionsManager`\u0027s `getNextQuestion()` and `areAllQuestionsAnswered()` method calls, the `goThroughQuizQuestions(:Ui, :QuizQuestionsManager)` will loop through the questions until the user has answered all of them on the command line interface."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.4. Implementation of QuizQuestionsManager"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "As mentioned earlier in the section on the design of the quiz system, a `QuizQuestionsManager` object will randomly select the indicated number of questions from the list of questions in the `Topic` object, and these will form the quiz questions for the user."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The sequence diagram below shows how `QuizQuestionsManager` is implemented to achieve this for the scenario where the user indicates that he wants to attempt 5 questions from the topic on OOP, which translates to the `setQuizQuestions(5, questionsInTopic)` call:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![QuizQuestionsManager::setQuizQuestions_Sequence_Diagram](./images/QuizQuestionsManager_setQuizQuestions.png)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "`nextInt(5)` is a method call to an object of the `Random` class. It returns a random integer between 0 (inclusive) and the number passed in as argument, 5 in this scenario, exclusive. "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To ensure that no two of the same question is selected, the selected randomQuestionIndex is checked to see if it is repeated. To determine if randomQuestionIndex is not selected before, an integer ArrayList is initialized to record all the selected integers. By checking against this collection of integers, it can be determined if a currently selected integer is repeated or not, and if it is, no question will be added for that iteration of the loop. "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An ArrayList of `Question` objects stores all the selected questions meant for the quiz."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "#### 2.3.5 Design of Stats Feature"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 allows for user’s stats to be shown to the user when requested. These statistics correspond to the results of the user’s past attempts of the quiz. An aggregate result, followed by topical results of the quiz will be displayed. "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A `Stats` class facilitates what is to be shown to the user. It also calls the methods of the objects of the two subclasses of `StatsCalculator`, `UserStatsCalculator` and `TopicalStatsCalculator` to retrieve the necessary information to be displayed."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The class diagram given below showcases the high-level design of the stats feature in E-Duke-8. Given below it is a quick overview of each component."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![Stats_Class_Diagram](./images/Stats.png)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Results of the quiz attempts can be calculated using the information stored in a `Question` object, because of its methods, namely `wasShown()`,  `wasHintShown()` and `wasAnsweredCorrectly()`, that indicate if it has been attempted before, whether hint was used when user attempted the question and if the question was answered correctly respectively. "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The current design of the stats feature is such that a correct answer without hint being used would award the user with 2 points, while a correct answer with hint used would award the user with 1 point. No point is awarded to the user if they chose the wrong answer. `calculatePointsEarnedForQuestion( :Question)` in `StatsCalculator` class and its subclasses, is the method that contains the logic for this calculation."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An object of `UserStatsCalculator` class is responsible for calculating the aggregate results from the user’s previous quiz results. For instance, its `calculateTotalPointsEarned()` method will iterate through the multiple topics stored in E-Duke-8 and calculate the total sum of the user’s past results of the quizzes done for those topics."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On the other hand, an object of `TopicalStatsCalculator` is used by the object of `Stats` class to calculate the topical results. In its constructor, the `TopicalStatsCalculator` object uses the single `Topic` object passed into it to retrieve its specific `QuestionList` object. Thereafter, by iterating through the questions for the particular `QuestionList` object, the results for individual topics can be calculated with its methods."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "#### 2.3.6. Implementation of Stats Feature"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The current implementation of the stats feature is such that the object of `Stats` class controls what is shown to the user when the `stats` command is received. It calls on methods of a `UserStatsCalculator` object and a `TopicalStatsCalculator` object to calculate and retrieve the statistics of the user’s previous attempts of quizzes in E-Duke-8, before displaying them."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The sequence diagram below shows the interactions between the different objects when `showPointsEarned(ui)` is invoked, by the object of `Stats` class, to display to the user the total points he has earned in E-Duke-8 so far, out of all the points that he can potentially earn. "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![Stats::showPointsEarned_Sequence_Diagram](./images/Stats_showPointsEarned.png)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Through the logic in the object of `UserStatsCalculator`, necessary information regarding the user’s statistics, such as the `totalPointsGained` integer value and `totalPointsAvailable` integer value, are calculated, and then passed to the `Ui` object to print them to the user. This same concept and procedure are applied to the display the other aggregate results."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A similar procedure is being employed by the `TopicalStatsCalculator` object to calculate the topic-level statistics for the user. The only difference between the objects of these two classes is that instead of iterating through all the topics available, the `TopicalStatsCalculator` object only deals with a particular topic at any point of time. By iterating through the questions of the single topic, it calculates statistics for the topic and returns it back to the `Stats` object, which will then pass them to the `Ui` object to display them to the user. As such, in order to display the user’s statistics for each and every topic, a loop is done in the `Stats` object to repeatedly calculate the topic-level information for all of the topics and displaying them concurrently. "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.4. Storage Component"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The storage component is implemented locally and mainly saves and loads files in JavaScript Object Notation (JSON) format, except for log files which are stored as normal text files."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.1. Design of TopicsStorage"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Given data for the topics and questions is loaded automatically from JSON files in the data folder. This is mainly facilitated through the `TopicsStorage` "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class which handles accessing the file as well as converting from JSON into `Topic`, `Question` and `Option` objects. The class diagram below shows this relationship."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![TopicsStorage Class Diagram](./images/TopicsStorage.png)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The format of the JSON file is important as it is loaded in a particular way. This format was designed as an array of topics that hold the different properties for questions, options, hints and explanations. An example is as such:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```json"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "["
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\": \"OOP\","
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\": ["
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\": \"What is encapsulation?\","
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\": \"check the textbook\","
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"explanation\": \"because option A is the best answer\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"options\": ["
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"A\","
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": true"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"B\","
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"C\","
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"D\","
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "]"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.2. Implementation of TopicsStorage"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "When the user launches the app, the main program will initialize a `TopicsStorage` object and call the `load` method "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "which will return an `ArrayList` of  `Topic` objects. The following sequence diagram shows how the load operation works, focusing on how options are marked as correct:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![TopicsStorage::load Sequence Diagram](./images/TopicsStorage_load.png)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "As there is a high level of nesting in the JSON file, many methods are called in loops to parse each section and return them as objects which are then used to build the next object at a higher level. In the diagram above, the `Option` objects within each `Topic` has to be constructed with a description from the file and then marked as the correct answer if `correct` was `true` in the given data.  More properties can easily be added to the classes and the storage component in a similar way, by parsing in loops."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.3. Design of UserStorage"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "In order to save and load attributes specific to each user, such as the questions attempted, answered correctly or bookmarked, a `UserStorage` class is used to selectively store these attributes into a JSON file, `user.json`. This class requires access to the main `TopicList` and `BookmarkList` from the Model component in order to extract these attributes. The class diagram below shows this relationship."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![UserStorage Class Diagram](./images/UserStorage.png)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The attributes will be saved in the JSON file tied to each question in a topic and is identified by its description. A question\u0027s presence in the file represents that it has been attempted before while other attributes are stored as boolean values. An example is given below."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```json"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "["
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"notes\":[],"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\": ["
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"correct\":true,"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"bookmarked\":true,"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\":true,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\":\"OO is a higher level mechanism than the procedural paradigm.\""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      },"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"correct\":false,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"bookmarked\":false,"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\":true,"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\":\"Which of the following is NOT a core concept of OOP?\""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\":\"OOP\""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  },"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"notes\":[],"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\":[],"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\":\"Code_Quality\""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "]"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.4. Implementation of UserStorage"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Unlike `TopicStorage`, `UserStorage` accesses existing objects in order to extract their attributes. The following sequence diagram shows an example of getting the topic description from a `Topic` object within the `TopicList`."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![UserStorage::save Sequence Diagram](./images/UserStorage_save.png)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "A similar method is used to extract the attributes from each `Question` object inside the `Topic`."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.5. UI Component"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The command line interface was chosen for users that prefer to type using a keyboard over using the mouse."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.5.1. Implementation of Ui"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The `Ui` class handles all the interactions with the users. It reads the input from the users and prints out replies to "
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "the users. It is the point of communication between EDuke8 and the users. "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "An example is provided below to illustrate how the `Ui` class prints out the starting page of the quiz for "
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "the user to comprehend. "
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Ui_Printing_Start_Quiz_Page](./images/PrintQuizStartPage.png)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "As the user starts the quiz, the `Ui` class will print out the quiz page to show that the quiz has started. "
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The user inputs the number of questions that he wants to answer and also the topics that he wants to be tested on. "
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The `Ui` will go through printStartQuizQuestions() to print out the number of questions that the user has chosen. "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Afterwards, the `Ui` will go through printStartQuizTopics() to print out the topics that the user has chosen. "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 3. Product scope"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.1. Target user profile"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "CS2113/T Students"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.2. Value proposition"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Help CS2113/T students learn and understand software engineering and OOP principles through a gamified platform and "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "anqi20"
        },
        "content": "enhance their learning experience. Consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 4. User Stories"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|new user|quickly see what the software has to offer|understand how to use the app|"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "|v1.0|new user|answer given questions|start testing myself immediately|"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|long-time user|get different questions each time|repeatedly test my understanding for the particular topic|"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|busy user|test myself on concepts using short, targeted quizzes|confirm my understanding of concepts|"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|get a hint for the question in the quiz|think about the question from a different angle|"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|see what the available topics are|navigate around the app effectively|"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|select the number of questions to do in the quiz|manage the workload and time spent on the quiz|"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|slow but hardworking user|see the explanations provided in the quiz|learn from my mistakes and revise|"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|busy, lazy user|take note of key concepts|refer to it easily at a later time|"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|frequent disorganized user|view the percentage of error in each topic|tell how well I understand the content|"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 5. Non-Functional Requirements"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Should work on any mainstream [Operating System (OS)](#6-glossary) as long as it has Java 11 or above installed."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 6. Glossary"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Mainstream Operating Systems (OS)**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 7. Appendix"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 7.1. Instructions for manual testing"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "To test the product please refer to the E-Duke-8 [User Guide](https://ay2021s1-cs2113t-f12-3.github.io/tp/UserGuide.html)."
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 71,
      "kstonekuan": 218,
      "anqi20": 55,
      "joelngyx": 36,
      "-": 24,
      "josephhhhhhhhh": 30
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and [OOP](#2-object-oriented-programming-oop) principles** through a gamified"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "It is a desktop application where CS2113/T students can attempt bite-sized quizzes, through the [**Command Line Interface (CLI)**](#1-command-line-interface-cli), to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you are a CS2113/T student yourself, do give E-Duke-8 a try!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On E-Duke-8, you can earn points for yourself as you attempt the quizzes! You can also view the statistics of your past quiz attempts to understand your current level of mastery of the various topics!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Challenge your friends to see who can earn the most points on E-Duke-8!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 11,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# User Guide for E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Table of contents:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- [User Guide for E-Duke-8](#user-guide-for-e-duke-8)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [2. Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [3. Features](#3-features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.1. Loading Data](#31-loading-data)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.2. Welcome Page](#32-welcome-page)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.3. Viewing E-Duke-8 information: `about`](#33-viewing-e-duke-8-information-about)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.4. Viewing available commands: `help`](#34-viewing-available-commands-help)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.5. Listing all topics: `topics`](#35-listing-all-topics-topics)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.6. Accessing the CS2113T textbook content: `textbook`](#36-accessing-the-cs2113t-textbook-content-textbook)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.7. Starting a quiz: `quiz`](#37-starting-a-quiz-quiz)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.8. Showing a hint: `hint`](#38-showing-a-hint-hint)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.9. Adding a note: `note add`](#39-adding-a-note-note-add)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.10. Deleting a note: `note delete`](#310-deleting-a-note-note-delete)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - [3.11. Listing out notes: `note list`](#311-listing-out-notes-note-list)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    - [3.12. Displaying stats: `stats`](#312-displaying-stats-stats)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    - [3.13. Exiting the program: `exit`](#313-exiting-the-program-exit)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    - [3.14. Saving user data](#314-saving-user-data)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [4. FAQ](#4-faq)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [5. Command summary](#5-command-summary)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - [6. Glossary](#6-glossary)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        - [1. Command Line Interface (CLI)](#1-command-line-interface-cli)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        - [2. Object-oriented Programming (OOP)](#2-object-oriented-programming-oop)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and [OOP](#2-object-oriented-programming-oop) principles** through a gamified"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "It is a desktop application where CS2113/T students can attempt bite-sized quizzes, through the [**Command Line Interface (CLI)**](#1-command-line-interface-cli), to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On E-Duke-8, you can earn points for yourself as you attempt the quizzes! You can also view the statistics of your past quiz attempts to understand your current level of mastery of the various topics!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Challenge your friends to see who can earn the most points on E-Duke-8!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Understand more about E-Duke-8, and how you can use it to aid your learning, through this User Guide."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2. Download the latest version of **E-Duke-8** from [here](https://github.com/AY2021S1-CS2113T-F12-3/tp/releases)."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "3. Copy the files to the folder you want to use for the application."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "4. Double click on eduke8.jar to start up the program. If the program does not start up, continue to steps 5 and 6, otherwise skip to step 7."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "5. If double clicking on the jar file does not work, open up the command prompt in the same folder used in step 3."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "6. Enter the following command `java -jar eduke8.jar`."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "7. Type a command in the terminal and press Enter to execute it. e.g. typing \u0027help\u0027 and pressing Enter will list all the commands that you can use in this application. Here is a list of commands you can try:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - about : Provides information about E-Duke-8."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - topics : Lists CS2113/T topics that E-Duke-8 knows."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - textbook : Provides you with a link to the CS2113/T website."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "   - quiz : Starts a quiz. Eg. `quiz t/OOP n/5 s/10` will start a quiz with five questions based on OOP concepts. You will have 10 seconds to complete each question. "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - hint\t  :   Shows a hint to the current question."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - exit : Exits the app."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "8. Refer to the section on **Features** below for details of each command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "ℹ️ Notes about the command format:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Words in UPPER_CASE are the parameters that you can specify for your usage."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- e.g. in `quiz t/TOPIC n/NUM_QUESTIONS s/TIMER`, \u0027TOPIC\u0027 is a parameter that allows you to choose the topic you want the quiz to be based on, \u0027NUM_QUESTIONS\u0027 specifies the number of questions you want to have in your quiz, and \u0027TIMER\u0027 specifies the number of seconds given to complete each question. "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.1. Loading Data "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Data will be automatically loaded from the files in the **data** folder for use in quizzes and notes."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "You will see this message while the data loads:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data loading](./images/data_loading.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To ensure that data could be loaded successfully, ensure that the data folder that comes along with the eduke8.jar file is placed in the same folder as eduke8.jar. This is part of the setup and is to be done prior to the running of the app. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If the data has been loaded successfully you should see this message:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data loaded](./images/data_loaded.png)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.2. Welcome Page"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Upon successful startup, you should be greeted with a screen like this:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![welcome](./images/welcome.png)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.3. Viewing E-Duke-8 information: `about`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a message explaining what E-Duke-8 is about and your benefits of using it."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "about"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![about](./images/about.png)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.4. Viewing available commands: `help`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a list of commands that you can use."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "help"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![help](./images/help.png)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.5. Listing all topics: `topics`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows the entire list of CS2113/T\u0027s topics that you can choose for your quiz to be based upon. "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can see the number of questions available for each topic beside the topic itself."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "topics"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![topics](./images/topics.png)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.6. Accessing the CS2113T textbook content: `textbook`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can find a link to the module\u0027s textbook using this command. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "textbook"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![textbook](./images/textbook.png)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.7. Starting a quiz: `quiz`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anqi20"
        },
        "content": "By following a specific input format for your command (shown below), you can start a quiz with the number of questions, topic and time to complete each question as specified by you."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "While on a question, you can choose to answer it, ask for a hint if you are unsure of the answer or bookmark it for future reference!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": "You will have to complete the question within the specified time as well. If you are unable to complete it in time, it will be regarded as an incorrect answer and the correct answer, along with the explanation, will be shown to you. You will then proceed to the next question where the timer will restart. "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A correct answer without requesting for a hint will earn you **2 points**! Whereas a correct answer with hint requested will earn you **1 point**. No point will be awarded for incorrect answers. You can view the points you have accumulated with the `stats` command, which will be further explained in a later section of this guide."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Regardless of right or wrong answer, an explanation about the question will be displayed after you give an answer. You will then proceed to the next question."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Each of the questions in the quiz will be related to the topic you have chosen."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- You can choose any topic from the topic list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Refer to [topics](#35-listing-all-topics-topics) to see the number of questions you can choose from."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The first question will be immediately displayed to you once the quiz starts."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The quiz will only end when you have attempted all of the questions in the it."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Input format: `quiz t/TOPIC n/NUM_QUESTIONS s/TIMER`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/5 s/10"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- This will start a quiz that contains 5 randomly-chosen questions from the topic on OOP. Each question will have to be completed within 10 seconds. "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz.png)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "From here on you can either:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1) Enter in your answer by typing \u00271\u0027, \u00272\u0027, \u00273\u0027 or \u00274\u0027 and pressing enter."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2) If you do not know the answer, you can request for a hint by typing \u0027hint\u0027 and pressing enter. Refer to [**the Hint section**](#38-showing-a-hint-hint) for more information."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have entered the correct answer, this is what you will see:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_correct.png)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have entered the wrong answer, this is what you will see:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_wrong.png)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If you did not answer the question within the specified time, this is what you will see: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![quiz](./images/quiz_times_up.png)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "After attempting all of the questions, the quiz will automatically end:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_end.png)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "After the quiz ends, you will be prompted to enter in a new command. At this point, you are free to choose any feature of E-Duke-8 you want to access, or you can also start a new quiz!"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.8. Showing a hint: `hint`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "anqi20"
        },
        "content": "``"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a hint to the current question."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "hint"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![hint](./images/hint.png)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### 3.9. Adding a note: `note add`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Adds a note to a specified topic."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- There can be many notes under each topic"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- The UI will guide you through the note-adding process"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "note add"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### 3.10. Deleting a note: `note delete`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Deletes a note from a specific topic."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "note delete"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### 3.11. Listing out notes: `note list`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Lists out all notes belonging to a specific topic."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "note list"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "anqi20"
        },
        "content": "### 3.12. Displaying statistics: `stats`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Displays the points you have earned, and the accumulated statistics of your quiz attempts on E-Duke-8."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Both overall statistics of all your previous quiz attempts and topic-level statistics will be displayed."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "stats"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you are a new user, this is what you should see:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![stats_no_progress](./images/stats_No_Progress.png)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have attempted the quizzes on E-Duke-8, you would be able to see your own stats. "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "This is an example of what you should see:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![stats_with_progress](./images/stats_Some_Progress.png)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### 3.13. Exiting the program: `exit`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Exits E-Duke-8."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- You can only exit the application when you are not in a quiz."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- If you are in the middle of a quiz and really want to exit, you can give random answers for the questions."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "exit"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![exit](./images/exit.png)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### 3.14. Saving user data"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "User data will only be saved upon successful exit of the application through the `exit` command."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "You will see this message while the data saves:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data saving](./images/data_saving.png)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If the data has been saved successfully you should see this message:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data saved](./images/data_saved.png)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "This is store in the `user.json` file in the `data` folder and can be transferred between machines to keep your own history."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q**: How do I change the questions in the quizzes?"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "**A**: Open `topics.json` in any text editor to edit the questions, make sure to follow the format of the questions already provided."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 5. Command summary"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Action | Format, Examples |"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| ------ | ---------------- |"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Viewing E-Duke-8 information       | `about`                                                |"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Viewing available commands    | `help`                                              |"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Listing all topics        | `topics`  |"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Accessing the CS2113T textbook content        | `textbook`                                                 |"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Starting a quiz |  `quiz t/TOPIC n/QUESTIONS s/TIMER` \u003cbr/\u003e e.g. `quiz t/OOP n/5 s/10`                                              |"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Showing a hint        |           `hint`                                      |"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Adding a note | `note add` | "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Deleting a note | `note delete` | "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Listing out notes | `note list` | "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Displaying statistics | `stats` | "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Exit        | `exit`                                                 |"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 6. Glossary"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "##### 1. Command Line Interface (CLI)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "CLI is a text-based interface that allows users to respond to visual prompts by typing single commands into the interface and receiving a reply in the same way. (From [techopedia](https://www.techopedia.com/definition/3337/command-line-interface-cli))"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "##### 2. Object-oriented Programming (OOP)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "OOP is a programming paradigm. A programming paradigm guides programmers to analyze programming problems, and structure programming solutions, in a specific way. (From [CS2113/T textbook](https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/chapters/oop.html))"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 166,
      "kstonekuan": 60,
      "anqi20": 18,
      "joelngyx": 39,
      "-": 33
    }
  },
  {
    "path": "docs/team/kingston.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# Kingston Kuan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Computer Engineering student at the National University of Singapore."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Added my name to about us."
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 9
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/Eduke8.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.MenuParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.LogStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.TopicsStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.UserStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_STORAGE_FAIL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8 {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_PATH \u003d \"data/main/topics.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String USER_PATH \u003d \"data/main/user.json\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private MenuParser menuParser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicsStorage topicsStorage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private LogStorage logStorage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private UserStorage userStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Eduke8(String dataPath, String logPath, String userPath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarkList \u003d new BookmarkList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataLoading();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicsStorage \u003d new TopicsStorage(dataPath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            logStorage \u003d new LogStorage(logPath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            logStorage.save();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicList \u003d new TopicList(topicsStorage.load());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userStorage \u003d new UserStorage(userPath, topicList, bookmarkList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userStorage.load();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (ParseException | IOException | ClassCastException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printError(ERROR_STORAGE_FAIL);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, ERROR_STORAGE_FAIL);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.INFO, e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataLoaded();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        menuParser \u003d new MenuParser(bookmarkList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        runCommandLoopUntilExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printGreetMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void runCommandLoopUntilExit() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String userInput \u003d ui.getInputFromUser();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Command command \u003d menuParser.parseCommand(topicList, userInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.execute(topicList, ui);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataSaving();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userStorage.save();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(ERROR_STORAGE_FAIL);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, ERROR_STORAGE_FAIL);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataSaved();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        new Eduke8(DATA_PATH, LOG_PATH, USER_PATH).run();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "kstonekuan": 64,
      "anqi20": 31,
      "-": 5,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.EditableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class BookmarkList implements DisplayableList, EditableList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e bookmarks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public BookmarkList(ArrayList\u003cDisplayable\u003e bookmarks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void add(Displayable question) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert question !\u003d null;  // Exception in future if user can add question"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarks.add(question);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ((Question) question).markAsBookmarked();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable delete(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert (index \u003e 0 \u0026\u0026 index \u003c bookmarks.size());   // Exception in future if user can delete question"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return bookmarks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Displayable find(String description) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Displayable question : bookmarks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(question.getDescription())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return question;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 11,
      "Zhi-You": 1,
      "josephhhhhhhhh": 39
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AboutCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.stats.Stats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class AboutCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public AboutCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printAbout();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5,
      "josephhhhhhhhh": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AnswerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Option option;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public AnswerCommand(Option option, Question question) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert option !\u003d null \u0026\u0026 question !\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList optionList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String explanation \u003d question.getExplanation().getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (option.isCorrectAnswer()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printAnswerIsCorrect(explanation);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasAnsweredCorrectly();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                int correctOptionNumber \u003d ((OptionList) optionList).findCorrectOptionIndex() + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                ui.printAnswerIsWrong(correctOptionNumber, explanation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 34,
      "Zhi-You": 1,
      "anqi20": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_LIST \u003d \"listing\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_STORE \u003d \"storing\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private boolean alreadyBookmarked \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String typeOfBookmarkCommand \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public BookmarkCommand(Question question, String typeOfBookmarkCommand, BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert bookmarks !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (question.isBookmarked()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            alreadyBookmarked \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            bookmarks.add(question);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfBookmarkCommand \u003d typeOfBookmarkCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public BookmarkCommand(String typeOfBookmarkCommand, BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfBookmarkCommand \u003d typeOfBookmarkCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (typeOfBookmarkCommand.equals(BOOKMARK_LIST)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printListOfBookmarkedQuestions(bookmarks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else if (typeOfBookmarkCommand.equals(BOOKMARK_STORE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (alreadyBookmarked) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                ui.printAlreadyBookmarkedIndicator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                ui.printBookmarkedIndicator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 4,
      "josephhhhhhhhh": 46
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public abstract void execute(DisplayableList displayableList, Ui ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public HintCommand(Hint hint) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printHint(hint);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint.wasShown();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 22,
      "Zhi-You": 1
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/IncompleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class IncompleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int timer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public IncompleteCommand(Question question, int timer) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.timer \u003d timer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void execute(DisplayableList optionList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String explanation \u003d question.getExplanation().getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            int correctOptionNumber \u003d ((OptionList) optionList).findCorrectOptionIndex() + 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printIncompleteAnswer(correctOptionNumber, explanation, timer);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 30
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printError(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 4,
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/NoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class NoteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String typeOfNoteCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public NoteCommand(String typeOfNoteCommand, TopicList topics) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.typeOfNoteCommand \u003d typeOfNoteCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        switch (typeOfNoteCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_ADD):"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.addNoteInteractions(topics);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_DELETE):"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.deleteNoteInteractions(topics);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_LIST):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.listInteraction(topics);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 40
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/QuizCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.quiz.SingleTopicQuiz;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private int numOfQuestions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private String topicName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int timer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public QuizCommand(TopicList topicList, int numOfQuestions, String topicName, Ui ui, BookmarkList bookmarks,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                       int timer) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.numOfQuestions \u003d numOfQuestions;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicName \u003d topicName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.timer \u003d timer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, numOfQuestions, bookmarks, timer);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            singleTopicQuiz.startQuiz(ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 3,
      "anqi20": 5,
      "josephhhhhhhhh": 39
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/StatsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.stats.Stats;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCommand(TopicList topicList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        new Stats(topicList).showStatsToUser(ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 23
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TextbookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TextbookCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TextbookCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printTextbook();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5,
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TopicsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TopicsCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TopicsCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert displayableList !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ((TopicList) displayableList).showTopics(ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "joelngyx": 1,
      "josephhhhhhhhh": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/Displayable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Displayable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void markAsShown();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    boolean wasShown();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 10
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/DisplayableList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface DisplayableList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e getInnerList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    Displayable find(String description) throws Eduke8Exception;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    int getCount();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/EditableList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface EditableList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void add(Displayable displayable);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    Displayable delete(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 6,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/Eduke8Exception.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8Exception extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Eduke8Exception(String exceptionMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 7
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/ExceptionMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class ExceptionMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_STORAGE_FAIL \u003d \"Oh no! An error has occurred when accessing the file.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"Please check again!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_UNRECOGNIZED_COMMAND \u003d \"Oops! The command cannot be understood.\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"Please enter in \\\"help\\\" to get the list of available commands.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_WRONG_FORMAT \u003d \"Invalid command! The command for quiz is as follows:\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e s/\u003ctime given to complete 1 question\u003e\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"(Topics available can be found using the \\\"topics\\\" command)\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_NOT_INDEX \u003d \"Please choose the answer using its index (1,2,3 or 4)!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \"Please choose only options 1, 2, 3 or 4\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_INVALID_QUESTION_NUMBER \u003d \"The number of quiz questions\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \" must be more than 0!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"There is not enough questions in the topic for the quiz!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_TOPIC_DOES_NOT_EXIST \u003d \"No such topic exists, did you spell it correctly?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUESTION_DOES_NOT_EXIST \u003d \"No such question exists, did you spell it correctly?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_OPTION_DOES_NOT_EXIST \u003d \"No such option exists, did you spell it correctly?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_NO_RIGHT_ANSWER \u003d \"Error with question: No right answer specified\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_NOTE_WRONG_FORMAT \u003d \"Invalid command! The command for note is as follows:\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"\u0027note add\u0027 or \u0027note delete\u0027 or \u0027note list\u0027\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 7,
      "kstonekuan": 1,
      "anqi20": 16
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/explanation/Explanation.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.explanation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class Explanation implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Explanation(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 6,
      "anqi20": 23
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/hint/Hint.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Hint implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Hint(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 12,
      "kstonekuan": 17
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/note/Note.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Note implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String noteText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Note(String description, String noteText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert (description !\u003d null);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert (noteText !\u003d null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.noteText \u003d noteText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getNoteText() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.noteText;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "joelngyx": 30
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/note/NoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.EditableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class NoteList implements DisplayableList, EditableList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e notes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static String INVALID_INT \u003d \"Invalid index\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public NoteList(ArrayList\u003cDisplayable\u003e notes) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void add(Displayable note) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        notes.add(note);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable delete(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert (index \u003e 0 \u0026\u0026 index \u003c notes.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Displayable find(String input) throws Eduke8Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable note : notes) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (input.equalsIgnoreCase(note.getDescription())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return note;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Note get(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return (Note) notes.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 27,
      "joelngyx": 26
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/Option.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Option implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private boolean isCorrectAnswer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Option(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isCorrectAnswer \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean isCorrectAnswer() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.isCorrectAnswer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void markAsCorrectAnswer() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isCorrectAnswer \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 24,
      "anqi20": 16
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/OptionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_OPTION_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_NO_RIGHT_ANSWER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class OptionList implements DisplayableList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final ArrayList\u003cDisplayable\u003e options;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList(ArrayList\u003cDisplayable\u003e options) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.options;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String description) throws Eduke8Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable option : options) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(option.getDescription())) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return option;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_OPTION_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int findCorrectOptionIndex() throws Eduke8Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (int i \u003d 0; i \u003c getCount(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (((Option) options.get(i)).isCorrectAnswer()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        LOGGER.log(Level.WARNING, \"Error with question: No right answer specified\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_NO_RIGHT_ANSWER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return options.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "kstonekuan": 35,
      "anqi20": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/MenuParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.AboutCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.StatsCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.TopicsCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.command.TextbookCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.command.NoteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.command.QuizCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_NOTE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_WRONG_FORMAT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_UNRECOGNIZED_COMMAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Parses user input from the main menu, in order to execute the correct option."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class MenuParser implements Parser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TOPIC_INDICATOR \u003d \"t/\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TIMER_INDICATOR \u003d \"s/\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String NUMBER_OF_QUESTIONS_INDICATOR \u003d \"n/\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_QUESTIONS_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_TOPIC_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_TIMER_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_LIST \u003d \"listing\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_ABOUT \u003d \"about\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_TOPICS \u003d \"topics\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_TEXTBOOK \u003d \"textbook\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_QUIZ \u003d \"quiz\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String COMMAND_NOTE \u003d \"note\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_STATS \u003d \"stats\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public MenuParser(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses the user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param topicList the topic list that contains the list of topics available in storage"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param userInput the string input typed by the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a Command object which when executed will carry out the appropriate action"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Command parseCommand(DisplayableList topicList, String userInput) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.INFO, \"Begin parsing command.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] commandArr \u003d userInput.trim().split(\" \", 0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (commandArr[0]) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_ABOUT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: about command chosen.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new AboutCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: help command chosen.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_TOPICS:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: topics command chosen.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TopicsCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_TEXTBOOK:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: textbook command chosen.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TextbookCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_QUIZ:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int numOfQuestions \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String topicName \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            int timer \u003d 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                if (commandArr[1].contains(TIMER_INDICATOR)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    if (commandArr[2].contains(NUMBER_OF_QUESTIONS_INDICATOR))  {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[2].substring("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[3].substring("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[1].substring("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    } else if (commandArr[2].contains(TOPIC_INDICATOR)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[3].substring("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[2].substring("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[1].substring("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                } else if (commandArr[1].contains(NUMBER_OF_QUESTIONS_INDICATOR)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    if (commandArr[2].contains(TIMER_INDICATOR)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[1].substring("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[3].substring("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[2].substring("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    } else if (commandArr[2].contains(TOPIC_INDICATOR)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[1].substring("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[2].substring("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[3].substring("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                } else if (commandArr[1].contains(TOPIC_INDICATOR)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    if (commandArr[2].contains(NUMBER_OF_QUESTIONS_INDICATOR)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[2].substring("
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[1].substring("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[3].substring("
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    } else if (commandArr[2].contains(TIMER_INDICATOR)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[3].substring("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[3].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        topicName \u003d commandArr[1].substring("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[1].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        timer \u003d Integer.parseInt(commandArr[2].substring("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                                commandArr[2].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return new IncorrectCommand(ERROR_QUIZ_WRONG_FORMAT);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: quiz command chosen.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new QuizCommand((TopicList) topicList, numOfQuestions, topicName, ui, bookmarks, timer);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: bookmark command chosen.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new BookmarkCommand(BOOKMARK_LIST, bookmarks);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case COMMAND_NOTE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                if (commandArr[1].equalsIgnoreCase(\"add\") || commandArr[1]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        .equalsIgnoreCase(\"delete\") || commandArr[1].equals(\"list\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Parsing complete: note command chosen\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    return new NoteCommand(commandArr[1], (TopicList) topicList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    throw new Eduke8Exception(ERROR_NOTE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (IndexOutOfBoundsException | Eduke8Exception e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                return new IncorrectCommand(ERROR_NOTE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: exit command chosen.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_STATS:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: stats command chosen.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new StatsCommand((TopicList) topicList);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.WARNING, \"Parsing Error: Unrecognised command was entered.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return new IncorrectCommand(ERROR_UNRECOGNIZED_COMMAND);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 8,
      "Zhi-You": 21,
      "anqi20": 84,
      "joelngyx": 11,
      "josephhhhhhhhh": 54
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    Command parseCommand(DisplayableList displayableList, String userInput) throws Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/QuizParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_NOT_INDEX;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Parses user input during a quiz activity."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class QuizParser implements Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_STORE \u003d \"storing\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int timer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public QuizParser(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void setQuestion(Question question, int timer) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert question !\u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.timer \u003d timer;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses the user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param optionList the option list that contains the list of options available for the current question"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param userInput  the string input typed by the user"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a Command object which when executed will carry out the appropriate action"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command parseCommand(DisplayableList optionList, String userInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (COMMAND_HINT.equals(userInput)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: hint command chosen.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new HintCommand(question.getHint());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else if (COMMAND_BOOKMARK.equals(userInput)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: bookmark command chosen.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new BookmarkCommand(question, BOOKMARK_STORE, bookmarks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            if (userInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                LOGGER.log(Level.INFO, \"Timer\u0027s up.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return new IncompleteCommand(question, timer);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            int chosenIndex \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Option chosenOption \u003d (Option) options.get(chosenIndex);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new AnswerCommand(chosenOption, question);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"A non-number was given when answering question.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_NOT_INDEX);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"An index out of bounds was given when answering question.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 39,
      "Zhi-You": 3,
      "anqi20": 16,
      "josephhhhhhhhh": 23
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/Question.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a question of a certain topic. A \u003ccode\u003eQuestion\u003c/code\u003e object is represented by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * its description, options, hint and explanation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Question implements Displayable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private OptionList optionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Explanation explanation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private boolean wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private boolean isBookmarked;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Question(String description, OptionList optionList, Hint hint, Explanation explanation) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert optionList !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.optionList \u003d optionList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.explanation \u003d explanation;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isBookmarked \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the description of the question."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Question information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as shown, in other words, attempted by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns a boolean variable indicating if the question was already attempted before."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Indication of whether the question was attempted before or not."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the multiple options of the question."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return An arraylist of options pertaining to this question."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList getOptionList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the hint tied to the question."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Details of the hint."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Hint getHint() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the explanation tied to the question."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Details of the explanation."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Explanation getExplanation() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return explanation;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the user had requested for a hint for this question."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of whether the hint for this question was shown before."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasHintShown() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint.wasShown();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the question was answered correctly."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return True if question was answered correctly, false otherwise."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean wasAnsweredCorrectly() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as answered correctly."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markAsAnsweredCorrectly() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public boolean isBookmarked() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return isBookmarked;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public boolean markAsBookmarked() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return isBookmarked \u003d true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 66,
      "kstonekuan": 32,
      "anqi20": 14,
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuestionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUESTION_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuestionList implements DisplayableList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e questions;  // List of questions for a particular topic"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuestionList(ArrayList\u003cDisplayable\u003e questions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questions !\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questions.size() \u003e 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.questions \u003d questions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the number of questions in the QuestionList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions in the QuestionList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns all of the questions in the QuestionList object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return ArrayList of questions in the QuestionList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Finds the question with the specified description in the QuestionList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param description Description of the question to be found."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String description) throws Eduke8Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable question : questions) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(question.getDescription())) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                return question;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_QUESTION_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 51,
      "kstonekuan": 2,
      "anqi20": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuizQuestionsManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INVALID_QUESTION_NUMBER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuizQuestionsManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final Random RANDOM \u003d new Random();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cQuestion\u003e quizQuestions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private int currentQuestionNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Constructs a QuizQuestionsManager object with the user\u0027s desired number of questions in the quiz"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * and his / her choice of topic."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If the inputs are valid, the questions for the quiz will be selected at random from all of the questions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in the specified topic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param numberOfQuestionsForQuiz User\u0027s desired number of questions for the quiz attempt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param questionsInTopic An ArrayList of all of the questions from the topic the user has chosen for the quiz"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws Eduke8Exception If the number of questions specified for the quiz is more than the number of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *     questions in the topic, or zero or less."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuizQuestionsManager(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questionsInTopic !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questionsInTopic.size() \u003e 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        currentQuestionNumber \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizQuestions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        setQuizQuestions(numberOfQuestionsForQuiz, questionsInTopic);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void setQuizQuestions(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                  ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003c\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INVALID_QUESTION_NUMBER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003e questionsInTopic.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        setRandomQuestions(numberOfQuestionsForQuiz, questionsInTopic);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        LOGGER.log(Level.INFO, numberOfQuestionsForQuiz + \" questions out of \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + questionsInTopic.size() + \" topic questions have been selected for the quiz\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the next question in the quiz and indicates that another question has been shown to the user by"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * incrementing the current question number of the quiz."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Next question in the quiz."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Question getNextQuestion() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Automatically increases question count when a question is shown to the user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.get(currentQuestionNumber++);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the current question number as an indication of how many questions have been done by the user in"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the current quiz instance."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Current question number."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCurrentQuestionNumber() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns an indication of whether the user has attempted all the questions in the quiz."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * The boolean variable returned is used to determine if the quiz should end."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Boolean variable indicating if user has attempted all the questions in the quiz."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean areAllQuestionsAnswered() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber \u003d\u003d quizQuestions.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getQuizQuestionsCount() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void setRandomQuestions(int numberOfQuestionsForQuiz, ArrayList\u003cDisplayable\u003e questionsInTopic) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Stores the questions\u0027 indexes selected from the topic question list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cInteger\u003e integersChosen \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (quizQuestions.size() \u003c numberOfQuestionsForQuiz) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Gets a random question that is within the bounds of the size of the available question list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            int randomQuestionIndex \u003d RANDOM.nextInt(questionsInTopic.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // To ensure we do not pick the same question again"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (integersChosen.contains(randomQuestionIndex)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                LOGGER.log(Level.INFO, \"QuizQuestionsManager has chosen a repeated question\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // choose a random question from the question list and add it to the questionsInTopic for quiz"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            quizQuestions.add((Question) questionsInTopic.get(randomQuestionIndex));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            integersChosen.add(randomQuestionIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 103,
      "kstonekuan": 9,
      "anqi20": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Quiz {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void startQuiz(Ui ui) throws Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/SingleTopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.QuizParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuizQuestionsManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuiz implements Quiz {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private int numberOfQuestions;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuizParser quizParser;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int timer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public SingleTopicQuiz(Topic topic, int numberOfQuestions, BookmarkList bookmarks, int timer) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.numberOfQuestions \u003d numberOfQuestions;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.timer \u003d timer;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizParser \u003d new QuizParser(bookmarks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Starts a quiz with a single topic."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @param ui  Ui to print quiz messages."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws Eduke8Exception if numberOfQuestions used to construct QuizQuestionsManager \u003c\u003d 0"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *     or \u003e number of question in the topic."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void startQuiz(Ui ui) throws Eduke8Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"New quiz started.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(numberOfQuestions, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert !quizQuestionsManager.areAllQuestionsAnswered();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printStartQuizPage(numberOfQuestions, topic.getDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        goThroughQuizQuestions(ui, quizQuestionsManager);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printEndQuizPage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Quiz ended.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void goThroughQuizQuestions(Ui ui, QuizQuestionsManager quizQuestionsManager) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (!quizQuestionsManager.areAllQuestionsAnswered()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Question question \u003d quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printQuestion(question, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsShown();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasShown();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            OptionList optionList \u003d question.getOptionList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            for (int i \u003d 0; i \u003c options.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printOption((Option) options.get(i), i + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            quizParser.setQuestion(question, timer);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printQuizInputMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            Command command \u003d getCommand(ui, optionList, timer);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            assert (command instanceof AnswerCommand || command instanceof HintCommand"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    || command instanceof BookmarkCommand || command instanceof IncompleteCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            while (!(command instanceof AnswerCommand || command instanceof IncompleteCommand)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                command.execute(optionList, ui);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                ui.printQuizInputMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                command \u003d getCommand(ui, optionList, timer);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                if (command instanceof IncorrectCommand) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Invalid answer given for question\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                } else if (command instanceof HintCommand) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Hint shown\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                } else if (command instanceof BookmarkCommand) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Question bookmarked\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            LOGGER.log(Level.INFO, \"Question answered or time\u0027s up\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            command.execute(optionList, ui);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Command getCommand(Ui ui, OptionList optionList, int timer) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String userInput \u003d ui.getQuizInputFromUser(timer);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return quizParser.parseCommand(optionList, userInput);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 77,
      "Zhi-You": 16,
      "anqi20": 23,
      "josephhhhhhhhh": 8
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/Stats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Stats {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private UserStatsCalculator userStatsCalculator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Stats(TopicList topicList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        topics \u003d topicList.getInnerList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        userStatsCalculator \u003d new UserStatsCalculator(topics);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Displays user\u0027s statistics for past quiz attempts. Overall statistics for all the past quiz"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * attempts will be printed out first, followed by topic-level statistics."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void showStatsToUser(Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printPointSystemRules();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showPointsEarned(ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showTotalProgression(ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showTopicalProgression(ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showPointsEarned(Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printPointsEarned(userStatsCalculator.calculateTotalPointsEarned(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "               userStatsCalculator.calculateTotalPointsAvailable());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showTotalProgression(Ui ui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTotalProgression(userStatsCalculator.calculateOverallProgressionPercentage(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                userStatsCalculator.isProgressionOverHalf());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showTopicalProgression(Ui ui) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTopicProgressionHeader();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Loop through the different topics to get the stats from each of them individually"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            TopicalStatsCalculator specificTopicStatsCalculator \u003d new TopicalStatsCalculator((Topic) topic);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicDescriptionForStats(topic);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicCompletionLevel("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalQuestionsAttemptCount(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.getTopicQuestionsCount());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicAccuracyLevel(specificTopicStatsCalculator.calculateTopicalQuestionsCorrectCount(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalQuestionsAttemptCount());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicalHintUsage(specificTopicStatsCalculator.calculateTopicalHintUsage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicalPoints(specificTopicStatsCalculator.calculateTopicalPointsEarned(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalPointsAvailable(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalProgressionPercentage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 69
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/StatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class StatsCalculator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_PER_QUESTION \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCalculator(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // For TopicalStatsCalculator"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCalculator() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculatePointsEarnedForQuestion(Question question) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert question !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (!question.wasAnsweredCorrectly()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else if (question.wasAnsweredCorrectly() \u0026\u0026 question.wasHintShown()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculateProgressionPercentage(int userProgress, int totalAvailableProgress) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert userProgress \u003e 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert totalAvailableProgress \u003e 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert userProgress \u003c totalAvailableProgress;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        double progressionLevel \u003d (double) userProgress / totalAvailableProgress;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int progressionLevelPercentage \u003d (int) (progressionLevel * 100);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return progressionLevelPercentage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculateTotalQuestionCount() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalQuestionCount \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            totalQuestionCount +\u003d topicQuestionList.getCount();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalQuestionCount;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 62
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/TopicalStatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TopicalStatsCalculator extends StatsCalculator {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private QuestionList topicQuestionList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TopicalStatsCalculator(Topic topic) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topicQuestionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the number of questions attempted by the user from previous quizzes for the particular topic."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions attempted by the user for a particular topic."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalQuestionsAttemptCount() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return getTopicalAttemptedQuestions().size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the questions in the topic and returns an ArrayList of questions"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * that have been shown to the user before in previous quizzes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions attempted by the user for a particular topic."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getTopicalAttemptedQuestions() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return (ArrayList\u003cDisplayable\u003e) topicQuestionList.getInnerList().stream()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .filter(Displayable::wasShown)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getTopicQuestionsCount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return topicQuestionList.getCount();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions for a particular topic and calculate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the number of questions that are marked as correct."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions correctly answered by the user for a particular topic."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalQuestionsCorrectCount() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int questionCorrectCount \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (((Question) question).wasAnsweredCorrectly()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                questionCorrectCount++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questionCorrectCount;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions for a particular topic and calculate the total number"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * of hints used for them from previous quiz attempts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of hints used by the user in the quizzes the user has done before."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalHintUsage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int hintUsageCount \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (((Question) question).wasHintShown()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                hintUsageCount++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return hintUsageCount;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions in a topic and calculate the points earned by the user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Points earned, for a particular topic, by the user from correct answers in past quiz attempts."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalPointsEarned() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsEarned \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            pointsEarned +\u003d calculatePointsEarnedForQuestion((Question) question);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return pointsEarned;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the total possible amount of points that the user can earn from all of the questions available"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in a topic, based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Total available points the user can earn from all of the questions in a certain topic."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalPointsAvailable() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsAvailable \u003d getTopicQuestionsCount() * POINTS_PER_QUESTION;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return pointsAvailable;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the percentage of progress of a particular topic based on the points earned by the user and"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the total possible amount of points he / she could have earned."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return A percentage indicating user\u0027s progress of a certain topic."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalProgressionPercentage() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateProgressionPercentage(calculateTopicalPointsEarned(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                calculateTopicalPointsAvailable());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 103,
      "kstonekuan": 17
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/UserStatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class UserStatsCalculator extends StatsCalculator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public UserStatsCalculator(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(topics);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions in all topics and calculate the points earned by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Points earned, from all topics, by the user from correct answers in past quiz attempts."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTotalPointsEarned() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsGained \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ArrayList\u003cDisplayable\u003e questions \u003d topicQuestionList.getInnerList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            for (int i \u003d 0; i \u003c questions.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Question question \u003d (Question) questions.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                totalPointsGained +\u003d calculatePointsEarnedForQuestion(question);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalPointsGained;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the total possible amount of points that the user can earn from all of the questions available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in all of the topics available in E-Duke-8, based on the scoring system."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Total available points the user can earn from all of the questions from all topics."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTotalPointsAvailable() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d calculateTotalQuestionCount() * POINTS_PER_QUESTION;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalPointsAvailable;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the percentage of progress in E-Duke-8 based on the points earned by the user and"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the total possible amount of points he / she could have earned from all the questions in E-Duke-8."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return A percentage indicating user\u0027s progress in E-Duke-8."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateOverallProgressionPercentage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateProgressionPercentage(calculateTotalPointsEarned(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                calculateTotalPointsAvailable());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean isProgressionOverHalf() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateOverallProgressionPercentage() \u003e\u003d 50;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 67
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LocalStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class LocalStorage implements Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_TOPIC \u003d \"topic\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_QUESTIONS \u003d \"questions\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_OPTIONS \u003d \"options\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_EXPLANATION \u003d \"explanation\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_CORRECT \u003d \"correct\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_NOTES \u003d \"notes\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_BOOKMARKED \u003d \"bookmarked\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PATH_SEPARATOR \u003d \"/\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected String filePath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected LocalStorage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert filePath !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Use relative path for Unix systems"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.filePath \u003d appendRelativePath(this.filePath, filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return createFileIfNotExists();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws IOException, ParseException, Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected JSONArray getJsonArrayFromFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //JSON parser object to parse read file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileReader reader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Read JSON file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return (JSONArray) jsonParser.parse(reader);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String appendRelativePath(String originalPath, String relativePath) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d originalPath;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d relativePath.split(PATH_SEPARATOR);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private File createFileIfNotExists() throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 79
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LogStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorage extends LocalStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public LogStorage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Sets up saving logs to file instead of default print to console."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns file where the logs are saved."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Log file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException If the file is not found or cannot be written."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Only log severe to console"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ConsoleHandler ch \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ch.setLevel(Level.SEVERE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(ch);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Log all to the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d super.save();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileHandler fh \u003d new FileHandler(file.getAbsolutePath());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(fh);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Logging to file started\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 45
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    File save() throws IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException, Eduke8Exception;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/TopicsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicsStorage extends LocalStorage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicsStorage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns topics loaded from a local file in JSON format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Topics loaded into an ArrayList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException  If the file is not found or cannot be read."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ParseException  If the file contents cannot be parsed as a JSON."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ClassCastException If the the nesting of arrays and objects in the JSON is wrong"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws NullPointerException If the keys required are not present in the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topicsAsJsonArray \u003d getJsonArrayFromFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Iterate over topics array"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topicsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) topicsAsJsonArray.stream()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(topic -\u003e parseToTopicObject((JSONObject) topic))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topicsAsObjects.get(0) instanceof Topic;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Topics loaded from file\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicsAsObjects;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic parseToTopicObject(JSONObject topic) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String topicTitle \u003d (String) topic.get(KEY_TOPIC);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questionsAsJsonArray \u003d (JSONArray) topic.get(KEY_QUESTIONS);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questionsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) questionsAsJsonArray.stream()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(question -\u003e parseToQuestionObject((JSONObject) question))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert questionsAsObjects.get(0) instanceof Question;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questionsAsObjects);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(topicTitle, questionList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question parseToQuestionObject(JSONObject question) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String questionDescription \u003d (String) question.get(KEY_DESCRIPTION);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray optionsAsJsonArray \u003d (JSONArray) question.get(KEY_OPTIONS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e optionsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) optionsAsJsonArray.stream()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(option -\u003e parseToOptionObject((JSONObject) option))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionsAsObjects.get(0) instanceof Option;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d new OptionList(optionsAsObjects);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String hintDescription \u003d (String) question.get(KEY_HINT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(hintDescription);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String explanationDescription \u003d (String) question.get(KEY_EXPLANATION);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Explanation explanation \u003d new Explanation(explanationDescription);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return new Question(questionDescription, optionList, hint, explanation);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Option parseToOptionObject(JSONObject option) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String optionDescription \u003d (String) option.get(KEY_DESCRIPTION);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isCorrectAnswer \u003d (boolean) option.get(KEY_CORRECT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option optionAsObject \u003d new Option(optionDescription);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (isCorrectAnswer) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            optionAsObject.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionAsObject.isCorrectAnswer() \u003d\u003d isCorrectAnswer;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionAsObject;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 101,
      "anqi20": 5
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/UserStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.stats.TopicalStatsCalculator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class UserStorage extends LocalStorage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String KEY_TEXT \u003d \"text\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public UserStorage(String filePath, TopicList topicList, BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Saves user attributes to a local file in JSON format from the topicList and bookmarkList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the file where data was written to."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return File where data was written to."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException If the file is not found or cannot be written to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d super.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Get all the questions seen before"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topics \u003d new JSONArray();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable topicObject : topicList.getInnerList()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topics.add(parseToTopicJson(topicObject));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Write JSON file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file.getAbsolutePath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        writer.write(topics.toJSONString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"User data saved to file\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Loads user attributes from a local file in JSON format into the topicList and bookmarkList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the topics in the topicList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Topics from the topicList in an ArrayList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException          If the file is not found or cannot be read."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ParseException       If the file contents cannot be parsed as a JSON."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ClassCastException   If the the nesting of arrays and objects in the JSON is wrong"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws NullPointerException If the keys required are not present in the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws IOException, ParseException, Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return super.load();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topicsAsJsonArray \u003d getJsonArrayFromFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object topic : topicsAsJsonArray) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            parseFromTopicJson((JSONObject) topic);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"User data loaded from file\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicList.getInnerList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private void parseFromTopicJson(JSONObject topic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String topicDescription \u003d (String) topic.get(KEY_TOPIC);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topicObject \u003d (Topic) topicList.find(topicDescription);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions \u003d (JSONArray) topic.get(KEY_QUESTIONS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        loadQuestionAttributes(questions, topicObject);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes \u003d (JSONArray) topic.get(KEY_NOTES);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        loadNotes(notes, topicObject);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private void loadNotes(JSONArray notes, Topic topicObject) throws Eduke8Exception {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        NoteList noteList \u003d topicObject.getNoteList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object note : notes) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            parseFromNoteJson((JSONObject) note, noteList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private void parseFromNoteJson(JSONObject note, NoteList noteList) throws Eduke8Exception {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String noteDescription \u003d (String) note.get(KEY_DESCRIPTION);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String text \u003d (String) note.get(KEY_TEXT);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note noteObject \u003d new Note(noteDescription, text);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.add(noteObject);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private void loadQuestionAttributes(JSONArray questions, Topic topicObject) throws Eduke8Exception {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d topicObject.getQuestionList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object question : questions) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            parseFromQuestionJson(questionList, (JSONObject) question);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private void parseFromQuestionJson(QuestionList questionList, JSONObject question) throws Eduke8Exception {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String questionDescription \u003d (String) question.get(KEY_DESCRIPTION);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionObject \u003d (Question) questionList.find(questionDescription);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionObject.markAsShown();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if ((boolean) question.get(KEY_CORRECT)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionObject.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if ((boolean) question.get(KEY_BOOKMARKED)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            bookmarkList.add(questionObject);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if ((boolean) question.get(KEY_HINT)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionObject.getHint().markAsShown();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONObject parseToTopicJson(Displayable topicObject) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONObject topic \u003d new JSONObject();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_TOPIC, topicObject.getDescription());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions \u003d getQuestionsJsonArray((Topic) topicObject);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_QUESTIONS, questions);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes \u003d getNotesJsonArray(((Topic) topicObject).getNoteList());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_NOTES, notes);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONArray getNotesJsonArray(NoteList noteList) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes \u003d new JSONArray();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable noteObject : noteList.getInnerList()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            JSONObject note \u003d parseToNoteJson((Note) noteObject);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            notes.add(note);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private JSONObject parseToNoteJson(Note noteObject) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        JSONObject note \u003d new JSONObject();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        note.put(KEY_DESCRIPTION, noteObject.getDescription());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        note.put(KEY_TEXT, noteObject.getNoteText());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return note;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONArray getQuestionsJsonArray(Topic topicObject) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions \u003d new JSONArray();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topicObject);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d topicalStatsCalculator.getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable questionObject : attemptedQuestions) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            JSONObject question \u003d parseToQuestionJson((Question) questionObject);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questions.add(question);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questions;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONObject parseToQuestionJson(Question questionObject) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONObject question \u003d new JSONObject();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_DESCRIPTION, questionObject.getDescription());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_CORRECT, questionObject.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_BOOKMARKED, bookmarkList.find(questionObject.getDescription()) !\u003d null);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_HINT, questionObject.wasHintShown());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 185,
      "joelngyx": 16,
      "josephhhhhhhhh": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Topic implements Displayable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList questionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private NoteList noteList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Topic(String description, QuestionList questionList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert questionList !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.questionList \u003d questionList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.noteList \u003d new NoteList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Topic(String description, QuestionList questionList, NoteList noteList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert questionList !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.questionList \u003d questionList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.noteList \u003d noteList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return wasShown;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public QuestionList getQuestionList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public NoteList getNoteList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return noteList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 31,
      "joelngyx": 28
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPIC_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicList implements DisplayableList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert topics.size() \u003e 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showTopics(Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui.printTopicList(topics);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public boolean doesTopicExist(String topicName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean result \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topics.get(i).getDescription().equalsIgnoreCase(topicName)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String topicName) throws Eduke8Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (topicName.equalsIgnoreCase(topic.getDescription())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return topic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_TOPIC_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19,
      "Zhi-You": 1,
      "anqi20": 3,
      "joelngyx": 27,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.AWTException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.Robot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.event.KeyEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.ExecutionException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.ExecutorService;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.Future;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.TimeoutException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LAST_OPTION \u003d 4;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int CONVERSION_FROM_MILLIS_TO_SECONDS \u003d 1000;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TEXTBOOK_WEBSITE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/index.html\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOGO \u003d \" _____        _____\" + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"|  ___| ____ |  _  |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"| |___ |  _ \\\\| |_| |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"|  ___|| | | |  _  |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"| |___ | |_| | |_| |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"|_____||____/|_____|\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"-------------------------------------------------------------------\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"-----------------------------------------------------\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS \u003d \"---------------\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"---------------------------  \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ABOUT \u003d \"E-Duke-8 is a desktop app that helps CS2113/T students learn and\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"understand software engineering and OOP principles through a\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"gamified platform and enhances their \" + \"learning experience.\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"You can attempt bite-sized quizzes based on your choice of topic\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"and access key concepts for easy revision!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"Hello! I\u0027m E-Duke-8!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"What would you like to learn today?\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye bye. Hope you had a fruitful revision and see you soon!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HELP \u003d \"These are the commands that you can use:\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"1) about\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"2) help\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"3) topics\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"4) textbook\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"5) quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e s/\u003ctime given to complete 1 question\u003e\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"6) bookmark\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"7) stats\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"8) note add / note delete / note list\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"9) exit (saves your data too!)\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_START \u003d \"Start of quiz:\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_END \u003d \"This is the end of the quiz!\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"Hope you have learnt something new!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG \u003d \"Oops! The correct answer is \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG_SECOND \u003d \"! Do visit the textbook to read up more.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_ANSWER_CORRECT \u003d \"Great Job! That is the correct answer! Keep it up!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_TEXTBOOK \u003d \"The textbook for this module is available at:\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + TEXTBOOK_WEBSITE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_HINT \u003d \"Hint: \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String POINT_SYSTEM_RULE \u003d \"Point system in E-Duke-8: For correct answers, \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"you earn 2 points if you did not request for hint, \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"and 1 point if you did. No point is awarded for wrong answers.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_GET_INPUT_FROM_USER \u003d \"Enter your command or \u0027help\u0027: \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_GET_INPUT_FROM_USER_QUIZ \u003d \"Enter your answer, \u0027hint\u0027 or \u0027bookmark\u0027:\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_TOPIC_LIST \u003d \"These are the available topics and the number of \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"available questions in each:\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_EXPLANATION \u003d \"Explanation:\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_NOTE_LIST_NONE \u003d \"There are no notes for this topic!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_NOTE_LIST \u003d \"These are the notes for this topic: \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_QUIZ_TOPIC_CHOSEN \u003d \"The chosen topic is: \";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_QUESTION_CHOSEN \u003d \"You have chosen to complete \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_QUESTION_CHOSEN_SECOND \u003d \" question\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_INDICATOR \u003d \"Bookmarked this question!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_LIST \u003d \"This is your list of bookmarks: \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String MESSAGE_BOOKMARKED_ALREADY_INDICATOR \u003d \"This has already been bookmarked.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String CLOSE_BRACKET \u003d \") \";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String OPEN_SQUARE_BRACKET \u003d \"[\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String CLOSE_SQUARE_BRACKET \u003d \"] \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT \u003d \".\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT_SPACE \u003d \". \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT_PLURAL \u003d \"s.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_TOPIC \u003d \"Enter the topic you would like to add a note to\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_NOTE_TITLE \u003d \"Enter a suitable title for your note\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_NOTE_BODY \u003d \"Enter the contents of your note\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_SUCCESSFULLY \u003d \"Your note has been added!\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_UNSUCCESSFULLY \u003d \"Your note was not added successfully.\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" Please try again!\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_PROMPT_FOR_TOPIC \u003d \"Which topic does the note you would like to delete\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" belong to?\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_PROMPT_FOR_INDEX \u003d \"What is the index of the note that you would like\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" to delete?\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_SUCCESSFULLY \u003d \"The note has been deleted!\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_UNSUCCESSFULLY \u003d \"The note was not deleted successfully. Try again!\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INVALID_TOPIC_NAME \u003d \"Please enter a valid topic name\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String LIST_NOTE_PROMPT \u003d \"Which topic\u0027s notes would you like to view?\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INPUT_ERROR \u003d \"Please provide a valid input!\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS \u003d \"You have earned \";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS_SECOND \u003d \" points out of a total of \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS_THIRD \u003d \" points available!\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_USER_PROGRESS \u003d \"Therefore, your E-Duke-8 progress is \";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_PRAISE \u003d \"Good job! Keep it up!\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_MOTIVATE \u003d \"Let\u0027s do some quizzes!\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String TOPICS_PROGRESSION_SECTION_HEADER \u003d \"Topics\u0027 Progression\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String OUT_OF_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_QUESTIONS_DONE \u003d \" questions done\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_CORRECT_QUESTIONS_ANSWERED \u003d \" questions correctly answered\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HINT_USED_SINGULAR \u003d \" hint used\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HINT_USED_PLURAL \u003d \" hints used\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_POINTS_EARNED_OUT_OF \u003d \" points earned / \";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PERCENTAGE_SIGN \u003d \"%\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_AVAILABLE_WORD \u003d \" available \";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_INCOMPLETE \u003d \"The correct answer is \";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_INCOMPLETE_ANSWER_TIMER \u003d \"Oops! You took more than \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_INCOMPLETE_ANSWER_TIMER_SECOND \u003d \" seconds to answer! \";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_LOADING \u003d \"Please wait while data is loading...\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_LOADED \u003d \"Data loaded successfully!\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_SAVING \u003d \"Please wait while data is saving...\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_SAVED \u003d \"Data saved successfully!\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final ExecutorService EXECUTOR_SERVICE \u003d Executors.newFixedThreadPool(1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_READING_INPUT \u003d \"Error reading input.\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_USING_ROBOT \u003d \"Error using robot to enter key\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getInputFromUser() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_GET_INPUT_FROM_USER);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Future\u003cString\u003e userInputFuture \u003d EXECUTOR_SERVICE.submit(SCANNER::nextLine);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return userInputFuture.get();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (InterruptedException | ExecutionException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            printError(ERROR_READING_INPUT);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printQuizInputMessage() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_GET_INPUT_FROM_USER_QUIZ);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getQuizInputFromUser(int timer) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // May have to use this portion for Linux because Robot doesn\u0027t work on WSL"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        BufferedReader userInput \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        long startingTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        while (((System.currentTimeMillis() - startingTime) \u003c timer * CONVERSION_FROM_MILLIS_TO_SECONDS)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //                \u0026\u0026 System.in.available() \u003d\u003d  0) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        if (userInput.ready()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //            return userInput.readLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //            return null;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Future\u003cString\u003e userInputFuture \u003d EXECUTOR_SERVICE.submit(SCANNER::nextLine);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userInput \u003d userInputFuture.get(timer, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (InterruptedException | ExecutionException | IllegalArgumentException | TimeoutException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Robot robot \u003d new Robot();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                robot.keyPress(KeyEvent.VK_ENTER);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                robot.keyRelease(KeyEvent.VK_ENTER);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (AWTException awtException) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                printError(ERROR_USING_ROBOT);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static void printMessage(String message) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printGreetMessage() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_GREETINGS);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printOption(Option option, int optionNumber) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(optionNumber + CLOSE_BRACKET + option.getDescription());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (optionNumber \u003d\u003d LAST_OPTION) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printQuestion(Question question, int questionNumber) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(questionNumber + DOT_SPACE + question.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printHint(Hint hint) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_HINT + hint.getDescription());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printStartQuizPage(int numberOfQuestionsChosen, String topicsChosen) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_START);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Shows the number of questions chosen by user"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printStartQuizQuestions(numberOfQuestionsChosen);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Shows the topics chosen by user"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_TOPIC_CHOSEN + topicsChosen);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printEndQuizPage() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_QUIZ_END);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsWrong(int correctAnswer, String explanation) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_ANSWER_WRONG + correctAnswer + MESSAGE_ANSWER_WRONG_SECOND + System.lineSeparator()"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                + System.lineSeparator() + MESSAGE_EXPLANATION + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsCorrect(String explanation) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_ANSWER_CORRECT + System.lineSeparator() + System.lineSeparator() + MESSAGE_EXPLANATION"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printIncompleteAnswer(int correctAnswer, String explanation, int timer) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_INCOMPLETE_ANSWER_TIMER + timer + MESSAGE_INCOMPLETE_ANSWER_TIMER_SECOND"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                + MESSAGE_ANSWER_INCOMPLETE + correctAnswer + MESSAGE_ANSWER_WRONG_SECOND + System.lineSeparator()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                + MESSAGE_EXPLANATION + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_HELP);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAbout() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_ABOUT);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printTextbook() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_TEXTBOOK);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessage(errorMessage);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printTopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String topicListString \u003d MESSAGE_PRINT_TOPIC_LIST + System.lineSeparator();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.size(); i++) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Topic topic \u003d (Topic) topics.get(i);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicListString +\u003d OPEN_SQUARE_BRACKET + topic.getQuestionList().getCount() + CLOSE_SQUARE_BRACKET"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + topic.getDescription();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (i \u003c topics.size() - 1) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                topicListString +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(topicListString);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void addNoteInteractions(TopicList topicList) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(ADD_NOTE_PROMPT_FOR_TOPIC);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String topicName \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topicList.doesTopicExist(topicName)) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(ADD_NOTE_PROMPT_FOR_NOTE_TITLE);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                String noteName \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(ADD_NOTE_PROMPT_FOR_NOTE_BODY);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                String noteBody \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Note note \u003d new Note(noteName, noteBody);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                topic.getNoteList().add(note);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(ADD_NOTE_SUCCESSFULLY);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                System.out.println(INPUT_ERROR + System.lineSeparator() + ADD_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void deleteNoteInteractions(TopicList topicList) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(DELETE_NOTE_PROMPT_FOR_TOPIC);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String topicName \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topicList.doesTopicExist(topicName)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                NoteList noteList \u003d topic.getNoteList();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                ui.printNoteList(noteList);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(DELETE_NOTE_PROMPT_FOR_INDEX);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                String input \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                if (input.matches(\"[0-9]+\") \u0026\u0026 Integer.parseInt(input) \u003e 0"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        \u0026\u0026 Integer.parseInt(input) \u003c\u003d noteList.getCount()) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    topic.getNoteList().delete(index - 1);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    System.out.println(DELETE_NOTE_SUCCESSFULLY);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    System.out.println(INVALID_TOPIC_NAME + System.lineSeparator() + DELETE_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                System.out.println(INPUT_ERROR + System.lineSeparator() + DELETE_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void listInteraction(TopicList topicList) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(LIST_NOTE_PROMPT);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String topicName \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topicList.doesTopicExist(topicName)) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                NoteList noteListTopic \u003d topic.getNoteList();"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                ui.printNoteList(noteListTopic);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(INPUT_ERROR);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printNoteList(NoteList notes) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if (notes.getCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(MESSAGE_PRINT_NOTE_LIST_NONE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(MESSAGE_PRINT_NOTE_LIST);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            for (int i \u003d 0; i \u003c notes.getCount(); i++) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Note note \u003d (Note) notes.get(i);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println((i + 1) + DOT + note.getDescription());"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(note.getNoteText());"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void printStartQuizQuestions(int numberOfQuestionsChosen) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_QUIZ_QUESTION_CHOSEN + numberOfQuestionsChosen + MESSAGE_QUIZ_QUESTION_CHOSEN_SECOND);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (numberOfQuestionsChosen \u003c 2) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(DOT);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(DOT_PLURAL);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printPointSystemRules() {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(POINT_SYSTEM_RULE + System.lineSeparator());"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printPointsEarned(int pointsEarned, int pointsAvailable) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(MESSAGE_SHOW_POINTS + pointsEarned + MESSAGE_SHOW_POINTS_SECOND"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + pointsAvailable + MESSAGE_SHOW_POINTS_THIRD);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTotalProgression(int progressionLevelPercentage, boolean progressOverHalf) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.print(MESSAGE_USER_PROGRESS + progressionLevelPercentage + PERCENTAGE_SIGN + DOT_SPACE);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (progressOverHalf) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(MESSAGE_PRAISE + System.lineSeparator());"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(MESSAGE_MOTIVATE + System.lineSeparator());"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicProgressionHeader() {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(TOPICS_PROGRESSION_SECTION_HEADER);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicDescriptionForStats(Displayable topic) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(topic.getDescription());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicCompletionLevel(int questionsAttempted, int questionsTotal) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + questionsAttempted"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + OUT_OF_SYMBOL + questionsTotal + MESSAGE_QUESTIONS_DONE);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicAccuracyLevel(int questionsAnsweredCorrectly, int questionsAttempted) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + questionsAnsweredCorrectly + OUT_OF_SYMBOL"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + questionsAttempted + MESSAGE_CORRECT_QUESTIONS_ANSWERED);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicalHintUsage(int hintUsage) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + hintUsage"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + (hintUsage \u003c\u003d 1 ? MESSAGE_HINT_USED_SINGULAR : MESSAGE_HINT_USED_PLURAL));"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicalPoints(int pointsEarned, int pointsAvailable, int progressionPercentage) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + pointsEarned + MESSAGE_POINTS_EARNED_OUT_OF"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + pointsAvailable + MESSAGE_AVAILABLE_WORD + OPEN_SQUARE_BRACKET"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + progressionPercentage + PERCENTAGE_SIGN + CLOSE_SQUARE_BRACKET);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printBookmarkedIndicator() {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_BOOKMARK_INDICATOR);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printAlreadyBookmarkedIndicator() {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        printMessage(MESSAGE_BOOKMARKED_ALREADY_INDICATOR);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printListOfBookmarkedQuestions(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String list \u003d listOfBookmarkedQuestions(bookmarks);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_BOOKMARK_LIST + System.lineSeparator() + list);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private String listOfBookmarkedQuestions(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cDisplayable\u003e allBookmarks;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        allBookmarks \u003d bookmarks.getInnerList();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Displayable question : allBookmarks) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String optionOutput \u003d \"\";"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Question properQuestion \u003d (Question) question;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ArrayList\u003cDisplayable\u003e optionsAvailable \u003d properQuestion.getOptionList().getInnerList();"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            for (Displayable option : optionsAvailable) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                optionOutput +\u003d System.lineSeparator() + \"    \" + j + CLOSE_BRACKET + option.getDescription()"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        + ((j \u003d\u003d optionsAvailable.size()) ? System.lineSeparator() : \"\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            output +\u003d i + DOT_SPACE + question.getDescription() + optionOutput + SPACE"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ((i \u003d\u003d allBookmarks.size()) ? \"\" : System.lineSeparator());"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataLoading() {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_LOADING);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataLoaded() {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_LOADED);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataSaving() {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_SAVING);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataSaved() {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_SAVED);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 85,
      "kstonekuan": 107,
      "anqi20": 156,
      "joelngyx": 110,
      "josephhhhhhhhh": 25
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/Eduke8Test.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.stats.StatsCalculator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class Eduke8Test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_TOPIC_ONE_DESCRIPTION \u003d \"First Topic\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_TOPIC_TWO_DESCRIPTION \u003d \"Second Topic\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_ONE_DESCRIPTION \u003d \"First question description.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_TWO_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_THREE_DESCRIPTION \u003d \"Third question description.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_FOUR_DESCRIPTION \u003d \"Fourth question description.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_FIVE_DESCRIPTION \u003d \"Fifth question description.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_OPTION_ONE_DESCRIPTION \u003d \"Option one\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_OPTION_TWO_DESCRIPTION \u003d \"Option two\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_EXPLANATION_DESCRIPTION \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"Option A gives the best explanation out of all.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NONSENSE_DESCRIPTION \u003d \"Nonsense\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    protected static final int TIMER \u003d 5;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_PER_QUESTION \u003d 2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN \u003d 2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_INCORRECT_ANSWER \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_INVALID_PATH \u003d \"data/test/invalid.json\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_EMPTY_JSON \u003d \"data/test/empty.json\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_WRONG_FORMAT_JSON \u003d \"data/test/wrong_format.json\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_MISSING_KEY_JSON \u003d \"data/test/missing_key.json\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a TopicList object with two topics that have 3 questions each"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected TopicList createTestTopicList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic1 \u003d createTestTopic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic2 \u003d createTestTopic(PLACEHOLDER_TOPIC_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(topic1, topic2)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new TopicList(topics);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a Topic object with a question list of 3 questions"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected Topic createTestTopic(String description) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(description, questionList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a QuestionList object with 3 questions"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected QuestionList createTestQuestionList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(question1, question2, question3)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new QuestionList(questions);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a Question object with 2 options, 1 hint and an explanation."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected Question createTestQuestion(String description) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Explanation explanation \u003d new Explanation(PLACEHOLDER_EXPLANATION_DESCRIPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Question(description, optionList, hint, explanation);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected OptionList createTestOptionList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option1 \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option2 \u003d new Option(PLACEHOLDER_OPTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e options \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(option1, option2)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new OptionList(options);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected BookmarkList createTestBookmarkList() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new BookmarkList(questionList.getInnerList());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 14,
      "kstonekuan": 82,
      "anqi20": 1,
      "-": 4
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/AnswerCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute_correctAnswer_markAnsweredCorrectly() throws Eduke8Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option correctOption \u003d (Option) question.getOptionList().find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        correctOption.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command answerCommand \u003d new AnswerCommand(correctOption, question);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        answerCommand.execute(question.getOptionList(), new Ui());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute_wrongAnswer_notMarkAnsweredCorrectly() throws Eduke8Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option wrongOption \u003d (Option) question.getOptionList().find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command answerCommand \u003d new AnswerCommand(wrongOption, question);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        answerCommand.execute(question.getOptionList(), new Ui());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 36
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/BookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class BookmarkCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute_normal_questionHasBeenBookmarked() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question \u003d createTestQuestion(\"description\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertFalse(question.isBookmarked());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command command \u003d new BookmarkCommand(question, \"storing\", bookmarkList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        command.execute(createTestTopicList(), new Ui());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(question.isBookmarked());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 23
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute_normal_isExitIsTrue() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command exitCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        DisplayableList displayableList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        exitCommand.execute(displayableList, new Ui());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(exitCommand.isExit);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 19
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/HintCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute_normal_hintWasShown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command hintCommand \u003d new HintCommand(hint);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        hintCommand.execute(optionList, new Ui());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(hint.wasShown());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 21,
      "joelngyx": 2
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/QuizCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute_badTopicName_exceptionCaughtAndProgramContinuesWithoutLoopsOrFailing() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Command badQuizCommand \u003d new QuizCommand(topicList, 1, \"badname\", ui, bookmarks, 10);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badQuizCommand.execute(topicList, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute_wrongTopicNum_exceptionCaughtAndProgramContinuesWithoutLoopsOrFailing() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Command badQuizCommand \u003d new QuizCommand(topicList, 50, \"First Topic\", ui, bookmarks, 10);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badQuizCommand.execute(topicList, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "anqi20": 2,
      "josephhhhhhhhh": 30
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/explanation/ExplanationTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.explanation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class ExplanationTest extends Eduke8Test {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getExplanationDescription_explanationDescription_returnsExplanationDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Explanation explanation \u003d new Explanation(PLACEHOLDER_EXPLANATION_DESCRIPTION);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_EXPLANATION_DESCRIPTION, explanation.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 4,
      "anqi20": 12
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/hint/HintTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class HintTest extends Eduke8Test {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHintDescription_hintDescription_returnsHintDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_HINT_DESCRIPTION, hint.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_hintShownToUser_expectsTrue() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Once hint is shown to user, it is automatically marked as shown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        hint.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(hint.wasShown());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 22,
      "kstonekuan": 4
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/note/NoteListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class NoteListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_ONE \u003d \"First Note\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_TWO \u003d \"Second Note\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_THREE \u003d \"Third Note\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DESCRIPTION \u003d \"Test\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final int DEFAULT_NOTE_COUNT \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_TwoNotes_returnsCountOfTwo() throws Eduke8Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT, noteList.getCount());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void add_thirdNoteToNoteList_returnsCountOfThree() throws Eduke8Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note note3 \u003d new Note(NOTE_THREE, DESCRIPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.add(note3);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT + 1, noteList.getCount());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void delete_thirdNoteToNoteList_returnsCountOfOne() throws Eduke8Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.delete(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT - 1, noteList.getCount());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private NoteList createTestNoteList() throws Eduke8Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note note1 \u003d new Note(NOTE_ONE, DESCRIPTION);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note note2 \u003d new Note(NOTE_TWO, DESCRIPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e noteArrayList \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(note1, note2)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new NoteList(noteArrayList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "joelngyx": 49
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/note/NoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class NoteTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TEST_NAME \u003d \"Note name\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TEST \u003d \"Test\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsNoteDescription_returnsNoteDescription() throws Eduke8Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note note \u003d new Note(TEST_NAME, TEST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(TEST_NAME, note.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsNoteName_returnsNoteName() throws Eduke8Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note note \u003d new Note(TEST_NAME, TEST);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(TEST, note.getNoteText());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 27
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class OptionListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final int DEFAULT_OPTION_COUNT \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getCount_twoOptions_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(DEFAULT_OPTION_COUNT, optionList.getCount());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getInnerList_sameOption_expectsTrue() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionListTest \u003d createTestOptionList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListDescription \u003d optionList.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListTestDescription \u003d optionListTest.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(optionListDescription, optionListTestDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_twoOptions_returnOptionOne() throws Eduke8Exception {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Displayable optionOne \u003d optionList.find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_ONE_DESCRIPTION, optionOne.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void findCorrectOptionIndex_notCorrectOption_expectEduke8Exception() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, optionList::findCorrectOptionIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_optionNotFound_expectEduke8Exception() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e optionList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 24,
      "anqi20": 29
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class OptionTest extends Eduke8Test {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getDescription_placeholderOptionDescription_returnsOptionDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_ONE_DESCRIPTION, option.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void wasShown_placeholderOptionDescription_expectsTrue() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        option.getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.wasShown());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void markAsCorrectAnswer_optionMarkedAsCorrectOption_expectsTrue() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        option.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.isCorrectAnswer());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "anqi20": 25
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/MenuParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class MenuParserTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void menuParser_wrongStringInput_expectIncorrectCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser(bookmarks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Command badCommand \u003d menuParser.parseCommand(topicList, \"quiz t/wrongtopic n/badnnum\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 4,
      "josephhhhhhhhh": 22
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/QuizParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class QuizParserTest extends Eduke8Test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void quizParser_wrongStringInput_expectIncorrectCommandReturn() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        QuizParser quizParser \u003d new QuizParser(bookmarks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command badCommand \u003d quizParser.parseCommand(optionList, \"one\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, \"back\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, null);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(badCommand instanceof IncompleteCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void quizParser_correctStringInput_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        QuizParser quizParser \u003d new QuizParser(bookmarks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        quizParser.setQuestion(question, TIMER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command resultCommand \u003d quizParser.parseCommand(optionList, \"hint\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof HintCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        resultCommand \u003d quizParser.parseCommand(optionList, \"1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof AnswerCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "anqi20": 9,
      "josephhhhhhhhh": 35
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuestionListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final int DEFAULT_QUESTION_COUNT \u003d 3;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void questionListConstructor_nullQuestionsArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList questionList \u003d new QuestionList(null);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getCount_threeQuestions_returnsCountOfThree() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(DEFAULT_QUESTION_COUNT, questionList.getCount());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_questionListWithThreeQuestions_returnsFirstQuestion() throws Eduke8Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Displayable firstQuestionOfQuestionList \u003d questionList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_ONE_DESCRIPTION, firstQuestionOfQuestionList.getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_questionNotFound_expectEduke8Exception() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e questionList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 30,
      "kstonekuan": 13
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuestionTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_DESCRIPTION \u003d \"This is a question description.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String PLACEHOLDER_EXPLANATION_DESCRIPTION \u003d \"Option A gives the best explanation out of all.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int OPTIONLIST_OPTIONS_COUNT \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void questionConstructor_nullDescriptionArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Question question \u003d createTestQuestion(null);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getDescription_placeholderQuestionDescription_returnsQuestionDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_DESCRIPTION, question.getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_questionThatWasShownToUser_expectsTrue() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.markAsShown();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasShown());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_questionNotShownToUser_expectsFalse() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasShown());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getOptionList_optionListWithTwoOptions_returnsCountOfTwoOptions() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(OPTIONLIST_OPTIONS_COUNT, question.getOptionList().getCount());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHint_hintObject_returnsHintDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_HINT_DESCRIPTION, question.getHint().getDescription());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasHintShown_questionWithHintShown_expectsTrue() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hintThatWasShownToUser \u003d question.getHint();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Shows hint to user to mark hint as shown to user before"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        hintThatWasShownToUser.getDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasHintShown());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasHintShown_questionWithoutHintShown_expectsFalse() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasHintShown());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getExplanation_explanationObject_returnsExplanationDescription() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_EXPLANATION_DESCRIPTION, question.getExplanation().getDescription());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasAnsweredCorrectly_questionMarkedAsAnsweredCorrectly_expectsTrue() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasAnsweredCorrectly_attemptedQuestionNotCorrectlyAnswered_expectsFalse() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        //Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsShown();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasShown());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 95,
      "kstonekuan": 10,
      "anqi20": 13,
      "joelngyx": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuizQuestionsManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuizQuestionsManagerTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int TOPIC_QUESTIONS_COUNT \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int QUIZ_QUESTIONS_COUNT \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Tests for first parameter of QuizQuestionsManagerConstructor, while keeping second parameter valid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Within acceptable range of questions, positive partition"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_validNumberOfQuestionsForQuiz_returnsCountOfThreeQuizQuestions()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(QUIZ_QUESTIONS_COUNT, quizQuestionsManager.getQuizQuestionsCount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Below acceptable range of questions, negative partition"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_numberOfQuestionsForQuizTooLow_expectsEduke8Exception() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    new QuizQuestionsManager(0, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Above acceptable range of questions, negative partition"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_numberOfQuizQuestionsExceedNumberOfTopicQuestions_expectsEduke8Exception() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    new QuizQuestionsManager(TOPIC_QUESTIONS_COUNT + 1, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Tests for second parameter of QuizQuestionsManagerConstructor, while keeping first parameter valid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Positive partitions for second parameter are shown in the tests above"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // null case of questionsInTopic passed in, negative partition"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_nullQuestionsInTopicArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, null);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getNextQuestion_currentQuestionNumberAtZero_returnsCurrentQuestionNumberAtOne()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 2 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(1, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void areAllQuestionsAnswered_fullyAnsweredQuiz_expectsTrue() throws Eduke8Exception {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays first question to user"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays second question to user"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays last question to user"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(quizQuestionsManager.areAllQuestionsAnswered());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void areAllQuestionsAnswered_quizWithUnansweredQuestions_expectsFalse() throws Eduke8Exception {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Only display the first question out of 3 questions"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(quizQuestionsManager.areAllQuestionsAnswered());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 106,
      "kstonekuan": 8
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/quiz/SingleTopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuizTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void startQuiz_zeroQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d createTestTopic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, 0, bookmarks, 10);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(new Ui()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void startQuiz_tooManyQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d createTestTopic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        int questionsInTopic \u003d topic.getQuestionList().getCount();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, questionsInTopic + 1, bookmarks, 10);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(new Ui()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 30,
      "anqi20": 2,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/StatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class StatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_DESCRIPTION \u003d \"This is a question description.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int HALF_PROGRESS_LEVEL_SCORE \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int TOTAL_PROGRESS_LEVEL_SCORE \u003d 10;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void statsCalculatorConstructorWithOneParameter_nullTopicsArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            StatsCalculator statsCalculator \u003d new StatsCalculator(null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionIncorrectlyAnswered_returnsZero() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_INCORRECT_ANSWER, statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionCorrectlyAnsweredWithHintShown_returnsOne() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.getHint().getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionCorrectlyAnsweredWithoutHintShown_returnsTwo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Negative partition for the calculatePointsEarnedForQuestion method"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_nullQuestionArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculatePointsEarnedForQuestion(null);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_validProgress_returnsPercentageAsFifty() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(50, statsCalculator.calculateProgressionPercentage(HALF_PROGRESS_LEVEL_SCORE,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                TOTAL_PROGRESS_LEVEL_SCORE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_invalidUserProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(-1, TOTAL_PROGRESS_LEVEL_SCORE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_invalidTotalAvailableProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(HALF_PROGRESS_LEVEL_SCORE, -1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_userProgressExceedTotalAvailableProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(TOTAL_PROGRESS_LEVEL_SCORE + 1,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    TOTAL_PROGRESS_LEVEL_SCORE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTotalQuestionCount_twoTopicsWithThreeQuestionsEach_returnsCorrectCount() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        StatsCalculator statsCalculator \u003d new StatsCalculator(createTestTopicList().getInnerList());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedQuestionCount \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicList testTopicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : testTopicList.getInnerList()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            expectedQuestionCount +\u003d topicQuestionList.getCount();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(expectedQuestionCount, statsCalculator.calculateTotalQuestionCount());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 120
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/StatsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class StatsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void statsConstructor_nullTopicListArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Stats stats \u003d new Stats(null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 15
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/TopicalStatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class TopicalStatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_IN_TEST_TOPIC \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_ATTEMPTED \u003d 3;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_CORRECTLY_ANSWERED \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_WITH_HINT_USED \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void topicalStatsCalculatorConstructor_nullTopicArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalQuestionsAttemptCount_threeAttemptedQuestions_returnsCountOfThree() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_ATTEMPTED, topicalStatsCalculator.calculateTopicalQuestionsAttemptCount());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalQuestionsCorrectCount_twoCorrectlyAnsweredQuestions_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_CORRECTLY_ANSWERED,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalQuestionsCorrectCount());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalHintUsage_oneHintUsed_returnsCountOfOne() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_WITH_HINT_USED,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalHintUsage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalPointsEarned_twoCorrectlyAnsweredQuestionsWithOneHintUsed_returnsCorrectCount() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Points for one correct question without hint shown and one correct question with hint shown"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectQuestionsOneHintUsed \u003d calculatePointsForTwoCorrectQuestionsOneHintUsed();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(pointsForTwoCorrectQuestionsOneHintUsed, topicalStatsCalculator.calculateTopicalPointsEarned());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalPointsAvailable_fiveQuestions_returnsCorrectCount() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_IN_TEST_TOPIC * POINTS_PER_QUESTION,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalPointsAvailable());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalProgressionPercentage_inputTestTopic_returnsCorrectPercentage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Points for one correct question without hint shown and one correct question with hint shown"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectQuestionsOneHintUsed \u003d calculatePointsForTwoCorrectQuestionsOneHintUsed();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Total points the user can earn from all 5 questions in the topic"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d POINTS_PER_QUESTION  * NUMBER_OF_QUESTIONS_IN_TEST_TOPIC;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Percentage of progression the user can expect when he answered two out of six questions correctly"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedPercentage \u003d (int) (((double) pointsForTwoCorrectQuestionsOneHintUsed"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                / totalPointsAvailable) * 100);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(expectedPercentage, topicalStatsCalculator.calculateTopicalProgressionPercentage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates one topic with 5 questions, three questions attempted, two questions correctly answered,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // where one of the two correctly answered questions is with hint shown, totalling to 3 points earned."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private Topic createAttemptedTopic() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsShown();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsShown();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question3.markAsShown();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.getHint().getDescription();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question4 \u003d createTestQuestion(PLACEHOLDER_QUESTION_FOUR_DESCRIPTION);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question5 \u003d createTestQuestion(PLACEHOLDER_QUESTION_FIVE_DESCRIPTION);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(question1, question2, question3, question4, question5)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic1 \u003d new Topic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, questionList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return topic1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private int calculatePointsForTwoCorrectQuestionsOneHintUsed() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN + POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 138
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/UserStatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class UserStatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_TEST_TOPICS \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_IN_TEST_TOPIC \u003d 3;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTotalPointsEarned_twoCorrectlyAnsweredQuestionsAmongTopics_returnsCorrectScore() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d createTwoTopicsWithTwoOfSixQuestionsAnsweredCorrectly();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        UserStatsCalculator userStatsCalculator \u003d new UserStatsCalculator(topics);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectAnswersWithoutHint \u003d calculatePointsForTwoCorrectAnswersWithoutHint();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(pointsForTwoCorrectAnswersWithoutHint, userStatsCalculator.calculateTotalPointsEarned());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Tests calculateTotalPointsAvailable() as well"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateOverallProgressionPercentage_twoCorrectlyAnsweredQuestionsOutOfSix_returnsCorrectPercentage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d createTwoTopicsWithTwoOfSixQuestionsAnsweredCorrectly();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        UserStatsCalculator userStatsCalculator \u003d new UserStatsCalculator(topics);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectAnswersWithoutHint \u003d calculatePointsForTwoCorrectAnswersWithoutHint();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Total points the user can earn from two topics of three questions each"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d POINTS_PER_QUESTION * NUMBER_OF_TEST_TOPICS * NUMBER_OF_QUESTIONS_IN_TEST_TOPIC;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Percentage of progression the user can expect when he answered two out of six questions correctly"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedPercentage \u003d (int) (((double) pointsForTwoCorrectAnswersWithoutHint"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                / totalPointsAvailable) * 100);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(expectedPercentage, userStatsCalculator.calculateOverallProgressionPercentage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates two topics with 3 questions each, but with only one topic"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // having 2 questions correctly answered without hint, totalling to 4 points"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e createTwoTopicsWithTwoOfSixQuestionsAnsweredCorrectly() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(question1, question2, question3)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic1 \u003d new Topic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, questionList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates another topic with 3 unanswered questions"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic2 \u003d createTestTopic(PLACEHOLDER_TOPIC_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(topic1, topic2)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private int calculatePointsForTwoCorrectAnswersWithoutHint() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return 2 * POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 83
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/LogStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/LOG_TEST_\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void save_newLogFile_newLogFileCreated() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogStorage logStorage \u003d new LogStorage(LOG_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File logFile \u003d logStorage.save();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(logFile.exists());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d getSecondLineOfLogs(logFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(logData, \"INFO: Logging to file started\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String getSecondLineOfLogs(File logFile) throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Scanner logReader \u003d new Scanner(logFile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.nextLine(); // Skip first line with datetime info"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d logReader.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return logData;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 41
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/TopicsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicsStorageTest extends Eduke8Test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_TOPICS_JSON \u003d \"data/test/topics.json\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_invalidPath_expectIoException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_INVALID_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(IOException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_emptyJson_expectParseException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_EMPTY_JSON);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ParseException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_wrongFormatJson_expectClassCastException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_WRONG_FORMAT_JSON);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ClassCastException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_missingKeyJson_expectNullPointerException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_MISSING_KEY_JSON);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(NullPointerException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_exampleJson_returnsTopicsFromJson() throws IOException, ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_TOPICS_JSON);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d topicsStorage.load();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(topics.size(), 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic firstTopic \u003d (Topic) topics.get(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(firstTopic.getDescription(), PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList firstQuestionList \u003d firstTopic.getQuestionList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(firstQuestionList.getCount(), 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 53,
      "Zhi-You": 3
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/UserStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class UserStorageTest extends Eduke8Test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_USER_JSON \u003d \"data/test/user.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_SAVE_JSON \u003d \"data/test/save.json\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final TopicList topicList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public UserStorageTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarkList \u003d new BookmarkList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void save_newPath_returnsCreatedFile() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_SAVE_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File returnedFile \u003d userStorage.save();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(returnedFile.exists());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File correctFile \u003d new File(getSaveTestPath());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(returnedFile, correctFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_invalidPath_returnsEmptyArrayList() throws ParseException, Eduke8Exception, IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_INVALID_PATH, topicList, bookmarkList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d userStorage.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(topics.size(), 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_emptyJson_expectParseException() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_EMPTY_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ParseException.class, userStorage::load);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_wrongFormatJson_expectClassCastException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_WRONG_FORMAT_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ClassCastException.class, userStorage::load);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_missingKeyJson_expectNullPointerException() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_MISSING_KEY_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(NullPointerException.class, userStorage::load);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_exampleJson_returnsUserAttributesFromJson() throws ParseException, Eduke8Exception, IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_USER_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        userStorage.load();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d (Topic) topicList.find(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionOne \u003d (Question) topic.getQuestionList().find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(questionOne.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(questionOne.wasHintShown());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertNotNull(bookmarkList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionTwo \u003d (Question) topic.getQuestionList().find(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(questionTwo.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(questionTwo.wasHintShown());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertNull(bookmarkList.find(PLACEHOLDER_QUESTION_TWO_DESCRIPTION));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String getSaveTestPath() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d UserStorageTest.DATA_TEST_SAVE_JSON.split(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 98
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final int DEFAULT_TOPIC_COUNT \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_TwoTopics_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_TOPIC_COUNT, topicList.getCount());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void find_topicListWithTwoTopics_returnsFirstTopic() throws Eduke8Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Displayable topic1 \u003d topicList.find(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, topic1.getDescription());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_topicNotFound_expectEduke8Exception() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e topicList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 10,
      "joelngyx": 26
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INPUT \u003d \"JUnit: Basic\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsTopicDescription_topicDescription_returnsTopicDescription() throws Eduke8Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d new Topic(INPUT, createTestQuestionList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(INPUT, topic.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsQuestionList_questionList_returnsQuestionList() throws Eduke8Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d new Topic(INPUT, questionList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(questionList, topic.getQuestionList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "joelngyx": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "textbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "topics"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "hint"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/-1 s/2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/50 s/2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "7"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz n/2 t/OOP s/2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/ n/1 s/2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz n/1 t/2 s/2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/2 n/1 s/2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz s/2 n/1 t/3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOPS n/1 s/2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/1 n/1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "topics"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "Zhi-You": 7,
      "anqi20": 11,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "java -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "-": 17
    }
  }
]
