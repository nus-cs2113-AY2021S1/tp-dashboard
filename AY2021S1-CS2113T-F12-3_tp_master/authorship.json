[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 1,
      "-": 63
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    mainClassName \u003d \"seedu.eduke8.Eduke8\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    archiveBaseName \u003d \"eduke8\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    sourceSets.main.resources.srcDirs \u003d [ \"src/\" ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    sourceSets.main.resources.includes \u003d [ \"**/*.json\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    sourceSets.main.resources.srcDirs \u003d [ \"src/\" ]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    sourceSets.main.resources.includes \u003d [ \"**/*.json\" ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![Tang Zhi You](https://avatars3.githubusercontent.com/u/49060098?s\u003d400\u0026u\u003db69b125203fd94bf8db9d77b9e3796db73f86cb6\u0026v\u003d4) | Tang Zhi You | [Github](https://github.com/Zhi-You) | [Portfolio](team/zhi-you.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "![Joseph Abraham](https://avatars2.githubusercontent.com/u/60458098?s\u003d400\u0026u\u003db9f8cc1b44e9c8e03d8d9fe83d74338113c3a7f8\u0026v\u003d4) | Joseph Abraham | [Github](https://github.com/josephhhhhhhhh) | [Portfolio](team/josephhhhhhhhh.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Lim An Qi](https://avatars2.githubusercontent.com/u/53225908?s\u003d400\u0026u\u003dda6a1ac6c1bc3607a752c045147621fa754a4b67\u0026v\u003d4) | Lim An Qi | [Github](https://github.com/anqi20) | [Portfolio](team/anqi20.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![Joel Ng Yi Xian](https://avatars2.githubusercontent.com/u/60457616?s\u003d400\u0026u\u003d8b3a08a9d3f1b6c7f83a6be99aec8d0b24eedd81\u0026v\u003d4) | Joel Ng Yi Xian| [Github](https://github.com/joelngyx) | [Portfolio](team/joelngyx.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "![Kingston Kuan Jun Xiang](https://avatars0.githubusercontent.com/u/35717847?s\u003d460\u0026u\u003dfd4a6977a95813022f82662ada8694105196b9a0\u0026v\u003d4) | Kingston Kuan Jun Xiang | [Github](https://github.com/kstonekuan) | [Portfolio](team/kstonekuan.md)"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 1,
      "joelngyx": 1,
      "-": 4,
      "josephhhhhhhhh": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# Developer Guide for E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 1.1. Software Overview"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and [Object-oriented Programming (OOP)](#34-glossary) principles** through a gamified"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "On this desktop application, CS2113/T students can attempt bite-sized quizzes, through the [Command Line Interface (CLI)](#34-glossary), to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8, comprises of a Logic component, UI component, Storage component, and Model component. Each component comprises of multiple classes that work in tandem, to fulfil the purpose of our program. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The purpose of this developer guide is to allow any interested contributors, who wish to develop this learning companion further, understand the inner workings of the program. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "This understanding will enable such contributors to add value to the current code, by improving its performance, level of interaction or capabilities. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 1.2. Setting up"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "First, fork this repo, and clone the fork into your computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You are recommended to use Intellij IDEA to edit the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1. **Configure the JDK**: Ensure Intellij is configured to use JDK 11."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2. **Import the project as a Gradle project**: Choose the option to import the project as a Gradle project when prompted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "3. **Verify the setup**: Enter some commands to ensure E-Duke-8 functions as expected. Refer to our [User Guide](https://ay2021s1-cs2113t-f12-3.github.io/tp/UserGuide.html) for more information."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 2. Design \u0026 implementation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.1. Architecture"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The high-level design of our program is based on a 3-tier architecture which consists of the Presentation, Application and Database layers. The Logic component, UI component, Storage component, and Model component can be found in each layer as shown in the architecture diagram below."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Architecture](images/Architecture.png)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.2. Model Component"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "The data model is centered around `DisplayableList` objects which hold `Displayable` objects. This implementation "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "allows us to create various topics with questions, options, hints and explanations. This was also extended to creating bookmarks and notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "####  2.2.1. Design of TopicList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "`TopicList` is an ArrayList of type `Displayable`, which is 1 of the 6 interfaces implemented "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "in the code for E-Duke-8. As such, many of the commands that manipulate the `TopicList` make "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "use of the package `java.util.ArrayList`. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "The `TopicList` is used to store `Topic` objects. `Topic` objects themselves implement the interface `Displayable`. "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![TopicList](images/TopicListClassDiagram.png)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "There is just 1 command that manipulates the `TopicList`, which is `topics`. The `topics` command shows all the "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "`Topic` objects in the current `TopicList`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.2.2. Implementation of TopicList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Listing topics in TopicList:**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "This task is performed by the `TopicList.showTopics()` method."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![topicsSequence](images/topiclistsequence.png)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 1: The `parseCommand()` method instantiates a `TopicsCommand` object which then calls the "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        `TopicList.showTopics()` method."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `TopicList.showTopics()` method then calls the method `Ui.printTopicList()`. The "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        current `TopicList` is passed into the called method."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 3: The `Ui.printTopicList()` method then prints out the number of questions in each topic,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        along with the description of each topic in the `TopicList`. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "#### 2.2.3. Design of NoteList"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "`NoteList` is also an `ArrayList` of type `Displayable`. As such, just like with `TopicList`, many of the commands "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "that manipulate the `NoteList` also make use of the package `java.util.ArrayList`. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Each topic has an attribute of type `NoteList`, which contains `Note` objects."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![NoteListClass](images/NoteListClassDiagram.png)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "#### 2.2.4. Implementation of Notes"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "There are 3 commands that involve the manipulation of `NoteList` objects. They are: `note add`, which adds a new `Note`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "object, `note delete`, which deletes a `Note` object, and `note list`, which lists out all `Note` objects in a `NoteList` from a "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "specified `Topic`. These commands are carried out by the instantiation of a `NoteCommand` object. The `NoteCommand` "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "object then performs a task based on the type of command from the user\u0027s input. This is reflected in the following "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "sequence diagram:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![NoteCommandSequence](images/NoteCommandSequence.png)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "**Adding a new note:**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This task is performed by the `NoteList.add()` method."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 1: The `parseCommand()` method instantiates a `NoteCommand` object which then calls the `Ui.addNoteInteractions()` "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "method. "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 2: The `Ui.printAddNote()` method uses the user\u0027s input to create a `Note` object. "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 3: The `Ui.printAddNote()` method then calls the method `NoteList.add()`, passing the created `Note` object "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "into this method. `NoteList.add()` makes use of the package `java.util.ArrayList`, specifically the `ArrayList.add()` "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "method, to add the `Note` object into the specified `NoteList` object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "**Listing out all notes in a topic:**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This task is performed by the `Ui.showNotes()` method."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 1: The `parseCommand()` method instantiates a `NoteCommand` object which then instantiates an Ui object"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "and calls the `Ui.printListNote` method. The topic\u0027s `NoteList` object is passed into this method."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 2: The `Ui.printListNote` method calls the `Ui.showNotes()` method. The topic\u0027s `NoteList` object is passed into "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "this method. `Ui.showNotes()` prints out the descriptions and texts of all the `Note` objects in the topic\u0027s `NoteList` "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "object."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "**Deleting a note:**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This task is performed by the `NoteList.delete()` method."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 1: The `parseCommand()` method instantiates a `NoteCommand` object which then calls the `Ui.printDeleteNote` "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "method. An integer provided by the user\u0027s input is passed into this method. This integer is interpreted as the index of "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "the `Note` object to be deleted in the specified `NoteList` object."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Step 2: The `NoteList.delete()` method makes use of the `java.util.ArrayList` package, specifically the "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "`ArrayList.remove()` method, to delete the specified `Note` object in the specified `NoteList` object."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqi20"
        },
        "content": "#### 2.2.5. Design of Option and OptionList "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` and `OptionList` classes implements the `Displayable` and `DisplayableList` interfaces respectively. "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` object stores one option of a question while the `OptionList` object stores all 4 options of the same "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "anqi20"
        },
        "content": "question. The class diagram below illustrates the structure of both classes. "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` class implements the `Displayable` interface while the `OptionList` class implements the `DisplayableList` interface. The illustration below shows the class diagram of `Option` and `OptionList`. "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Option_and_OptionList_Class](./images/Option.png)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Option` object stores the description of one option from a question. It also indicates if the option is the correct answer for the question by using the `isCorrectAnswer` boolean. "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `OptionList` object stores all 4 options of the same question. "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi20"
        },
        "content": "#### 2.2.6. Implementation of Option and OptionList"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "anqi20"
        },
        "content": "An example of when the `Option` and `OptionList` classes are used is when the quiz mode is activated. The quiz requires all the options of a particular question to be printed out. "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The diagram below is only an illustration to show the implementation of `Option` and `OptionList` classes, it does not show the full sequence diagram of the `SingleTopicQuiz()` method. "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Option_and_OptionList_Sequence](./images/OptionSequence.png)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 1. When a quiz is started, the `SingleTopicQuiz()` method will instantiate a `SingleTopicQuiz` object. "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 2. The `SingleTopicQuiz` object then calls the `Question` class using the `getOptionList()` method. The `Question` class then returns `optionList`. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 3. The `SingleTopicQuiz` object then calls the `OptionList` class using the `getInnerList()` method. The `OptionList` class then returns `options` which contains the list of 4 options of a particular question that is shown to the user. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Step 4. The `SingleTopicQuiz` object then calls the `Ui` to print out all 4 options using the `printOption(options.get(i), i+1)` method. "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `options.get(i)` parameter will get the description of the specific option and the `i+1` parameter will handle the numbering of the options."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.3. Logic Component"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "The main application logic, such as provisioning quizzes, is handled by the Logic component. This component also acts as the middleman between the backend and frontend by processing data before passing it to the user interface and parsing user input from the user interface."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.1. Design of Parser"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Parser Diagram](./images/ParserDiagram.png)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "1. After constructing a new `MenuParser` in the `Eduke8` class, the `parseCommand()` method is used to parse the "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   user command."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "2. This results in a `Command` object, which is executed by `Command` class itself, using the `execute()` method."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "3. The `Ui` object in the `Command` object is used to display the requested information, or to display the required task "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "to be completed as per the user input."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "It should be made clear that `parseCommand()` returns a new object from the child class of `Command`. The object\u0027s exact "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "class depends on the input typed into the command line, and so since `parseCommand()` returns all these objects from the "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "various specific `Command` classes, the `MenuParser` which has the `parseCommand()` method is dependent on all these "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "specific `Command` classes."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.2. Implementation of MenuParser"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Below is the sequence diagram for how the Parser component of `Eduke8` works with commands to show output to the user."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![Parser Sample Sequence](./images/ParserSampleSequence.png)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The command parsing feature is our program’s way of reading the user’s input into the command line. It makes use of a "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "single method `parseCommand()` that identifies what command the user is calling for and then calls the command. There are "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "two parsers in our program that implements a single `Parser` interface. One parser is for choosing menu options and is "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "named `MenuParser`. The other parser is used during quizzes, in order to answer questions or request for hints, and is "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "called `QuizParser`. Given below is an example usage scenario of how the command parsing feature works at each step, "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "when the user types in input to get help in order to see what commands are available to the user."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 1. The user launches the program for the first time. The `MenuParser` will be initialised and awaiting the user’s"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        input to proceed."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 2. The user types in \"help\" into the command line interface and presses enter. This user input “help” is stored as "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        a string and is put into the `parseCommand()` method as a parameter, together with the list of topics. This "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        topic list is not relevant to the help command for now."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 3. The user input string is subjected to the `lang.string.trim()` and `lang.string.split()` functions of a string "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        in the Java libraries in order to remove redundant spaces around the input, and to discern the number of words "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        in the input. The `lang.string.split()` function uses a blank space string, “ “, as the delimiter to split the "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        string into its individual components."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Step 4. Each subsequent string separated by a space is stored in a string array `commandArr[]`. The 0th index of the "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        `commandArr[]` array is the first word, the 1st index is the second word, and so on. In this case there is only "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        one word stored in the array, at the 0th index, which is “help”."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Step 5. The string at the 0th index is then used in a switch statement, where each case represents the different menu "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        options available. As such, the contents of the case with reference “help” is run, which is a return statement "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        containing a new `HelpCommand()`. This leads to the execution of the `help` command."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.3. Design of QuizQuestionsManager"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To start a quiz in E-Duke-8, the user will have to give some inputs, and these include the number of questions that he wants to attempt, as well as the topic to get the questions from. Thereafter, questions will be shown to the user one by one until all of them are attempted. "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The class diagram given below explains the high-level design of the quiz system in E-Duke-8. Given below it is a quick overview of each component."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![QuizQuestionsManager_Class_Diagram](./images/QuizQuestionsManager.png)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An object of `SingleTopicQuiz` class represents an instance of the quiz in E-Duke-8. Its `numberOfQuestions` attribute and `Topic` object correspond to the user\u0027s specified number of questions and topic for the quiz respectively."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The `startQuiz(:Ui)` method call from the `SingleTopicQuiz` object initializes an object of `QuizQuestionsManager`, by passing into its constructor `QuizQuestionsManager(:int, :ArrayList\u003cDisplayable\u003e)` the arguments `numberOfQuestions` for its first parameter and an ArrayList of questions from the `Topic` object for its second parameter. The `QuizQuestionsManager` object will then randomly select `numberOfQuestions` questions from the topic the user has chosen, using its `setQuizQuestions(:int, :ArrayList\u003cDisplayable\u003e)` method, where the first parameter will take in `numberOfQuestions` and its second parameter will take in the ArrayList of questions from the `Topic` object passed into the `QuizQuestionsManager` object. The questions\u0027 selection process will be further explained in the subsequent section on the [Implementation of QuizQuestionsManager](#234-implementation-of-quizquestionsmanager)."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "After a quiz has started, by making use of `QuizQuestionsManager`\u0027s `getNextQuestion()` and `areAllQuestionsAnswered()` method calls, the `goThroughQuizQuestions(:Ui, :QuizQuestionsManager)` will loop through the questions until the user has answered all of them on the command line interface."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.3.4. Implementation of QuizQuestionsManager"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "As mentioned earlier in the section on the design of the quiz system, a `QuizQuestionsManager` object will randomly select the indicated number of questions from the list of questions in the `Topic` object, and these will form the quiz questions for the user."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The sequence diagram below shows how `QuizQuestionsManager` is implemented to achieve this for the scenario where the user indicates that he wants to attempt 5 questions from the topic on [OOP](#34-glossary), which translates to the `setQuizQuestions(5, questionsInTopic)` call:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![QuizQuestionsManager::setQuizQuestions_Sequence_Diagram](./images/QuizQuestionsManager_setQuizQuestions.png)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "`nextInt(5)` is a method call to an object of the `Random` class. It returns a random integer `randomQuestionIndex` where its value is between 0 (inclusive) and the number passed in as argument, 5 in this scenario, exclusive. "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Using the `Arraylist`\u0027s method of `get(randomQuestionIndex)`, a random question will be selected from the list of questions in the `Topic` object. This process is done repeatedly in a loop until the correct number of questions are selected."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To ensure that no two of the same question is selected, the selected `randomQuestionIndex` is checked to see if it is repeated. To determine if `randomQuestionIndex` is not selected before, an integer `ArrayList` is initialized to record all the selected integers. By checking against this collection of integers, it can be determined if a currently selected integer is repeated or not, and if it is, no question will be added for that iteration of the loop. "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An ArrayList of `Question` objects stores all the selected questions meant for the quiz."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "anqi20"
        },
        "content": "#### 2.3.5. Design of Stats Feature"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 allows for user’s stats to be shown to the user when requested. These statistics correspond to the results of the user’s past attempts of the quiz. An aggregate result, followed by topical results of the quiz will be displayed. "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A `Stats` class facilitates what is to be shown to the user. It also calls the methods of the objects of the two subclasses of `StatsCalculator`, `UserStatsCalculator` and `TopicalStatsCalculator` to retrieve the necessary information to be displayed."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The class diagram given below showcases the high-level design of the stats feature in E-Duke-8. Given below it is a quick overview of each component."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![Stats_Class_Diagram](./images/Stats.png)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Results of the quiz attempts can be calculated using the information stored in a `Question` object, because of its methods, namely `wasShown()`,  `wasHintShown()` and `wasAnsweredCorrectly()`, that indicate if it has been attempted before, whether hint was used when user attempted the question and if the question was answered correctly respectively. "
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The current design of the stats feature is such that a correct answer without hint being used would award the user with 2 points, while a correct answer with hint used would award the user with 1 point. No point is awarded to the user if they chose the wrong answer. `calculatePointsEarnedForQuestion(:Question)` in `StatsCalculator` class and its subclasses, is the method that contains the logic for this calculation."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An object of `UserStatsCalculator` class is responsible for calculating the aggregate results from the user’s previous quiz results. For instance, its `calculateTotalPointsEarned()` method will iterate through the multiple topics stored in E-Duke-8 and calculate the total sum of the user’s past results of the quizzes done for those topics."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On the other hand, an object of `TopicalStatsCalculator` is used by the object of `Stats` class to calculate the topical results. In its constructor, the `TopicalStatsCalculator` object uses the single `Topic` object passed into it to retrieve its specific `QuestionList` object. Thereafter, by iterating through the questions for the particular `QuestionList` object, the results for individual topics can be calculated with its methods."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "#### 2.3.6. Implementation of Stats Feature"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The current implementation of the stats feature is such that the object of `Stats` class controls what is shown to the user when the `stats` command is received. It calls on methods of a `UserStatsCalculator` object and a `TopicalStatsCalculator` object to calculate and retrieve the statistics of the user’s previous attempts of quizzes in E-Duke-8, before displaying them."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "The sequence diagram below shows the interactions between the different objects when `showPointsEarned(ui)` is invoked, by the object of `Stats` class, to display to the user the total points he has earned in E-Duke-8 so far, out of all the points that he can potentially earn. "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![Stats::showPointsEarned_Sequence_Diagram](./images/Stats_showPointsEarned.png)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Through the logic in the object of `UserStatsCalculator`, necessary information regarding the user’s statistics, such as the `totalPointsGained` integer value and `totalPointsAvailable` integer value, are calculated, and then passed to the `Ui` object to print them to the user. This same concept and procedure are applied to the display the other aggregate results."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A similar procedure is being employed by the `TopicalStatsCalculator` object to calculate the topic-level statistics for the user. The only difference between the objects of these two classes is that instead of iterating through all the topics available, the `TopicalStatsCalculator` object only deals with a particular topic at any point of time. By iterating through the questions of the single topic, it calculates statistics for the topic and returns it back to the `Stats` object, which will then pass them to the `Ui` object to display them to the user. As such, in order to display the user’s statistics for each and every topic, a loop is done in the `Stats` object to repeatedly calculate the topic-level information for all of the topics and displaying them concurrently. "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "anqi20"
        },
        "content": "#### 2.3.7. Implementation of Timer Feature"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "anqi20"
        },
        "content": "E-Duke-8 has a timer feature for the quiz. The users are able to choose how much time (in seconds) they require to complete each question. "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The timer would start as soon as the options are being printed out. "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user has typed in a valid answer, the timer would stop and move on to the next question. "
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the time is up, it will be regarded as an `IncompleteCommand` and it will be deemed as a wrong answer as well. "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The diagram and explanation below only illustrates the implementation of the timer feature, "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "anqi20"
        },
        "content": "it does not show the full sequence diagram and explanation of the `SingleTopicQuiz()` method. "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Timer_Sequence_Diagram](./images/Timer.png)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "anqi20"
        },
        "content": "When a quiz is started, the `startQuiz(ui)` method will be called. "
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "anqi20"
        },
        "content": "After the options of a particular question has been printed out, the timer would begin."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `getCommand(ui, optionList, userTimer)` method is first called. The `userTimer` parameter used here is the time that the user has set at the start of the quiz. "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `getQuizInputFromUser(userTimer)` method will then call the `Ui` class to read in the users\u0027 input. The timer continues to count down as it waits for the users\u0027 input. "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "anqi20"
        },
        "content": "After the user has written an input, the `Ui` will return the `userInput` string back to the `SingleTopicQuiz` object. "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user did not write in any input and the time is up, the `Ui` will return `null` string back to the `SingleTopicQuiz` object instead. "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Command` object will be returned. "
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "anqi20"
        },
        "content": "For example, if the user entered a string (that is not \"hint\" or \"bookmark\" and not a number from 1 to 4), then the `Command` returned will be one of `IncorrectCommand`. "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user entered any number from 1 to 4, it will be an `AnswerCommand`. "
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user did not input anything and the time is up, the `Command` returned will be `IncompleteCommand`. "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "anqi20"
        },
        "content": "It will then enter into a loop and remain in this loop unless the user has input a valid answer or the time is up for that question. "
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "anqi20"
        },
        "content": "In the loop, the `SingleTopicQuiz` object will then call the respective `Command` object, using the `execute(optionList, ui)` method. "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "anqi20"
        },
        "content": "For example, if it is a `HintCommand`, then the execution would mean that the hint will be printed out by the `Ui` class to show the user the hint for the particular question. "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "anqi20"
        },
        "content": "However, some details were omitted here so that the sequence diagram is easier to understand. "
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `SingleTopicQuiz` object will then call the `Ui` class using the `printQuizInputMessage()` method to print the prompt for the users to enter in their input. "
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `getCommand(ui, optionList, userTimer - timePassed)` method will be called again. However, this `getCommand()` method is different from the one that was used initially. "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "anqi20"
        },
        "content": "This `getCommand()` method takes in the time left on the timer (`userTimer - timePassed`) instead of the timer set by the user. "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "anqi20"
        },
        "content": "This is because, we want to avoid the situation where the user is able to extend the timer by entering in any random value (except number 1 to 4) as this would cause the timer to reset everytime. "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Hence, in order to prevent this bug, for this `getCommand()` method, we have to use the time left on the timer instead. "
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The subsequent steps are similar to the one stated above. "
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The loop will end if the user has written an input or the time is up for that question. "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `SingleTopicQuiz` object will then proceed to execute the `Command` for the last time, using the `execute(optionList, ui)` method."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "anqi20"
        },
        "content": "It will then enter another loop that checks if the user has pressed on the \"Enter\" button on the computer. "
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "anqi20"
        },
        "content": "This feature was implemented so that they have sufficient time to read through and understand the explanation before moving on to the next question. "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Ui` class will be called by the `getEnterFromUser()` method. This method will prompt the user to press the \"Enter\" button. "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "anqi20"
        },
        "content": "The `Ui` class will then return the boolean `enterIsUsed`. "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user has pressed on any keys other than \"Enter\", the boolean `enterIsUsed` is set to false and it will remain in the loop. "
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If the user has pressed on the \"Enter\" button, the boolean `enterIsUsed` is set to true and it will exit out of the loop and proceed to the next question. "
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.4. Storage Component"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The storage component is implemented locally and mainly saves and loads files in JavaScript Object Notation (JSON) format, except for log files which are stored as normal text files."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The JSON format was chosen as it is a well-known standard which is easy to parse."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.1. Design of TopicsStorage"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Given data for the topics and questions is loaded automatically from JSON files in the data folder. This is mainly facilitated through the `TopicsStorage` "
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class which handles accessing the file as well as converting from JSON into `Topic`, `Question` and `Option` objects."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The class diagram below shows this relationship."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![TopicsStorage Class Diagram](./images/TopicsStorage.png)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The format of the JSON file is important as it is loaded in a particular way. This format has been designed as an array "
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "of topics that hold the different properties for questions, options, hints and explanations."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "An example is as such:"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```json"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "["
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\": \"Topic Title\", "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\": ["
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\": \"What is your question?\","
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\": \"Put the hint here\","
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"explanation\": \"Put the explanation here\","
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"options\": [ "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the first option and correct answer\","
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": true"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the second option\","
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the third option\","
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the fourth option\","
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "]"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Users may choose to edit this data as well and are provided with the following requirements from the User Guide:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "\u003e Note that the title will be loaded with spaces replaced with underscores, there must be 4 options for each question,"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "and there must be one and only one option chosen as the correct answer by specifying `true` as the value of the"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "`correct` key."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Note that a default data file is packaged together with the jar file such that the application can still run without downloading the data file."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If users want to edit the data they are instructed to on how to download and set up the external custom file which will be loaded with a higher priority than the one packaged."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.2. Implementation of TopicsStorage"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "When the user launches the app, the main program will initialize a `TopicsStorage` object and call the `load()` method which will return an `ArrayList` of  `Topic` objects."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The following sequence diagram shows how the load operation works, focusing on how options are marked as correct:"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![TopicsStorage::load Sequence Diagram](./images/TopicsStorage_load.png)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "As there is a high level of nesting in the JSON file, many methods are called in loops to parse each section and return them as objects which are then used to build the next object at a higher level."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "In the diagram above, the `Option` objects within each `Topic` has to be constructed with a description from the file."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "They are then marked as the correct answer with `markAsCorrectAnswer()` if the value of the key `correct` was `true` in the given data."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "More properties can easily be added to the classes and the storage component in a similar way, by parsing in loops."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.3. Design of UserStorage"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "In order to save and load attributes specific to each user, such as the questions attempted, answered correctly or bookmarked, a `UserStorage` class is used to selectively store these attributes into a JSON file, `user.json`."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "This class requires access to the main `TopicList` and `BookmarkList` from the Model component in order to extract these attributes. The class diagram below shows this relationship."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![UserStorage Class Diagram](./images/UserStorage.png)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The attributes will be saved in the JSON file tied to each question in a topic and is identified by its description."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "A question\u0027s presence in the file represents that it has been attempted before while other attributes are stored as boolean values."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "An example is given below."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```json"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "["
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"notes\":[],"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\": ["
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"correct\":true,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"bookmarked\":true,"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\":false,"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\":\"First Question\""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      },"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"correct\":false,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"bookmarked\":false,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\":true,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\":\"Second Question\""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\":\"First Topic\""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  },"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"notes\":["
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\":\"Note Title\","
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"text\":\"Note Text\""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\":[],"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\":\"Second Topic\""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "]"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Unlike `topics.json`, users should not be editing the `user.json` file as it is system generated."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If the user edits this file and does not follow the correct format then the affected parts of the data will be lost but the "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "program will continue to run."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.4.4. Implementation of UserStorage"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Unlike `TopicsStorage` which constructs objects, `UserStorage` accesses existing objects in order to extract their attributes."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The following sequence diagram shows an example of getting the topic description from a `Topic` object within the `TopicList` in order to save attributes for that particular `Topic` object."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![UserStorage::save Sequence Diagram](./images/UserStorage_save.png)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "It can be noted here that the `Topic` object is the same one constructed by `TopicsStorage` and continues to persist until the program shuts down."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "A similar method is used to extract the attributes from each `Question` object inside the `Topic` object."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "For example, the `wasAnsweredCorrectly()` method is called on the `Question` object to check if it was answered"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "correctly by the user or not."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "This value is then stored as an attribute of the question in the JSON file."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Loading back the user data is done in reverse. If the boolean value of the key `correct` is `true` for a"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "particular question, then the `markAsAnsweredCorrectly()` method is called on the corresponding `Question` object. This is depicted below in the sequence diagram."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![UserStorage::load Sequence Diagram](./images/UserStorage_load.png)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 2.5. UI Component"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The command line interface was chosen for users that prefer to type using a keyboard over using the mouse."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 2.5.1. Implementation of Ui"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The `Ui` class handles all the interactions with the users. It reads the input from the users and prints out replies to "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "anqi20"
        },
        "content": "the users. It is the point of communication between E-Duke-8 and the users. "
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "An example is provided below to illustrate how the `Ui` class prints out the starting page of the quiz for "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "the user to comprehend. "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![Ui_Page](./images/Ui.png)"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "As the user starts the quiz, the `Ui` class will print out the quiz page to show that the quiz has started. "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The user inputs the number of questions that he wants to answer and also the topics that he wants to be tested on. "
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The `Ui` will go through printStartQuizQuestions() to print out the number of questions that the user has chosen. "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Afterwards, the `Ui` will go through printStartQuizTopics() to print out the topics that the user has chosen. "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 3. Appendix"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.1. Product scope"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 3.1.1. Target user profile"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "CS2113/T Students"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 3.1.2. Value proposition"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "To help CS2113/T students learn and understand software engineering and Object-oriented Programming [(OOP)](#34-glossary) principles through a gamified"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "It is a desktop application where CS2113/T students can attempt bite-sized quizzes, through the Command Line Interface (CLI), to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Students can earn points for themselves as they answer questions in the quizzes, and they can view their quizzes\u0027 statistics to gauge their level of mastery of the topics in CS2113/T."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.2. User Stories"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|new user|quickly see what the software has to offer|understand how to use the app|"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "|v1.0|new user|answer given questions|start testing myself immediately|"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|long-time user|get different questions each time|repeatedly test my understanding for the particular topic|"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|busy user|test myself on concepts using short, targeted quizzes|confirm my understanding of concepts|"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|get a hint for the question in the quiz|think about the question from a different angle|"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|see what the available topics are|navigate around the app effectively|"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v1.0|user|select the number of questions to do in the quiz|manage the workload and time spent on the quiz|"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|slow but hardworking user|see the explanations provided in the quiz|learn from my mistakes and revise|"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|busy, lazy user|take note of key concepts|refer to it easily at a later time|"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "anqi20"
        },
        "content": "|v2.0|frequent disorganized user|view the percentage of error in each topic|tell how well I understand the content|"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.3. Non-Functional Requirements"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Should work on any mainstream [Operating System (OS)](#34-glossary) as long as it has Java 11 or above installed."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.4. Glossary"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Command Line Interface (CLI):** CLI is a text-based interface that allows users to respond to visual prompts by typing single commands into the interface and receiving a reply in the same way. (From [techopedia](https://www.techopedia.com/definition/3337/command-line-interface-cli))"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Object-oriented Programming (OOP):** OOP is a programming paradigm. A programming paradigm guides programmers to analyze programming problems, and structure programming solutions, in a specific way. (From [CS2113/T textbook](https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/chapters/oop.html))"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Mainstream Operating Systems (OS)**: Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### 3.5. Instructions for manual testing"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "To test the product please refer to the E-Duke-8 [User Guide](https://ay2021s1-cs2113t-f12-3.github.io/tp/UserGuide.html)."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The following are a few testcases to try out."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "#### 3.5.1. Loading data"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "1. Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    1. Find `topics.json` inside `data/main`."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    2. Test case: Delete the file \u003cbr\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "       Expected: Application will not launch properly and error message will be displayed."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    3. Test case: Change a topic title \u003cbr\u003e"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "       Expected: Application will launch successfully but related user data will be erased."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    4. Test case: Remove the `questions` key from a topic \u003cbr\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "       Expected: Application will not launch properly and error message will be displayed."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    5. Other ways to corrupt the data files: Remove other keys or mess up the JSON format (remove the outer array) \u003cbr\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "       Expected: Similar to previous."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       "
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "#### 3.5.2. Starting a quiz"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1. Giving quiz commands with different input formats"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    1. Test case: `quiz n/2 t/oop s/10` \u003cbr\u003e"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       Expected: Starts a quiz successfully ith 2 questions from the topic of [OOP](#34-glossary) and a time limit for 10 seconds for each question."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    2. Test case: `quiz n/2 t/oop` \u003cbr\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       Expected: Quiz will not start. Error message will show and the ideal format structure will be displayed to user."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    3. Test case: `quiz n/2 hi t/oop s/5` \u003cbr\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       Expected: Quiz will not start. Error message will show and the ideal format structure will be displayed to user."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    4. Other ways to start quiz in wrong format: Use the quiz command but give insufficient inputs or invalid inputs \u003cbr\u003e"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       Expected: Quiz will not start. Error message will show and the ideal format structure will be displayed to user."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "       "
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2. Trying to start a quiz with invalid inputs"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   1. Test case: `quiz n/2 t/oop a/10` \u003cbr\u003e"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      Expected: Quiz will not start. Error message will show and the ideal format structure will be displayed to user."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   2. Test case: `quiz n/2 t/oop s/0` \u003cbr\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      Expected: Quiz will not start. Error message will show to prompt user to give a valid time limit."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   3. Test case: `quiz n/2 t/none s/5` \u003cbr\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      Expected: Quiz will not start. Error message will tell user that the topic does not exist in E-Duke-8 and where they can find the available topics."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   4. Test case: `quiz n/0 t/oop s/5` \u003cbr\u003e"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      Expected: Quiz will not start. Error message will tell user to specify more than 0 quiz questions."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   5. Other ways to start quiz in wrong format: Use the quiz command but give insufficient inputs or invalid inputs \u003cbr\u003e"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "      Expected: Similar to previous."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 104,
      "kstonekuan": 235,
      "anqi20": 140,
      "joelngyx": 76,
      "-": 29,
      "josephhhhhhhhh": 28
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and Object-oriented Programming (OOP) principles** through a gamified"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "It is a desktop application where CS2113/T students can attempt bite-sized quizzes, through the **Command Line Interface (CLI)**, to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you are a CS2113/T student yourself, do give E-Duke-8 a try!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On E-Duke-8, you can earn points for yourself as you attempt the quizzes! You can also view the statistics of your past quiz attempts to understand your current level of mastery of the various topics!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Challenge your friends to see who can earn the most points on E-Duke-8!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 11,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# User Guide for E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students **learn and understand software engineering and [Object-oriented Programming (OOP)](#7-glossary) principles** through a gamified"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "It is a desktop application where CS2113/T students can attempt bite-sized quizzes, through the [Command Line Interface (CLI)](#7-glossary), to test their understanding of the concepts taught, and serves to consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "On E-Duke-8, you can earn points for yourself as you attempt the quizzes! You can also view the statistics of your past quiz attempts to understand your current level of mastery of the various topics!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Challenge your friends to see who can earn the most points on E-Duke-8!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Understand more about E-Duke-8, and how you can use it to aid your learning, through this User Guide."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2. Download the latest version of the jar file for **E-Duke-8** from [here](https://github.com/AY2021S1-CS2113T-F12-3/tp/releases)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "3. Copy the files to the folder you want to use for the application."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "4. Double click on the jar file to start up the program. If the program does not start up, continue to step 6, otherwise skip to step 8."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "5. If double clicking on the jar file does not work, open up the command prompt in the same folder used in step 3."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "6. Enter the following command `java -jar eduke8.jar` (assuming the downloaded jar file is named `eduke8.jar` but this can be changed)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "7. Type a command in the terminal and press Enter to execute it. e.g. typing `help` and pressing Enter will list all the commands that you can use in this application. For a start, here is a list of basic commands you can try:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `about` : Provides information about E-Duke-8."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `help` : Displays available commands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `topics` : Lists CS2113/T topics that E-Duke-8 knows."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `textbook` : Provides you with a link to the CS2113/T website."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `quiz` : Starts a quiz. Eg. `quiz t/OOP n/5 s/10` will start a quiz with five questions based on OOP concepts. You will have 10 seconds to complete each question. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - `exit` : Exits the app."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "8. Refer to the section on [Features](#3-features) below for the full list of commands you can use and the details of each."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "ℹ️ Notes about the command format:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Words in UPPER_CASE are the parameters that you can specify for your usage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- e.g. in `quiz t/TOPIC n/NUM_QUESTIONS s/TIMER`, \u0027TOPIC\u0027 is a parameter that allows you to choose the topic you want the quiz to be based on, \u0027NUM_QUESTIONS\u0027 specifies the number of questions you want to have in your quiz, and \u0027TIMER\u0027 specifies the number of seconds given to complete each question. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.1. Loading Data "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Data will be automatically loaded from the files in the `data` folder for use in quizzes and notes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "You will see this message while the data loads:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data loading](./images/data_loading.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If the data has been loaded successfully you should see this message:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data loaded](./images/data_loaded.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If you wish to edit the data available, such as adding your own questions to the question bank, then do follow the instructions found in [**FAQ**](#4-faq)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "However, it is recommended that you do this only after fully exploring E-Duke-8."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If have trouble opening E-Duke-8 and received the following warning message, then please refer to the section [**6. Troubleshooting**](#6-troubleshooting) for help in resolving the issue."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data error](./images/data_error.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.2. Welcome Page"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Upon successful startup, you should be greeted with a screen like this:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![welcome](./images/welcome.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.3. Viewing E-Duke-8 information: `about`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a message explaining what E-Duke-8 is about and your benefits of using it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "about"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![about](./images/about.png)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.4. Viewing available commands: `help`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a list of commands that you can use."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "help"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![help](./images/help.png)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.5. Listing all topics: `topics`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows the entire list of CS2113/T\u0027s topics that you can choose for your quiz to be based upon. "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can see the number of questions available for each topic beside the topic itself."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "topics"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![topics](./images/topics.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.6. Accessing the CS2113T textbook content: `textbook`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can find a link to the module\u0027s textbook using this command. "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "textbook"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![textbook](./images/textbook.png)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.7. Starting a quiz: `quiz`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "By following a specific input format for your command (shown below), you can start a quiz where the number of questions, topic and time limit to complete each question are specified by you."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "While on a question, you can choose to answer it, ask for a hint (if you are unsure of the answer) or bookmark it for future reference!"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You will have to complete the question within the specified time as well. If you are unable to complete it in time, it will be regarded as an incorrect answer and the correct answer, along with the explanation, will be shown to you. You will then be directed to start the next question where the timer will restart. "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A correct answer without requesting for a hint will earn you **2 points**! Whereas a correct answer with hint requested will earn you **1 point**. You will not be awarded any points for incorrect answers. You can view the points you have accumulated with the `stats` command, which will be further explained in a [later section](#312-displaying-stats-stats) of this guide."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Regardless of right or wrong answer, an explanation about the question will be displayed after you give an answer. You will then be directed to start the next question."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The maximum time limit for each question that you can choose is 1000 seconds."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Each of the questions in the quiz will be related to the topic you have chosen."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- You can choose any topic (not case-sensitive) from the [topic](#35-listing-all-topics-topics) list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The [topic](#35-listing-all-topics-topics) list also shows you the number of questions you can choose from for each topic."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The first question will be immediately displayed to you once the quiz starts."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The quiz will only end when you have attempted all of the questions in it."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Refer to [**FAQ**](#4-faq) to know more about the quiz system and the point system."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Input format: `quiz t/TOPIC n/NUM_QUESTIONS s/TIMER`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/5 s/10"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- This will start a quiz that contains 5 randomly-chosen questions from the topic on OOP. Each question will have to be completed within 10 seconds. "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz.png)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "From here on you can either:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1) Enter in your answer by typing \u00271\u0027, \u00272\u0027, \u00273\u0027 or \u00274\u0027 and pressing enter."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "2) If you do not know the answer, you can request for a hint by typing `hint` and pressing enter. Refer to the [section on hints](#38-showing-a-hint-hint) for more information."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "3) If you would like to refer to the question in future, you can also `bookmark` it. Refer to the [section on bookmark](#39-bookmarking-a-question-bookmark) for more information."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have entered the correct answer, this is what you will see:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_correct.png)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have entered the wrong answer, this is what you will see:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_wrong.png)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "anqi20"
        },
        "content": "If you did not answer the question within the specified time, this is what you will see: "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![quiz](./images/quiz_times_up.png)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "anqi20"
        },
        "content": "After every question, this is what you will see: "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![quiz](./images/question_end.png)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Please press \"Enter\" to proceed to the next question. Once the new question appears, the timer will then restart! "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "After attempting all of the questions, the quiz will automatically end:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![quiz](./images/quiz_end.png)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "After the quiz ends, you will be prompted to enter in a new command. At this point, you are free to choose any feature of E-Duke-8 you want to access, or you can also start a new quiz!"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.8. Showing a hint: `hint`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a hint to the current question."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "hint"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![hint](./images/hint.png)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Note: "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Once a hint is used for a question, it will be recorded into your [stats](#312-displaying-stats-stats)."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- When a hint is used, getting the question correct will earn you 1 point instead of 2."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Refer to [**FAQ**](#4-faq) Q4 to understand why you should use hint despite the penalties."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### 3.9. Bookmarking a question: `bookmark`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Stores any question encountered in a quiz in a list."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Note: "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Bookmarking a question can only be done during a quiz"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "bookmark"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "What you should see: "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![bookmark](./images/bookmark_store.png)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "anqi20"
        },
        "content": "### 3.10. Listing out all bookmarked questions: `bookmark list`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Lists out all the bookmarked questions and each of their four options. The correct answer will be shown too."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- Listing out all bookmarked questions can only be done in the main menu"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "anqi20"
        },
        "content": "bookmark list"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![data saving](./images/bookmark_list.png)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "anqi20"
        },
        "content": "### 3.11. Deleting a bookmark: `bookmark delete`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can delete a bookmark by specifying its index. The index can be found in the bookmark list when you use the `bookmark list` command."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "anqi20"
        },
        "content": "Input format: `bookmark delete INDEX`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "```"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "bookmark delete 2"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "```"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "anqi20"
        },
        "content": "![bookmark](./images/bookmark_delete.png)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.12. Displaying stats: `stats`"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Displays the accumulated statistics of your quiz attempts on E-Duke-8 which includes the points you have earned, questions done, questions answered correctly and hints used. Both overall statistics and topic-level statistics will be displayed."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "stats"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you are a new user, this is what you should see:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![stats_no_progress](./images/stats_No_Progress.png)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "If you have attempted the quizzes on E-Duke-8, you would be able to see your own stats. "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "This is an example of what you should see:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "![stats_with_progress](./images/stats_Some_Progress.png)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Refer to [**FAQ**](#4-faq) for more information about the point system in E-Duke-8."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.13. Adding a note: `note add`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Adds a note to a specified topic."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- There can be many notes under each topic"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- E-Duke-8 will guide you through the note-adding process"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "note add"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![noteadd](./images/noteadd.png)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.14. Deleting a note: `note delete`"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Deletes a note from a specific topic."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "note delete"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![notedelete](./images/notedelete.png)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.15. Listing out notes: `note list`"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Lists out all notes belonging to a specific topic."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "note list"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "What you should see:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "![notelist](./images/notelist.png)"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.16. Exiting the program: `exit`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Exits E-Duke-8."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- You can only exit the application when you are not in a quiz."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- If you are in the middle of a quiz and really want to exit, you can give random answers for the questions."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "exit"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "```"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![exit](./images/exit.png)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "### 3.17. Saving user data"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "User data will be saved after every command that changes the data completes such as at the end of using"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "`quiz`, `note`, and `bookmark`. There will be a final save confirmation message upon successful exit of the application"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "through the `exit` command."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "You will see this message while the data saves:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data saving](./images/data_saving.png)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "When the data has been saved successfully you should see this message:"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![data saved](./images/data_saved.png)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "This is stored in the `user.json` file in the `data` folder and can be transferred between machines to keep your own"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "history. Please do not attempt to edit this file as it will disrupt the running of application (Refer to [**FAQ**](#4-faq) Q7)."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If you want a better score you can always reattempt a quiz!"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q1**: Am I be able to re-attempt the same question after my quiz ends?"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A1**: Yes, you may. Questions for the quizzes are chosen randomly from all of the questions in a certain topic. Hence, there is a chance that the question you have attempted before gets chosen again if you choose to attempt another quiz from the same topic."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q2**: Why does my stats only improve as I do more quizzes? Shouldn\u0027t the penalities from my previous quizzes remain?"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A2**: E-Duke-8 tries to motivate you to understand CS2113/T concepts better. E-Duke-8 also encourages learning from failure. Therefore, you do not have to be disheartened by incorrect answers when attempting quizzes. Learn from the explanations given and get the question correct in your future quiz attempts to improve your stats!"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A correct answer in a future quiz attempt would also mean that you have come to understand the concept being tested in the question, and hence, you should deserve the points for it.  "
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q3**: Why does my hint usage indicator for a question not disappear after I re-attempt the question without using hint?"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A3**: This is because the hint usage serves as an indicator that you might still have some doubts in the topic, and hence you might want to read more about it. Resetting the count for hint usage might take away this benefit. "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q4**: Using hints will limit the total points that I can earn to build up my stats, so why should I still use hint?"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "**A4**: While points you earn will indeed be lesser, you are still encouraged to use hints when you have any doubts while answering questions, as they help to spur your thinking, or to confirm your thoughts. "
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Furthermore, hints might give you an alternative perspective to think about the question at hand, which may be helpful to how you answer similar questions in the future."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q5**: How are the points awarded for correct answers?"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A5**: A correct answer without requesting for a hint will earn you **2 points**, whereas a correct answer with hint requested will earn you **1 point**. You will not be awarded any points for incorrect answers."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q6**: How do I change the questions in the quizzes?"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A6**: You may download the sample `topics.json` from the [releases page](https://github.com/AY2021S1-CS2113T-F12-3/tp/releases)."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Make sure to include this file in the `main` folder located in the `data` folder."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If these folders do not exist yet please run the application once to create it."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "The directory structure should look something like this (assuming the main jar file is named `eduke8.jar` but this can be changed):"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "yourFolder"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "|   eduke8.jar"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "|"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "----data"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    |"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ----main"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    |   |   topics.json"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    |   |   ..."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    |"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ----logs"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        |   ..."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Your changes will not be reflected if the directory structure does not match that above."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Open `topics.json` in any text editor to edit the questions, make sure to follow the format of the questions"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "already provided. An example is shown below."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```json"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "["
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"topic\": \"Topic Title\", "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    \"questions\": ["
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"description\": \"What is your question?\","
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"hint\": \"Put the hint here\","
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"explanation\": \"Put the explanation here\","
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        \"options\": [ "
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the first option and correct answer\","
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": true"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the second option\","
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the third option\","
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          },"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"description\": \"This is the fourth option\","
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"correct\": false"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "          }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ]"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "      }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "]"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "```"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The title will be loaded with spaces replaced with underscores."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- There must be 4 options for each question."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- There must be one and only one option chosen as the correct answer by specifying `true` as the value of the"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "`correct` field. "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- If you edit the title of existing topics or description of existing questions then their associated user "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "data might be erased."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The title of a topic cannot be blank or repeated (not case-sensitive)."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- If the title includes a backslash, you may not be able to use the title in anywhere of the program."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- The description of a question cannot be blank or repeated (not case-sensitive)."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- If you want to re-attempt the same question, you can simply start a new quiz with the topic that the question is from."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- If you do not want to give a hint or explanation please provide an empty quotation marks, `\"\"`, do not remove the key from the question."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Make sure you follow the types of values used which is either a word/sentence enclosed with quotation marks, `\"\"`, or a `true`/`false` value."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q7**: What happens if I modify the user data in `user.json`?"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A7**: If you wish to modify the user data, the application may not be able to load it successfully. You will "
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "receive the following message, and the affected user data will be erased."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![user data error](./images/user_data_error.png)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Therefore, it is recommended that you do not modify the user data. Do build up your stats by attempting more quizzes! "
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## 5. Command summary"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Action | Format, Examples |"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| ------ | ---------------- |"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Viewing E-Duke-8 information       | `about`                                                |"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Viewing available commands    | `help`                                              |"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Listing all topics        | `topics`  |"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Accessing the CS2113T textbook content        | `textbook`                                                 |"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Starting a quiz |  `quiz t/TOPIC n/QUESTIONS s/TIMER` \u003cbr/\u003e e.g. `quiz t/OOP n/5 s/10`                                              |"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Showing a hint        |           `hint`                                      |"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Bookmarking a question | `bookmark` | "
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Listing out all bookmarked questions | `bookmark list` | "
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Deleting a bookmark | `bookmark delete` | "
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "| Displaying statistics | `stats` | "
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Adding a note | `note add` | "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Deleting a note | `note delete` | "
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "anqi20"
        },
        "content": "| Listing out notes | `note list` | "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Exit        | `exit`                                                 |"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "anqi20"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 6. Troubleshooting"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If you have trouble starting the application there could be two sources of error for loading data."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "It is possible that the data for `topics.json` or `user.json` has been tampered with wrongly and thus cannot be parsed"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "correctly. Please ensure that if you wish to edit the data in `topics.json`, such as to add questions, then you should follow the instructions found in [**FAQ**](#4-faq) Q6 carefully."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "On the other hand, `user.json` should not be manually edited."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If you have accidentally changed this file, you may delete"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "the file to reset the data."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "A new file will be created on start up."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "If the above fixes do not work you may delete the `data` folder and use the default questions or "
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "download `topics.json` from the [releases page](https://github.com/AY2021S1-CS2113T-F12-3/tp/releases) again."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## 7. Glossary"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Command Line Interface (CLI):** CLI is a text-based interface that allows users to respond to visual prompts by typing single commands into the interface and receiving a reply in the same way. (From [techopedia](https://www.techopedia.com/definition/3337/command-line-interface-cli))"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Object-oriented Programming (OOP):** OOP is a programming paradigm. A programming paradigm guides programmers to analyze programming problems, and structure programming solutions, in a specific way. (From [CS2113/T textbook](https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/chapters/oop.html))"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 226,
      "kstonekuan": 159,
      "anqi20": 54,
      "joelngyx": 36,
      "-": 34,
      "josephhhhhhhhh": 26
    }
  },
  {
    "path": "docs/team/anqi20.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "# Lim An Qi - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students learn and understand software engineering and Object-Oriented Programming (OOP) principles through a gamified platform and enhances their learning experience. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **New Feature:** Implemented the timer function for the quiz"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - What it does: The user would be able to choose the timer set for each question. If the time is up, and the user have yet to complete the question, then it will be marked as an incorrect answer. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Justification: E-Duke-8 is able to simulate a timed examination environment for the students. Moreover, since they get to choose the timing , E-Duke-8 is able to cater to all students at different learning stages. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Highlights: This timer feature is challenging as we had to cater to users using different operating systems. In the User Interface, there is two ways to detect the time passed when the user has not inputted anything. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    Kingston has helped in implementing this feature for the Windows Operating System (OS) while I worked on implementing this feature for the MacOS and Linux Operating System. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    The implementation in Windows OS uses the Robot object which cannot be used in the implementation in the MacOS and Linux as they are a headless environment. "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **New Feature:** Added delay between each question during the quiz"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - What it does: The users need to press the \"Enter\" button on the computer before they can proceed to the next question."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Justification: This allows the users to read and understand the explanation of the question first, before moving on to the next question. This makes the quiz function more effective in helping the students to revise. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **New Feature:** Implemented the User Interface (UI) class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - What it does: It would be the point of contact between E-Duke-8 and the users. It would take in input from the user while printing out prompts for the users to read. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Justification: This also allows the users to know if the command they give is successfully handled by E-Duke-8. This is because, E-Duke-8 will echo back if it is a successful command, and tells the user the error if it is an unsuccessful command. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **New Feature:** Implemented the `Option` and `OptionList` classes"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - What it does: The `Option` class holds the one of the option of a question while the `OptionList` class holds all 4 options of the same question. "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Justification: When we have classes for the `Option` and `OptionList`, our program will be more Object-oriented, which brings about many benefits. "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003danqi20\u0026tabRepo\u003dAY2021S1-CS2113T-F12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **Enhancements to existing features:**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Implemented testing for IncompleteCommand. [#256](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/256)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Added explanations class. [#118](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/118)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Implemented the UI class to do error handling. [#79](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Implemented some testing for Option and OptionList classes. [#65](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/65)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **Documentation:** "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - User Guide: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Did cosmetic tweaks to existing documentation of features: [#165](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/165), [#222](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/222)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added documentation for the timer feature in `quiz` system. [#165](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/165)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added documentation for the Command Summary. [#165](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/165)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Developer Guide: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added the implementation of timer feature [#222](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/222)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added the design and implementation of Option and OptionList classes [#125](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125), [#165](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/165)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added the user stories of V1.0 and V2.0 [#125](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    - Added the implementation of User Interface [#125](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "- **Community:**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - PRs reviewed (with non-trivial review comments): [#34](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/34), [#46](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46), [#51](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51), [#67](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/67), [#124](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/124)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "  - Reported bugs and suggestions for other teams in the class. (examples: [1](https://github.com/anqi20/ped/issues/1), [2](https://github.com/anqi20/ped/issues/2), [3](https://github.com/anqi20/ped/issues/5), [4](https://github.com/anqi20/ped/issues/7), [5](https://github.com/anqi20/ped/issues/8), [6](https://github.com/anqi20/ped/issues/11), [7](https://github.com/anqi20/ped/issues/12))"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 42,
      "-": 4
    }
  },
  {
    "path": "docs/team/joelngyx.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "# Joel Ng Yi Xian - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Overview:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students learn and understand software engineering and Object-Oriented Programming (OOP) principles through a gamified platform and enhances their learning experience. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Summary of Contributions:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **New Feature:** Topic and TopicList components. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - What it does: The TopicList component stores Topic objects, each of which stores the description, note list and question list of the topic."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Justification: Necessary for the compartmentalization of data"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **New Feature:** Implemented the NoteCommand component"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - What it does: This command is a type Command object. Entering an input containing the following formats: `note add`, "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  `note delete`, `note list` will throw this command and process the instruction provided."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Justification: Necessary to add/delete/list notes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Highlight: This feature required the use of logic, as well as interactions with various classes such as `TopicList`, "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  `Ui`, `NoteList` and `Note`. Methods were added to the `Ui` class to allow for a more user-friendly way of providing "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  inputs when it comes to creating/deleting/listing out `Note` objects in the specified `NoteList` object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **New Feature:** Implemented the Note and NoteList components."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - What it does: The NoteList components store Note objects, and contains methods that can modify the NoteList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Justification: Necessary to process and carry out the NoteCommand. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djoelngyx\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dfalse)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **Enhancements to existing features:**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Removed redundant code in the DisplayableList interface which allowed for the better implementation of features."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  Made necessary additions and amendments to various classes and JUnits tests. [#122](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/122)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Made necessary additions and amendments to the UserStorage class to accommodate improvements made to the `Note` and `NoteList` classes."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  [#144](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/144/commits)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **Contributions to documentation**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - User Guide:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    - Added documentation for the adding, deleting, and the listing of notes: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#207](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/207/files)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Developer Guide: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    - Added design and implementation details of the Topic and TopicList components "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     [Design of TopicList](https://ay2021s1-cs2113t-f12-3.github.io/tp/DeveloperGuide.html#221-design-of-topiclist),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     [Implementation of TopicList](https://ay2021s1-cs2113t-f12-3.github.io/tp/DeveloperGuide.html#222-implementation-of-topiclist)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Added design and implementation details of the Note and NoteList components "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     [Design of NoteList](https://ay2021s1-cs2113t-f12-3.github.io/tp/DeveloperGuide.html#223-design-of-notelist),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     [Implementation of Notes](https://ay2021s1-cs2113t-f12-3.github.io/tp/DeveloperGuide.html#224-implementation-of-notes)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Added UML and sequence diagrams relevant to the Topic, TopicList, Note and NoteList components, as seen in the links above."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "- **Community:**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - PRs reviewed (with non-trivial review comments): "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#216](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/216),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#51](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#22](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/22)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  - Reported bugs for other teams in the class:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#1](https://github.com/joelngyx/ped/issues/1),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    [#2](https://github.com/joelngyx/ped/issues/2)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "joelngyx": 53,
      "-": 3
    }
  },
  {
    "path": "docs/team/josephhhhhhhhh.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "# Joseph Abraham - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students learn and understand software engineering and Object-Oriented Programming (OOP) principles through a gamified platform and enhances their learning experience. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "- **New Feature:** Added the functionality to be able to bookmark questions during a quiz."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - What it does: Store\u0027s a question of the user\u0027s choice in an array list of type `Displayable`. Whenever the user is in a quiz and wishes to store a particular question of interest for the future, the user can"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    type in `bookmark` in the command-line, and the question will be stored. Once the user finishes the quiz, the user may type `bookmark list` in the main menu to view the list of bookmarked question,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    at which point, each question\u0027s options will be printed under the question, with the words \"[Correct Answer]\" next to the option whose attribute `isCorrectAnswer` is true."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    The user may also delete a bookmark by typing `bookmark delete \u003cindex number of the question\u003e`, at which point the question indicated will be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Justification: This feature is important in terms of using the product, as from time to time questions that are hard to figure out may get tested, and the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    would want to have a way to store this question for perusal later. By consolidating all these bookmarks in one place, the user is capable of referring to all the questions that they have had doubts about"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    in one central location. This makes revising an easier process as well."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Highlights: This command requires interaction with the `Ui`, `Question` and `Option` classes in order to be able to store and display the questions effectively. It requires altering the code of some pre-existing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    commands, and required some fine-tuning to ensure the `Ui` object was responding with the correct statements whenever prompted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djosephhhhhhhhh\u0026tabRepo\u003dAY2021S1-CS2113T-F12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "- **Enhancements to existing features:**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Increased flexibility of parsing quiz commands by allowing the topic field and number of questions field to be interchangeable in position. (Pull request [#126](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/126))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Added parser logic in order to be able to read in additional white spaces without losing the user input. (Pull request [#227](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/227))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Implemented JUnit Testing for some Command classes, BookmarkList class and Parser classes  . (Pull request [#226](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/226), [#132](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "- **Documentation:**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - User Guide:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        - Added documentation for the `bookmark` feature. [#169](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/169)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Developer Guide:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        - Added documentation for the Logic Component of the Developer Guide. [#123](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/123), [#138](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/138)  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "- **Community:**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - PRs reviewed (with non-trivial review comments): [#51](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51), [#59](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59), [#207](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/207), [#212](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/212)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    - Reported bugs and suggestions for other teams in the class. [#1](https://github.com/josephhhhhhhhh/ped/issues/1), [#2](https://github.com/josephhhhhhhhh/ped/issues/2), [#3](https://github.com/josephhhhhhhhh/ped/issues/3), [#4](https://github.com/josephhhhhhhhh/ped/issues/4), [#5](https://github.com/josephhhhhhhhh/ped/issues/5), [#6](https://github.com/josephhhhhhhhh/ped/issues/6), [#7](https://github.com/josephhhhhhhhh/ped/issues/7), [#8](https://github.com/josephhhhhhhhh/ped/issues/8)"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "-": 5,
      "josephhhhhhhhh": 29
    }
  },
  {
    "path": "docs/team/kstonekuan.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# Kingston Kuan Jun Xiang - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students learn and understand software engineering and Object-Oriented Programming (OOP) principles through a gamified platform and enhances their learning experience. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **New Feature:** Implemented and maintained the Storage component."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - What it does: `LogStorage` saves logging data, `TopicsStorage` loads topic data and `UserStorage` saves and loads user data locally."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Justification: This feature improves the product significantly because a user does not need to add questions manually for the quiz through the CLI, the user\u0027s statistics will be stored which enhances gamification, and user logs are available to identfy causes of bugs in the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Highlights: The saving of user data does not actually require the implementation of a `User` class as the user attributes for each question are extracted directly from the question."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  This design was chosen so as to not increase the overall complexity of the system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  The error handling was also challenging as the files save locally are easily editable by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  For `TopicsStorage`, if the format of the JSON file is not correct then the program will not startup and users will be directed to instructions to fix this instead."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  For `UserStorage`, if the user chooses to tamper with the user data, badly formatted data will result in a safe loss of data and the program will continue to run."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  Furthermore, as it is not guaranteed that users will download the default data file, this was included as a resource in the jar file to allow normal operation while still allowing edits though the external path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Credits: This feature relies heavily on the use of the `JSON.simple` library as data is stored in JSON format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **New Feature:** Implemented the initial quiz logic to be a separate interface from the main menu."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkstonekuan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Project management:**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Managed releases `v1.0` - `v2.1` (3 releases) on GitHub"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Enhancements to existing features:**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Implemented a fix for problems with the timer feature on Windows for command prompt/powershell. The user input was no showing up due to the use of the `BufferedReader` instead of the usual `Scanner`. The workaround used `Future` and `ExecutorService` to get the user input asynchronously in a separate thread while allowing for a `TimeoutException` to be used for the timer. However, this required the use of a `Robot` to complete the `Future` which did not work in headless environments like WSL. I recommened for this to be fixed in a separate issue by doing an OS-dependent timer. (Pull requests [#158](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/158))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Documentation:**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - User Guide:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - Added documentation for loading and saving data [#100](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/100), [#211](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/211)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Developer Guide:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    - Added implementation details of the Storage component [#116](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/116), [#142](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/142), [#152](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/152)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Community:**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - PRs reviewed (with non-trivial review comments): [#23](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/23), [#46](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46), [#59](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/59), [#91](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/91), [#125](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125), [#132](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/132), [#145](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/145), [#150](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/150)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Contributed to forum discussions (examples: [1](https://github.com/nus-cs2113-AY2021S1/forum/issues/64), [2](https://github.com/nus-cs2113-AY2021S1/forum/issues/79), [3](https://github.com/nus-cs2113-AY2021S1/forum/issues/47), [4](https://github.com/nus-cs2113-AY2021S1/forum/issues/56), [5](https://github.com/nus-cs2113-AY2021S1/forum/issues/91), [6](https://github.com/nus-cs2113-AY2021S1/forum/issues/117))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/kstonekuan/ped/issues/4), [2](https://github.com/kstonekuan/ped/issues/2), [3](https://github.com/kstonekuan/ped/issues/6), [4](https://github.com/kstonekuan/ped/issues/5))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- **Tools:**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "  - Integrated a third party library (JSON.simple) to the project ([#13](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/13))"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 39,
      "Zhi-You": 4
    }
  },
  {
    "path": "docs/team/zhi-you.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "# Tang Zhi You - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "E-Duke-8 (pronounced \"Educate\") helps CS2113/T students learn and understand software engineering and Object-Oriented Programming (OOP) principles through a gamified platform and enhances their learning experience. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **New Feature:** Added the ability for users to earn points from answering questions in quizzes and view their quiz attempts\u0027 statistics."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - What it does: Calculates user\u0027s aggregated quiz statistics using `UserStatsCalculator` and calculates their topic-level quiz statistics using `TopicalStatsCalculator`. Relevant statistics include how accurate they are and the points they have earned from answering questions in quizzes. When the user gives the command to show his or her statistics, the relevant data will be calculated and displayed clearly to him or her. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Justification: This feature improves the product significantly because it allows users to understand how well they did for the quizzes on a topical level and hence allows them to keep track of their learning progress across CS2113/T topics. By having a point system for the quiz and recording their stats, users will feel rewarded as they get the right answers and become motivated to attempt more quizzes to improve their current stats. Therefore, the addition of this feature enables E-Duke-8 to better achieve its objectives of gamifying the learning process for CS2113/T students."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Highlights: Due to its complete implementation, the calculation of the statistics is not limited to the current number of questions and topics in E-Duke-8, hence allowing the project to grow smoothly in terms of adding more topics and questions. While alternative designs were discussed, the current one was chosen as it provides users with a clear summary page of their statistics. Since the feature is one of the last few features to implement and there had to be a wait for the others to be finalized, the implementation was challenging due to the short timeframe to complete it before v2.0. In-depth planning had to be done in order to get it completed in time. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **New Feature:** Implemented the logic to start a quiz with randomly selected questions and facilitate the process of the quiz."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - What it does: Based on the user\u0027s specified number of questions and topic, `QuizQuestionsManager` randomly selects the indicated number of questions from the list of questions of the indicated topic at the start of the quiz. It also ensures that a quiz will not have duplicated questions. Furthermore, It provides the ability to navigate to the next question, and the ability to determine the end of the quiz. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Justification: The random selection of questions will ensure that users get a variety of questions from the topic."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Code contributed:** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dzhi-you\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Enhancements to existing features:**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Personalized the project by changing packages\u0027 names and settings. (Pull request [#33](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/33))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Improved display messages to enhance user experience. (Pull request [#90](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/90))    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Documentation:**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - User Guide:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    - Added documentation for `quiz` system and `stats` feature. [#130](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/130), [#146](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/146)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    - Did cosmetic tweaks and maintained existing overall documentation. [#103](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/103), [#140](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/140) "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Developer Guide:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    - Added design and implementation details of the `quiz` feature. [#124](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/124), [#167](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/167)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    - Added design and implementation details of the `stats` feature. [#143](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/143), [#145](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/145), [#209](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/209)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    - Did cosmetic tweaks to existing overall documentation. [#129](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/129) "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- **Community:**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - PRs reviewed (with non-trivial review comments): [#39](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/39), [#46](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/46), [#51](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/51), [#56](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/56), [#79](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/79), [#125](https://github.com/AY2021S1-CS2113T-F12-3/tp/pull/125)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Contributed to forum discussions (example: [1](https://github.com/nus-cs2113-AY2021S1/forum/issues/77))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  - Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/Zhi-You/ped/issues/3), [2](https://github.com/Zhi-You/ped/issues/4), [3](https://github.com/Zhi-You/ped/issues/7), [4](https://github.com/Zhi-You/ped/issues/8), [5](https://github.com/Zhi-You/ped/issues/9))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/Eduke8.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.MenuParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.LogStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.TopicsStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.UserStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_STORAGE_LOAD_FAIL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_STORAGE_SAVE_FAIL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_USER_JSON_LOAD;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8 {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_PATH \u003d \"data/main/topics.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String USER_PATH \u003d \"data/main/user.json\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private MenuParser menuParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicsStorage topicsStorage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private UserStorage userStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private LogStorage logStorage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Eduke8(String dataPath, String logPath, String userPath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarkList \u003d new BookmarkList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataLoading();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicsStorage \u003d new TopicsStorage(dataPath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            logStorage \u003d new LogStorage(logPath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            logStorage.save();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicList \u003d new TopicList(topicsStorage.load());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (ParseException | IOException | ClassCastException | NullPointerException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(ERROR_STORAGE_LOAD_FAIL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, ERROR_STORAGE_LOAD_FAIL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.INFO, e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        userStorage \u003d new UserStorage(userPath, topicList, bookmarkList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userStorage.load();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IOException | ParseException | ClassCastException | NullPointerException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(ERROR_USER_JSON_LOAD);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, ERROR_USER_JSON_LOAD);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.INFO, e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataLoaded();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        menuParser \u003d new MenuParser(bookmarkList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        runCommandLoopUntilExit();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printGreetMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void runCommandLoopUntilExit() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String userInput \u003d ui.getInputFromUser();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Command command \u003d menuParser.parseCommand(topicList, userInput);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.execute(topicList, ui);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            saveUserData();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataSaving();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        saveUserData();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printDataSaved();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private void saveUserData() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            userStorage.save();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printError(ERROR_STORAGE_SAVE_FAIL);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, ERROR_STORAGE_SAVE_FAIL);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        new Eduke8(DATA_PATH, LOG_PATH, USER_PATH).run();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "kstonekuan": 83,
      "anqi20": 28,
      "-": 5,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/bookmark/BookmarkList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.EditableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents the structure that stores the bookmarked questions."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class BookmarkList implements DisplayableList, EditableList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e bookmarks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public BookmarkList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return bookmarks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void add(Displayable question) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert question !\u003d null;  // Exception in future if user can add question"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarks.add(question);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ((Question) question).markAsBookmarked();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable delete(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert (index \u003e\u003d 0 \u0026\u0026 index \u003c bookmarks.size());   // Exception in future if user can delete question"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return bookmarks.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Displayable find(String description) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Displayable question : bookmarks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(question.getDescription())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return question;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return bookmarks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 11,
      "Zhi-You": 1,
      "josephhhhhhhhh": 41
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AboutCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.stats.Stats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents the specific command that prints a message to the user with a description of what the program does."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class AboutCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public AboutCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printAbout();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5,
      "josephhhhhhhhh": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AnswerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Option option;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public AnswerCommand(Option option, Question question) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert option !\u003d null \u0026\u0026 question !\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList optionList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String explanation \u003d question.getExplanation().getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (option.isCorrectAnswer()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printAnswerIsCorrect(explanation);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasAnsweredCorrectly();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                int correctOptionNumber \u003d ((OptionList) optionList).findCorrectOptionIndex() + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                ui.printAnswerIsWrong(correctOptionNumber, explanation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 34,
      "Zhi-You": 1,
      "anqi20": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/BookmarkCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_BOOKMARK_NONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * The specific command to manage bookmarked questions in E-Duke-8."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class BookmarkCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_LIST \u003d \"listing\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_STORE \u003d \"storing\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String BOOKMARK_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private boolean alreadyBookmarked \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private int deleteIndex \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String typeOfBookmarkCommand \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public BookmarkCommand(Question question, String typeOfBookmarkCommand, BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert bookmarkList !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (question.isBookmarked()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            alreadyBookmarked \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            bookmarkList.add(question);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfBookmarkCommand \u003d typeOfBookmarkCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public BookmarkCommand(String typeOfBookmarkCommand, BookmarkList bookmarkList) throws Eduke8Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfBookmarkCommand \u003d typeOfBookmarkCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (bookmarkList.getCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_BOOKMARK_NONE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public BookmarkCommand(int deleteIndex, String typeOfBookmarkCommand, BookmarkList bookmarkList)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (bookmarkList.getCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_BOOKMARK_NONE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfBookmarkCommand \u003d typeOfBookmarkCommand;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int currentIndex \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Displayable question : bookmarkList.getInnerList()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currentIndex++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (currentIndex \u003d\u003d deleteIndex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                Question castedQuestion \u003d (Question) question;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                castedQuestion.markAsNotBookmarked();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarkList.delete(deleteIndex - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (typeOfBookmarkCommand.equals(BOOKMARK_LIST)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printListOfBookmarkedQuestions(bookmarkList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else if (typeOfBookmarkCommand.equals(BOOKMARK_STORE)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (alreadyBookmarked) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                ui.printAlreadyBookmarkedIndicator();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                ui.printBookmarkedIndicator();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else if (typeOfBookmarkCommand.equals(BOOKMARK_DELETE)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printDeletedBookmarkIndicator(deleteIndex);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 7,
      "josephhhhhhhhh": 74
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Carries out the command and returns the outcome of the execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param displayableList an object from a class that extends the DisplayableList interface"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param ui              a Ui object to manage user interactions"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public abstract void execute(DisplayableList displayableList, Ui ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Represents the exit status of the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return isExit the boolean controlling if the program exits or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 18,
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that allows user to terminate the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "josephhhhhhhhh": 14
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that prints out the commands available to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "josephhhhhhhhh": 14
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that displays a question\u0027s hint during a quiz."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public HintCommand(Hint hint) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint !\u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printHint(hint);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint.wasShown();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 22,
      "Zhi-You": 1,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/IncompleteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that prints out messages if a user is unable to finish a question in a quiz by the time limit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class IncompleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int userTimer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public IncompleteCommand(Question question, int userTimer) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.userTimer \u003d userTimer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void execute(DisplayableList optionList, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String explanation \u003d question.getExplanation().getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            int correctOptionNumber \u003d ((OptionList) optionList).findCorrectOptionIndex() + 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printIncompleteAnswer(correctOptionNumber, explanation, userTimer);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 30,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that indicates by a printed message that an error was encountered while parsing the user\u0027s input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printError(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "anqi20": 4,
      "josephhhhhhhhh": 16
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/NoteCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that manages a user\u0027s Notes in E-Duke-8."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class NoteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String NOTE_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String typeOfNoteCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private TopicList topics;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public NoteCommand(String typeOfNoteCommand, TopicList topics) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.typeOfNoteCommand \u003d typeOfNoteCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        switch (typeOfNoteCommand) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_ADD):"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printAddNote(topics);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_DELETE):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printDeleteNote(topics);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (NOTE_LIST):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.printListNote(topics);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 40,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/QuizCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.quiz.SingleTopicQuiz;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific command that manages the construction of quizzes for the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private int numOfQuestions;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private String topicName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int userTimer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public QuizCommand(TopicList topicList, int numOfQuestions, String topicName, Ui ui, BookmarkList bookmarks,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                       int userTimer) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.numOfQuestions \u003d numOfQuestions;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicName \u003d topicName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.userTimer \u003d userTimer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, numOfQuestions, bookmarks, userTimer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            singleTopicQuiz.startQuiz(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 3,
      "anqi20": 5,
      "josephhhhhhhhh": 42
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/StatsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.stats.Stats;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCommand(TopicList topicList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        new Stats(topicList).showStatsToUser(ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 23
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TextbookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TextbookCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TextbookCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printTextbook();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5,
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TopicsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents the specific command that lists the topics available in E-Duke-8."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TopicsCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TopicsCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert displayableList !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ((TopicList) displayableList).showTopics(ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 4,
      "joelngyx": 1,
      "josephhhhhhhhh": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/Displayable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Displayable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void markAsShown();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    boolean wasShown();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 10
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/DisplayableList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface DisplayableList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e getInnerList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    Displayable find(String description) throws Eduke8Exception;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    int getCount();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/EditableList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface EditableList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void add(Displayable displayable);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    Displayable delete(int index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 6,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/Eduke8Exception.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8Exception extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Eduke8Exception(String exceptionMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 7
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/ExceptionMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class ExceptionMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_STORAGE_LOAD_FAIL \u003d \"Oh no! An error has occurred when accessing the file.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"Please check that you have the required files for operation.\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"If issues persist please follow the instructions in the\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \" user guide for troubleshooting.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_STORAGE_SAVE_FAIL \u003d \"Error writing to user data file, user data was not saved.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_UNRECOGNIZED_COMMAND \u003d \"Oops! The command cannot be understood.\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"Please enter in \\\"help\\\" to get the list of available commands.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_WRONG_FORMAT \u003d \"Invalid command! The command for quiz is as follows:\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e s/\u003ctime given to complete 1 question\u003e\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"(Topics available can be found using the \\\"topics\\\" command)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_NOT_INDEX \u003d \"Please choose the answer using its index (1,2,3 or 4)!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \"Please choose only options 1, 2, 3 or 4\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_INVALID_QUESTION_NUMBER \u003d \"The number of quiz questions\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \" must be more than 0!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"There is not enough questions in the topic for the quiz!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_TOPIC_DOES_NOT_EXIST \u003d \"No such topic exists, did you spell it correctly?\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"Enter in \\\"topics\\\" to get the list of topics.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUESTION_DOES_NOT_EXIST \u003d \"No such question exists, did you spell it correctly?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_OPTION_DOES_NOT_EXIST \u003d \"No such option exists, did you spell it correctly?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_NO_RIGHT_ANSWER \u003d \"Error with question: No right answer specified\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_NOTE_WRONG_FORMAT \u003d \"Invalid command! The command for note is as follows:\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"\u0027note add\u0027 or \u0027note delete\u0027 or \u0027note list\u0027\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_TIMER_NEGATIVE \u003d \"Please choose a timer that is greater than 0!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_TIMER_TOO_LONG \u003d \"The highest time you can choose is 1000.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"Please choose something less than or equals to that!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_PREFACE \u003d \"An issue occurred with loading the questions.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_QUESTION \u003d \"The question \u0027\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_TOPIC \u003d \"\u0027 in the topic \u0027\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_NOT_FOUR_OPTIONS \u003d \"\u0027 does not have exactly 4 options.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_NO_CORRECT \u003d \"\u0027 has no correct answer.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_TOO_MANY_CORRECT \u003d \"\u0027 should not have more than 1 correct answer.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_BLANK \u003d \"The topic or question should not be blank.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_TOPICS_JSON_DUPLICATE \u003d \"The topics and questions should not be duplicated.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_USER_JSON_LOAD \u003d \"An error with loading user data has occurred due to \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"modification of the topics or user data.\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"Affected user data will be erased.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String ERROR_BOOKMARK_DELETE_NFE \u003d \"Please type in an integer into the index number field!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String ERROR_BOOKMARK_DELETE_IOB_ERROR \u003d \"Please choose an appropriate index number to be \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            + \"deleted from the list!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_BOOKMARK_NONE \u003d \"You currently do not have any bookmarks stored.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String ERROR_BOOKMARK_INCORRECT_COMMAND \u003d \"Invalid command! The command for bookmark in the \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"main menu is as follows:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"\u0027bookmark list\u0027 or \u0027bookmark delete \u003cindex number of bookmark to delete\u003e\u0027\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 17,
      "Zhi-You": 7,
      "anqi20": 21,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/explanation/Explanation.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.explanation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * Represents an explanation of a certain question."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class Explanation implements Displayable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Explanation(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the explanation of the question."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Description of Explanation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Marks explanation as shown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns a boolean variable indicating if the explanation was shown before."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Indication of whether the explanation was shown before."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 6,
      "anqi20": 39
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/hint/Hint.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Hint implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Hint(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the description of the hint."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Hint information."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this hint as being used by the user when attempting a question."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the hint was shown to the user before."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of whether the hint was shown before or not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 25,
      "kstonekuan": 17
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/note/Note.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Note implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private String noteText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Note(String description, String noteText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert (description !\u003d null);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert (noteText !\u003d null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.noteText \u003d noteText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the description (which is the title) of the note."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Marks the note as shown."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns a boolean variable indicating if the note was shown to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return boolean wasShown."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the text in inputted into the note by the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return String noteText."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getNoteText() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.noteText;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "joelngyx": 48
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/note/NoteList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.EditableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class NoteList implements DisplayableList, EditableList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e notes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static String INVALID_INT \u003d \"Invalid index\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public NoteList(ArrayList\u003cDisplayable\u003e notes) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Adds a Displayable object into the NoteList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param note A note, which is an object that implements the Displayable interface."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void add(Displayable note) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        notes.add(note);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Deletes a Displayable object (specified with the provided int index) from the NoteList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param index An index, which indicates which note in the NoteList to is to be deleted."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Displayable notes.remove(index)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable delete(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert (index \u003e 0 \u0026\u0026 index \u003c notes.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns all of the notes in the NoteList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Note objects in the NoteList object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Finds a Displayable object that has a description that matches the description provided in the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input A String input, taken from the User\u0027s input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Note object in the NoteList that matches the description provided in input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Displayable find(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable note : notes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (input.equalsIgnoreCase(note.getDescription())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return note;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the Note that has the provided index, in their respective NoteLists."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param index is used to identify the Note object to be fetched."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Note object in the NoteList that matches the index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Note get(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return (Note) notes.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the total number of Note objects in a NoteList object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return int size of the NoteList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 27,
      "joelngyx": 60
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/Option.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * Represents an option of a certain question."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Option implements Displayable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private boolean isCorrectAnswer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Option(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isCorrectAnswer \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the description of the option."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Option description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Marks this option as shown."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns a boolean variable indicating if the option was shown before."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Indication of whether the option was shown before."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns a boolean variable indicating if the option is the correct answer."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Indication of whether the option is the correct answer."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean isCorrectAnswer() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.isCorrectAnswer;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Marks this option as the correct answer."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void markAsCorrectAnswer() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isCorrectAnswer \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 24,
      "anqi20": 40
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/OptionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_OPTION_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_NO_RIGHT_ANSWER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * Represents a list of 4 options of a certain question."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class OptionList implements DisplayableList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final ArrayList\u003cDisplayable\u003e options;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList(ArrayList\u003cDisplayable\u003e options) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the list of options in the OptionList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return ArrayList of options in the OptionList object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.options;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Finds option with the specific description in the OptionList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @param description Description of option to be found."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Displayable Option"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @throws Eduke8Exception If the option does not exist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String description) throws Eduke8Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable option : options) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(option.getDescription())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return option;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_OPTION_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the index of the correct option in the OptionList object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Index of the correct option in the OptionList object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @throws Eduke8Exception If there is no correct answer in the list of options."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int findCorrectOptionIndex() throws Eduke8Exception {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (int i \u003d 0; i \u003c getCount(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (((Option) options.get(i)).isCorrectAnswer()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        LOGGER.log(Level.WARNING, \"Error with question: No right answer specified\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_NO_RIGHT_ANSWER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the number of options in the OptionList object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Number of options in the OptionList object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return options.size();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "kstonekuan": 35,
      "anqi20": 41
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/MenuParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.AboutCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.command.NoteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.command.QuizCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.StatsCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.TextbookCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.TopicsCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_BOOKMARK_INCORRECT_COMMAND;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_WRONG_FORMAT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_TIMER_NEGATIVE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_BOOKMARK_DELETE_NFE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_BOOKMARK_DELETE_IOB_ERROR;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_NOTE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_UNRECOGNIZED_COMMAND;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_TIMER_TOO_LONG;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Parses user input from the main menu, in order to execute the correct option."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class MenuParser implements Parser {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TOPIC_INDICATOR \u003d \"t/\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TIMER_INDICATOR \u003d \"s/\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String NUMBER_OF_QUESTIONS_INDICATOR \u003d \"n/\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_QUESTIONS_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_TOPIC_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LENGTH_OF_TIMER_INDICATOR \u003d 2;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_LIST \u003d \"listing\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_ABOUT \u003d \"about\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_TOPICS \u003d \"topics\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_TEXTBOOK \u003d \"textbook\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_QUIZ \u003d \"quiz\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String COMMAND_NOTE \u003d \"note\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String COMMAND_BOOKMARK_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String COMMAND_BOOKMARK_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final int BOOKMARK_DELETE_COMMAND_ARR_SIZE \u003d 3;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final int BOOKMARK_LIST_COMMAND_ARR_SIZE \u003d 2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_STATS \u003d \"stats\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_NOTE_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_NOTE_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_NOTE_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses user input while user is in the main menu."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @params bookmarkList a list of stored bookmarked questions as bookmarked by the user"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public MenuParser(BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses the user input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param topicList the topic list that contains the list of topics available in storage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param userInput the string input typed by the user"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a Command object which when executed will carry out the appropriate action"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Command parseCommand(DisplayableList topicList, String userInput) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.INFO, \"Begin parsing command.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String[] commandArr \u003d userInput.trim().split(SPACE, 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c commandArr.length - 1; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (commandArr[i].equals(\"\") || (i \u003e 0 \u0026\u0026 (commandArr[i].equals(commandArr[i - 1])))) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                int j \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                while (commandArr[i + j].equals(\"\") \u0026\u0026 ((i + j) \u003c commandArr.length - 1)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    j++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                commandArr[i] \u003d commandArr[i + j];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                commandArr[i + j] \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (commandArr[0]) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_ABOUT:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: about command chosen.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new AboutCommand();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: help command chosen.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_TOPICS:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: topics command chosen.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TopicsCommand();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_TEXTBOOK:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: textbook command chosen.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TextbookCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_QUIZ:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int numOfQuestions \u003d 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String topicName \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            int userTimer \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            if ((commandArr.length \u003e 4 \u0026\u0026 (!commandArr[3].contains(SLASH) || !commandArr[4].equals(\"\")))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    || commandArr.length \u003c 4) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return new IncorrectCommand(ERROR_QUIZ_WRONG_FORMAT);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                boolean isUserTimerSet \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                boolean isTopicNameSet \u003d false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                boolean isNumOfQuestionsSet \u003d false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                for (int i \u003d 1; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    if (commandArr[i].contains(TIMER_INDICATOR) \u0026\u0026 !isUserTimerSet) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        userTimer \u003d Integer.parseInt(commandArr[i].substring("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                                commandArr[i].indexOf(TIMER_INDICATOR) + LENGTH_OF_TIMER_INDICATOR));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        isUserTimerSet \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    } else if (commandArr[i].contains(TOPIC_INDICATOR) \u0026\u0026 !isTopicNameSet) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        topicName \u003d commandArr[i].substring("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                                commandArr[i].indexOf(TOPIC_INDICATOR) + LENGTH_OF_TOPIC_INDICATOR);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        isTopicNameSet \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    } else if (commandArr[i].contains(NUMBER_OF_QUESTIONS_INDICATOR) \u0026\u0026 !isNumOfQuestionsSet) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        numOfQuestions \u003d Integer.parseInt(commandArr[i].substring("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                                commandArr[i].indexOf(NUMBER_OF_QUESTIONS_INDICATOR) + LENGTH_OF_QUESTIONS_INDICATOR));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        isNumOfQuestionsSet \u003d true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                if (!(isUserTimerSet \u0026\u0026 isNumOfQuestionsSet \u0026\u0026 isTopicNameSet)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    return new IncorrectCommand(ERROR_QUIZ_WRONG_FORMAT);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                if (userTimer \u003c 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    return new IncorrectCommand(ERROR_QUIZ_TIMER_NEGATIVE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                } else if (userTimer \u003e 1000) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    return new IncorrectCommand(ERROR_QUIZ_TIMER_TOO_LONG);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                LOGGER.log(Level.INFO, \"Parsing complete: quiz command chosen.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return new QuizCommand((TopicList) topicList, numOfQuestions, topicName, ui, bookmarkList, userTimer);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return new IncorrectCommand(ERROR_QUIZ_WRONG_FORMAT);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_BOOKMARK:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: bookmark list command chosen.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (commandArr.length \u003e\u003d BOOKMARK_DELETE_COMMAND_ARR_SIZE"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    \u0026\u0026 commandArr[1].trim().equalsIgnoreCase(COMMAND_BOOKMARK_DELETE)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                int deleteIndex;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    deleteIndex \u003d Integer.parseInt(commandArr[2]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new BookmarkCommand(deleteIndex, commandArr[1], bookmarkList);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new IncorrectCommand(ERROR_BOOKMARK_DELETE_NFE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } catch (IndexOutOfBoundsException iobe) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new IncorrectCommand(ERROR_BOOKMARK_DELETE_IOB_ERROR);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else if (commandArr.length \u003e\u003d BOOKMARK_LIST_COMMAND_ARR_SIZE"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    \u0026\u0026 commandArr[1].trim().equalsIgnoreCase(COMMAND_BOOKMARK_LIST)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new BookmarkCommand(BOOKMARK_LIST, bookmarkList);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return new IncorrectCommand(ERROR_BOOKMARK_INCORRECT_COMMAND);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case COMMAND_NOTE:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                if (commandArr[1].equalsIgnoreCase(COMMAND_NOTE_ADD) || commandArr[1]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                        .equalsIgnoreCase(COMMAND_NOTE_DELETE) || commandArr[1].equals(COMMAND_NOTE_LIST)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Parsing complete: note command chosen\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    return new NoteCommand(commandArr[1], (TopicList) topicList);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                return new IncorrectCommand(ERROR_NOTE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_EXIT:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: exit command chosen.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        case COMMAND_STATS:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: stats command chosen.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new StatsCommand((TopicList) topicList);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.WARNING, \"Parsing Error: Unrecognised command was entered.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return new IncorrectCommand(ERROR_UNRECOGNIZED_COMMAND);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 33,
      "Zhi-You": 14,
      "anqi20": 45,
      "joelngyx": 10,
      "josephhhhhhhhh": 102
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    Command parseCommand(DisplayableList displayableList, String userInput) throws Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/QuizParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_NOT_INDEX;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Parses user input during a quiz activity."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class QuizParser implements Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String COMMAND_BOOKMARK \u003d \"bookmark\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String BOOKMARK_STORE \u003d \"storing\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int userTimer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public QuizParser(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void setQuestion(Question question, int userTimer) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert question !\u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.userTimer \u003d userTimer;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses the user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param optionList the option list that contains the list of options available for the current question"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param userInput  the string input typed by the user"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a Command object which when executed will carry out the appropriate action"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command parseCommand(DisplayableList optionList, String userInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (COMMAND_HINT.equals(userInput)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: hint command chosen.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new HintCommand(question.getHint());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else if (COMMAND_BOOKMARK.equals(userInput)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: bookmark command chosen.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new BookmarkCommand(question, BOOKMARK_STORE, bookmarks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            if (userInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                LOGGER.log(Level.INFO, \"Timer\u0027s up.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return new IncompleteCommand(question, userTimer);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            int chosenIndex \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Option chosenOption \u003d (Option) options.get(chosenIndex);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new AnswerCommand(chosenOption, question);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"A non-number was given when answering question.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_NOT_INDEX);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"An index out of bounds was given when answering question.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 39,
      "Zhi-You": 3,
      "anqi20": 16,
      "josephhhhhhhhh": 23
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/Question.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a question of a certain topic. A \u003ccode\u003eQuestion\u003c/code\u003e object is represented by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * its description, options, hint and explanation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Question implements Displayable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private OptionList optionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Explanation explanation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private boolean wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private boolean isBookmarked;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Question(String description, OptionList optionList, Hint hint, Explanation explanation) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert optionList !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.optionList \u003d optionList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.explanation \u003d explanation;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isBookmarked \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the description of the question."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Question information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as shown, in other words, attempted by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns a boolean variable indicating if the question was already attempted before."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Indication of whether the question was attempted before or not."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the multiple options of the question."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return An arraylist of options pertaining to this question."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList getOptionList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the hint tied to the question."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Details of the hint."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Hint getHint() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * Returns the explanation tied to the question."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Details of the explanation."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Explanation getExplanation() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return explanation;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the user had requested for a hint for this question."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of whether the hint for this question was shown before."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasHintShown() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint.wasShown();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the question was answered correctly."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return True if question was answered correctly, false otherwise."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean wasAnsweredCorrectly() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as answered correctly."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markAsAnsweredCorrectly() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the question was bookmarked before by the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of whether the question was bookmarked."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public boolean isBookmarked() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return isBookmarked;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as bookmarked by the user."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void markAsBookmarked() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isBookmarked \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Marks this question as not bookmarked by the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void markAsNotBookmarked() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isBookmarked \u003d false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 74,
      "kstonekuan": 32,
      "anqi20": 14,
      "josephhhhhhhhh": 18
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuestionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuestionList implements DisplayableList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e questions;  // List of questions for a particular topic"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuestionList(ArrayList\u003cDisplayable\u003e questions) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questions !\u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questions.size() \u003e 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.questions \u003d questions;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the number of questions in the QuestionList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions in the QuestionList object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns all of the questions in the QuestionList object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return ArrayList of questions in the QuestionList object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Finds the question with the specified description in the QuestionList object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param description Description of the question to be found."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "     * @return Displayable Question"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String description) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable question : questions) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equalsIgnoreCase(question.getDescription())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                return question;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 50,
      "kstonekuan": 2,
      "anqi20": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuizQuestionsManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INVALID_QUESTION_NUMBER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuizQuestionsManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final Random RANDOM \u003d new Random();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cQuestion\u003e quizQuestions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private int currentQuestionNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Constructs a QuizQuestionsManager object with the user\u0027s desired number of questions in the quiz"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * and his / her choice of topic."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If the inputs are valid, the questions for the quiz will be selected at random from all of the questions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in the specified topic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param numberOfQuestionsForQuiz User\u0027s desired number of questions for the quiz attempt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param questionsInTopic An ArrayList of all of the questions from the topic the user has chosen for the quiz"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws Eduke8Exception If the number of questions specified for the quiz is more than the number of"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *     questions in the topic, or zero or less."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuizQuestionsManager(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questionsInTopic !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questionsInTopic.size() \u003e 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        currentQuestionNumber \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizQuestions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        setQuizQuestions(numberOfQuestionsForQuiz, questionsInTopic);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void setQuizQuestions(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                  ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003c\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INVALID_QUESTION_NUMBER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003e questionsInTopic.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        setRandomQuestions(numberOfQuestionsForQuiz, questionsInTopic);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        LOGGER.log(Level.INFO, numberOfQuestionsForQuiz + \" questions out of \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + questionsInTopic.size() + \" topic questions have been selected for the quiz\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the next question in the quiz and indicates that another question has been shown to the user by"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * incrementing the current question number of the quiz."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Next question in the quiz."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Question getNextQuestion() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Automatically increases question count when a question is shown to the user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.get(currentQuestionNumber++);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the current question number as an indication of how many questions have been done by the user in"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the current quiz instance."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Current question number."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCurrentQuestionNumber() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns an indication of whether the user has attempted all the questions in the quiz."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * The boolean variable returned is used to determine if the quiz should end."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Boolean variable indicating if user has attempted all the questions in the quiz."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean areAllQuestionsAnswered() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber \u003d\u003d quizQuestions.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getQuizQuestionsCount() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void setRandomQuestions(int numberOfQuestionsForQuiz, ArrayList\u003cDisplayable\u003e questionsInTopic) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Stores the questions\u0027 indexes selected from the topic question list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cInteger\u003e integersChosen \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (quizQuestions.size() \u003c numberOfQuestionsForQuiz) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Gets a random question that is within the bounds of the size of the available question list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            int randomQuestionIndex \u003d RANDOM.nextInt(questionsInTopic.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // To ensure we do not pick the same question again"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (integersChosen.contains(randomQuestionIndex)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                LOGGER.log(Level.INFO, \"QuizQuestionsManager has chosen a repeated question\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // choose a random question from the question list and add it to the questionsInTopic for quiz"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            quizQuestions.add((Question) questionsInTopic.get(randomQuestionIndex));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            integersChosen.add(randomQuestionIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 103,
      "kstonekuan": 9,
      "anqi20": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Quiz {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void startQuiz(Ui ui) throws Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/SingleTopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.QuizParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuizQuestionsManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuiz implements Quiz {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int CONVERSION_FROM_SECONDS_TO_MILLIS \u003d 1000;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private int numberOfQuestions;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuizParser quizParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private int userTimer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public SingleTopicQuiz(Topic topic, int numberOfQuestions, BookmarkList bookmarks, int userTimer) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.numberOfQuestions \u003d numberOfQuestions;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.bookmarks \u003d bookmarks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.userTimer \u003d userTimer;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizParser \u003d new QuizParser(bookmarks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Starts a quiz with a single topic."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @param ui  Ui to print quiz messages."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws Eduke8Exception if numberOfQuestions used to construct QuizQuestionsManager \u003c\u003d 0"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *     or \u003e number of question in the topic."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void startQuiz(Ui ui) throws Eduke8Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"New quiz started.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(numberOfQuestions, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert !quizQuestionsManager.areAllQuestionsAnswered();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printStartQuizPage(numberOfQuestions, topic.getDescription());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        goThroughQuizQuestions(ui, quizQuestionsManager);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printEndQuizPage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Quiz ended.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void goThroughQuizQuestions(Ui ui, QuizQuestionsManager quizQuestionsManager) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (!quizQuestionsManager.areAllQuestionsAnswered()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Question question \u003d quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printQuestion(question, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsShown();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasShown();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            OptionList optionList \u003d question.getOptionList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            for (int i \u003d 0; i \u003c options.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printOption((Option) options.get(i), i + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            quizParser.setQuestion(question, userTimer);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printQuizInputMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            long startTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            Command command \u003d getCommand(ui, optionList, userTimer);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            assert (command instanceof AnswerCommand || command instanceof HintCommand"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    || command instanceof BookmarkCommand || command instanceof IncompleteCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            while (!(command instanceof AnswerCommand || command instanceof IncompleteCommand)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                command.execute(optionList, ui);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                ui.printQuizInputMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                long timePassed \u003d (System.currentTimeMillis() - startTime) / CONVERSION_FROM_SECONDS_TO_MILLIS;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                command \u003d getCommand(ui, optionList, (int) (userTimer - timePassed));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                if (command instanceof IncorrectCommand) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Incorrect command given\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                } else if (command instanceof HintCommand) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Hint shown\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                } else if (command instanceof BookmarkCommand) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Question bookmarked\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            LOGGER.log(Level.INFO, \"Question answered or time\u0027s up\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            command.execute(optionList, ui);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            //User has to press enter so that the next question will be shown "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            boolean enterIsUsed \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            while (!enterIsUsed \u0026\u0026 !quizQuestionsManager.areAllQuestionsAnswered()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                enterIsUsed \u003d ui.getEnterFromUser();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Command getCommand(Ui ui, OptionList optionList, int timeLeft) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String userInput \u003d ui.getQuizInputFromUser(timeLeft);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return quizParser.parseCommand(optionList, userInput);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 77,
      "Zhi-You": 16,
      "anqi20": 34,
      "josephhhhhhhhh": 8
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/Stats.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Stats {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private UserStatsCalculator userStatsCalculator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Stats(TopicList topicList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        topics \u003d topicList.getInnerList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        userStatsCalculator \u003d new UserStatsCalculator(topics);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Displays user\u0027s statistics for past quiz attempts. Overall statistics for all the past quiz"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * attempts will be printed out first, followed by topic-level statistics."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void showStatsToUser(Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printPointSystemRules();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showPointsEarned(ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showTotalProgression(ui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        showTopicalProgression(ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showPointsEarned(Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printPointsEarned(userStatsCalculator.calculateTotalPointsEarned(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "               userStatsCalculator.calculateTotalPointsAvailable());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showTotalProgression(Ui ui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTotalProgression(userStatsCalculator.calculateOverallProgressionPercentage(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                userStatsCalculator.isProgressionOverHalf());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void showTopicalProgression(Ui ui) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTopicProgressionHeader();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Loop through the different topics to get the stats from each of them individually"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            TopicalStatsCalculator specificTopicStatsCalculator \u003d new TopicalStatsCalculator((Topic) topic);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicDescriptionForStats(topic);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicCompletionLevel("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalQuestionsAttemptCount(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.getTopicQuestionsCount());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicAccuracyLevel(specificTopicStatsCalculator.calculateTopicalQuestionsCorrectCount(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalQuestionsAttemptCount());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicalHintUsage(specificTopicStatsCalculator.calculateTopicalHintUsage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printTopicalPoints(specificTopicStatsCalculator.calculateTopicalPointsEarned(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalPointsAvailable(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    specificTopicStatsCalculator.calculateTopicalProgressionPercentage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 69
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/StatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class StatsCalculator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_PER_QUESTION \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCalculator(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // For TopicalStatsCalculator"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public StatsCalculator() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculatePointsEarnedForQuestion(Question question) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert question !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (!question.wasAnsweredCorrectly()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else if (question.wasAnsweredCorrectly() \u0026\u0026 question.wasHintShown()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Given the user\u0027s progress and the available progress, calculates the percentage of progress for the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * User progress is expected to be 0 or more, and total available progress is expected to always be bigger than 0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * User progress is also expected to always be lesser than or equal to the total available progress."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Percentage of progression of the user given his or her progress and the total available progress."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculateProgressionPercentage(int userProgress, int totalAvailableProgress) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert userProgress \u003e\u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert totalAvailableProgress \u003e 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert userProgress \u003c\u003d totalAvailableProgress;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        double progressionLevel \u003d (double) userProgress / totalAvailableProgress;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int progressionLevelPercentage \u003d (int) (progressionLevel * 100);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return progressionLevelPercentage;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected int calculateTotalQuestionCount() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalQuestionCount \u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            totalQuestionCount +\u003d topicQuestionList.getCount();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalQuestionCount;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 69
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/TopicalStatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TopicalStatsCalculator extends StatsCalculator {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private QuestionList topicQuestionList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TopicalStatsCalculator(Topic topic) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.topicQuestionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the number of questions attempted by the user from previous quizzes for the particular topic."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions attempted by the user for a particular topic."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalQuestionsAttemptCount() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return getTopicalAttemptedQuestions().size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the questions in the topic and returns an ArrayList of questions"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * that have been shown to the user before in previous quizzes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions attempted by the user for a particular topic."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getTopicalAttemptedQuestions() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return (ArrayList\u003cDisplayable\u003e) topicQuestionList.getInnerList().stream()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .filter(Displayable::wasShown)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getTopicQuestionsCount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return topicQuestionList.getCount();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions for a particular topic and calculate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the number of questions that are marked as correct."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of questions correctly answered by the user for a particular topic."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalQuestionsCorrectCount() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int questionCorrectCount \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (((Question) question).wasAnsweredCorrectly()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                questionCorrectCount++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questionCorrectCount;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions for a particular topic and calculate the total number"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * of hints used for them from previous quiz attempts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of hints used by the user in the quizzes the user has done before."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalHintUsage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int hintUsageCount \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (((Question) question).wasHintShown()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                hintUsageCount++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return hintUsageCount;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions in a topic and calculate the points earned by the user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Points earned, for a particular topic, by the user from correct answers in past quiz attempts."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalPointsEarned() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsEarned \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question : attemptedQuestions) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            pointsEarned +\u003d calculatePointsEarnedForQuestion((Question) question);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return pointsEarned;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the total possible amount of points that the user can earn from all of the questions available"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in a topic, based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Total available points the user can earn from all of the questions in a certain topic."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalPointsAvailable() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsAvailable \u003d getTopicQuestionsCount() * POINTS_PER_QUESTION;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return pointsAvailable;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the percentage of progress of a particular topic based on the points earned by the user and"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the total possible amount of points he / she could have earned."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return A percentage indicating user\u0027s progress of a certain topic."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTopicalProgressionPercentage() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateProgressionPercentage(calculateTopicalPointsEarned(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                calculateTopicalPointsAvailable());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 103,
      "kstonekuan": 17
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/stats/UserStatsCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class UserStatsCalculator extends StatsCalculator {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public UserStatsCalculator(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(topics);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Iterates through the attempted questions in all topics and calculate the points earned by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * based on the scoring system of E-Duke-8."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Points earned, from all topics, by the user from correct answers in past quiz attempts."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTotalPointsEarned() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsGained \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ArrayList\u003cDisplayable\u003e questions \u003d topicQuestionList.getInnerList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            for (int i \u003d 0; i \u003c questions.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Question question \u003d (Question) questions.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                totalPointsGained +\u003d calculatePointsEarnedForQuestion(question);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalPointsGained;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the total possible amount of points that the user can earn from all of the questions available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * in all of the topics available in E-Duke-8, based on the scoring system."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Total available points the user can earn from all of the questions from all topics."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateTotalPointsAvailable() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d calculateTotalQuestionCount() * POINTS_PER_QUESTION;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return totalPointsAvailable;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Calculates the percentage of progress in E-Duke-8 based on the points earned by the user and"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the total possible amount of points he / she could have earned from all the questions in E-Duke-8."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return A percentage indicating user\u0027s progress in E-Duke-8."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int calculateOverallProgressionPercentage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateProgressionPercentage(calculateTotalPointsEarned(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                calculateTotalPointsAvailable());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Determines if user\u0027s progress is over fifty percent so that a different message can be"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * displayed to the user depending on his level of progress."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return A boolean variable indicating if the user\u0027s progress is over half."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean isProgressionOverHalf() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return calculateOverallProgressionPercentage() \u003e\u003d 50;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 74
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LocalStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class LocalStorage implements Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_TOPIC \u003d \"topic\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_QUESTIONS \u003d \"questions\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_DESCRIPTION \u003d \"description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_OPTIONS \u003d \"options\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_EXPLANATION \u003d \"explanation\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_CORRECT \u003d \"correct\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_NOTES \u003d \"notes\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_BOOKMARKED \u003d \"bookmarked\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String KEY_TEXT \u003d \"text\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PATH_SEPARATOR \u003d \"/\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected String filePath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected LocalStorage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert filePath !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Use relative path for Unix systems"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.filePath \u003d appendRelativePath(this.filePath, filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return createFileIfNotExists();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws IOException, ParseException, Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected JSONArray getJsonArrayFromFile(String fallbackResource) throws IOException, ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //JSON parser object to parse read file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            FileReader reader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            //Read JSON file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return (JSONArray) jsonParser.parse(reader);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            InputStream is \u003d getClass().getResourceAsStream(fallbackResource);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (is \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            InputStreamReader reader \u003d new InputStreamReader(is, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            //Read JSON file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return (JSONArray) jsonParser.parse(reader);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String appendRelativePath(String originalPath, String relativePath) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d originalPath;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d relativePath.split(PATH_SEPARATOR);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private File createFileIfNotExists() throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 94
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LogStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorage extends LocalStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public LogStorage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Sets up saving logs to file instead of default print to console."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns file where the logs are saved."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Log file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException If the file is not found or cannot be written."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Only log severe to console"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ConsoleHandler ch \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ch.setLevel(Level.SEVERE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(ch);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Log all to the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d super.save();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileHandler fh \u003d new FileHandler(file.getAbsolutePath());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(fh);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Logging to file started\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 45
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    File save() throws IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException, Eduke8Exception;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/TopicsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_BLANK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_DUPLICATE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_NOT_FOUR_OPTIONS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_NO_CORRECT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_PREFACE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_QUESTION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_TOO_MANY_CORRECT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPICS_JSON_TOPIC;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicsStorage extends LocalStorage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String FALLBACK_TOPICS_JSON_PATH \u003d \"/main/resources/topics.json\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasCorrectAnswerMarked;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String currentQuestionDescription;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String currentTopicTitle;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final HashSet\u003cString\u003e topicTitles;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final HashSet\u003cString\u003e questionDescriptions;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicsStorage(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasCorrectAnswerMarked \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        currentQuestionDescription \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        currentTopicTitle \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicTitles \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionDescriptions \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns topics loaded from a local file in JSON format."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Topics loaded into an ArrayList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException  If the file is not found or cannot be read."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ParseException  If the file contents cannot be parsed as a JSON."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ClassCastException If the the nesting of arrays and objects in the JSON is wrong"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws NullPointerException If the keys required are not present in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws Eduke8Exception      If the file has been tampered with wrongly."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws Eduke8Exception, IOException, ParseException, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topicsAsJsonArray \u003d getJsonArrayFromFile(FALLBACK_TOPICS_JSON_PATH);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topicsAsObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object topic : topicsAsJsonArray) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicsAsObjects.add(parseToTopicObject((JSONObject) topic));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topicsAsObjects.get(0) instanceof Topic;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Topics loaded from file\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicsAsObjects;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic parseToTopicObject(JSONObject topic)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        currentTopicTitle \u003d ((String) topic.get(KEY_TOPIC)).trim().replaceAll(\" \", \"_\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        checkIfBlankOrDuplicate(currentTopicTitle, topicTitles);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questionsAsJsonArray \u003d (JSONArray) topic.get(KEY_QUESTIONS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questionsAsObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object question : questionsAsJsonArray) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionsAsObjects.add(parseToQuestionObject((JSONObject) question));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert questionsAsObjects.get(0) instanceof Question;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questionsAsObjects);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(currentTopicTitle, questionList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question parseToQuestionObject(JSONObject question)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        currentQuestionDescription \u003d ((String) question.get(KEY_DESCRIPTION)).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        checkIfBlankOrDuplicate(currentQuestionDescription, questionDescriptions);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray optionsAsJsonArray \u003d (JSONArray) question.get(KEY_OPTIONS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasCorrectAnswerMarked \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e optionsAsObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object option : optionsAsJsonArray) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            optionsAsObjects.add(parseToOptionObject((JSONObject) option));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (optionsAsObjects.size() !\u003d 4) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throw new Eduke8Exception(ERROR_TOPICS_JSON_PREFACE"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + System.lineSeparator() + ERROR_TOPICS_JSON_QUESTION + currentQuestionDescription"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ERROR_TOPICS_JSON_TOPIC + currentTopicTitle"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ERROR_TOPICS_JSON_NOT_FOUR_OPTIONS);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!wasCorrectAnswerMarked) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throw new Eduke8Exception(ERROR_TOPICS_JSON_PREFACE"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + System.lineSeparator() + ERROR_TOPICS_JSON_QUESTION + currentQuestionDescription"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ERROR_TOPICS_JSON_TOPIC + currentTopicTitle"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ERROR_TOPICS_JSON_NO_CORRECT);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionsAsObjects.get(0) instanceof Option;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d new OptionList(optionsAsObjects);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String hintDescription \u003d ((String) question.get(KEY_HINT)).trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(hintDescription);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String explanationDescription \u003d ((String) question.get(KEY_EXPLANATION)).trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Explanation explanation \u003d new Explanation(explanationDescription);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Question(currentQuestionDescription, optionList, hint, explanation);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private void checkIfBlankOrDuplicate(String description, HashSet\u003cString\u003e existingDescriptions)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throw new Eduke8Exception(ERROR_TOPICS_JSON_PREFACE"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + System.lineSeparator() + ERROR_TOPICS_JSON_BLANK);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isNotDuplicate \u003d existingDescriptions.add(description.toLowerCase());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!isNotDuplicate) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throw new Eduke8Exception(ERROR_TOPICS_JSON_PREFACE"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + System.lineSeparator() + ERROR_TOPICS_JSON_DUPLICATE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Option parseToOptionObject(JSONObject option)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String optionDescription \u003d ((String) option.get(KEY_DESCRIPTION)).trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isCorrectAnswer \u003d (boolean) option.get(KEY_CORRECT);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option optionAsObject \u003d new Option(optionDescription);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (isCorrectAnswer) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (!wasCorrectAnswerMarked) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                optionAsObject.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                wasCorrectAnswerMarked \u003d true;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                throw new Eduke8Exception(ERROR_TOPICS_JSON_PREFACE"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        + System.lineSeparator() + ERROR_TOPICS_JSON_QUESTION + currentQuestionDescription"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        + ERROR_TOPICS_JSON_TOPIC + currentTopicTitle"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        + ERROR_TOPICS_JSON_TOO_MANY_CORRECT);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionAsObject.isCorrectAnswer() \u003d\u003d isCorrectAnswer;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionAsObject;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 174,
      "anqi20": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/UserStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.stats.TopicalStatsCalculator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_USER_JSON_LOAD;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class UserStorage extends LocalStorage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public UserStorage(String filePath, TopicList topicList, BookmarkList bookmarkList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.bookmarkList \u003d bookmarkList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Saves user attributes to a local file in JSON format from the topicList and bookmarkList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the file where data was written to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return File where data was written to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException If the file is not found or cannot be written to."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public File save() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        file \u003d super.save();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Get all the questions seen before"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topics \u003d new JSONArray();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable topicObject : topicList.getInnerList()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topics.add(parseToTopicJson(topicObject));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Write JSON file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file.getAbsolutePath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        writer.write(topics.toJSONString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"User data saved to file\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Loads user attributes from a local file in JSON format into the topicList and bookmarkList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the topics in the topicList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Topics from the topicList in an ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws IOException          If the file is not found or cannot be read."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ParseException       If the file contents cannot be parsed as a JSON."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws ClassCastException   If the the nesting of arrays and objects in the JSON is wrong"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws NullPointerException If the keys required are not present in the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @throws Eduke8Exception      If the file has been tampered with wrongly."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            throws IOException, ParseException, Eduke8Exception, ClassCastException, NullPointerException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return super.load();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topicsAsJsonArray \u003d getJsonArrayFromFile(null);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cTopic\u003e topicObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object topic : topicsAsJsonArray) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicObjects.add(parseFromTopicJson((JSONObject) topic));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"User data loaded from file\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Topic topicObject : topicObjects) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (topicObject \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                throw new Eduke8Exception(ERROR_USER_JSON_LOAD);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicList.getInnerList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic parseFromTopicJson(JSONObject topic) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topicObject;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            String topicDescription \u003d ((String) topic.get(KEY_TOPIC)).trim().replaceAll(\" \", \"_\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicObject \u003d (Topic) topicList.find(topicDescription);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questions \u003d (JSONArray) topic.get(KEY_QUESTIONS);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (Eduke8Exception | NullPointerException | ClassCastException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Do this before attempting to load notes so user stats are loaded as much as possible first."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cQuestion\u003e questionObjects \u003d loadQuestionAttributes(questions, topicObject);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            notes \u003d (JSONArray) topic.get(KEY_NOTES);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NullPointerException | ClassCastException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cNote\u003e noteObjects \u003d loadNotes(notes, topicObject);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Question questionObject : questionObjects) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (questionObject \u003d\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Note noteObject : noteObjects) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (noteObject \u003d\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicObject;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cNote\u003e loadNotes(JSONArray notes, Topic topicObject) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        NoteList noteList \u003d topicObject.getNoteList();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cNote\u003e noteObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object note : notes) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            noteObjects.add(parseFromNoteJson((JSONObject) note, noteList));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return noteObjects;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Note parseFromNoteJson(JSONObject note, NoteList noteList) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String noteDescription;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String text;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            noteDescription \u003d ((String) note.get(KEY_DESCRIPTION)).trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            text \u003d ((String) note.get(KEY_TEXT)).trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NullPointerException | ClassCastException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Note noteObject \u003d new Note(noteDescription, text);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.add(noteObject);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return noteObject;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cQuestion\u003e loadQuestionAttributes(JSONArray questions, Topic topicObject) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d topicObject.getQuestionList();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cQuestion\u003e questionObjects \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Object question : questions) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionObjects.add(parseFromQuestionJson(questionList, (JSONObject) question));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questionObjects;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question parseFromQuestionJson(QuestionList questionList, JSONObject question) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionObject;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            String questionDescription \u003d ((String) question.get(KEY_DESCRIPTION)).trim();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionObject \u003d (Question) questionList.find(questionDescription);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questionObject.markAsShown();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if ((boolean) question.get(KEY_CORRECT)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                questionObject.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if ((boolean) question.get(KEY_BOOKMARKED)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                if (!questionObject.isBookmarked()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    bookmarkList.add(questionObject);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if ((boolean) question.get(KEY_HINT)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                questionObject.getHint().markAsShown();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NullPointerException | ClassCastException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questionObject;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONObject parseToTopicJson(Displayable topicObject) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONObject topic \u003d new JSONObject();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_TOPIC, topicObject.getDescription());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions \u003d getQuestionsJsonArray((Topic) topicObject);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_QUESTIONS, questions);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes \u003d getNotesJsonArray(((Topic) topicObject).getNoteList());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic.put(KEY_NOTES, notes);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONArray getNotesJsonArray(NoteList noteList) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray notes \u003d new JSONArray();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable noteObject : noteList.getInnerList()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            JSONObject note \u003d parseToNoteJson((Note) noteObject);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            notes.add(note);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private JSONObject parseToNoteJson(Note noteObject) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        JSONObject note \u003d new JSONObject();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        note.put(KEY_DESCRIPTION, noteObject.getDescription());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        note.put(KEY_TEXT, noteObject.getNoteText());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return note;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONArray getQuestionsJsonArray(Topic topicObject) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questions \u003d new JSONArray();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicalStatsCalculator topicalStatsCalculator \u003d new TopicalStatsCalculator(topicObject);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e attemptedQuestions \u003d topicalStatsCalculator.getTopicalAttemptedQuestions();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable questionObject : attemptedQuestions) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            JSONObject question \u003d parseToQuestionJson((Question) questionObject);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            questions.add(question);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questions;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private JSONObject parseToQuestionJson(Question questionObject) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONObject question \u003d new JSONObject();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_DESCRIPTION, questionObject.getDescription());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_CORRECT, questionObject.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_BOOKMARKED, questionObject.isBookmarked());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.put(KEY_HINT, questionObject.wasHintShown());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 246,
      "joelngyx": 12,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Topic implements Displayable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList questionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private NoteList noteList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Topic(String description, QuestionList questionList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert questionList !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.questionList \u003d questionList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.noteList \u003d new NoteList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Topic(String description, QuestionList questionList, NoteList noteList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert questionList !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.questionList \u003d questionList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.noteList \u003d noteList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the Topic description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return description of the Topic object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        markAsShown();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Sets wasShown to be of boolean value \"true\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void markAsShown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns boolean value of the Topic object\u0027s wasShown."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return boolean value of Topic\u0027s wasShown."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return wasShown;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the Topic object\u0027s QuestionList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return QuestionList questionList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public QuestionList getQuestionList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the specified Topic object\u0027s NoteList object."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return NoteList noteList found in this Topic object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public NoteList getNoteList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return noteList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 31,
      "joelngyx": 52
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_TOPIC_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicList implements DisplayableList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert topics.size() \u003e 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Prints out description from Topic objects in TopicList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param ui Ui object is passed into the method so as to access Ui methods."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showTopics(Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui.printTopicList(topics);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns boolean result to indicate if the Topic object exists."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param topicName String topicName is the description of the Topic object to be found, if it exists."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return boolean result."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public boolean doesTopicExist(String topicName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean result \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topics.get(i).getDescription().equalsIgnoreCase(topicName)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                result \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns all Topic objects in the TopicList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return topics."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns a Topic object that has the same description as the input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param topicName which is the description of the Topic object to be found."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Topic topic if the topic is found, null if the topic is not found."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws Eduke8Exception Handles the error should the Topic indicated not exist."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String topicName) throws Eduke8Exception {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (topicName.equalsIgnoreCase(topic.getDescription())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return topic;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        throw new Eduke8Exception(ERROR_TOPIC_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the Topic object which has the same index in the TopicList as the index"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * provided in the input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param i the index of the Topic object that is to be retrieved."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Topic topic."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Topic get(int i) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return (Topic) topics.get(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Returns the number of Topic objects currently in the TopicList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return int number of Topic objects."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19,
      "Zhi-You": 1,
      "anqi20": 3,
      "joelngyx": 67,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.AWTException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.Robot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.awt.event.KeyEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.ExecutionException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.ExecutorService;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.Future;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.concurrent.TimeoutException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": " * Represents the UI class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LAST_OPTION \u003d 4;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int CONVERSION_FROM_SECONDS_TO_MILLIS \u003d 1000;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TEXTBOOK_WEBSITE \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/index.html\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOGO \u003d \" _____        _____\" + System.lineSeparator()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"|  ___| ____ |  _  |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"| |___ |  _ \\\\| |_| |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"|  ___|| | | |  _  |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"| |___ | |_| | |_| |\" + System.lineSeparator()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"|_____||____/|_____|\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"-------------------------------------------------------------------\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"-----------------------------------------------------\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS \u003d \"---------------\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"---------------------------  \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ABOUT \u003d \"E-Duke-8 is a desktop app that helps CS2113/T students learn and\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"understand software engineering and OOP principles through a\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"gamified platform and enhances their \" + \"learning experience.\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"You can attempt bite-sized quizzes based on your choice of topic\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"and access key concepts for easy revision!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"Hello! I\u0027m E-Duke-8!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"What would you like to learn today?\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye bye. Hope you had a fruitful revision and see you soon!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HELP \u003d \"These are the commands that you can use:\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"1) about\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"2) help\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"3) topics\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"4) textbook\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"5) quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e s/\u003ctime given to complete 1 question\u003e\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"6) bookmark list / bookmark delete \u003cindex number of bookmark to delete\u003e\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"7) stats\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"8) note add / note delete / note list\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"9) exit\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_START \u003d \"Start of quiz:\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_END \u003d \"This is the end of the quiz!\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"Hope you have learnt something new!\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"You can view how well you have done using the \u0027stats\u0027 command!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG \u003d \"Oops! The correct answer is \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG_SECOND \u003d \"! Do visit the textbook to read up more.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_ANSWER_CORRECT \u003d \"Great Job! That is the correct answer! Keep it up!\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_TEXTBOOK \u003d \"The textbook for this module is available at:\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + TEXTBOOK_WEBSITE;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_HINT \u003d \"Hint: \";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String POINT_SYSTEM_RULE \u003d \"Point system in E-Duke-8: For correct answers, \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + \"you earn 2 points if you did not request for hint, \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            + System.lineSeparator() + \"and 1 point if you did. No point is awarded for wrong answers.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_GET_INPUT_FROM_USER \u003d \"Enter your command or \u0027help\u0027: \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_GET_INPUT_FROM_USER_QUIZ \u003d \"Enter your answer, \u0027hint\u0027 or \u0027bookmark\u0027: \";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_TOPIC_LIST \u003d \"These are the available topics and the number of \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"available questions in each:\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_EXPLANATION \u003d \"Explanation:\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_NOTE_LIST_NONE \u003d \"There are no notes for this topic!\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_PRINT_NOTE_LIST \u003d \"These are the notes for this topic: \";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_QUIZ_TOPIC_CHOSEN \u003d \"The chosen topic is: \";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_QUESTION_CHOSEN \u003d \"You have chosen to complete \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_QUESTION_CHOSEN_SECOND \u003d \" question\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_INDICATOR \u003d \"Bookmarked this question!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_LIST \u003d \"This is your list of bookmarks: \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String MESSAGE_BOOKMARKED_ALREADY_INDICATOR \u003d \"This has already been bookmarked.\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_DELETED_PART_ONE \u003d \"Bookmark number \";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_DELETED_PART_TWO \u003d \" will be deleted right away!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final String MESSAGE_BOOKMARK_CORRECT_ANS_INDICATOR \u003d \" [Correct Answer] \";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String CLOSE_BRACKET \u003d \") \";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String OPEN_SQUARE_BRACKET \u003d \"[\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String CLOSE_SQUARE_BRACKET \u003d \"] \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT \u003d \".\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT_SPACE \u003d \". \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String DOT_PLURAL \u003d \"s.\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_TOPIC \u003d \"Enter the topic you would like to add a note to:\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_NOTE_TITLE \u003d \"Enter a suitable title for your note\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String ADD_NOTE_PROMPT_FOR_NOTE_BODY \u003d \"Enter the contents of your note:\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_SUCCESSFULLY \u003d \"Your note has been added!\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String ADD_NOTE_UNSUCCESSFULLY \u003d \"Your note was not added successfully.\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" Please try again!\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INVALID_TOPIC_NAME \u003d \"Please enter a valid topic name\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_PROMPT_FOR_TOPIC \u003d \"Which topic does the note you would like to delete\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" belong to?\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_PROMPT_FOR_INDEX \u003d \"What is the index of the note that you would like\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \" to delete?\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_SUCCESSFULLY \u003d \"The note has been deleted!\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String DELETE_NOTE_UNSUCCESSFULLY \u003d \"The note was not deleted successfully. Try again!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String INVALID_TOPIC_INDEX \u003d \"Please enter a valid topic index\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String LIST_NOTE_PROMPT \u003d \"Which topic\u0027s notes would you like to view?\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String INPUT_ERROR \u003d \"Please provide a valid topic!\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS \u003d \"You have earned \";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS_SECOND \u003d \" points out of a total of \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_SHOW_POINTS_THIRD \u003d \" points available!\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_USER_PROGRESS \u003d \"Therefore, your E-Duke-8 progress is \";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_PRAISE \u003d \"Good job! Keep it up!\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_MOTIVATE \u003d \"Let\u0027s do some quizzes!\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String TOPICS_PROGRESSION_SECTION_HEADER \u003d \"Topics\u0027 Progression\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String OUT_OF_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_QUESTIONS_DONE \u003d \" questions done\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_CORRECT_QUESTIONS_ANSWERED \u003d \" questions correctly answered\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HINT_USED_SINGULAR \u003d \" hint used\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_HINT_USED_PLURAL \u003d \" hints used\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_POINTS_EARNED_OUT_OF \u003d \" points earned / \";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PERCENTAGE_SIGN \u003d \"%\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_AVAILABLE_WORD \u003d \" available \";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_INCOMPLETE \u003d \"The correct answer is \";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_INCOMPLETE_ANSWER_TIMER \u003d \"Oops! You took more than \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_INCOMPLETE_ANSWER_TIMER_SECOND \u003d \" seconds to answer! \";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_LOADING \u003d \"Please wait while data is loading...\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_LOADED \u003d \"Data loaded successfully!\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_SAVING \u003d \"Please wait while data is saving...\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_SAVED \u003d \"Data saved successfully!\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final ExecutorService EXECUTOR_SERVICE \u003d Executors.newFixedThreadPool(1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_READING_INPUT \u003d \"Error reading input.\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String ERROR_USING_ROBOT \u003d \"Error using robot to enter key\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String MESSAGE_QUIZ_TO_PROCEED \u003d \"Press \u0027Enter\u0027 to proceed!\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String OS_NAME \u003d \"os.name\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String OS_LINUX \u003d \"nux\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String OS_MAC \u003d \"mac\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String NUMBERS_ONLY \u003d \"[0-9]+\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String EMPTY \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String NOTE_LIST_ERROR \u003d \"Please try again!\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static String operatingSystem \u003d null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getInputFromUser() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_GET_INPUT_FROM_USER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Future\u003cString\u003e userInputFuture \u003d EXECUTOR_SERVICE.submit(SCANNER::nextLine);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return userInputFuture.get().trim();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (InterruptedException | ExecutionException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            printError(ERROR_READING_INPUT);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printQuizInputMessage() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_GET_INPUT_FROM_USER_QUIZ);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean getEnterFromUser() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        boolean enterIsUsed \u003d false;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_QUIZ_TO_PROCEED);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Future\u003cString\u003e userInputFuture \u003d EXECUTOR_SERVICE.submit(SCANNER::nextLine);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            userInput \u003d userInputFuture.get();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            if (userInput.isEmpty()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                enterIsUsed \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } catch (InterruptedException | ExecutionException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            printError(ERROR_READING_INPUT);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return enterIsUsed;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static String findUserOperatingSystem() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (operatingSystem \u003d\u003d null) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            operatingSystem \u003d System.getProperty(OS_NAME).toLowerCase();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return operatingSystem;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getQuizInputFromUser(int timeLeft) throws IOException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        operatingSystem \u003d findUserOperatingSystem();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //This is for Linux and Mac operating systems because Robot doesn\u0027t work on WSL"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (operatingSystem.contains(OS_LINUX) || operatingSystem.contains(OS_MAC)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            BufferedReader userInput \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            long startingTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            while (((System.currentTimeMillis() - startingTime) \u003c timeLeft * CONVERSION_FROM_SECONDS_TO_MILLIS)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                    \u0026\u0026 System.in.available() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            if (userInput.ready()) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return userInput.readLine().trim();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            //This is for the Windows operating system"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            String userInput;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Future\u003cString\u003e userInputFuture \u003d EXECUTOR_SERVICE.submit(SCANNER::nextLine);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                userInput \u003d userInputFuture.get(timeLeft, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (InterruptedException | ExecutionException | IllegalArgumentException | TimeoutException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    Robot robot \u003d new Robot();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    robot.keyPress(KeyEvent.VK_ENTER);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    robot.keyRelease(KeyEvent.VK_ENTER);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                } catch (AWTException awtException) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    printError(ERROR_USING_ROBOT);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            return userInput.trim();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static void printMessage(String message) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printWithoutLines(String message) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printGreetMessage() {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_GREETINGS);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printOption(Option option, int optionNumber) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(optionNumber + CLOSE_BRACKET + option.getDescription());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (optionNumber \u003d\u003d LAST_OPTION) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printQuestion(Question question, int questionNumber) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(questionNumber + DOT_SPACE + question.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printHint(Hint hint) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_HINT + hint.getDescription());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printStartQuizPage(int numberOfQuestionsChosen, String topicsChosen) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_START);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Shows the number of questions chosen by user"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printStartQuizQuestions(numberOfQuestionsChosen);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Shows the topics chosen by user"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_TOPIC_CHOSEN + topicsChosen);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printEndQuizPage() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_QUIZ_END);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsWrong(int correctAnswer, String explanation) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_ANSWER_WRONG + correctAnswer + MESSAGE_ANSWER_WRONG_SECOND + System.lineSeparator()"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                + System.lineSeparator() + MESSAGE_EXPLANATION + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsCorrect(String explanation) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_ANSWER_CORRECT + System.lineSeparator() + System.lineSeparator() + MESSAGE_EXPLANATION"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printIncompleteAnswer(int correctAnswer, String explanation, int userTimer) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_INCOMPLETE_ANSWER_TIMER + userTimer + MESSAGE_INCOMPLETE_ANSWER_TIMER_SECOND"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                + MESSAGE_ANSWER_INCOMPLETE + correctAnswer + MESSAGE_ANSWER_WRONG_SECOND + System.lineSeparator()"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + System.lineSeparator() + MESSAGE_EXPLANATION + System.lineSeparator() + explanation);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_HELP);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAbout() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_ABOUT);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printTextbook() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_TEXTBOOK);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessage(errorMessage);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printTopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String topicListString \u003d MESSAGE_PRINT_TOPIC_LIST + System.lineSeparator();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.size(); i++) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Topic topic \u003d (Topic) topics.get(i);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicListString +\u003d OPEN_SQUARE_BRACKET + topic.getQuestionList().getCount() + CLOSE_SQUARE_BRACKET"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + topic.getDescription();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (i \u003c topics.size() - 1) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                topicListString +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(topicListString);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printTopicsError(TopicList topics) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        printWithoutLines(MESSAGE_PRINT_TOPIC_LIST);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.getCount(); i++) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Topic topic \u003d topics.get(i);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(OPEN_SQUARE_BRACKET + topic.getQuestionList().getCount() + CLOSE_SQUARE_BRACKET"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    + topic.getDescription());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printAddNote(TopicList topicList) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        printMessage(ADD_NOTE_PROMPT_FOR_TOPIC);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String topicName \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topicList.doesTopicExist(topicName)) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printMessage(ADD_NOTE_PROMPT_FOR_NOTE_TITLE);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                String noteName \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                while (noteName.replace(SPACE, EMPTY).isEmpty()) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    printMessage(ADD_NOTE_PROMPT_FOR_NOTE_TITLE);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    noteName \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printMessage(ADD_NOTE_PROMPT_FOR_NOTE_BODY);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                String noteBody \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                while (noteBody.replace(SPACE, EMPTY).isEmpty()) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    printMessage(ADD_NOTE_PROMPT_FOR_NOTE_BODY);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    noteBody \u003d SCANNER.nextLine();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Note note \u003d new Note(noteName, noteBody);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                topic.getNoteList().add(note);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printMessage(ADD_NOTE_SUCCESSFULLY);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                throw new Eduke8Exception(ADD_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(INPUT_ERROR);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printTopicsError(topicList);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(ADD_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printDeleteNote(TopicList topicList) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int noteCount \u003d 0;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic \u003d null;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d null;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        printMessage(DELETE_NOTE_PROMPT_FOR_TOPIC);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String topicName \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            noteList \u003d topic.getNoteList();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            noteCount \u003d noteList.getCount();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printError(e.getMessage());"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if (topicList.doesTopicExist(topicName) \u0026\u0026 noteCount \u003e 0) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            showNotes(noteList);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(DELETE_NOTE_PROMPT_FOR_INDEX);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String input \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                if (input.matches(NUMBERS_ONLY) \u0026\u0026 Integer.parseInt(input) \u003e 0"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        \u0026\u0026 Integer.parseInt(input) \u003c\u003d noteList.getCount()) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    int index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    topic.getNoteList().delete(index - 1);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    printMessage(DELETE_NOTE_SUCCESSFULLY);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    throw new Eduke8Exception(INVALID_TOPIC_INDEX);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } catch (Eduke8Exception | NumberFormatException e) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printMessage(INVALID_TOPIC_INDEX + System.lineSeparator() + DELETE_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } else if (topicList.doesTopicExist(topicName) \u0026\u0026 noteCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessage(MESSAGE_PRINT_NOTE_LIST_NONE);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(INPUT_ERROR);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printTopicsError(topicList);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(DELETE_NOTE_UNSUCCESSFULLY);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printListNote(TopicList topicList) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        printMessage(LIST_NOTE_PROMPT);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String topicName \u003d SCANNER.nextLine().trim();"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if (topicList.doesTopicExist(topicName)) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                NoteList noteListTopic \u003d topic.getNoteList();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                showNotes(noteListTopic);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                throw new Eduke8Exception(INPUT_ERROR);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(INPUT_ERROR);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printTopicsError(topicList);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printMessage(NOTE_LIST_ERROR);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showNotes(NoteList notes) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if (notes.getCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(MESSAGE_PRINT_NOTE_LIST_NONE);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            printWithoutLines(MESSAGE_PRINT_NOTE_LIST);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            for (int i \u003d 0; i \u003c notes.getCount(); i++) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printWithoutLines(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Note note \u003d notes.get(i);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printWithoutLines((i + 1) + DOT + note.getDescription());"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                printWithoutLines(note.getNoteText());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        printWithoutLines(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void printStartQuizQuestions(int numberOfQuestionsChosen) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.print(MESSAGE_QUIZ_QUESTION_CHOSEN + numberOfQuestionsChosen + MESSAGE_QUIZ_QUESTION_CHOSEN_SECOND);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (numberOfQuestionsChosen \u003c 2) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(DOT);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(DOT_PLURAL);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printPointSystemRules() {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(POINT_SYSTEM_RULE + System.lineSeparator());"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printPointsEarned(int pointsEarned, int pointsAvailable) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(MESSAGE_SHOW_POINTS + pointsEarned + MESSAGE_SHOW_POINTS_SECOND"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + pointsAvailable + MESSAGE_SHOW_POINTS_THIRD);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTotalProgression(int progressionLevelPercentage, boolean progressOverHalf) {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.print(MESSAGE_USER_PROGRESS + progressionLevelPercentage + PERCENTAGE_SIGN + DOT_SPACE);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (progressOverHalf) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(MESSAGE_PRAISE + System.lineSeparator());"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(MESSAGE_MOTIVATE + System.lineSeparator());"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicProgressionHeader() {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(TOPICS_PROGRESSION_SECTION_HEADER);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicDescriptionForStats(Displayable topic) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(topic.getDescription());"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicCompletionLevel(int questionsAttempted, int questionsTotal) {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + questionsAttempted"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + OUT_OF_SYMBOL + questionsTotal + MESSAGE_QUESTIONS_DONE);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicAccuracyLevel(int questionsAnsweredCorrectly, int questionsAttempted) {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + questionsAnsweredCorrectly + OUT_OF_SYMBOL"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + questionsAttempted + MESSAGE_CORRECT_QUESTIONS_ANSWERED);"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicalHintUsage(int hintUsage) {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + hintUsage"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + (hintUsage \u003c\u003d 1 ? MESSAGE_HINT_USED_SINGULAR : MESSAGE_HINT_USED_PLURAL));"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTopicalPoints(int pointsEarned, int pointsAvailable, int progressionPercentage) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(HORIZONTAL_LINE_FOR_TOPICAL_STATS_FIELDS + pointsEarned + MESSAGE_POINTS_EARNED_OUT_OF"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + pointsAvailable + MESSAGE_AVAILABLE_WORD + OPEN_SQUARE_BRACKET"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + progressionPercentage + PERCENTAGE_SIGN + CLOSE_SQUARE_BRACKET);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printBookmarkedIndicator() {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_BOOKMARK_INDICATOR);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printAlreadyBookmarkedIndicator() {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        printMessage(MESSAGE_BOOKMARKED_ALREADY_INDICATOR);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printListOfBookmarkedQuestions(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String list \u003d listOfBookmarkedQuestions(bookmarks);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(MESSAGE_BOOKMARK_LIST + System.lineSeparator() + list);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printDeletedBookmarkIndicator(int deleteIndex) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String messageOutput \u003d MESSAGE_BOOKMARK_DELETED_PART_ONE + deleteIndex + MESSAGE_BOOKMARK_DELETED_PART_TWO;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        printMessage(messageOutput);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private String listOfBookmarkedQuestions(BookmarkList bookmarks) {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cDisplayable\u003e allBookmarks;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        allBookmarks \u003d bookmarks.getInnerList();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Displayable question : allBookmarks) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String optionOutput \u003d \"\";"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Question properQuestion \u003d (Question) question;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ArrayList\u003cDisplayable\u003e optionsAvailable \u003d properQuestion.getOptionList().getInnerList();"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            for (Displayable option : optionsAvailable) {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                Option castedOption \u003d (Option) option;"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                optionOutput +\u003d System.lineSeparator() + \"    \" + j + CLOSE_BRACKET + option.getDescription()"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        + (castedOption.isCorrectAnswer() ? MESSAGE_BOOKMARK_CORRECT_ANS_INDICATOR : \"\")"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                        + ((j \u003d\u003d optionsAvailable.size()) ? System.lineSeparator() : \"\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            output +\u003d i + DOT_SPACE + question.getDescription() + optionOutput + SPACE"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    + ((i \u003d\u003d allBookmarks.size()) ? \"\" : System.lineSeparator());"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataLoading() {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_LOADING);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataLoaded() {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_LOADED);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataSaving() {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_SAVING);"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printDataSaved() {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        printMessage(DATA_SAVED);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 88,
      "kstonekuan": 89,
      "anqi20": 221,
      "joelngyx": 135,
      "josephhhhhhhhh": 37
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/Eduke8Test.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.explanation.Explanation;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.Note;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.note.NoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class Eduke8Test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_TOPIC_ONE_DESCRIPTION \u003d \"First_Topic\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_TOPIC_TWO_DESCRIPTION \u003d \"Second_Topic\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_ONE_DESCRIPTION \u003d \"First question description.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_TWO_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_THREE_DESCRIPTION \u003d \"Third question description.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_FOUR_DESCRIPTION \u003d \"Fourth question description.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final String PLACEHOLDER_QUESTION_FIVE_DESCRIPTION \u003d \"Fifth question description.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_OPTION_ONE_DESCRIPTION \u003d \"Option one\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_OPTION_TWO_DESCRIPTION \u003d \"Option two\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String PLACEHOLDER_EXPLANATION_DESCRIPTION \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            \"Option A gives the best explanation out of all.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NONSENSE_DESCRIPTION \u003d \"Nonsense\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    protected static final int TIMER \u003d 5;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_PER_QUESTION \u003d 2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN \u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected static final int POINTS_FOR_INCORRECT_ANSWER \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_INVALID_PATH \u003d \"data/test/invalid.json\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_EMPTY_JSON \u003d \"data/test/empty.json\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_WRONG_FORMAT_JSON \u003d \"data/test/wrong_format.json\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String DATA_TEST_MISSING_KEY_JSON \u003d \"data/test/missing_key.json\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NOTE_ONE \u003d \"First Note\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NOTE_TWO \u003d \"Second Note\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NOTE_THREE \u003d \"Third Note\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final String NOTE_DESCRIPTION \u003d \"Test\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Eduke8Test() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a TopicList object with two topics that have 3 questions each"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected TopicList createTestTopicList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic1 \u003d createTestTopic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic2 \u003d createTestTopic(PLACEHOLDER_TOPIC_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(topic1, topic2)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new TopicList(topics);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a Topic object with a question list of 3 questions"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected Topic createTestTopic(String description) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(description, questionList, noteList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a QuestionList object with 3 questions"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected QuestionList createTestQuestionList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(question1, question2, question3)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new QuestionList(questions);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a Question object with 2 options, 1 hint and an explanation."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected Question createTestQuestion(String description) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Explanation explanation \u003d new Explanation(PLACEHOLDER_EXPLANATION_DESCRIPTION);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Question(description, optionList, hint, explanation);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected OptionList createTestOptionList() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option1 \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option2 \u003d new Option(PLACEHOLDER_OPTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e options \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(option1, option2)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new OptionList(options);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected BookmarkList createTestBookmarkList() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarkList \u003d new BookmarkList();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable question: questionList.getInnerList()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsShown();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            bookmarkList.add(question);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return bookmarkList;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected NoteList createTestNoteList() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Note note1 \u003d new Note(NOTE_ONE, NOTE_DESCRIPTION);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Note note2 \u003d new Note(NOTE_TWO, NOTE_DESCRIPTION);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e noteArrayList \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                Arrays.asList(note1, note2)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new NoteList(noteArrayList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 13,
      "kstonekuan": 113,
      "anqi20": 1,
      "-": 4
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/bookmark/BookmarkListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.bookmark;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class BookmarkListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    Question question \u003d createTestQuestion(\"description\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void addBookmark_addOneBookmark_correctInput() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarkList.add(question);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(question.isBookmarked());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void addBookmark_addNull_assertExceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            bookmarkList.add(null);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void deleteBookmark_deleteOneBookmark_correctInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarkList.delete(1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertEquals(bookmarkList.getCount(), 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void deleteBookmark_deleteWrongBookmarkNumber_assertionErrorThrown() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            bookmarkList.delete(100);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void findBookmark_findOneBookmark_correctInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(bookmarkList.find(\"First question description.\") instanceof Question);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void findBookmark_findOneBookmark_wrongInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertNull(bookmarkList.find(\"Bad input\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void getInnerList_callAddOnList_willNotBeBookmarked() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarkList.getInnerList().add(question);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertFalse(question.isBookmarked());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 61
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/AnswerCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_correctAnswer_markAnsweredCorrectly() throws Eduke8Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option correctOption \u003d (Option) question.getOptionList().find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        correctOption.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command answerCommand \u003d new AnswerCommand(correctOption, question);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        answerCommand.execute(question.getOptionList(), new Ui());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_wrongAnswer_notMarkAnsweredCorrectly() throws Eduke8Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option wrongOption \u003d (Option) question.getOptionList().find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command answerCommand \u003d new AnswerCommand(wrongOption, question);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        answerCommand.execute(question.getOptionList(), new Ui());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 36
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/BookmarkCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class BookmarkCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_normal_questionHasBeenBookmarked() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question \u003d createTestQuestion(\"description\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertFalse(question.isBookmarked());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command command \u003d new BookmarkCommand(question, \"storing\", bookmarkList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        command.execute(createTestTopicList(), new Ui());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(question.isBookmarked());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void constructor_bookmarksNull_assertionErrorThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question \u003d createTestQuestion(\"description\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Command command \u003d new BookmarkCommand(question, \"storing\", bookmarkList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void constructor_correctInput_alreadyBookmarked() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Displayable question1 \u003d bookmarkList.find(\"First question description.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question2 \u003d (Question) question1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        question2.markAsBookmarked();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkCommand command \u003d new BookmarkCommand(question2, \"storing\", bookmarkList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        command.execute(createTestTopicList(), new Ui());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(question2.isBookmarked());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void execute_normal_listBookmarks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Command command \u003d new BookmarkCommand(\"listing\", bookmarkList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.execute(createTestTopicList(), new Ui());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Eduke8Exception ee) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printError(ee.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void execute_badCommand_nothingHappens() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Command command \u003d new BookmarkCommand(\"badcommand\", bookmarkList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.execute(createTestTopicList(), new Ui());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Eduke8Exception ee) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printError(ee.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 1,
      "josephhhhhhhhh": 70
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/ExitCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_normal_isExitIsTrue() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command exitCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        DisplayableList displayableList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        exitCommand.execute(displayableList, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(exitCommand.isExit);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "josephhhhhhhhh": 16
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/HintCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_normal_hintWasShown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command hintCommand \u003d new HintCommand(hint);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        hintCommand.execute(optionList, ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(hint.wasShown());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 20,
      "joelngyx": 2
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/IncompleteCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class IncompleteCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void execute_correctAnswer_notMarkAnsweredCorrectly() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Command incompleteCommand \u003d new IncompleteCommand(question, 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        incompleteCommand.execute(question.getOptionList(), new Ui());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertFalse(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 21
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/QuizCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizCommandTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    QuizCommandTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_badTopicName_exceptionCaughtAndProgramContinuesWithoutLoopsOrFailing() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command badQuizCommand \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                new QuizCommand(topicList, 1, NONSENSE_DESCRIPTION, ui, bookmarks, TIMER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badQuizCommand.execute(topicList, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void execute_wrongTopicNum_exceptionCaughtAndProgramContinuesWithoutLoopsOrFailing() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command badQuizCommand \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                new QuizCommand(topicList, 50, PLACEHOLDER_TOPIC_ONE_DESCRIPTION, ui, bookmarks, TIMER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badQuizCommand.execute(topicList, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 14,
      "josephhhhhhhhh": 23
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/explanation/ExplanationTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.explanation;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class ExplanationTest extends Eduke8Test {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getExplanationDescription_explanationDescription_returnsExplanationDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Explanation explanation \u003d new Explanation(PLACEHOLDER_EXPLANATION_DESCRIPTION);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_EXPLANATION_DESCRIPTION, explanation.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 4,
      "anqi20": 12
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/hint/HintTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class HintTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHintDescription_hintDescription_returnsHintDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_HINT_DESCRIPTION, hint.getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_hintShownToUser_expectsTrue() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(PLACEHOLDER_HINT_DESCRIPTION);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(hint.wasShown());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Once hint is shown to user, it is automatically marked as shown."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        hint.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(hint.wasShown());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 20,
      "kstonekuan": 8
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/note/NoteListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class NoteListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final int DEFAULT_NOTE_COUNT \u003d 2;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_TwoNotes_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT, noteList.getCount());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void add_thirdNoteToNoteList_returnsCountOfThree() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Note note3 \u003d new Note(NOTE_THREE, NOTE_DESCRIPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.add(note3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT + 1, noteList.getCount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void delete_thirdNoteToNoteList_returnsCountOfOne() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        noteList.delete(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT - 1, noteList.getCount());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_getInnerList_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ArrayList\u003cDisplayable\u003e innerList \u003d noteList.getInnerList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_NOTE_COUNT, innerList.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getNote_returnsNoteDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        NoteList noteList \u003d createTestNoteList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(noteList.get(1).getDescription(), NOTE_TWO);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 4,
      "joelngyx": 53
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/note/NoteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.note;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class NoteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TEST_NAME \u003d \"Note name\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TEST \u003d \"Test\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    Note note;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    NoteTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        note \u003d new Note(TEST_NAME, TEST);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void noteConstructor_nullDescriptionArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            new Note(null, null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getsNoteDescription_returnsNoteDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(TEST_NAME, note.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsNoteText_returnsNoteText() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(TEST, note.getNoteText());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "joelngyx": 28
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class OptionListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final int DEFAULT_OPTION_COUNT \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private OptionList optionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    OptionListTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getCount_twoOptions_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(DEFAULT_OPTION_COUNT, optionList.getCount());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getInnerList_sameOption_expectsTrue() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionListTest \u003d createTestOptionList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListDescription \u003d optionList.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListTestDescription \u003d optionListTest.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(optionListDescription, optionListTestDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_twoOptions_returnOptionOne() throws Eduke8Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Displayable optionOne \u003d optionList.find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_ONE_DESCRIPTION, optionOne.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void findCorrectOptionIndex_notCorrectOption_expectEduke8Exception() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, optionList::findCorrectOptionIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_optionNotFound_expectEduke8Exception() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e optionList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 24,
      "anqi20": 27
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class OptionTest extends Eduke8Test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getDescription_placeholderOptionDescription_returnsOptionDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_ONE_DESCRIPTION, option.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void wasShown_placeholderOptionDescription_expectsTrue() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(option.wasShown());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        option.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.wasShown());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void markAsCorrectAnswer_optionMarkedAsCorrectOption_expectsTrue() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(option.isCorrectAnswer());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        option.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.isCorrectAnswer());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 12,
      "anqi20": 23
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/MenuParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AboutCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.NoteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.QuizCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.TopicsCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.TextbookCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.StatsCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class MenuParserTest extends Eduke8Test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void menuParser_wrongStringInput_expectIncorrectCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser(bookmarks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command badCommand \u003d menuParser.parseCommand(topicList, \"quiz t/wrongtopic n/badnnum\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command quizCommand \u003d menuParser.parseCommand(topicList, \"quiz t/OOP n/2\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command noteBadCommand \u003d menuParser.parseCommand(topicList, \"note wrong\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(noteBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command quizBadCommand \u003d menuParser.parseCommand(topicList, \"quiz t/OOP n/1 s/-1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d menuParser.parseCommand(topicList, \"wrong command all the way\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizBadCommand \u003d menuParser.parseCommand(topicList, \"quiz s/20 tnoslash n/1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizBadCommand \u003d menuParser.parseCommand(topicList, \"quiz tnoslash s/20  n/1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizBadCommand \u003d menuParser.parseCommand(topicList, \"quiz t/OOP bad n/1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizBadCommand \u003d menuParser.parseCommand(topicList, \"quiz n/1 bad t/OOP\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        noteBadCommand \u003d menuParser.parseCommand(topicList, \"quiz n/1 bad t/OOP\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(noteBadCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarks.delete(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarks.delete(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarks.delete(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(bookmarks.getCount());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d menuParser.parseCommand(topicList, \"bookmark delete fifty\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d menuParser.parseCommand(topicList, \"bookmark\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d menuParser.parseCommand(topicList, \"bookmark delete 1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void menuParser_correctStringInput_correctInput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser(bookmarks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command quizCommand \u003d menuParser.parseCommand(topicList, \"quiz n/2 s/20 t/OOP\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizCommand \u003d menuParser.parseCommand(topicList, \"quiz s/20 t/OOP n/2\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizCommand \u003d menuParser.parseCommand(topicList, \"quiz t/OOP n/2 s/20\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizCommand \u003d menuParser.parseCommand(topicList, \"quiz s/20 n/2 t/OOP\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizCommand \u003d menuParser.parseCommand(topicList, \"quiz n/2 t/OOP s/20\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizCommand \u003d menuParser.parseCommand(topicList, \"quiz t/OOP s/20 n/2\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(quizCommand instanceof QuizCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command aboutCommand \u003d menuParser.parseCommand(topicList, \"about\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(aboutCommand instanceof AboutCommand);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command helpCommand \u003d menuParser.parseCommand(topicList, \"help\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(helpCommand instanceof HelpCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command topicsCommand \u003d menuParser.parseCommand(topicList, \"topics\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(topicsCommand instanceof TopicsCommand);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command textbookCommand \u003d menuParser.parseCommand(topicList, \"textbook\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(textbookCommand instanceof TextbookCommand);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command bookmarkCommand \u003d menuParser.parseCommand(topicList, \"bookmark list\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(bookmarkCommand instanceof BookmarkCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        bookmarkCommand \u003d menuParser.parseCommand(topicList, \"bookmark delete 1\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(bookmarkCommand instanceof BookmarkCommand);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command noteCommand \u003d menuParser.parseCommand(topicList, \"note list\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(noteCommand instanceof NoteCommand);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        noteCommand \u003d menuParser.parseCommand(topicList, \"note add\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(noteCommand instanceof NoteCommand);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        noteCommand \u003d menuParser.parseCommand(topicList, \"note delete\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(noteCommand instanceof NoteCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command exitCommand \u003d menuParser.parseCommand(topicList, \"exit\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(exitCommand instanceof ExitCommand);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command statsCommand \u003d menuParser.parseCommand(topicList, \"stats\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(statsCommand instanceof StatsCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void menuParser_wrongNumOfBookmarks_expectAssertionErrorThrown() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser(bookmarks);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            menuParser.parseCommand(topicList, \"bookmark delete 500\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void menuParser_nullTopicList_expectAssertionErrorThrown() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        BookmarkList bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser(bookmarks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            menuParser.parseCommand(topicList, \"stats\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "josephhhhhhhhh": 150
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/QuizParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncompleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.BookmarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class QuizParserTest extends Eduke8Test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private OptionList optionList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuizParser quizParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    QuizParserTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        optionList \u003d createTestOptionList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList bookmarkList \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizParser \u003d new QuizParser(bookmarkList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizParser.setQuestion(question, TIMER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void quizParser_wrongStringInput_expectIncorrectCommandReturn() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command badCommand \u003d quizParser.parseCommand(optionList, \"one\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, \"back\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(badCommand instanceof IncompleteCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, \"6\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    void quizParser_correctStringInput_correctInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command resultCommand \u003d quizParser.parseCommand(optionList, \"1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof AnswerCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        resultCommand \u003d quizParser.parseCommand(optionList, \"hint\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof HintCommand);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        resultCommand \u003d quizParser.parseCommand(optionList, \"bookmark\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof BookmarkCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 13,
      "anqi20": 2,
      "josephhhhhhhhh": 43
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuestionListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final int DEFAULT_QUESTION_COUNT \u003d 3;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList questionList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    QuestionListTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void questionListConstructor_nullQuestionsArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            new QuestionList(null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getCount_threeQuestions_returnsCountOfThree() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(DEFAULT_QUESTION_COUNT, questionList.getCount());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_questionListWithThreeQuestions_returnsFirstQuestion() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Displayable firstQuestionOfQuestionList \u003d questionList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_ONE_DESCRIPTION, firstQuestionOfQuestionList.getDescription());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_questionNotFound_returnsNull() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertNull(questionList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 26,
      "kstonekuan": 17
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuestionTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_DESCRIPTION \u003d \"This is a question description.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String PLACEHOLDER_EXPLANATION_DESCRIPTION \u003d \"Option A gives the best explanation out of all.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int OPTIONLIST_OPTIONS_COUNT \u003d 2;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void questionConstructor_nullDescriptionArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            createTestQuestion(null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getDescription_placeholderQuestionDescription_returnsQuestionDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_DESCRIPTION, question.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_questionThatWasShownToUser_expectsTrue() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        question.markAsShown();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasShown());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_questionNotShownToUser_expectsFalse() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasShown());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getOptionList_optionListWithTwoOptions_returnsCountOfTwoOptions() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(OPTIONLIST_OPTIONS_COUNT, question.getOptionList().getCount());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHint_hintObject_returnsHintDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_HINT_DESCRIPTION, question.getHint().getDescription());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasHintShown_questionWithHintShown_expectsTrue() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hintThatWasShownToUser \u003d question.getHint();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Shows hint to user to mark hint as shown to user before"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        hintThatWasShownToUser.getDescription();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasHintShown());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasHintShown_questionWithoutHintShown_expectsFalse() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasHintShown());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getExplanation_explanationObject_returnsExplanationDescription() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        // Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_EXPLANATION_DESCRIPTION, question.getExplanation().getDescription());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasAnsweredCorrectly_questionMarkedAsAnsweredCorrectly_expectsTrue() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasAnsweredCorrectly_attemptedQuestionNotCorrectlyAnswered_expectsFalse() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        //Creates a question object with description, 2 options, explanation and a hint"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsShown();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasShown());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 89,
      "kstonekuan": 15,
      "anqi20": 13,
      "joelngyx": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuizQuestionsManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class QuizQuestionsManagerTest extends Eduke8Test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int TOPIC_QUESTIONS_COUNT \u003d 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int QUIZ_QUESTIONS_COUNT \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList topicQuestionList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    QuizQuestionsManagerTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicQuestionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Tests for first parameter of QuizQuestionsManagerConstructor, while keeping second parameter valid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Within acceptable range of questions, positive partition"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_validNumberOfQuestionsForQuiz_returnsCountOfThreeQuizQuestions()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(QUIZ_QUESTIONS_COUNT, quizQuestionsManager.getQuizQuestionsCount());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Below acceptable range of questions, negative partition"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_numberOfQuestionsForQuizTooLow_expectsEduke8Exception() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            new QuizQuestionsManager(0, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Above acceptable range of questions, negative partition"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_numberOfQuizQuestionsExceedNumberOfTopicQuestions_expectsEduke8Exception() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            new QuizQuestionsManager(TOPIC_QUESTIONS_COUNT + 1, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Tests for second parameter of QuizQuestionsManagerConstructor, while keeping first parameter valid."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Positive partitions for second parameter are shown in the tests above"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // null case of questionsInTopic passed in, negative partition"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_nullQuestionsInTopicArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, null);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getNextQuestion_currentQuestionNumberAtZero_returnsCurrentQuestionNumberAtOne()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 2 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(1, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void areAllQuestionsAnswered_fullyAnsweredQuiz_expectsTrue() throws Eduke8Exception {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays first question to user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays second question to user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays last question to user"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(quizQuestionsManager.areAllQuestionsAnswered());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void areAllQuestionsAnswered_quizWithUnansweredQuestions_expectsFalse() throws Eduke8Exception {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Only display the first question out of 3 questions"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertFalse(quizQuestionsManager.areAllQuestionsAnswered());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 95,
      "kstonekuan": 9
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/quiz/SingleTopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuizTest extends Eduke8Test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final int TIMEOUT \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private BookmarkList bookmarks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    SingleTopicQuizTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarks \u003d createTestBookmarkList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic \u003d createTestTopic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void startQuiz_zeroQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, 0, bookmarks, TIMEOUT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(ui));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void startQuiz_tooManyQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        int questionsInTopic \u003d topic.getQuestionList().getCount();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                new SingleTopicQuiz(topic, questionsInTopic + 1, bookmarks, TIMEOUT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(ui));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 37,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/StatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class StatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_DESCRIPTION \u003d \"This is a question description.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int HALF_PROGRESS_LEVEL_SCORE \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int TOTAL_PROGRESS_LEVEL_SCORE \u003d 10;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private StatsCalculator statsCalculator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    StatsCalculatorTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        statsCalculator \u003d new StatsCalculator();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void statsCalculatorConstructorWithOneParameter_nullTopicsArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            new StatsCalculator(null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionIncorrectlyAnswered_returnsZero() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_INCORRECT_ANSWER, statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionCorrectlyAnsweredWithHintShown_returnsOne() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.getHint().getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_questionCorrectlyAnsweredWithoutHintShown_returnsTwo() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion(PLACEHOLDER_QUESTION_DESCRIPTION);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                statsCalculator.calculatePointsEarnedForQuestion(question));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Negative partition for the calculatePointsEarnedForQuestion method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculatePointsEarnedForQuestion_nullQuestionArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculatePointsEarnedForQuestion(null);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_validUserProgressAsZero_returnsPercentageAsZero() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(0, statsCalculator.calculateProgressionPercentage(0,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                TOTAL_PROGRESS_LEVEL_SCORE));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_validUserProgressAsHalf_returnsPercentageAsFifty() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(50, statsCalculator.calculateProgressionPercentage(HALF_PROGRESS_LEVEL_SCORE,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                TOTAL_PROGRESS_LEVEL_SCORE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_validUserProgressAsFull_returnsPercentageAsHundred() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(100, statsCalculator.calculateProgressionPercentage(TOTAL_PROGRESS_LEVEL_SCORE,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                TOTAL_PROGRESS_LEVEL_SCORE));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_invalidUserProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(-1, TOTAL_PROGRESS_LEVEL_SCORE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_invalidTotalAvailableProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(HALF_PROGRESS_LEVEL_SCORE, 0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateProgressionPercentage_userProgressExceedTotalAvailableProgress_expectsAssertionError() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            statsCalculator.calculateProgressionPercentage(TOTAL_PROGRESS_LEVEL_SCORE + 1,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    TOTAL_PROGRESS_LEVEL_SCORE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTotalQuestionCount_twoTopicsWithThreeQuestionsEach_returnsCorrectCount() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        StatsCalculator twoTopicsStatsCalculator \u003d new StatsCalculator(createTestTopicList().getInnerList());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedQuestionCount \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        TopicList testTopicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable topic : testTopicList.getInnerList()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList topicQuestionList \u003d ((Topic) topic).getQuestionList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            expectedQuestionCount +\u003d topicQuestionList.getCount();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(expectedQuestionCount, twoTopicsStatsCalculator.calculateTotalQuestionCount());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 112,
      "kstonekuan": 8
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/StatsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class StatsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void statsConstructor_nullTopicListArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            new Stats(null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 14,
      "kstonekuan": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/TopicalStatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class TopicalStatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_IN_TEST_TOPIC \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_ATTEMPTED \u003d 3;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_CORRECTLY_ANSWERED \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_WITH_HINT_USED \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicalStatsCalculator topicalStatsCalculator;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    TopicalStatsCalculatorTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // 5 questions with three attempted, two correct, one correct question had hint shown, a total of 3 points"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic \u003d createAttemptedTopic();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicalStatsCalculator \u003d new TopicalStatsCalculator(topic);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void topicalStatsCalculatorConstructor_nullTopicArgument_expectsAssertionError() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(AssertionError.class, () -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            new TopicalStatsCalculator(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalQuestionsAttemptCount_threeAttemptedQuestions_returnsCountOfThree() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_ATTEMPTED, topicalStatsCalculator.calculateTopicalQuestionsAttemptCount());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalQuestionsCorrectCount_twoCorrectlyAnsweredQuestions_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_CORRECTLY_ANSWERED,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalQuestionsCorrectCount());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalHintUsage_oneHintUsed_returnsCountOfOne() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_WITH_HINT_USED,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalHintUsage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalPointsEarned_twoCorrectlyAnsweredQuestionsWithOneHintUsed_returnsCorrectCount() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Points for one correct question without hint shown and one correct question with hint shown"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectQuestionsOneHintUsed \u003d calculatePointsForTwoCorrectQuestionsOneHintUsed();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(pointsForTwoCorrectQuestionsOneHintUsed, topicalStatsCalculator.calculateTopicalPointsEarned());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalPointsAvailable_fiveQuestions_returnsCorrectCount() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(NUMBER_OF_QUESTIONS_IN_TEST_TOPIC * POINTS_PER_QUESTION,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                topicalStatsCalculator.calculateTopicalPointsAvailable());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTopicalProgressionPercentage_inputTestTopic_returnsCorrectPercentage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Points for one correct question without hint shown and one correct question with hint shown"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectQuestionsOneHintUsed \u003d calculatePointsForTwoCorrectQuestionsOneHintUsed();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Total points the user can earn from all 5 questions in the topic"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d POINTS_PER_QUESTION  * NUMBER_OF_QUESTIONS_IN_TEST_TOPIC;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Percentage of progression the user can expect when he answered two out of six questions correctly"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedPercentage \u003d (int) (((double) pointsForTwoCorrectQuestionsOneHintUsed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                / totalPointsAvailable) * 100);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(expectedPercentage, topicalStatsCalculator.calculateTopicalProgressionPercentage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates one topic with 5 questions, three questions attempted, two questions correctly answered,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // where one of the two correctly answered questions is with hint shown, totalling to 3 points earned."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    Topic createAttemptedTopic() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsShown();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsShown();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question3.markAsShown();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.getHint().getDescription();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question4 \u003d createTestQuestion(PLACEHOLDER_QUESTION_FOUR_DESCRIPTION);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question5 \u003d createTestQuestion(PLACEHOLDER_QUESTION_FIVE_DESCRIPTION);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(question1, question2, question3, question4, question5)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, questionList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    int calculatePointsForTwoCorrectQuestionsOneHintUsed() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN + POINTS_FOR_CORRECT_ANSWER_WITH_HINT_SHOWN;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 103,
      "kstonekuan": 12
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/stats/UserStatsCalculatorTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.stats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class UserStatsCalculatorTest extends Eduke8Test {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_TEST_TOPICS \u003d 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int NUMBER_OF_QUESTIONS_IN_TEST_TOPIC \u003d 3;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private UserStatsCalculator userStatsCalculator;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    UserStatsCalculatorTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topics \u003d createTwoTopicsWithTwoOfSixQuestionsAnsweredCorrectly();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        userStatsCalculator \u003d new UserStatsCalculator(topics);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateTotalPointsEarned_twoCorrectlyAnsweredQuestionsAmongTopics_returnsCorrectScore() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectAnswersWithoutHint \u003d calculatePointsForTwoCorrectAnswersWithoutHint();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(pointsForTwoCorrectAnswersWithoutHint, userStatsCalculator.calculateTotalPointsEarned());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Tests calculateTotalPointsAvailable() as well"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void calculateOverallProgressionPercentage_twoCorrectlyAnsweredQuestionsOutOfSix_returnsCorrectPercentage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int pointsForTwoCorrectAnswersWithoutHint \u003d calculatePointsForTwoCorrectAnswersWithoutHint();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Total points the user can earn from two topics of three questions each"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int totalPointsAvailable \u003d POINTS_PER_QUESTION * NUMBER_OF_TEST_TOPICS * NUMBER_OF_QUESTIONS_IN_TEST_TOPIC;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Percentage of progression the user can expect when he answered two out of six questions correctly"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int expectedPercentage \u003d (int) (((double) pointsForTwoCorrectAnswersWithoutHint"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                / totalPointsAvailable) * 100);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(expectedPercentage, userStatsCalculator.calculateOverallProgressionPercentage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates two topics with 3 questions each, but with only one topic"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // having 2 questions correctly answered without hint, totalling to 4 points"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e createTwoTopicsWithTwoOfSixQuestionsAnsweredCorrectly() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestion(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestion(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question3 \u003d createTestQuestion(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question1.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question2.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(question1, question2, question3)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic1 \u003d new Topic(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, questionList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates another topic with 3 unanswered questions"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Topic topic2 \u003d createTestTopic(PLACEHOLDER_TOPIC_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Arrays.asList(topic1, topic2)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    int calculatePointsForTwoCorrectAnswersWithoutHint() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return 2 * POINTS_FOR_CORRECT_ANSWER_WITHOUT_HINT_SHOWN;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 67,
      "kstonekuan": 10
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/LogStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/LOG_TEST_\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void save_newLogFile_newLogFileCreated() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogStorage logStorage \u003d new LogStorage(LOG_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File logFile \u003d logStorage.save();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(logFile.exists());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d getSecondLineOfLogs(logFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(logData, \"INFO: Logging to file started\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    String getSecondLineOfLogs(File logFile) throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Scanner logReader \u003d new Scanner(logFile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.nextLine(); // Skip first line with datetime info"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d logReader.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return logData;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 41
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/TopicsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicsStorageTest extends Eduke8Test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_TWO_CORRECT_ANSWER_JSON \u003d \"data/test/two_correct_answer.json\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_THREE_OPTIONS_JSON \u003d \"data/test/three_options.json\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_TEST_TOPICS_JSON \u003d \"data/test/topics.json\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_NO_CORRECT_ANSWER_JSON \u003d \"data/test/no_correct_answer.json\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_FIVE_OPTIONS_JSON \u003d \"data/test/five_options.json\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_DUPLICATE_TOPICS_JSON \u003d \"data/test/duplicate_topics.json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_BLANK_TOPIC_TITLE_JSON \u003d \"data/test/blank_topic_title.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public static final String DATA_TEST_BLANK_QUESTION_DESCRIPTION_JSON \u003d \"data/test/blank_question_description.json\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_invalidPath_expectNoError() throws ParseException, Eduke8Exception, IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_INVALID_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicsStorage.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(true); // Should fall back on file in resources"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_emptyJson_expectParseException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_EMPTY_JSON);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ParseException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_wrongFormatJson_expectClassCastException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_WRONG_FORMAT_JSON);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ClassCastException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_missingKeyJson_expectNullPointerException() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_MISSING_KEY_JSON);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(NullPointerException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_noCorrectAnswerJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_NO_CORRECT_ANSWER_JSON);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_twoCorrectAnswerJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_TWO_CORRECT_ANSWER_JSON);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_threeOptionsJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_THREE_OPTIONS_JSON);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_fiveOptionsJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_FIVE_OPTIONS_JSON);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_duplicateTopicsJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_DUPLICATE_TOPICS_JSON);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_blankTopicTitleJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_BLANK_TOPIC_TITLE_JSON);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_blankQuestionDescriptionJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_BLANK_QUESTION_DESCRIPTION_JSON);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, topicsStorage::load);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_exampleJson_returnsTopicsFromJson() throws IOException, ParseException, Eduke8Exception {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(DATA_TEST_TOPICS_JSON);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d topicsStorage.load();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(topics.size(), 2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic firstTopic \u003d (Topic) topics.get(0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(firstTopic.getDescription(), PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList firstQuestionList \u003d firstTopic.getQuestionList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(firstQuestionList.getCount(), 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 105,
      "Zhi-You": 3
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/UserStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.bookmark.BookmarkList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class UserStorageTest extends Eduke8Test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_TEST_USER_JSON \u003d \"data/test/user.json\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_TEST_SAVE_JSON \u003d \"data/test/save.json\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final TopicList topicList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final BookmarkList bookmarkList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    UserStorageTest() throws Eduke8Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d (Topic) topicList.find(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarkList \u003d new BookmarkList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionOne \u003d (Question) questionList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionOne.markAsShown();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        bookmarkList.add(questionOne);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionOne.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionOne.getHint().markAsShown();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Displayable questionTwo \u003d questionList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionTwo.markAsShown();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void save_newPath_returnsCreatedFile() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_SAVE_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File returnedFile \u003d userStorage.save();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(returnedFile.exists());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File correctFile \u003d new File(getSaveTestPath());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(returnedFile, correctFile);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_invalidPath_returnsEmptyArrayList() throws ParseException, Eduke8Exception, IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_INVALID_PATH, topicList, bookmarkList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d userStorage.load();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(topics.size(), 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_emptyJson_expectParseException() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_EMPTY_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ParseException.class, userStorage::load);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_wrongFormatJson_expectClassCastException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_WRONG_FORMAT_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ClassCastException.class, userStorage::load);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_missingKeyJson_expectEduke8Exception() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_MISSING_KEY_JSON, topicList, bookmarkList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, userStorage::load);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void load_exampleJson_returnsUserAttributesFromJson() throws ParseException, Eduke8Exception, IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicList newTopicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        BookmarkList newBookmarkList \u003d new BookmarkList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        UserStorage userStorage \u003d new UserStorage(DATA_TEST_USER_JSON, newTopicList, newBookmarkList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        userStorage.load();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Topic topic \u003d (Topic) newTopicList.find(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionOne \u003d (Question) topic.getQuestionList().find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(questionOne.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(questionOne.wasHintShown());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertNotNull(newBookmarkList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question questionTwo \u003d (Question) topic.getQuestionList().find(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(questionTwo.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertFalse(questionTwo.wasHintShown());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertNull(newBookmarkList.find(PLACEHOLDER_QUESTION_TWO_DESCRIPTION));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    String getSaveTestPath() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d UserStorageTest.DATA_TEST_SAVE_JSON.split(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 110
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicListTest extends Eduke8Test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final int DEFAULT_TOPIC_COUNT \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TEST_INPUT \u003d \"Test\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_TwoTopics_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_TOPIC_COUNT, topicList.getCount());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void find_topicListWithTwoTopics_returnsFirstTopic() throws Eduke8Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Displayable topic1 \u003d topicList.find(PLACEHOLDER_TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, topic1.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void find_topicNotFound_expectEduke8Exception() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e topicList.find(NONSENSE_DESCRIPTION));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void get_topicOne_expectTopicOne() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(PLACEHOLDER_TOPIC_ONE_DESCRIPTION, topicList.get(0).getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void doesTopicExist_expect_booleanFalse() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(topicList.doesTopicExist(TEST_INPUT), false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void doesTopicExist_expect_booleanTrue() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(topicList.doesTopicExist(PLACEHOLDER_TOPIC_ONE_DESCRIPTION), true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 10,
      "joelngyx": 48
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.Eduke8Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicTest extends Eduke8Test {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INPUT \u003d \"JUnit: Basic\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList questionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    TopicTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        questionList \u003d createTestQuestionList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic \u003d new Topic(INPUT, questionList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getsTopicDescription_topicDescription_returnsTopicDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(INPUT, topic.getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void getsQuestionList_questionList_returnsQuestionList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(questionList, topic.getQuestionList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 13,
      "joelngyx": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "textbook"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "topics"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "hint"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/-1 s/2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/50 s/2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOP n/1 s/0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "a"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "7"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz n/2 t/OOP s/-1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/ n/1 s/2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz n/1 t/2 s/2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/2 n/1 s/2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz s/2 n/1 t/3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "quiz t/OOPS n/1 s/2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/1 n/1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "topics"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "Zhi-You": 7,
      "anqi20": 13,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "java -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "-": 17
    }
  }
]
