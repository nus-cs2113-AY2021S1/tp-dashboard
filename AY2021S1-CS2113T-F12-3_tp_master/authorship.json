[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# E-Duke-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   What is your name?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   Type some word and press enter to let the execution proceed to the end."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 1,
      "-": 63
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    mainClassName \u003d \"seedu.eduke8.Eduke8\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    archiveBaseName \u003d \"eduke8\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 3,
      "Zhi-You": 2,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tang Zhi You | [Github](https://github.com/Zhi-You) | [Portfolio](docs/team/zhiyou.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joseph Abraham | [Github](https://github.com/josephhhhhhhhh) | [Portfolio](docs/team/joseph.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lim An Qi | [Github](https://github.com/anqi20) | [Portfolio](docs/team/anqi.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joel Ng | [Github](https://github.com/joelngyx) | [Portfolio](docs/team/joel.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kingston Kuan | [Github](https://github.com/kstonekuan) | [Portfolio](docs/team/kingston.md)"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 5,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "CS2113/T Students"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Help CS2113/T students learn and understand software engineering and OOP principles through a gamified platform and enhance their learning experience. Consolidate key concepts for easy revision."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "-": 32
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "E-Duke-8 helps CS2113/T students learn and understand software engineering and OOP principles through a gamified"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "platform and enhance their learning experience. It also consolidates key concepts for easy revision."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "-": 7
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "E-Duke-8 helps CS2113/T students learn and understand software engineering and OOP principles through a gamified"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "platform and enhances their learning experience. It also consolidates key concepts for easy revision."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2. Download the latest version of `E-Duke-8` from [here](https://github.com/AY2021S1-CS2113T-F12-3/tp/releases)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "3. Copy the files to the folder you want to use as the eduke8 folder for the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "4. Run E-Duke-8."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "5. Type a command in the terminal and press Enter to execute it. e.g. typing \u0027help\u0027 and pressing Enter will list all the commands that you can use in this application. Here is a list of commands you can try:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - about : Provides product information."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - topics : Lists the topics involved in CS2113T."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - textbook : Links to the CS2113T website."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "   - quiz : Starts a quiz. Eg. quiz t/OOP n/5  will start a quiz with five questions based on OOP concepts."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - hint\t  :   Shows a hint to the current question"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "   - exit : Exits the app."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "6. Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "ℹ️ Notes about the command format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Words in UPPER_CASE are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- e.g. in add t/TOPIC, TOPIC is a parameter which can be used as quiz t/OOP."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Items in square brackets are optional."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "- e.g quiz t/TOPIC [t/TOPIC] can be used as quiz t/OOP t/Requirements or as quiz t/OOP."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Loading data"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Data is loaded from the .json files in the data folder for use in quizzes and notes.  This is part of the setup and is to be done prior to the running of the app. Upon successful startup this screen should shown:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![welcome](./images/welcome.png)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "### Viewing product Information : `about`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Shows a message explaining the purpose of using E-Duke-8."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![about](./images/about.png)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `about`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Viewing help : `help`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Shows a list of commands that can be used."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![help](./images/help.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Listing all topics : `topics`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Shows the entire list of topics that are listed in the CS2113T Github.io website."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![topics](./images/topics.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `topics`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Accessing the CS2113T textbook content: `textbook`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Redirects users to the github textbook website."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![textbook](./images/textbook.png)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `textbook`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Starting a quiz: `quiz`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Starts a quiz with a specified number of questions from up to two topics"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![quiz](./images/quiz.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `quiz t/TOPIC n/QUESTIONS`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- The quiz will contain QUESTIONS number of questions "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- TOPIC follows that of the topics shown when using the topics command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- Questions in the quiz will be related to the topics you chose"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- `quiz t/OOP n/5` will start a quiz that contains 5 questions from the topic on OOP.  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Showing a hint : `hint`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Shows a hint to the current question"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![hint](./images/hint.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `hint`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "- A maximum of one hint can be shown for each question"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Exiting the program : `exit`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "![exit](./images/exit.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**Q**: How do I change the questions in the quizzes?"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "**A**: Open topics.json in any text editor to edit the questions, make sure to follow the format of the questions already provided."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Action | Format, Examples |"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| ------ | ---------------- |"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| About       | `about`                                                |"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Textbook    | `textbook`                                             |"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Quiz        | `quiz t/TOPIC n/QUESTIONS` \u003cbr/\u003e e.g. `quiz t/OOP n/5` |"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Hint        | `hint`                                                 |"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| List Topics | `topics`                                               |"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Help        | `help`                                                 |"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "| Exit        | `exit`                                                 |"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 83,
      "Zhi-You": 8,
      "-": 25
    }
  },
  {
    "path": "docs/team/kingston.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "# Kingston Kuan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Computer Engineering student at the National University of Singapore."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "Added my name to about us."
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 9
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/Eduke8.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.MenuParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.LogStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.TopicsStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_STORAGE_FAIL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8 {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String DATA_PATH \u003d \"data/main/topics.json\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private MenuParser menuParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private TopicsStorage topicsStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private LogStorage logStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Eduke8(String dataPath, String logPath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        menuParser \u003d new MenuParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topicsStorage \u003d new TopicsStorage(dataPath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logStorage \u003d new LogStorage(logPath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            logStorage.save();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            topicList \u003d new TopicList(topicsStorage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            ui.printError(ERROR_STORAGE_FAIL);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"Error reading or writing local files.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        runCommandLoopUntilExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printGreetMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void runCommandLoopUntilExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String userInput \u003d ui.getInputFromUser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Command command \u003d menuParser.parseCommand(topicList, userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.execute(topicList, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        new Eduke8(DATA_PATH, LOG_PATH).run();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 3,
      "kstonekuan": 35,
      "anqi20": 31,
      "-": 5,
      "josephhhhhhhhh": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AboutCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class AboutCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printAbout();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/AnswerCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Option option;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public AnswerCommand(Option option, Question question) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert option !\u003d null \u0026\u0026 question !\u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList optionList, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        int correctOption; "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (option.isCorrectAnswer()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ui.printAnswerIsCorrect();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasAnsweredCorrectly();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                int correctOptionNumber \u003d ((OptionList) optionList).findCorrectOptionIndex() + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printAnswerIsWrong(correctOptionNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert !question.wasAnsweredCorrectly();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 37,
      "anqi20": 3
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public abstract void execute(DisplayableList displayableList, Ui ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/ExitCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HelpCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/HintCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public HintCommand(Hint hint) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint !\u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printHint(hint);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert hint.wasShown();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 22
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/IncorrectCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ui.printError(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 4,
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/QuizCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.quiz.SingleTopicQuiz;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private TopicList topicList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private int numOfQuestions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private String topicName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public QuizCommand(TopicList topicList, int numOfQuestions, String topicName, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert numOfQuestions !\u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicList \u003d topicList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.numOfQuestions \u003d numOfQuestions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.topicName \u003d topicName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Topic topic \u003d (Topic) topicList.find(topicName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, numOfQuestions);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            singleTopicQuiz.startQuiz(ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (Eduke8Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.WARNING, \"QuizCommand Execution: A NullPointerException was thrown.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.printError(\"Error! There is no such topic listed in our storage. Please try again.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "josephhhhhhhhh": 44
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TextbookCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TextbookCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printTextbook();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 11
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/command/TopicsCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TopicsCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void execute(DisplayableList displayableList, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert displayableList !\u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ((TopicList) displayableList).showTopics(ui);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 1,
      "josephhhhhhhhh": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/Displayable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Displayable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    boolean wasShown();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 8
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/common/DisplayableList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface DisplayableList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e getInnerList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void add(Displayable displayable);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void delete(int index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    Displayable find(String description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    int getCount();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/Eduke8Exception.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Eduke8Exception extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Eduke8Exception(String exceptionMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(exceptionMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 7
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/exception/ExceptionMessages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class ExceptionMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_STORAGE_FAIL \u003d \"Oh no! An error has occurred when accessing the file.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"Please check again!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_UNKNOWN \u003d \"Oh no! An unknown error has occurred.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_UNRECOGNIZED_COMMAND \u003d \"Oops! The command cannot be understood.\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"Please enter in \\\"help\\\" to get the list of available commands. \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_WRONG_FORMAT \u003d \"Invalid command! The command for quiz is as follows:\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e\" + System.lineSeparator()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"(Topics available can be found using the \\\"topics\\\" command)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_COMMAND_NOT_IMPLEMENTED \u003d \"Oh! This command has yet to be implemented. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"Stay tune for Version 2.0!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_NOT_INDEX \u003d \"Please choose the answer using its index (1,2,3 or 4)!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \"Please choose only options 1, 2, 3 or 4\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_QUIZ_INVALID_QUESTION_NUMBER \u003d \"The number of quiz questions\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" must be more than 1!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public static final String ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"There is not enough questions in the topic for the quiz!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 10,
      "anqi20": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/hint/Hint.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Hint implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Hint(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.wasShown;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 12,
      "kstonekuan": 12
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/Option.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Option implements Displayable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private boolean isCorrectAnswer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public Option(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        isCorrectAnswer \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return wasShown;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public boolean isCorrectAnswer() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return isCorrectAnswer;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void markAsCorrectAnswer() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        this.isCorrectAnswer \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 17,
      "anqi20": 18
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/option/OptionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class OptionList implements DisplayableList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private final ArrayList\u003cDisplayable\u003e options;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String NO_RIGHT_ANSWER_ERROR \u003d \"Error with question: No right answer specified\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public OptionList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        options \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList(ArrayList\u003cDisplayable\u003e options) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return this.options;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void add(Displayable option) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        options.add(option);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        options.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String description) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable option : options) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (description.equals(option.getDescription())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return option;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int findCorrectOptionIndex() throws Eduke8Exception {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (int i \u003d 0; i \u003c getCount(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (((Option) options.get(i)).isCorrectAnswer()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.WARNING, NO_RIGHT_ANSWER_ERROR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        throw new Eduke8Exception(NO_RIGHT_ANSWER_ERROR);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return options.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 47,
      "anqi20": 16
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/MenuParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AboutCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HelpCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.TextbookCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.TopicsCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.QuizCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_WRONG_FORMAT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_UNRECOGNIZED_COMMAND;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class MenuParser implements Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public MenuParser() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Command parseCommand(DisplayableList topicList, String userInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assert topicList !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.INFO, \"Begin parsing command.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] commandArr \u003d userInput.trim().split(\" \", 0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (commandArr[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"about\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: about command chosen.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new AboutCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: help command chosen.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"topics\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: topics command chosen.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TopicsCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"textbook\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: textbook command chosen.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new TextbookCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"quiz\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int numOfQuestions \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String topicName \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                numOfQuestions \u003d Integer.parseInt(commandArr[2].substring(2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                topicName \u003d commandArr[1].substring(2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": "                return new IncorrectCommand(ERROR_QUIZ_WRONG_FORMAT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: quiz command chosen.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new QuizCommand((TopicList) topicList, numOfQuestions, topicName, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: exit command chosen.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LOGGER.log(Level.WARNING, \"Parsing Error: Unrecognised command was entered.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return new IncorrectCommand(ERROR_UNRECOGNIZED_COMMAND);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 9,
      "Zhi-You": 3,
      "anqi20": 5,
      "josephhhhhhhhh": 55
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    Command parseCommand(DisplayableList displayableList, String userInput) throws Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/parser/QuizParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_NOT_INDEX;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_ANSWER_NOT_INDEX;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_COMMAND_NOT_IMPLEMENTED;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class QuizParser implements Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void setQuestion(Question question) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert question !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Command parseCommand(DisplayableList optionList, String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (\"hint\".equals(userInput)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            LOGGER.log(Level.INFO, \"Parsing complete: hint command chosen.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new HintCommand(question.getHint());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            int chosenIndex \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Option chosenOption \u003d (Option) options.get(chosenIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            return new AnswerCommand(chosenOption, question);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"A non-number was given when answering question.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_NOT_INDEX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.WARNING, \"An index out of bounds was given when answering question.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new IncorrectCommand(ERROR_QUIZ_ANSWER_INDEX_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 48,
      "Zhi-You": 3,
      "anqi20": 2,
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/Question.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a question of a certain topic. A \u003ccode\u003eQuestion\u003c/code\u003e object is represented by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * its description, options and hint."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Question implements Displayable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private OptionList optionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Hint hint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private boolean wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Question(String description, OptionList optionList, Hint hint) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert description !\u003d null;     // A question must have its description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert optionList !\u003d null;       // A question must have some options"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.optionList \u003d optionList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.hint \u003d hint;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the description of the question."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Question information."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns a boolean variable indicating if the question was already attempted before."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * @return Indication of whether the question was attempted before or not."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return wasShown;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the multiple options of the question."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return An  arraylist of options pertaining to this question."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public OptionList getOptionList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "     * Returns the hint tied to the question."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Details of the hint."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Hint getHint() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the user had requested for a hint for this question."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of whether the hint for this question was shown before,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasHintShown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return hint.wasShown();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a boolean variable indicating if the question was answered correctly."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return True if question was answered correctly, false otherwise."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean wasAnsweredCorrectly() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return wasAnsweredCorrectly;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks this question as answered correctly."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markAsAnsweredCorrectly() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        wasAnsweredCorrectly \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 65,
      "kstonekuan": 29
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuestionList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuestionList implements DisplayableList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e questions;  // list of questions for the particular topic"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuestionList(ArrayList\u003cDisplayable\u003e questions) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // The question list for topics must contain some questions about the topic"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert questions.size() \u003e 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.questions \u003d questions;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void add(Displayable question) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert question !\u003d null;  // Exception in future if user can add question"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assert (index \u003e 0 \u0026\u0026 index \u003c questions.size());   // Exception in future if user can delete question"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Displayable find(String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (Displayable question : questions) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (description.equals(question.getDescription())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                return question;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 50
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/question/QuizQuestionsManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static seedu.eduke8.exception.ExceptionMessages.ERROR_QUIZ_INVALID_QUESTION_NUMBER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class QuizQuestionsManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cQuestion\u003e quizQuestions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private int currentQuestionNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final Random RANDOM \u003d new Random();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public QuizQuestionsManager(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        currentQuestionNumber \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizQuestions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        setQuizQuestions(numberOfQuestionsForQuiz, questionsInTopic);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void setQuizQuestions(int numberOfQuestionsForQuiz,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                                 ArrayList\u003cDisplayable\u003e questionsInTopic) throws Eduke8Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003c\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INVALID_QUESTION_NUMBER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (numberOfQuestionsForQuiz \u003e questionsInTopic.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            throw new Eduke8Exception(ERROR_QUIZ_INSUFFICIENT_TOPIC_QUESTIONS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Stores the questions\u0027 indexes selected from the topic question list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cInteger\u003e integersChosen \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (quizQuestions.size() \u003c numberOfQuestionsForQuiz) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Gets a random question that is within the bounds of the size of the available question list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            int randomQuestionIndex \u003d RANDOM.nextInt(questionsInTopic.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // To ensure we do not pick the same question again"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (integersChosen.contains(randomQuestionIndex)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                LOGGER.log(Level.INFO, \"Chosen a repeated question\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // choose a random question from the question list and add it to the questionsInTopic for quiz"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            quizQuestions.add((Question) questionsInTopic.get(randomQuestionIndex));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            integersChosen.add(randomQuestionIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Question getNextQuestion() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Automatically increases question count when a question is shown to the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.get(currentQuestionNumber++);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getCurrentQuestionNumber() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean areAllQuestionsAnswered() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return currentQuestionNumber \u003d\u003d quizQuestions.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getQuizQuestionsCount() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return quizQuestions.size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 63,
      "kstonekuan": 10,
      "anqi20": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/Quiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Quiz {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void startQuiz(Ui ui) throws Eduke8Exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 7,
      "Zhi-You": 2
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/quiz/SingleTopicQuiz.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.parser.QuizParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuizQuestionsManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuiz implements Quiz {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private int numberOfQuestions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuizParser quizParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public SingleTopicQuiz(Topic topic, int numberOfQuestions) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert numberOfQuestions \u003e\u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topic \u003d topic;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.numberOfQuestions \u003d numberOfQuestions;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        quizParser \u003d new QuizParser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void startQuiz(Ui ui) throws Eduke8Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"New quiz started.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d topic.getQuestionList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(numberOfQuestions, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert !quizQuestionsManager.areAllQuestionsAnswered();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printStartQuizPage(numberOfQuestions, topic.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        goThroughQuizQuestions(ui, quizQuestionsManager);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ui.printEndQuizPage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Quiz ended.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void goThroughQuizQuestions(Ui ui, QuizQuestionsManager quizQuestionsManager) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (!quizQuestionsManager.areAllQuestionsAnswered()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Question question \u003d quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            ui.printQuestion(question, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert question.wasShown();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            OptionList optionList \u003d question.getOptionList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e options \u003d optionList.getInnerList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            for (int i \u003d 0; i \u003c options.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                ui.printOption((Option) options.get(i), i + 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            quizParser.setQuestion(question);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Command command \u003d getCommand(ui, optionList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assert (command instanceof AnswerCommand || command instanceof HintCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            while (!(command instanceof AnswerCommand)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                command.execute(optionList, ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                command \u003d getCommand(ui, optionList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                if (command instanceof IncorrectCommand) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Invalid answer given for question\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                    LOGGER.log(Level.INFO, \"Hint shown\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            LOGGER.log(Level.INFO, \"Question answered\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            command.execute(optionList, ui);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Command getCommand(Ui ui, OptionList optionList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String userInput \u003d ui.getInputFromUser();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return quizParser.parseCommand(optionList, userInput);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 80,
      "Zhi-You": 19
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LocalStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public abstract class LocalStorage implements Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected String filePath \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public LocalStorage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert filePath !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Use relative path for Unix systems"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.filePath \u003d appendRelativePath(this.filePath, filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String appendRelativePath(String originalPath, String relativePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d originalPath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d relativePath.split(\"/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    protected File createFileIfNotExists() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert file.exists();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 40
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/LogStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.LogManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorage extends LocalStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public LogStorage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    // Set up save to file inside of print to console"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void save() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogManager.getLogManager().reset();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Only log severe to console"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ConsoleHandler ch \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ch.setLevel(Level.SEVERE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(ch);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // Log all to the file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File logFile \u003d createFileIfNotExists();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileHandler fh \u003d new FileHandler(logFile.getAbsolutePath());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        fh.setLevel(Level.ALL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.addHandler(fh);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Logging to file started\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 46
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    void save() throws IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 1,
      "kstonekuan": 13
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/storage/TopicsStorage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicsStorage extends LocalStorage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicsStorage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        super(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void save() throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        createFileIfNotExists();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        // For adding and removing questions for v2"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //JSON parser object to parse read file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONParser jsonParser \u003d new JSONParser();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        FileReader reader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Read JSON file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray topicsAsJsonArray \u003d (JSONArray) jsonParser.parse(reader);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        //Iterate over employee array"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topicsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) topicsAsJsonArray.stream()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(topic -\u003e parseToTopicObject((JSONObject) topic))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topicsAsObjects.get(0) instanceof Topic;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LOGGER.log(Level.INFO, \"Topics loaded from file\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topicsAsObjects;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static Topic parseToTopicObject(JSONObject topic) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String topicTitle \u003d (String) topic.get(\"topic\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray questionsAsJsonArray \u003d (JSONArray) topic.get(\"questions\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questionsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) questionsAsJsonArray.stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(question -\u003e parseToQuestionObject((JSONObject) question))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert questionsAsObjects.get(0) instanceof Question;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questionsAsObjects);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Topic(topicTitle, questionList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static Question parseToQuestionObject(JSONObject question) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String questionDescription \u003d (String) question.get(\"description\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        JSONArray optionsAsJsonArray \u003d (JSONArray) question.get(\"options\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e optionsAsObjects \u003d (ArrayList\u003cDisplayable\u003e) optionsAsJsonArray.stream()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .map(option -\u003e parseToOptionObject((JSONObject) option))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionsAsObjects.get(0) instanceof Option;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d new OptionList(optionsAsObjects);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String hintDescription \u003d (String) question.get(\"hint\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(hintDescription);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return new Question(questionDescription, optionList, hint);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static Option parseToOptionObject(JSONObject option) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String optionDescription \u003d (String) option.get(\"description\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        boolean isCorrectAnswer \u003d (boolean) option.get(\"correct\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option optionAsObject \u003d new Option(optionDescription);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        if (isCorrectAnswer) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            optionAsObject.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert optionAsObject.isCorrectAnswer() \u003d\u003d isCorrectAnswer;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return optionAsObject;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 104
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/Topic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class Topic implements Displayable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private QuestionList questionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private boolean wasShown;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Topic(String description, QuestionList questionList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert questionList !\u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.questionList \u003d questionList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        wasShown \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        wasShown \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public boolean wasShown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return wasShown;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public QuestionList getQuestionList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19,
      "joelngyx": 15
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/topic/TopicList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.DisplayableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class TopicList implements DisplayableList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private ArrayList\u003cDisplayable\u003e topics;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public TopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assert topics.size() \u003e 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        this.topics \u003d topics;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showTopics(Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui.printTopicList(topics);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public ArrayList\u003cDisplayable\u003e getInnerList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void add(Displayable topic) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String message \u003d \"Topic \" + topic.getDescription() + \" added\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topics.add(topic);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        LOGGER.log(Level.INFO, message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String message \u003d \"Topic \" + topics.get(index).getDescription() + \" deleted\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topics.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        LOGGER.log(Level.INFO, message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public Displayable find(String topicName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (Displayable topic : topics) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            if (topicName.equals(topic.getDescription())) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "                return topic;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return topics.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 22,
      "joelngyx": 29,
      "josephhhhhhhhh": 5
    }
  },
  {
    "path": "src/main/java/seedu/eduke8/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int LAST_OPTION \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String TEXTBOOK_WEBSITE \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            \"https://nus-cs2113-ay2021s1.github.io/website/se-book-adapted/index.html\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String LOGO \u003d \" _____        _____\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"|  ___| ____ |  _  |\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"| |___ |  _ \\\\| |_| |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"|  ___|| | | |  _  |\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"| |___ | |_| | |_| |\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"|_____||____/|_____|\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"-------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ABOUT \u003d \"E-Duke-8 is a desktop app that helps CS2113/T students learn and\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"understand software engineering and OOP principles through a\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"gamified platform and enhance their \" + \"learning experience. It also\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"consolidates key concepts for easy revision.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_GREETINGS \u003d \"Hello! I\u0027m E-Duke-8\" + System.lineSeparator()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye bye. Hope you had a fruitful revision and see you soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_HELP \u003d \"These are the commands that you can used:\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"1) about\" + System.lineSeparator() + \"2) help\" + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"3) topics\" + System.lineSeparator() + \"4) textbook\" + System.lineSeparator()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + \"5) quiz t/\u003ctopic\u003e n/\u003cnumber of questions\u003e\" + System.lineSeparator() + \"6) exit\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_START \u003d \"Start of quiz:\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_QUIZ_END \u003d \"This is the end of the quiz!\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + \"Hope you have learnt something new!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG \u003d \"Oops! The correct answer is \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_ANSWER_WRONG_SECOND \u003d \"! Do visit the textbook to read up more.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String MESSAGE_ANSWER_CORRECT \u003d \"Great Job! That is the correct answer! Keep it up!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_TEXTBOOK \u003d \"The textbook for this module is available at:\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            + System.lineSeparator() + TEXTBOOK_WEBSITE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String MESSAGE_HINT \u003d \"Hint: \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public String getInputFromUser() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static void printMessage(String message) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printGreetMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_GREETINGS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printOption(Option option, int optionNumber) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        System.out.println(optionNumber + \") \" + option.getDescription());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (optionNumber \u003d\u003d LAST_OPTION) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printQuestion(Question question, int questionNumber) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(questionNumber + \". \" + question.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void printHint(Hint hint) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_HINT + hint.getDescription());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    //Formatting of topicsChosen: separated by \",\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printStartQuizPage(int numberOfQuestionsChosen, String topicsChosen) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_START);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Showing the number of questions chosen by user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printStartQuizQuestions(numberOfQuestionsChosen);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        //Showing the topics chosen by user"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printStartQuizTopics(topicsChosen);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printEndQuizPage() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_QUIZ_END);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsWrong(int correctAnswer) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(MESSAGE_ANSWER_WRONG + correctAnswer + MESSAGE_ANSWER_WRONG_SECOND);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAnswerIsCorrect() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_ANSWER_CORRECT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_HELP);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printAbout() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_ABOUT);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    public void printTextbook() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        printMessage(MESSAGE_TEXTBOOK);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessage(errorMessage);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void printTopicList(ArrayList\u003cDisplayable\u003e topics) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(\"These are the available topics and the number of available questions in each:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (int i \u003d 0; i \u003c topics.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Topic topic \u003d (Topic) topics.get(i);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(topic.getDescription() + \"   [\" + topic.getQuestionList().getCount() + \"]\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void printStartQuizTopics(String topicsChosen) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (topicsChosen.contains(\",\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            int indexOfSplit \u003d topicsChosen.indexOf(\",\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String topics1 \u003d topicsChosen.substring(0, indexOfSplit).trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            String topics2 \u003d topicsChosen.substring(indexOfSplit + 1).trim();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(\"The topics chosen are: \" + topics1 + \" and \" + topics2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(\"The topic chosen is: \" + topicsChosen);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private void printStartQuizQuestions(int numberOfQuestionsChosen) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.print(\"You have chosen to complete \" + numberOfQuestionsChosen + \" question\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        if (numberOfQuestionsChosen \u003c 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(\".\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "anqi20"
        },
        "content": "            System.out.println(\"s.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 10,
      "kstonekuan": 7,
      "anqi20": 138,
      "joelngyx": 4,
      "josephhhhhhhhh": 2
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/Eduke8Test.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class Eduke8Test {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/AnswerCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class AnswerCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute_correctAnswer_markAnsweredCorrectly() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Option option \u003d new Option(\"test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        option.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        optionList.add(option);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(\"test\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Question question \u003d new Question(\"test\", optionList, hint);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command answerCommand \u003d new AnswerCommand(option, question);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        answerCommand.execute(optionList, new Ui());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 29
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/command/HintCommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class HintCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void execute_normal_hintWasShown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Hint hint \u003d new Hint(\"test\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Command hintCommand \u003d new HintCommand(hint);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        hintCommand.execute(new OptionList(), new Ui());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(hint.wasShown());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 19
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/hint/HintTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.hint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class HintTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHintDescription_hintDescription_returnsHintDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String inputHintDescription \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(inputHintDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(inputHintDescription, hint.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 15,
      "kstonekuan": 1
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": "class OptionListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String PLACEHOLDER_OPTION_ONE_DESCRIPTION \u003d \"Option one\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String PLACEHOLDER_OPTION_TWO_DESCRIPTION \u003d \"Option two\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final int DEFAULT_OPTION_COUNT \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getCount_oneOption_returnsCountOfOne() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d createOptionList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(DEFAULT_OPTION_COUNT, optionList.getCount());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getInnerList_oneOption_expectsTrue() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d createOptionList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ArrayList\u003cDisplayable\u003e options \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option optionOne \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        options.add(optionOne);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionListTest \u003d new OptionList(options);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListDescription \u003d optionList.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionListTestDescription \u003d optionListTest.getInnerList().get(0).getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(optionListDescription, optionListTestDescription);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void add_oneOption_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d createOptionList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option optionThree \u003d new Option(PLACEHOLDER_OPTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        optionList.add(optionThree);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(DEFAULT_OPTION_COUNT + 1, optionList.getCount());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void delete_oneOption_returnsCountOfZero() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d createOptionList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        optionList.delete(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(DEFAULT_OPTION_COUNT - 1, optionList.getCount());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void find_twoOptions_returnOptionOne() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d createOptionList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Displayable optionOne \u003d optionList.find(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_ONE_DESCRIPTION, optionOne.getDescription());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private OptionList createOptionList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        ArrayList\u003cDisplayable\u003e options \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option optionOne \u003d new Option(PLACEHOLDER_OPTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        options.add(optionOne);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        OptionList optionList \u003d new OptionList(options);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        return optionList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 71
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/option/OptionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqi20"
        },
        "content": "package seedu.eduke8.option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqi20"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqi20"
        },
        "content": "class OptionTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    private static final String PLACEHOLDER_OPTION_DESCRIPTION \u003d \"Option\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void getDescription_placeholderOptionDescription_returnsOptionDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_DESCRIPTION);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertEquals(PLACEHOLDER_OPTION_DESCRIPTION, option.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void wasShown_placeholderOptionDescription_expectsTrue() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_DESCRIPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        String optionDescription \u003d option.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.wasShown());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    void markAsCorrectAnswer_optionMarkedAsCorrectOption_expectsTrue() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        Option option \u003d new Option(PLACEHOLDER_OPTION_DESCRIPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqi20"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        option.markAsCorrectAnswer();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqi20"
        },
        "content": "        assertTrue(option.isCorrectAnswer());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqi20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqi20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqi20": 33
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/MenuParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.topic.TopicList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class MenuParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void menuParser_wrongStringInput_expectIncorrectCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Hint hint \u003d new Hint(\"description\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question \u003d new Question(\"description\", optionList, hint);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        questions.add(question);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Topic topic \u003d new Topic(\"description\", questionList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        topics.add(topic);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        TopicList topicList \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        MenuParser menuParser \u003d new MenuParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Command badCommand \u003d menuParser.parseCommand(topicList, \"quiz /twrongtopic /nbadnnum\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 43
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/parser/QuizParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package seedu.eduke8.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.AnswerCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.HintCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.command.IncorrectCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class QuizParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void quizParser_wrongStringInput_expectIncorrectCommandReturn() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        QuizParser quizParser \u003d new QuizParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command badCommand \u003d quizParser.parseCommand(optionList, \"one\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        badCommand \u003d quizParser.parseCommand(optionList, \"back\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(badCommand instanceof IncorrectCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void quizParser_correctStringInput_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Hint hint \u003d new Hint(\"description\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        QuizParser quizParser \u003d new QuizParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Question question \u003d new Question(\"description\", optionList, hint);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizParser.setQuestion(question);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command resultCommand \u003d quizParser.parseCommand(optionList, \"hint\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof HintCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        optionList.add(new Option(\"1\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        quizParser.setQuestion(question);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        resultCommand \u003d quizParser.parseCommand(optionList, \"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        assertTrue(resultCommand instanceof AnswerCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 48
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class QuestionListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_ONE_DESCRIPTION \u003d \"First question description.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_TWO_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_THREE_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int DEFAULT_QUESTION_COUNT \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getCount_twoQuestions_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d createQuestionListWithTwoUniqueQuestions();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(DEFAULT_QUESTION_COUNT, questionList.getCount());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void add_thirdQuestionToQuestionList_returnsCountOfThree() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d createQuestionListWithTwoUniqueQuestions();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question thirdQuestion \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questionList.add(thirdQuestion);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(DEFAULT_QUESTION_COUNT + 1, questionList.getCount());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void delete_questionListWithTwoQuestions_returnsCountOfOne() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d createQuestionListWithTwoUniqueQuestions();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questionList.delete(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(DEFAULT_QUESTION_COUNT - 1, questionList.getCount());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void find_questionListWithTwoQuestions_returnsFirstQuestion() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d createQuestionListWithTwoUniqueQuestions();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Displayable firstQuestionOfQuestionList \u003d questionList.find(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_ONE_DESCRIPTION, firstQuestionOfQuestionList.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a question list that holds two questions, each with a unique description"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private QuestionList createQuestionListWithTwoUniqueQuestions() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a question with a specific description, 2 standard options and a standard hint"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private Question createTestQuestionWithCustomDescription(String description) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option1 \u003d new Option(\"test1\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option2 \u003d new Option(\"test2\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String inputHintDescription \u003d PLACEHOLDER_HINT_DESCRIPTION;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(inputHintDescription);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d new Question(description, optionList, hint);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 87
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuestionTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class QuestionTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_DESCRIPTION \u003d \"This is a question description.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int OPTIONLIST_OPTIONS_COUNT \u003d 2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getDescription_placeholderQuestionDescription_returnsQuestionDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_QUESTION_DESCRIPTION, question.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasShown_questionThatWasShownToUser_expectsTrue() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // When question is being shown to user, it is marked as shown automatically."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String questionDescriptionShownToUser \u003d question.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasShown());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getOptionList_optionListWithTwoOptions_returnsCountOfTwoOptions() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(OPTIONLIST_OPTIONS_COUNT, question.getOptionList().getCount());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getHint_hintObject_returnsHintDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(PLACEHOLDER_HINT_DESCRIPTION, question.getHint().getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasHintShown_questionWithHintShown_expectsTrue() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hintThatWasShownToUser \u003d question.getHint();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Shows hint to user to mark hint as shown to user before"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        hintThatWasShownToUser.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasHintShown());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void wasAnsweredCorrectly_questionMarkedAsAnsweredCorrectly_expectsTrue() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creates a question object with description, 2 options and a hint"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d createTestQuestion();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        question.markAsAnsweredCorrectly();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(question.wasAnsweredCorrectly());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a standard question for the tests with description, 2 options and a hint"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private Question createTestQuestion() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String inputQuestionDescription \u003d PLACEHOLDER_QUESTION_DESCRIPTION;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option1 \u003d new Option(\"test1\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option2 \u003d new Option(\"test2\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String inputHintDescription \u003d PLACEHOLDER_HINT_DESCRIPTION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(inputHintDescription);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d new Question(inputQuestionDescription, optionList, hint);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 94
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/question/QuizQuestionsManagerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package seedu.eduke8.question;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "class QuizQuestionsManagerTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_ONE_DESCRIPTION \u003d \"First question description.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_TWO_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_QUESTION_THREE_DESCRIPTION \u003d \"Second question description.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String PLACEHOLDER_HINT_DESCRIPTION \u003d \"Please check the textbook page 88\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int TOPIC_QUESTIONS_COUNT \u003d 3;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int QUIZ_QUESTIONS_COUNT \u003d 2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final int QUIZ_QUESTIONS_COUNT_MAX \u003d 3;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // This test tests for getQuizQuestionsCount() method too"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_twoQuizQuestionsFromThreeTopicQuestions_returnsCountOfTwo()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 2 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(QUIZ_QUESTIONS_COUNT, quizQuestionsManager.getQuizQuestionsCount());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_threeQuizQuestionsFromThreeTopicQuestions_returnsCountOfTwo()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 3 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT_MAX, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(QUIZ_QUESTIONS_COUNT_MAX, quizQuestionsManager.getQuizQuestionsCount());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_lessThanZeroNumberOfQuizQuestions_expectsException() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    new QuizQuestionsManager(-1, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Number of quiz questions requested by user exceeds the number of questions in the topic"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void quizQuestionsManagerConstructor_invalidNumberOfQuizQuestions_expectsException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                    new QuizQuestionsManager(TOPIC_QUESTIONS_COUNT + 1, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // This test tests for getCurrentQuestionNumber() method too"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void getNextQuestion_currentQuestionNumberAtZero_returnsCurrentQuestionNumberAtOne()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throws Eduke8Exception {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 2 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertEquals(1, quizQuestionsManager.getCurrentQuestionNumber());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    void areAllQuestionsAnswered_fullyAnsweredQuiz_expectsTrue() throws Eduke8Exception {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList topicQuestionList \u003d createQuestionListWithThreeUniqueQuestions();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Creating a quiz with 2 questions selected from a total of 3 questions from the topic"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuizQuestionsManager quizQuestionsManager \u003d"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                new QuizQuestionsManager(QUIZ_QUESTIONS_COUNT, topicQuestionList.getInnerList());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays first question to user"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        quizQuestionsManager.getNextQuestion();     // Displays second question to user"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        assertTrue(quizQuestionsManager.areAllQuestionsAnswered());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a question list that holds two questions, each with a unique description"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private QuestionList createQuestionListWithThreeUniqueQuestions() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question1 \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question2 \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question3 \u003d createTestQuestionWithCustomDescription(PLACEHOLDER_QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        questions.add(question3);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Creates a question with a specific description, 2 standard options and a standard hint"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private Question createTestQuestionWithCustomDescription(String description) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option1 \u003d new Option(\"test1\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Option option2 \u003d new Option(\"test2\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        optionList.add(option2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String inputHintDescription \u003d PLACEHOLDER_HINT_DESCRIPTION;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Hint hint \u003d new Hint(inputHintDescription);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Question question \u003d new Question(description, optionList, hint);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 137
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/quiz/SingleTopicQuizTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.quiz;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.storage.TopicsStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class SingleTopicQuizTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private Topic topic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public SingleTopicQuizTest() throws ParseException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(\"data/test/example.json\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d topicsStorage.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topics !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        topic \u003d (Topic) topics.get(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assert topic !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void startQuiz_zeroQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(new Ui()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void startQuiz_tooManyQuestions_expectEduke8Exception() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        int questionsInTopic \u003d topic.getQuestionList().getCount();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        SingleTopicQuiz singleTopicQuiz \u003d new SingleTopicQuiz(topic, questionsInTopic + 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(Eduke8Exception.class, () -\u003e singleTopicQuiz.startQuiz(new Ui()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 43
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/LogStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "public class LogStorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final LocalDateTime DATE_TIME_NOW \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private static final String LOG_PATH \u003d \"data/logs/LOG_TEST_\" + DATE_TIME_NOW.format(DATE_TIME_FORMATTER) + \".log\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void save_newLogFile_newLogFileCreated() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        LogStorage logStorage \u003d new LogStorage(LOG_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logStorage.save();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String filePath \u003d appendRelativePath(new File(\"\").getAbsolutePath(), LOG_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        File logFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertTrue(logFile.exists());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d getSecondLineOfLogs(logFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertEquals(logData, \"INFO: Logging to file started\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String getSecondLineOfLogs(File logFile) throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        Scanner logReader \u003d new Scanner(logFile);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.nextLine(); // Skip first line with datetime info"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String logData \u003d logReader.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        logReader.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return logData;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    private String appendRelativePath(String originalPath, String relativePath) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String fullPath \u003d originalPath;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        String[] relativePathSplit \u003d relativePath.split(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        for (String path: relativePathSplit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            fullPath +\u003d File.separator + path;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        return fullPath;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 53
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/storage/TopicsStorageTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "package seedu.eduke8.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import seedu.eduke8.topic.Topic;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "class TopicsStorageTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_invalidPath_expectIoException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(\"data/test/invalid.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(IOException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_emptyJson_expectParseException() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(\"data/test/empty.json\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        assertThrows(ParseException.class, topicsStorage::load);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    public void load_exampleJson_returnsTopicsFromJson() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        TopicsStorage topicsStorage \u003d new TopicsStorage(\"data/test/example.json\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            ArrayList\u003cDisplayable\u003e topics \u003d topicsStorage.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assertEquals(topics.size(), 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            Topic firstTopic \u003d (Topic) topics.get(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            assertEquals(firstTopic.getDescription(), \"OOP\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            QuestionList firstQuestionList \u003d firstTopic.getQuestionList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            assertEquals(firstQuestionList.getCount(), 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        } catch (ParseException | IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 44,
      "Zhi-You": 3
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.TestTemplate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "class TopicListTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TOPIC_ONE_DESCRIPTION \u003d \"First Topic\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TOPIC_TWO_DESCRIPTION \u003d \"Second Topic\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String TOPIC_THREE_DESCRIPTION \u003d \"Third Topic\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_ONE_DESCRIPTION \u003d \"First Question\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_TWO_DESCRIPTION \u003d \"Second Question\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_THREE_DESCRIPTION \u003d \"Third Question\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String HINT \u003d \"Hint\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final int DEFAULT_TOPIC_COUNT \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getCount_TwoTopics_returnsCountOfTwo() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_TOPIC_COUNT, topicList.getCount());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void add_thirdTopicToTopicList_returnsCountOfThree() throws Eduke8Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic thirdTopic \u003d createTestTopic(TOPIC_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        topicList.add(thirdTopic);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_TOPIC_COUNT + 1, topicList.getCount());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void delete_thirdTopicToTopicList_returnsCountOfOne() throws Eduke8Exception {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        topicList.delete(1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(DEFAULT_TOPIC_COUNT - 1, topicList.getCount());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void find_topicListWithTwoTopics_returnsFirstTopic() throws Eduke8Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d createTestTopicList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Displayable topic1 \u003d topicList.find(TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(TOPIC_ONE_DESCRIPTION, topic1.getDescription());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private TopicList createTestTopicList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ArrayList\u003cDisplayable\u003e topics \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic1 \u003d createTestTopic(TOPIC_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic2 \u003d createTestTopic(TOPIC_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        topics.add(topic1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        topics.add(topic2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        TopicList topicList \u003d new TopicList(topics);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return topicList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private Topic createTestTopic(String description) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        QuestionList questionList \u003d createQuestionList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic \u003d new Topic(description, questionList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return topic;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private QuestionList createQuestionList() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question1 \u003d createTestQuestion(QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question2 \u003d createTestQuestion(QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question3 \u003d createTestQuestion(QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private Question createTestQuestion(String description) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Option option1 \u003d new Option(\"test1\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Option option2 \u003d new Option(\"test2\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        optionList.add(option1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        optionList.add(option2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Hint hint \u003d new Hint(HINT);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question \u003d new Question(description, optionList, hint);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 106
    }
  },
  {
    "path": "src/test/java/seedu/eduke8/topic/TopicTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package seedu.eduke8.topic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.common.Displayable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.exception.Eduke8Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.hint.Hint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.option.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.option.OptionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.Question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import seedu.eduke8.question.QuestionList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "class TopicTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_ONE_DESCRIPTION \u003d \"First Question\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_TWO_DESCRIPTION \u003d \"Second Question\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String QUESTION_THREE_DESCRIPTION \u003d \"Third Question\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String HINT \u003d \"Hint\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private static final String INPUT \u003d \"JUnit: Basic\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsTopicDescription_topicDescription_returnsTopicDescription() throws Eduke8Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String input \u003d INPUT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic \u003d new Topic(input, createQuestionList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(input, topic.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    void getsQuestionList_questionList_returnsQuestionList() throws Eduke8Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String input \u003d INPUT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        QuestionList questionList \u003d createQuestionList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Topic topic \u003d new Topic(input, questionList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        assertEquals(questionList, topic.getQuestionList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private QuestionList createQuestionList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ArrayList\u003cDisplayable\u003e questions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question1 \u003d createTestQuestion(QUESTION_ONE_DESCRIPTION);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question2 \u003d createTestQuestion(QUESTION_TWO_DESCRIPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question3 \u003d createTestQuestion(QUESTION_THREE_DESCRIPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        questions.add(question3);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        QuestionList questionList \u003d new QuestionList(questions);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return questionList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private Question createTestQuestion(String description) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Option option1 \u003d new Option(\"test1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Option option2 \u003d new Option(\"test2\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        OptionList optionList \u003d new OptionList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        optionList.add(option1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        optionList.add(option2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Hint hint \u003d new Hint(HINT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Question question \u003d new Question(description, optionList, hint);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 67
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "about"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "textbook"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "topics"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "quiz t/OOP n/1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "hint"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "quiz t/OOP n/1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/-1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/50"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "a"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz n/2 t/OOP"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/ n/1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz n/1 t/2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/2 n/1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOPS n/1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "quiz t/OOP n/1 n/1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 6,
      "Zhi-You": 15,
      "josephhhhhhhhh": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": "java -jar ..\\build\\libs\\%jarloc% \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kstonekuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "kstonekuan": 2,
      "-": 17
    }
  }
]
