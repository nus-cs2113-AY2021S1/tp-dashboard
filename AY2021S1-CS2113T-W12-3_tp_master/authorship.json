[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jazhten Low | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhou Shikai | [Github](https://github.com/shikai-zhou) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "judowha"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chen Jiqing | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bryanbeh1998"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bryan Beh | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Benardo Tang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 1,
      "jazhten": 1,
      "judowha": 1,
      "shikai-zhou": 1,
      "-": 4,
      "Bryanbeh1998": 1
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "# WatchNext User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [2. Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [3. Command Format](#3-command-format)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [4. Features](#4-features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.1. Viewing Help](#41-help---views-help)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.2. Adding shows](#42-add---adds-a-show)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.3. Editing shows](#43-edit---edits-your-show-details)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.4. Adding/editing ratings](#44-rating---modifies-rating-of-your-show)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.5. List shows](#45-list---displays-all-your-shows-in-list)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.6. Deleting shows](#46-delete---deletes-your-show)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.2. Deleting ratings](#47-deleterating---deletes-rating-of-your-show)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.3. Change Rating](#48-changerating---changes-rating-of-your-show)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.4. Saving shows](#49-save---saves-your-shows)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.6. Exiting WatchNext](#499-bye---exits-the-program)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- [5. Command Summary](#5-command-summary)   "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "WatchNext is a Command Line Interface (CLI) program used to track their progress in the different shows they watch and also the upcoming shows they wish to watch.. This application is catered for teenagers or young adults, and is optimized for users who prefer to work with the CLI."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Ensure that you have Java 11 installed in your Computer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.Download the latest version from [here](https://github.com/AY2021S1-CS2113T-W12-3/tp)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.Copy the file to the folder you want to use as the home folder for your program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.Open a command window in that folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "4.Run the command `Goodbye world`."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "5.You should see something like this below:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "   ```    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 3. Command Format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. rating `NAME SCORE`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "The maximum length for a Show or Movie’s `NAME` is 100 characters."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 4. Features"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.1 `help` - Views help"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.2 `add` - Adds a show"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.3 `edit` - Edits your show details"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.4 `rating` - Modifies rating of your show"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.5 `list` - Displays all your shows in list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.6 `delete` - Deletes your show"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.7 `deleterating` - Deletes rating of your show"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.8 `changerating` - Changes rating of your show"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.9 `save` - Saves your shows"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.99 `bye` - Exits the program"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 5. Command Summary "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 82,
      "-": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.classes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.utility.ShowList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.utility.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import seedu.duke.utility.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    //public ShowList shows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            new ShowList(/*storage.loadState()*/);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            //ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            new ShowList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        /*ui.hello();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        InputParser parseManager \u003d new InputParser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (!parseManager.isByeTime()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Ui.printLineIcon();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            parseManager.parseInput(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 11,
      "jazhten": 23,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/classes/Movie.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Movie {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    String genre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Movie(String name, String genre) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.genre \u003d genre;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/classes/Show.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Show {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected int numSeasons;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected int[] numEpisodesForSeasons;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected int rating;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected String review;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected LocalDateTime showTime;   //The time of the show, maybe include date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Show(String name, int numSeasons, int[] numEpisodesForSeasons) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.numSeasons \u003d numSeasons;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.numEpisodesForSeasons \u003d numEpisodesForSeasons;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.rating \u003d -1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.review \u003d \"null\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public int getNumSeasons() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return numSeasons;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public int[] getNumEpisodesForSeasons() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return numEpisodesForSeasons;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public int getRating() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public int getEpisodesForSeason(int season) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        //TODO : Add the exception for bounds checking"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return numEpisodesForSeasons[season];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String getReview() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return review;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void setRating(int rating) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.rating \u003d rating;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void setReview(String review) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.review \u003d review;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void setNumSeasons(int numSeasons) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.numSeasons \u003d numSeasons;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void setNumEpisodesForSeasons(int[] numEpisodesForSeasons) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.numEpisodesForSeasons \u003d numEpisodesForSeasons;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/classes/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.utility.SaveState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Storage implements SaveState {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void saveState() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void loadState() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/AddCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public AddCommand(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ChangeRatingCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.classes.Show;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.utility.ShowList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class ChangeRatingCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    String showName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public ChangeRatingCommand(String showName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void changeRating(int targetRating) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        Show show \u003d ShowList.getShow(showName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        show.setRating(targetRating);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        ShowList.setShow(showName, show);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "         * Process :"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "         * get the Show object that you want to change"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "         * edit the object (referenced by copy not by pointer)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "         * put the edited version back into the showlist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "         */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Command(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/utility/ErrorHandling.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": " * Handles the various exceptions which may be encountered during the program\u0027s lifetime."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": " * Some are slightly unnecessary but were included for the \u0027personality\u0027 of the Duke Bot"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class ErrorHandling extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public enum ExceptionResponse {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_NO_DESCRIPTION(\"\\tNo description\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_NO_TIME_DATA(\"\\tNo time\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_UNIDENTIFIED_INPUT(\"\\tPlease input something\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_IO_EXCEPTION(\"\\tIO Error\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_INVALID_SEARCH_DATE(\"\\tWhen is that???!!! Please put in a proper date in the format : \u0027yyyy-mm-dd\u0027\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        EXCEPTION_NOT_FOUND_EXCEPTION(\"\\tHey buddy, it seems like we don\u0027t have what you\u0027re looking for!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        private String exception;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        ExceptionResponse(String exceptionMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            this.exception \u003d exceptionMessage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            return exception;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public ErrorHandling(ExceptionResponse exception) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        super(exception.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/utility/InputParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/*TODO include more parser classes (storage.parser, command.parser etc in the future)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "*  Use save/load function to load help commands to user instead"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * Represents a parser to process the commands inputted by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private boolean isBye;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public InputParser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.isBye \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean isByeTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return isBye;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    * In case i need to use it for future commands, might need to see how the others do their commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static java.util.ArrayList\u003cString\u003e tokenizeToStringArray(String input, String[] argumentDelimiters) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int argumentDelimitersIndex \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        java.util.ArrayList\u003cString\u003e argumentArray \u003d new java.util.ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        StringBuilder argument \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (int index \u003d 0; index \u003c inputSplit.length; index++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (argumentDelimitersIndex \u003e\u003d argumentDelimiters.length) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                argument.append(inputSplit[index]).append(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } else if (inputSplit[index].equals(argumentDelimiters[argumentDelimitersIndex])) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                argumentArray.add(argument.toString().trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                argumentDelimitersIndex++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                argument \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                argument.append(inputSplit[index]).append(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        argumentArray.add(argument.toString().trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return argumentArray;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static String getFirstWord(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int index \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (index \u003d\u003d -1) { // Input only contains a single word"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return input.substring(0, index).trim(); // Extracts first word."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static String removeFirstWord(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int index \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (index \u003d\u003d -1) { // Input only contains a single word"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return input.substring(index + 1).trim(); // Extracts after space."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void parseInput(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String command \u003d getFirstWord(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        input \u003d removeFirstWord(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Ui.printByeMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.isBye \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Ui.printHelp();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        /*case \"add\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseAddCommand(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseEditCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"rating\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseRatingCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseListCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseDeleteCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"deleterating\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseDeleteRatingCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"changerating\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseChangeRatingCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case \"save\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return parseSaveCommand();*/"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Ui.printNoInputException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseAddCommand(String input) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseEditCommand(String input) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseRatingCommand(String input) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseListCommand() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseDeleteCommand(String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseDeleteRatingCommand(String input) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseChangeRatingCommand(String input) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static seedu.duke.commands.Command parseSaveCommand() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 128,
      "jazhten": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/utility/SaveState.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public interface SaveState {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void saveState();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void loadState();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/utility/ShowList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import seedu.duke.classes.Show;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class ShowList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static HashMap\u003cString, Show\u003e showList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public ShowList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public ShowList(HashMap\u003cString, Show\u003e showList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.showList \u003d showList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static Show getShow(String showName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        Show show \u003d showList.get(showName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        /* Do changes to show */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return show;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void setShow(String showName, Show show) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        showList.put(showName, show);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public HashMap\u003cString, Show\u003e getShowList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return showList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/utility/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * Represents a Ui class that is responsible for Input/Output operations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printLogo() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String logo \u003d \" __          __  _______ _____ _    _ _   _ ________   _________ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \" \\\\ \\\\        / /\\\\|__   __/ ____| |  | | \\\\ | |  ____\\\\ \\\\ / /__   __|\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"  \\\\ \\\\  /\\\\  / /  \\\\  | | | |    | |__| |  \\\\| | |__   \\\\ V /   | |   \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"   \\\\ \\\\/  \\\\/ / /\\\\ \\\\ | | | |    |  __  | . ` |  __|   \u003e \u003c    | |   \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"    \\\\  /\\\\  / ____ \\\\| | | |____| |  | | |\\\\  | |____ / . \\\\   | |   \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"     \\\\/  \\\\/_/    \\\\_\\\\_|  \\\\_____|_|  |_|_| \\\\_|______/_/ \\\\_\\\\  |_|   \\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void hello() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"Welcome to WatchNext\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"Type \u0027help\u0027 to get started!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static void printLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"________________________________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // TODO load from txt file if possible instead of writing out one whole chunk in the future"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"The following options are available:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"`help` - Views help\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\u0027add` - Adds a show\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`edit` - Edits your show details\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`rating` - Modifies rating of your show\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`list` - Displays all your shows in list\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`delete` - Deletes your show\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`deleterating` - Deletes rating of your show\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`changerating` - Changes rating of your show\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`save` - Saves your shows\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"`bye` - Exits the program\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printLineIcon() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"Enter a command: \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printShowList(ShowList showList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // Iterate through Hashmap of ShowList here..."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void editShowRating(ShowList showList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // Iterate through Hashmap of ShowList here..."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void deleteShow(ShowList showList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // Iterate through Hashmap of ShowList here..."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void printIoException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_IO_EXCEPTION);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printNoDescriptionException() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printNoTimeException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_NO_TIME_DATA);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printNoInputException() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_UNIDENTIFIED_INPUT);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printInvalidDateException() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_INVALID_SEARCH_DATE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void printNotFoundException() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ErrorHandling.ExceptionResponse.EXCEPTION_NOT_FOUND_EXCEPTION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 100,
      "jazhten": 8
    }
  },
  {
    "path": "src/test/java/seedu/duke/classes/ShowTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "class ShowTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    int[] episodes \u003d new int[]{21, 10, 12};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    Show show \u003d new Show(\"friends\", 3, episodes);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(\"friends\", show.getName());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getNumSeasons() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(3, show.getNumSeasons());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getNumEpisodesForSeasons() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(episodes, show.getNumEpisodesForSeasons());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getEpisodesForSeason() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(10, show.getEpisodesForSeason(1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getRating() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        show.setRating(5);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(5, show.getRating());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getReview() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        show.setReview(\"Best show ever :)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(\"Best show ever :)\", show.getReview());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 44
    }
  },
  {
    "path": "src/test/java/seedu/duke/commands/CommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "package seedu.duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    Command command \u003d new Command(\"test command\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(\"test command\", command.getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    void setDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        command.setDescription(\"set description\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        assertEquals(\"set description\", command.getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/utility/InputParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package seedu.duke.utility;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "class InputParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @org.junit.jupiter.api.BeforeEach"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    void isByeTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    void parseInput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 17
    }
  }
]
