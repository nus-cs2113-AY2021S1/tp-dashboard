[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Ying | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Annan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Feng Qingyu | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "AnnanWangDaniel": 1,
      "WYing333": 1,
      "-": 7,
      "Louis-Feng": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [1. Introduction](#1-Introduction1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.1 Software Overview](#11-Software-Overview1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.2 Purpose](#12-Purpose1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.3 Scope](#13-Scope1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [2. Setting up and getting started](#2-Setting-up-and-getting-started1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [3. Design](#3-Design1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.1 Architecture](#31-Architecture1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.2 Classes](#32-Classes1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.1 Main class](#321-Main-class1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.2 UI class](#322-UI-class1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.3 Parser class](#323-Parser-class1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.4 Customer class](#324-Customer-class1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.5 Order class](#324-Order-class1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.5 Canteen class](#324-Canteen-class1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.4 Stall class](#324-Stall-class1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.4 Dish class](#324-Dish-class1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [4. Implementation](#4-Implementation1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [5. Testing](#5-Testing1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [6. Appendix: Requirements](#6-Appendix-Requirements1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1 Product scope](#61-Product-scope1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1.1 Target user profile](#611-Target-user-profile1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1.2 Value proposition](#612-Value-proposition1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.2 User stories](#62-User-stories1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "####  [6.3 Non-Functional Requirements](#63-Non-Functional-Requirements1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.4 Glossary](#64-Gloossary1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.5 Instructions for manual testing](#65-Instructions-for-manual-testing1)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.1 Software Overview"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "During peak hours, people may not be able to know the dining situation and the density of the canteen they want to go to. To solve this problem, we want to create a program to store and display basic information of stalls in each canteen (e.g. Open hours, current menu, approximation of current waiting time etc.) to all their potential users. CanteenHelper is a command line (CLI) application that helps students, staff and even tourists order food in canteens efficiently. CanteenHelper will allow users to choose their favorite dishes from different stalls in different canteens based on the date and provided by the users. They also can check the comments of the dishes and operating hours of the stalls and canteens."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "This document describes the architecture and software design of CanteenHelper. The goal of this document is to cover the high-level system architecture and design."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The document is divided into three main parts: design, implementation and documantation. The design includes the architecture diagram and the introduction of each class. The implementation describes some details on how certain features are implemented and how the users go through our app. The documentation details the logging, testing and configuration of CanteenHelper. It also includes the requirement and the instructions for manual testing in the appendices."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.3 Scope"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The intended audience of this document is the developers, designers, and software testers of CEGMods."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 2. Setting up and getting started"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Before you start: Please ensure you have Java 11 installed in you computer."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1) Fork this repo from this link: https://github.com/AY2021S1-CS2113-T16-2/tp"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2) Clone the fork to your own computer. You are highly recommended to use Git tool (like Sourcetree) to track your work."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3) Use your own IDEA to program. You are highly recommended to use IntelliJ IDEA. Please check whether you have correct JDK version (JDK 11) in your computer and congiure the JDK."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Open IntelliJ"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Set up JDK 11 for Gradle"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            Click Configure -\u003e Project Defaults -\u003e Project Structure"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            Click New... and set it to the directory of the JDK 11 installed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "4) Import the project as a Gradle project."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Click Import Project (or Open or Import in newer version of Intellij)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Locate the build.gradle file (not the root folder as you would do in a normal importing) and select it. Click OK."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Click OK to accept the default settings but do ensure that the selected version of Gradle JVM matches the JDK being used for the project."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Wait for importing process to complete"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": "5) Do the testing. Please follow the testing guide."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 3. Design"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/arch.png)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Feature 1. Architecture Diagram"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The Architecture Diagram given above explains the high-level design of our App. Below are the main components of our product."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Main:  Our main class has one class called Main.java. It is responsible for,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "At app launch, the Main.java will initialize the UI to start waiting for the input from the users."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "UI: The user interface of our App."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Logic: The logic flow of our whole App."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Model: Holds the data of our App in memory."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The following section is a more detailed description of these four components."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.2 Classes"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The CanteenHelper consists of six classes:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Main`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Ui`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Parser`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Customer`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Order`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Canteen`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Stall`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Dish`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.1 Main class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Main logic of the whole app."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.2 UI class"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Mainly managed in MainPage, which contains several parts: showCommand, displayInfo, getInput. All of these should inherit from an abstract class UserInterface class. And this class can"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. Show all possible executable commands in numeric order"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    E.g. 1: Get open canteens"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "         2: Get open stalls"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2. Get user input (number) and use the Logic component to execute the corresponding user’s command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3. Display the results of user and program interactions"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.3 Parser class"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Deals with making sense of the user\u0027s command and pass the command to certain functions."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.4 Customer class"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Customer contains the list of open canteens and initializes Order objects."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.5 Order class"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Order contains the list of dishes that are ordered."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.6 Canteen class"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Canteen contains the list of stalls."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.7 Stall class"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Stall contains the list of dishes."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.8 Dish class"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Dishes that can be ordered by the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 5. Testing"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 6. Appendix: Requirements"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.1 Product scope"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 6.1.1 Target user profile"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WYing333"
        },
        "content": "All the NTU undergraduate, graduate and faculty who need to dine at NTU canteens."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 6.1.2 Value proposition"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.2 User stories"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|Version| As a/an ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user|view which canteens are open now|decide which canteen to go to now|"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v2.0|user|check the operating time of canteens|I can go to the canteen which is currently open|"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user|view which stalls are available currently|make my order|"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|hungry person who wants to dine now|check the menus of some stalls at the current time|I can order my preferred meal in the menus|"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user who is deciding what to have for the next meal|view the menus of the stalls in advance|I can know what to eat for that meal in the future|"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v2.0|user who wants to try a new dish|check the comments made by others|I can have a brief idea about it|"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v2.0|user who is not familiar with the campus|check the location and recommended route to a canteen|get my food as soon as possible|"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.3 Non-Functional Requirements"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.4 Glossary"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.5 Instructions for manual testing"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 132,
      "-": 22
    }
  },
  {
    "path": "src/main/java/ArriveTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class ArriveTimeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 3
    }
  },
  {
    "path": "src/main/java/Canteen.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Canteen {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String canteenName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e stallList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e openTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e closeTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    Canteen(String canteenName, List\u003cStall\u003e stallList, List\u003cInteger\u003e openTime,List\u003cInteger\u003e closeTime){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.canteenName \u003d canteenName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallList \u003d stallList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openTime \u003d openTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.closeTime \u003d closeTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getOpenTime(int dayOfWeek){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openTime.get(dayOfWeek-1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    int getCloseTime(int dayOfWeek) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return closeTime.get(dayOfWeek-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e getStallList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return stallList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    List\u003cStall\u003e checkOpenStall(int dayOfWeek, int time){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    boolean isOpen (int dayOfWeek, int time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                if(time\u003e\u003dthis.openTime.get(dayOfWeek)\u0026\u0026time\u003c\u003dthis.closeTime.get(dayOfWeek)){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                else{return false;}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getCanteenName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return canteenName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return  canteenName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5,
      "Louis-Feng": 41
    }
  },
  {
    "path": "src/main/java/Customer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Customer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int ID;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int arriveTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getID() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return ID;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getArriveTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return arriveTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getDayOfWeek() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return dayOfWeek;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int dayOfWeek;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Customer(String name, int ID,  int arriveTime, int dayOfWeek) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.ID \u003d ID;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.arriveTime \u003d arriveTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dayOfWeek \u003d dayOfWeek;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public void printStalls(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        for(int i\u003d0;i\u003copenStalls.size();i++){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            System.out.println(openStalls.get(i));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public void printDishes(String canteenName){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        for(int i\u003d0;i\u003copenStalls.size();i++){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            if(canteenName.compareTo(openStalls.get(i).stall_name)\u003d\u003d0){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//                openStalls.get(i).printDishes();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public List\u003cStall\u003e CheckOpenStalls(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        return openStalls;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e checkOpenStalls(Canteen canteen){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cStall\u003e openStallList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Stall stall:canteen.stallList){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(stall.isOpen(this.dayOfWeek, this.arriveTime)){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                openStallList.add(stall);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openStallList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cCanteen\u003e checkOpenCanteens(List\u003cCanteen\u003e ListCanteen){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e openCanteens\u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Canteen canteen:ListCanteen){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(canteen.isOpen(this.dayOfWeek, this.arriveTime)){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                openCanteens.add(canteen);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openCanteens;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cDish\u003e checkDish(List\u003cDish\u003e ListDish){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cDish\u003e dishList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Dish dish: ListDish){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            dishList.add(dish);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return dishList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int checkWaitingTime(Stall stall){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return stall.queue * stall.servingTimePerPersom;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Order order(Canteen canteen,Stall stall,List\u003cDish\u003e dish, String typeOfOrder) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Delivery\")\u003d\u003d0){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new deliveryOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Dine in\")\u003d\u003d0){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new dineInOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Take away\")\u003d\u003d0){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new takeAwayOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return  null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.name + \" arrives at \" +this.arriveTime ;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WYing333": 3,
      "Louis-Feng": 101
    }
  },
  {
    "path": "src/main/java/DayOfWeekException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class DayOfWeekException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 3
    }
  },
  {
    "path": "src/main/java/Dish.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Dish {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String dishName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private double price;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private String comment;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    Dish(String dishName, double price, String comment) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dishName \u003d dishName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.comment \u003d comment;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getDishName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getPrice() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.price;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String getComment(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return this.comment;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishName + \" price: \" + this.price;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 7,
      "Louis-Feng": 22
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static String input; //input is for each statement input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    protected static List\u003cCanteen\u003e canteens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    protected static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    public static FileInputStream inputFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static ArrayList\u003cOrder\u003e Order \u003d new ArrayList\u003cOrder\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e canteens \u003d initialize();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        greet(); // call greet() method to greet"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Customer customer \u003d getCustomer();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Please enter your command. (Type help for instruction.)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        input\u003dsc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        while(!input.equals(\"bye\")) { //if input is not \"bye\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /** print the list of tasks*/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                printOrder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                help();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (input.equals(\"checkcanteen\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                checkCanteenOperatingTime(canteens,customer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (input.equals(\"checkstall\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                checkStallOperatingTime(canteens,customer);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /** mark one task as done */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /** delete one task */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                deleteOrder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /** to find tasks containing a certain keyword*/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                findDishinOrder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /** user decides to make orders*/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            else if (input.startsWith(\"order\"))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                order(canteens,customer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            else if (input.startsWith(\"change\"))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                changeOrder(customer);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            else{ //dealing with undefined type of input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println(\"  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            /*exception handling of wrong input*/"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            //sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            input\u003dsc.nextLine();// get next input statement"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        bye();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Customer getCustomer() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please enter your name/day of week/time arrive:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String inputMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Customer customer \u003d Parser.parseCustomer(inputMessage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return customer;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        } catch(DayOfWeekException e){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong day of week! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(ArriveTimeException e){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong time! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong format! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static List\u003cCanteen\u003e initialize() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish porkChop \u003d new Dish(\"Pork Chop\",4,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Sugar, spice, and everything nice.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish fishNChip \u003d new Dish(\"Fish \u0026 Chip\",4,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Very crispy, makes me feel the happiness of eating!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish chickenCutLet \u003d new Dish(\"Chicken Cutlet\",3.5,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Not very good tasting, I think the meat is a bit hard to eat.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall westernStall \u003d new Stall(\"Western Stall\", 1,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                900,1800, Arrays.asList(1,2,3,5,6,7),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Arrays.asList(porkChop,fishNChip,chickenCutLet),1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish espresso \u003d new Dish(\"Espresso\",5,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The coffee smells good but it is a bit bitter for me.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish caramelFrappuccino \u003d new Dish(\"Caramel Frappuccino\",7.5,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"I don\u0027t taste any coffee. Extremely sweet\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish signatureHotChocolateckenCutLet \u003d new Dish(\"Signature Hot Chocolate\",6,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The cake is accompanied by a slight bitterness from the dark chocolate \" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"that lingers at the back of your throat. It is super addictive for a chocolate lover like myself.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall starbucks \u003d new Stall(\"Starbucks\", 2,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                900,1830, Arrays.asList(2,3,4,5,6,7),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Arrays.asList(espresso,caramelFrappuccino,signatureHotChocolateckenCutLet),1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetNSourPorkRice \u003d new Dish(\"Sweet \u0026 Sour Pork Rice\",4.5,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The meat is good taste, but the rice is not very good\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish curryChickenRice \u003d new Dish(\"Curry Chicken Rice\",3.5,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The curry is sooooo delicious!!!!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish friedRiceWithBeef \u003d new Dish(\"Fried Rice with Beef\",5,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"I think there is too much oil in this dish\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall claypotRice \u003d new Stall(\"ClaypotRice\", 3,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                800,2000, Arrays.asList(3,4,5,6,7),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Arrays.asList(sweetNSourPorkRice,curryChickenRice,friedRiceWithBeef),1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen1 \u003d new Canteen(\"Canteen 1\", Arrays.asList(westernStall,starbucks,claypotRice),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(900,900,800,800,800,800,800),Arrays.asList(1800,1830,2000,2000,2000,2000,2000));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish kimchiFriedRice \u003d new Dish(\"Kimchi Fried Rice\", 3.50,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"As a korean, I find the taste in my home country.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish spicyChickenSet \u003d new Dish(\"Spicy Chicken Set\", 5.00,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The chicken tastes good but it is too spicy for me.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish kimchiRamen \u003d new Dish(\"Kimchi Ramen\", 4.00,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The kimchi is really delicious as this is my first time to eat this.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall koreanStall \u003d new Stall(\"KoreanStall\", 4, \"35 Students Walk\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                830, 1730, Arrays.asList(1,2,3,4),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Arrays.asList(kimchiFriedRice, spicyChickenSet, kimchiRamen), 2);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish pepperoni \u003d new Dish(\"Pepperoni\", 8.50,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This dish made me feel like diving in the sea.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish hawaiian \u003d new Dish(\"Hawaiian\", 9.50,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I love this hawaii pizza. I want to marry it and eat it at the wedding.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish aglioOlio \u003d new Dish(\"Aglio Olio\",10.50,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The preparation of this dish is easy and quick. Pasta is made in many colors, different shapes\" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \" and is known by many names in a different country.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall pizzaHut \u003d new Stall(\"PizzaHut\",5, \"35 Students Walk\", 900, 1800,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(1,2,4,5,6), Arrays.asList(pepperoni, hawaiian, aglioOlio),2);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish mcChicken \u003d new Dish(\"Mc Chicken\", 2,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"The most classic hamburger in the world!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish mcNuggets \u003d new Dish(\"Mc Nuggets\", 4,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"This is really my favorite among all fast food.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Dish applePie \u003d new Dish(\"Apple Pie\", 2,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                \"this one is good but i prefer the other flavor\u0027s pie :)\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall macDonalds \u003d new Stall(\"MacDonalds\",6, \"35 Students Walk\","
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                930, 1830, Arrays.asList(2,3,4,7),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Arrays.asList(mcChicken, mcNuggets, applePie),2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen2 \u003dnew Canteen(\"Canteen 2\",Arrays.asList(koreanStall,pizzaHut,macDonalds),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(830,830,830,830,900,900,930), Arrays.asList(1730,1830,1830,1830,1800,1800,1830));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish beefNoodle \u003d new Dish(\"Beef Noodle\",3,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The beef is really good, but I think this dish is a bit salty :(\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish tomatoEggNoodle \u003d new Dish(\"Tomato Egg Noodle\", 2.5,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really tasteful!!! After this, I know the reason why most Chinese like tomato and egg.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish noodlesWithSoyBeanPaste \u003d new Dish (\"Noodles with Soy Bean Paste\",3,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Although my Chinese friends like this very much, but as an Indian I do not like this.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall noodles \u003d new Stall(\"Noodles\",7,\"20 Nanyang Cres\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830,1930,Arrays.asList(1,2,3,6),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(beefNoodle,tomatoEggNoodle,noodlesWithSoyBeanPaste),3);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetAndSourMeet \u003d new Dish(\"Sweet\u0026Sour Meet\",5,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The taste of the sweetness and sour are just right.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kungPaoTofu \u003d new Dish(\"Kung Pao Tofu\", 4.5,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really good, worth try, but not understand the name of this dish.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish boiledFish \u003d new Dish(\"Boiled Fish\", 5.5,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"First try! Really spicy!!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall siChuan \u003d new Stall(\"Si Chuan\",8,\"24 Nanyang Ave\","
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetAndSourMeet,kungPaoTofu,boiledFish),3);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChicken \u003d new Dish(\"Spicy Chicken\",3.5,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy and spicy!\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish saltedEggChicken \u003d new Dish(\"Salted Egg Chicken\",4,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        \"Really like this taste of chicken with salted egg.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mapoTofu \u003d new Dish(\"Mapo Tofu\",2.5,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Heared of this dish before, really good.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall mixedRice \u003d new Stall(\"Mixed Rice\",9,\"32 Nanyang Cres\","
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,1900,Arrays.asList(1,2,5,7),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(spicyChicken,saltedEggChicken,mapoTofu),3);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen3 \u003d new Canteen(\"Canteen 3\",Arrays.asList(noodles,siChuan,mixedRice),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(800,800,830,900,800,830,800), Arrays.asList(1830,1830,1830,1830,1830,1930,1900));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "//        Stall malay;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "//        Stall waffles;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WYing333"
        },
        "content": "//        Stall drinks;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "//        Canteen canteen4;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e canteens \u003d new ArrayList\u003cCanteen\u003e();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen1);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen2);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return canteens;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void checkCanteenOperatingTime(List\u003cCanteen\u003e canteens,Customer customer){"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Choose the canteen you want to check:\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(j +\". \" + canteen);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Operating hours for the canteen you choosed is: \\n\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Open Time: \" + canteenChoosed.getOpenTime(customer.getDayOfWeek())/100 + \":00\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Closing Time: \" + canteenChoosed.getCloseTime(customer.getDayOfWeek())/100 +\":\" +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                canteenChoosed.getCloseTime(customer.getDayOfWeek())%100 );"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void checkStallOperatingTime(List\u003cCanteen\u003e canteens,Customer customer){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Input the canteen which your desired stall belongs to: \\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(j +\". \" + canteen);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cStall\u003e openStall \u003d customer.checkOpenStalls(canteenChoosed);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        j \u003d 0;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for (Stall stall : openStall) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(j +\". \" + stall);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        System.out.println(\"Please choose a stall:\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        int stallIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall stallChoosed \u003d openStall.get(stallIdChoosed - 1);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Operating hours for the stall you choosed is: \\n\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Open Time: \" + stallChoosed.getOpenTime()/100 + \":00\" );"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Closing Time: \" + stallChoosed.getCloseTime()/100 + \":\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            + String.format(\"%02d\",stallChoosed.getCloseTime()%100));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void order(List\u003cCanteen\u003e canteens,Customer customer){"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen canteenChoosed \u003d getCanteen(canteens, customer);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall stallChoosed \u003d getStall(customer, canteenChoosed);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cDish\u003e orderedDishes \u003d getDishes(stallChoosed);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Order order \u003d getOrder(customer, canteenChoosed, stallChoosed, orderedDishes);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Your order created! Thanks.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(order);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Order getOrder(Customer customer, Canteen canteenChoosed, Stall stallChoosed, List\u003cDish\u003e orderedDishes) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose your order type:\\n\\t1.Dine in.\\n\\t2.Take away.\\n\\t3.delevery.\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int typeChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String orderType\u003d \"Dine in\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (typeChoosed \u003d\u003d 1) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Dine in\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (typeChoosed \u003d\u003d 2) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Take away\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (typeChoosed \u003d\u003d 3){"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Delivery\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Order order \u003d customer.order(canteenChoosed, stallChoosed, orderedDishes,orderType);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Order.add(order);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return order;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (WrongNumberException e){"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong number. Please enter correct number. :-(\\n\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getOrder(customer,canteenChoosed,stallChoosed,orderedDishes);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Please enter number. :-(\\n\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getOrder(customer,canteenChoosed,stallChoosed,orderedDishes);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static List\u003cDish\u003e getDishes(Stall stallChoosed) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int dishCount;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            System.out.println(stallChoosed + \" provides following dishes:\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            dishCount \u003d 0;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            List\u003cDish\u003e dishinStall \u003d stallChoosed.getDish();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            for (Dish d : dishinStall) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                dishCount++;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(dishCount +\". \" + d);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int numOfDishes \u003d getNumOfDishes(dishCount);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(\"Please choose what you want:\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            List\u003cDish\u003e orderedDishes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            for(int num\u003d0;num\u003cnumOfDishes;num++) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(\"Please enter the \" + (num + 1) + \" number.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                int dishIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(dishIdChoosed\u003c\u003d0||dishIdChoosed\u003edishCount){"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    throw new WrongNumberException();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Dish dishChoosed \u003d dishinStall.get(dishIdChoosed - 1);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "                orderedDishes.add(dishChoosed);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            String dummy \u003d sc.nextLine();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String isComment \u003d getYN();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            if (isComment.equals(\"y\")) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                checkComment(orderedDishes);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return orderedDishes;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong number of dish! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getDishes(stallChoosed);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong information! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getDishes(stallChoosed);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static String getYN() {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Do you want to check the comment for this stall? (y/n)\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String isComment \u003d sc.nextLine();"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if((!isComment.equals(\"y\"))\u0026\u0026(!isComment.equals(\"n\"))){"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new YNException();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return isComment;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (YNException e){"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong input! Please enter y or n. :-(\\n\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getYN();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong input! Please enter y or n. :-(\\n\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getYN();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static int getNumOfDishes(int count) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"How many dishes you want to order please?\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int numberOfDishes \u003d sc.nextInt();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (numberOfDishes\u003c\u003d0||numberOfDishes\u003ecount){"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return numberOfDishes;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (WrongNumberException e){"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong dishes number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getNumOfDishes(count);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong format! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getNumOfDishes(count);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Stall getStall(Customer customer, Canteen canteenChoosed) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"The avaliable stalls in \" + canteenChoosed + \" are:\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int stallCount;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cStall\u003e openStall \u003d customer.checkOpenStalls(canteenChoosed);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            stallCount \u003d 0;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for (Stall stall : openStall) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                stallCount++;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(stallCount + \". \" + stall);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose a stall:\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int stallIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(stallIdChoosed\u003c\u003d0||stallIdChoosed\u003estallCount){"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Stall stallChoosed \u003d openStall.get(stallIdChoosed - 1);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return stallChoosed;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong stall number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getStall(customer,canteenChoosed);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong stall number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getStall(customer,canteenChoosed);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Canteen getCanteen(List\u003cCanteen\u003e canteens, Customer customer) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Dear \" + customer.name + \",\");"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose a canteen from the list:\");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int canteenCount \u003d 0;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                canteenCount++;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(canteenCount +\". \" + canteen);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(canteenIdChoosed\u003c\u003d0||canteenIdChoosed\u003ecanteenCount){"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return canteenChoosed;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong canteen number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCanteen(canteens, customer);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong canteen number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCanteen(canteens, customer);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void changeOrder(Customer customer)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve changed this order:  \\n\");"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String[] inputWords \u003d input.split(\"/\"); //split the input message"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String orderNumberchenged \u003d inputWords[1];"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        int orderNumberchanged \u003d Integer.parseInt(orderNumberchenged) - 1;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        String changedtype \u003d inputWords[2];"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(Order.get(orderNumberchanged) + \"\\n\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen can \u003d Order.get(orderNumberchanged).getCanteen();"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall stall \u003d Order.get(orderNumberchanged).getStall();"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        List\u003cDish\u003e dishes \u003d Order.get(orderNumberchanged).getDish();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Order changedOrder \u003d customer.order(can,stall,dishes,changedtype);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Order.set(orderNumberchanged,changedOrder);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"to \\n\");"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(Order.get(orderNumberchanged) + \"\\n\");"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static void printOrder() {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for (int i \u003d 0; i \u003c Order.size(); i++) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if (Order.get(i) instanceof dineInOrder) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println((i + 1) + \":\" + (dineInOrder) Order.get(i));"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if (Order.get(i) instanceof deliveryOrder) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println((i + 1) + \":\" + (deliveryOrder) Order.get(i));"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if (Order.get(i) instanceof takeAwayOrder) {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                System.out.println((i + 1) + \":\" + (takeAwayOrder) Order.get(i));"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static void deleteOrder() {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this order:  \");"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        int orderNumberdeleted \u003d Integer.parseInt(input.replaceAll(\"\\\\D+\", \"\")) - 1; //find the corresponding index of task to be deleted"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(Order.get(orderNumberdeleted));"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Order.remove(orderNumberdeleted); //remove that task from arrayList"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"Now you have \" + Order.size() + \" orders in the list. \");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static void findDishinOrder() {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"Here are the matching orders in your list:\\n\");"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        String keyword \u003d input.substring(5); // to get the keyword string"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        /*iterate the task arrayList to find corresponding items*/"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(int i\u003d0;i\u003c Order.size();i++){"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            for(int j\u003d0;j\u003cOrder.get(i).getDish().size();j++)"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                if(Order.get(i).getDish().get(j).getDishName().compareTo(keyword) \u003d\u003d 0){"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    System.out.println(count +\": \" + Order.get(i));"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    count ++;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static void greet(){"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Canteenhelper\\n\");"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\" What can I do for you?\\n\");"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * method to say bye"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return void"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void help() {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"Hello! Here is a list of commands you can try:\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"1. Order dish: \u0027order\u0027\");"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"2. Delete order: \u0027delete [order number]\u0027\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"3. Find order: \u0027find [keyword]\u0027\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"4. List order: \u0027list\u0027\");"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"5. Exit program: \u0027bye\u0027 \");"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static void checkComment(List\u003cDish\u003e dCs) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        for (int i \u003d 0; i \u003c dCs.size(); i++) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(dCs.get(i).getComment());"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 277,
      "AnnanWangDaniel": 41,
      "WYing333": 117,
      "Louis-Feng": 123
    }
  },
  {
    "path": "src/main/java/Order.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Order {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private Canteen canteen;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private Stall stall;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private List\u003cDish\u003e dishes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private Customer customer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    Order(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.canteen \u003d canteen;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stall \u003d stall;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.dishes \u003d dishes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.customer \u003d customer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Canteen getCanteen() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.canteen;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Stall getStall() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.stall;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public List\u003cDish\u003e getDish() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return this.dishes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String dishString \u003d \"1. \" + dishes.get(0).getDishName() + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(int i\u003d1; i\u003cdishes.size();i++){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            dishString \u003d dishString  + \"i+1. \" + dishes.get(i).getDishName() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return this.canteen + \" order in\" + this.stall + \": \\n\" + dishString ;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5,
      "WYing333": 12,
      "Louis-Feng": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Parser {//name week time"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static Customer parseCustomer(String inputMessage) throws DayOfWeekException, ArriveTimeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String[] inputWords \u003d inputMessage.split(\"/\"); //split the input message"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String customerName \u003d inputWords[0];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int dayOfWeek \u003d Integer.parseInt(inputWords[1])-1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(dayOfWeek\u003e\u003d7||dayOfWeek\u003c0){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            throw new DayOfWeekException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int arriveTime \u003d Integer.parseInt(inputWords[2]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(arriveTime\u003c0||arriveTime\u003e\u003d2400){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            throw new ArriveTimeException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return new Customer(customerName,1,arriveTime,dayOfWeek);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 16
    }
  },
  {
    "path": "src/main/java/Stall.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Stall {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String stall_name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int stallID;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String stallLocation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int openTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int closeTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e openDayOfWeek;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cDish\u003e  dishes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int queue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int servingTimePerPersom;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getOpenTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getCloseTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return closeTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Stall(String stall_name, int stallID, String stallLocation, int openTime, int closeTime, List\u003cInteger\u003e openDayOfWeek, List\u003cDish\u003e dishes, int servingTimePerPersom) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stall_name \u003d stall_name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallID \u003d stallID;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallLocation \u003d stallLocation;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openTime \u003d openTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.closeTime \u003d closeTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openDayOfWeek \u003d openDayOfWeek;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dishes \u003d dishes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.servingTimePerPersom \u003d servingTimePerPersom;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.queue \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cDish\u003e getDish(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishes;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public void setQueue(int queue) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.queue \u003d queue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getQueue() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return queue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    boolean isOpen (int dayOfWeek, int time) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Integer day:this.openDayOfWeek){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(day \u003d\u003d dayOfWeek){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                if(time\u003e\u003dthis.openTime\u0026\u0026time\u003c\u003dthis.closeTime){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public void printDishes(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(int i\u003d0;i\u003cdishes.size();i++){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(dishes.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.stall_name;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 65
    }
  },
  {
    "path": "src/main/java/WrongNumberException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class WrongNumberException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 3
    }
  },
  {
    "path": "src/main/java/YNException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class YNException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 3
    }
  },
  {
    "path": "src/main/java/deliveryOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class deliveryOrder extends Order {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double carrierFee \u003d 0.3;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double deliveryFee \u003d 2.0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isDeliveryOrder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    deliveryOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isDeliveryOrder) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isDeliveryOrder \u003d isDeliveryOrder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsDeliveryOrder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isDeliveryOrder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getCarrierFee() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.carrierFee;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getDeliveryFee() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.deliveryFee;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (isDeliveryOrder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Delivery Order)\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 2,
      "WYing333": 14,
      "Louis-Feng": 21
    }
  },
  {
    "path": "src/main/java/dineInOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class dineInOrder extends Order {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isDineIn;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    dineInOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isDineIn) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isDineIn \u003d isDineIn;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsDineIn() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isDineIn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (this.isDineIn) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Dine In)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Dine In)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 13,
      "Louis-Feng": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package seedu.duke;//for pull request"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Main entry-point for the java.duke.seedu.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AnnanWangDaniel": 1,
      "WYing333": 2,
      "-": 19
    }
  },
  {
    "path": "src/main/java/takeAwayOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class takeAwayOrder extends Order {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isTakeAway;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double carrierFee \u003d 0.3;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    takeAwayOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isTakeAway) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isTakeAway \u003d isTakeAway;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsTakeAway() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isTakeAway;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getCarrierFee() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.carrierFee;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(isTakeAway) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Take Away)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Take Away)\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 15,
      "Louis-Feng": 15
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5
    }
  }
]
