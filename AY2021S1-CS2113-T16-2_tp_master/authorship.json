[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Ying | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Annan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Feng Qingyu | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "AnnanWangDaniel": 1,
      "WYing333": 1,
      "-": 7,
      "Louis-Feng": 1
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [1. Introduction](#1-Introduction1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.1 Software Overview](#11-Software-Overview1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.2 Purpose](#12-Purpose1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [1.3 Scope](#13-Scope1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [2. Setting up and getting started](#2-Setting-up-and-getting-started1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [3. Design](#3-Design1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.1 Architecture](#31-Architecture1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.2 Classes](#32-Classes1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.1 Logic class](#321-Logic-class1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.2 UI class](#322-UI-class1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.3 Parser class](#323-Parser-class1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.4 Customer class](#324-Customer-class1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.5 Order class](#325-Order-class1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.6 Canteen class](#326-Canteen-class1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.7 Stall class](#327-Stall-class1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.8 Dish class](#328-Dish-class1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.9 Exception class](#329-Exception-class1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [4. Implementation](#4-Implementation1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [5. Testing](#5-Testing1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [6. Appendix: Requirements](#6-Appendix-Requirements1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1 Product scope](#61-Product-scope1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1.1 Target user profile](#611-Target-user-profile1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.1.2 Value proposition](#612-Value-proposition1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.2 User stories](#62-User-stories1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "####  [6.3 Non-Functional Requirements](#63-Non-Functional-Requirements1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.4 Glossary](#64-Gloossary1)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [6.5 Instructions for manual testing](#65-Instructions-for-manual-testing1)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.1 Software Overview"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "During peak hours, people may not be able to know the dining situation and the density of the canteen they want to go to. To solve this problem, we want to create a program to store and display basic information of stalls in each canteen (e.g. Open hours, current menu, change order etc) to all their potential users. CanteenHelper is a command line (CLI) application that helps students, staff and even tourists order food in canteens efficiently. CanteenHelper will allow users to choose their favorite dishes from different stalls in different canteens based on the date and time provided by the users. They also can check the comments of the dishes and operating hours of the stalls and canteens."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "This document describes the architecture and software design of CanteenHelper. The goal of this document is to cover the high-level system architecture and design."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The document is divided into three main parts: design, implementation and documantation. The design includes the architecture diagram and the introduction of each class. The implementation consists of some details on how certain features are implemented and how the users go through our app. The documentation details the logging, testing and configuration of CanteenHelper. It also includes the requirement and the instructions for manual testing in the appendices."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 1.3 Scope"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The intended audience of this document is the developers, designers, and software testers of CanteenHelper."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 2. Setting up and getting started"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Before you start: Please ensure you have Java 11 installed in you computer."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1) Fork this repo from this link: https://github.com/AY2021S1-CS2113-T16-2/tp"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2) Clone the fork to your own computer. You are highly recommended to use Git tool (like Sourcetree) to track your work."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3) Use your own IDEA to program. You are highly recommended to use IntelliJ IDEA. Please check whether you have correct JDK version (JDK 11) in your computer and congiure the JDK."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Open IntelliJ"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Set up JDK 11 for Gradle"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            Click Configure -\u003e Project Defaults -\u003e Project Structure"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            Click New... and set it to the directory of the JDK 11 installed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "4) Import the project as a Gradle project."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Click Import Project (or Open or Import in newer version of Intellij)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Locate the build.gradle file (not the root folder as you would do in a normal importing) and select it. Click OK."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Click OK to accept the default settings but do ensure that the selected version of Gradle JVM matches the JDK being used for the project."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "      -Wait for importing process to complete"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "5) Do the testing. Please follow the testing guide."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 3. Design"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/arch%20dia.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Figure 1. Architecture Diagram"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The Architecture Diagram given above explains the high-level design of our App. Below are the main components of our product."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main(Logic): The main logic flow of our whole App."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Initializer: Initialize the whole app to start waiting for the input from the users."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "UI: The user interface of our App."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Parser: Change the user input to something meaningful to the app."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Exception: Throw different kinds of exception that user may make."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The following section is a more detailed description of these four components."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.2 Classes"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The CanteenHelper consists of six classes:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Logic`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `UI`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Parser`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Customer`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Order`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Canteen`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Stall`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Dish`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* `Exception`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.1 Logic class"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/logic%20dia.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 2. Main Logic Diagram"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main logic of the whole app."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: main(String[] args)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.2 UI class"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Mainly managed in MainPage, which contains several parts: showCommand, displayInfo, getInput. All of these should inherit from an abstract class UserInterface class. And this class can"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. Show all possible executable commands in numeric order"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    E.g. 1: Get open canteens"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": "         2: Get open stalls"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": "2. Get user input (number) and use the Logic component to execute the corresponding user’s command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": "3. Display the results of user and program interactions"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "order(List\u003cCanteen\u003e canteens, Customer customer,Scanner sc, ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getCustomer(Scanner sc); "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getOrder(Customer customer, Canteen canteenChoosed, Stall stallChoosed, List\u003cDish\u003e orderedDishes,Scanner sc, ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getDishes(Stall stallChoosed, Scanner sc); "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getYN(Scanner sc); "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getNumOfDishes(int count,Scanner sc); "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getStall(Customer customer, Canteen canteenChoosed, Scanner sc); "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "getCanteen(List\u003cCanteen\u003e canteens, Customer customer, Scanner sc); "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "greet(); "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "bye();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "help(); "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkComment(List\u003cDish\u003e dCs); "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkCanteenOperatingTime(List\u003cCanteen\u003e canteens,Customer customer,Scanner sc); "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkStallOperatingTime(List\u003cCanteen\u003e canteens,Customer customer,Scanner sc); "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "changeOrder(Customer customer,String input,ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "printOrder(String input,ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "deleteOrder(String input,ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "findDishinOrder(String input,ArrayList\u003cOrder\u003e Order); "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.3 Parser class"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Deals with making sense of the user\u0027s command and pass the command to certain functions."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "parseCustomer(String inputMessage)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.4 Customer class"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Customer contains the list of open canteens and initializes Order objects."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkOpenStalls(Canteen canteen); "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkOpenCanteens(List\u003cCanteen\u003e ListCanteen); "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkDish(List\u003cDish\u003e ListDish); "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "checkWaitingTime(Stall stall); "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.5 Order class"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Order contains the list of dishes that are ordered."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.6 Canteen class"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Canteen contains the list of stalls."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "isOpen (int dayOfWeek, int time); "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.7 Stall class"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Stall contains the list of dishes."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Main method inside: "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "isOpen (int dayOfWeek, int time); "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "printDishes()"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.8 Dish class"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Dishes that can be ordered by the user."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.9 Exception class"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Exceptions that can catch user unexpected input."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "### 3.3 Overall Sequence Diagram"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/overall.png)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 3. Overall Sequence diagram "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: order"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user types command “order” to make an order from a stall in a canteen. The order method will be activated and print open stalls through checkOpenCanteens method in Customer class in this manner:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/image1.png)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "User just type the corresponding index before the canteen to select canteen. Then the open stalls in this canteen will be printed through checkOpenStalls method in Customer class in this manner:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/image2.png)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "User just type the corresponding index before the stall to select stall. Then the available dishes and price in this stall will be printed through getDish() method in Stall class in this manner:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/image3.png)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WYing333"
        },
        "content": "User just type number of dishes he wants to order and chooses dishes in the same way as they select canteen and stall. "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WYing333"
        },
        "content": "After that, user will be asked whether he wants to see the comment of the dish."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Finally, after choosing dine in, take away or delivery, an order object will be created and added into the order list."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: delete order"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: delete [number] to delete an order in the order list. The main will enable the deleteOrder () method. The Parser will make sense of the command and delete the corresponding order from the order list. "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "e.g. delete 1 means delete the first order in the order list."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/delete.png)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 4. Sequence diagram for deleteOrder()"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: find order"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: find [dish name] to find the order contains this dish in the order list. The main will enable the findDishinOrder() method. The Parser will make sense of the command and iterate the order list and dish list to print the order containing this dish. "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "e.g. find chicken rice means find all orders containing chicken rice in the order list."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/find.png)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 5. Sequence diagram for findDishinOrder()"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### Feature: list order"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: list to print all the orders in the order list . The main will enable the printOrder() method. The printOrder() method will iterate the whole order list and print all the orders"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/print.png)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 6. Sequence diagram for printOrder()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: change order (change dine in, take away or delivery)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: change/number/type to change the order type of one order in the order list. The main will enable the changeOrder() method. The Parser will make sense of the command and change the corresponding order’s order type. "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "e.g. change/1/Dine in: change order 1 to dine in"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/changeorder.png)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 7. Sequence diagram for changeOrder()"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: check Canteen Operating Time"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: checkcanteen to check the operating time of an open canteen. The main will enable the checkCanteenOperatingTime() method. It prints open canteens through checkOpenCanteens method in Customer class in this manner:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/image1.png)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "User can type the number before the canteen name to check its operating time."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/checkopencanteen.png)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 8. Sequence diagram for checkCanteenOperatingTime()"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "#### Feature: check Stall Operating Time"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "The user enters the command: checkstall to check the operating time of an open stall. The main will enable the checkStallOperatingTime() method. It prints open canteens through checkOpenCanteens method in Customer class in this manner:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " "
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/image1.png)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "User can type the number before the canteen name to display the stalls inside the canteen in this manner."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "User can type the number before the stall name to check its operating time."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/checkopenstall.png)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Figure 9. Sequence diagram for checkStallOperatingTime()"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### Feature: help"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WYing333"
        },
        "content": "The user enters the command: help to view all commands that are available. The main will enable the help() method. It prints all available commands."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 5. Testing"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 6. Appendix: Requirements"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.1 Product scope"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 6.1.1 Target user profile"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WYing333"
        },
        "content": "All the NTU undergraduate, graduate and faculty who need to dine at NTU canteens."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 6.1.2 Value proposition"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WYing333"
        },
        "content": "CanteenHelper aims to assist the target audience with:"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WYing333"
        },
        "content": "ordering the meals in one application efficiently"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.2 User stories"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|Version| As a/an ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user|view which canteens are open now|decide which canteen to go to now|"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user|view which stalls are available currently|make my order|"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|hungry person who wants to dine now|check the menus of some stalls at the current time|I can order my preferred meal in the menus|"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v1.0|user who is deciding what to have for the next meal|view the menus of the stalls in advance|I can know what to eat for that meal in the future|"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "|v2.0|user|check the operating time of canteens|I can go to the canteen which is  open|"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v2.0|user who wants to try a new dish|check the comments made by others|I can have a brief idea about it|"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|v2.0|user|change the order type of my order|fit my time schedule more|"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.3 Non-Functional Requirements"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "1. The app should be able to work on any mainstream OS with Java 11 or above installed."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "2. Commands entered should follow the user guide."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.4 Glossary"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "* *Sequence Diagram* - A sequence diagram shows object interactions arranged in time sequence."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "* *mainstream O* - Linux, Windows, Unix."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 6.5 Instructions for manual testing"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Try different inputs with variations of the format, to check whether the exceptions are being correctly thrown."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WYing333": 172,
      "-": 22,
      "Louis-Feng": 126
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [1. Introduction](#1-Introduction1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [2. Quick start](#2-Quick-start1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [3. Features](#3-Features1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.1 Before the order](#31-Before-the-order1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.2 Begin the order](#32-Begin-the-order1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.1 Firstly](#321-Firstly1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.2 The order method will be activated and print open stalls, user just type the corresponding index before the canteen to select canteen](#322-The-order-method-will-be-activated-and-print-open-stalls,-user-just-type-the-corresponding-index-before-the-canteen-to-select-canteen1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.3 Then the open stalls in this canteen will be printed, user just type the corresponding index before the stall to select stall](#323-Then-the-open-stalls-in-this-canteen-will-be-printed,-user-just-type-the-corresponding-index-before-the-stall-to-select-stall1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.4 Then the available dishes and price in this stall will be printed, user just type number of dishes he wants to order](#324-Then-the-available-dishes-and-price-in-this-stall-will-be-printed,-user-just-type-number-of-dishes-he-wants-to-order1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.5 User chooses dishes in the same way as they select canteen and stall](#325-User-chooses-dishes-in-the-same-way-as-they-select-canteen-and-stall1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.6 User will be asked whether he wants to see the comment of the dish, just type y/n](#326-User-will-be-asked-whether-he-wants-to-see-the-comment-of-the-dish,-just-type-y/n1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.2.7 User choose the order type by typing the corresponding index before the type](#327-User-choose-the-order-type-by-typing-the-corresponding-index-before-the-type1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.3 delete the specific order](#33-delete-the-specific-order1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.4 find the specific order](#34-find-the-specific-order1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.5 list all the orders](#35-list-all-the-orders1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.6 change the order](#36-change-the-order1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.7 check Canteen Operating Time](#37-check-Canteen-Operating-Time)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.7.1 Firstly](#371-Firstly1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.7.2 User enters the number before canteen to check that specific canteen](#372-User-enters-the-number-before-canteen-to-check-that-specific-canteen1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.8 ccheck Stall Operating Time](#38-check-Stall-Operating-Time1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.8.1 Firstly](#381-Firstly1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.8.2 User enters the number before canteen to check that specific canteen](#382-User-enters-the-number-before-canteen-to-check-that-specific-canteen1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "##### [3.8.3 User enters the number before stall to check that specific stall](#383-User-enters-the-number-before-stall-to-check-that-specific-stall1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.9 view all available commands](#39-view-all-available-commands1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### [3.10 quit the system](#310-quit-the-system)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### [4. Command Summary](#4-Command-Summary1)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "During peak hours, people may not be able to know the dining situation and the density of the canteen they want to go to. To solve this problem, we want to create a program to store and display basic information of stalls in each canteen (e.g. Open hours, current menu, change order etc) to all their potential users. CanteenHelper is a command line (CLI) application that helps students, staff and even tourists order food in canteens efficiently. CanteenHelper will allow users to choose their favorite dishes from different stalls in different canteens based on the date and time provided by the users. They also can check the comments of the dishes and operating hours of the stalls and canteens."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "1. Down the latest version of `CanteenHelper` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.1 Before the order: `[name]/[day of week]/[time]`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[name]/[day of week]/[time]`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027wy/2/1800\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "‘fqy/1/1200"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* day of week should between 1-7 (includes)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* time should follow this format: 900 or 1600, represent 09:00 and 16:00 respectively."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Result is like this:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/before.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.2 Begin the order: `order`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "begin the order of a customer"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.1 Firstly"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `order`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027order\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/order.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.2 The order method will be activated and print open stalls, user just type the corresponding index before the canteen to select canteen. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00272\u0027"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/canteen.png)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.3 Then the open stalls in this canteen will be printed, user just type the corresponding index before the stall to select stall. "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00271\u0027"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/stall.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.4 Then the available dishes and price in this stall will be printed, user just type number of dishes he wants to order."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00272\u0027"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/num.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.5 User chooses dishes in the same way as they select canteen and stall. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00272\u0027"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/dish.png)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.6 User will be asked whether he wants to see the comment of the dish, just type y/n."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `y/n`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027y\u0027"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "\u0027n\u0027"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/comment.png)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.2.7 User choose the order type by typing the corresponding index before the type."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00272\u0027"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/type.png)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.3 delete the specific order: `delete [number]`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "delete the order based on the number from user"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "user needs to input the number of order "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `delete [number]`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027delete 1\u0027"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/ddlete.png)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.4 find the specific order: `find [dish name]`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WYing333"
        },
        "content": "find the specific dish based on the user input dish name"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "from the order list made by the user"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `find [dish name]`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027find Hawaiian\u0027"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/findd.png)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.5 list all the orders: `list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WYing333"
        },
        "content": "check all the orders made by this user"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "\u0027list\u0027"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/lis.png)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.6 change the order: `change/[number]/[type]`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "Change the order type to the type user inputed"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `change/[number]/[type]`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "type should choose from:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "1. dine in"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "2. delivery"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "3. take away"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027change/2/dine in\u0027"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "\u0027change/1/delivery"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WYing333"
        },
        "content": "* order type is case sensitive"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image]("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.7 check Canteen Operating Time: `checkcanteen`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WYing333"
        },
        "content": "check the operating hours of a canteen "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.7.1 Firstly"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `checkcanteen`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027checkcanteen\u0027"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.7.2 User enters the number before canteen to check that specific canteen"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00274\u0027"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/checkcanteen.png)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.8 check Stall Operating Time: `checkstall`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WYing333"
        },
        "content": "check the operating hours of a stall "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.8.1 Firstly"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `checkstall`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027checkstall\u0027"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.8.2 User enters the number before canteen to check that specific canteen"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00273\u0027"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WYing333"
        },
        "content": "#### 3.8.3 User enters the number before stall to check that specific stall"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `[number]`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u00272\u0027"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/checkstall.png)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.9 view all available commands: `help`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WYing333"
        },
        "content": "print all the commands with required format that the user can input"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027help\u0027"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/help.png)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WYing333"
        },
        "content": "### 3.10 quit the system: `bye`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WYing333"
        },
        "content": "quit the system"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WYing333"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WYing333"
        },
        "content": "\u0027bye\u0027"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WYing333"
        },
        "content": "![image](https://github.com/AY2021S1-CS2113-T16-2/tp/blob/master/src/img/bye.png)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WYing333"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|Action|Command|Example|"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|------|-------|-------|"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|order|`order`|`order`|"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|delete|`delete [number]`|`delete 2`|"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|find|`find [dish name]`|`find Pork Chop`|"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|list|`list`|`list`|"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|change|`change/[number]/[type]`|`change/3/take away`|"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|check Canteen Operating Time|`checkcanteen`|`checkcanteen`|"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|check Stall Operating Time|`checkstall`|`checkstall`|"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WYing333"
        },
        "content": "|help|`help`|`help`|"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WYing333": 210,
      "-": 29,
      "Louis-Feng": 16
    }
  },
  {
    "path": "src/main/java/Canteen.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * a class represents a canteen"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Canteen {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String canteenName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e stallList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e openTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e closeTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteenName"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stallList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param openTime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param closeTime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    Canteen(String canteenName, List\u003cStall\u003e stallList, List\u003cInteger\u003e openTime,List\u003cInteger\u003e closeTime){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.canteenName \u003d canteenName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallList \u003d stallList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openTime \u003d openTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.closeTime \u003d closeTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get the open time of the canteen"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dayOfWeek"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getOpenTime(int dayOfWeek){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openTime.get(dayOfWeek-1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get the close time of the canteen"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dayOfWeek"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public int getCloseTime(int dayOfWeek) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return closeTime.get(dayOfWeek-1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get all the stalls"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * in a list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return List\u003cStall\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e getStallList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return stallList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    List\u003cStall\u003e checkOpenStall(int dayOfWeek, int time){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check if this canteen is open based on"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * given dayOfWeek and time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dayOfWeek"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    boolean isOpen (int dayOfWeek, int time) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                if(time\u003e\u003dthis.openTime.get(dayOfWeek)\u0026\u0026time\u003c\u003dthis.closeTime.get(dayOfWeek)){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                else{return false;}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getCanteenName() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return canteenName;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return  canteenName;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5,
      "WYing333": 2,
      "Louis-Feng": 75
    }
  },
  {
    "path": "src/main/java/Customer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * a class represent a customer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Customer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int ID;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int arriveTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getID() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return ID;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getArriveTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return arriveTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get which day of week the customer comes"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getDayOfWeek() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return dayOfWeek;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int dayOfWeek;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * constructor"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param ID"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param arriveTime"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dayOfWeek"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Customer(String name, int ID,  int arriveTime, int dayOfWeek) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.ID \u003d ID;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.arriveTime \u003d arriveTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dayOfWeek \u003d dayOfWeek;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public void printStalls(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        for(int i\u003d0;i\u003copenStalls.size();i++){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            System.out.println(openStalls.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public void printDishes(String canteenName){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        for(int i\u003d0;i\u003copenStalls.size();i++){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            if(canteenName.compareTo(openStalls.get(i).stall_name)\u003d\u003d0){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//                openStalls.get(i).printDishes();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    public List\u003cStall\u003e CheckOpenStalls(){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        openStalls \u003d this.canteen.checkOpenStall(this.dayOfWeek,this.arriveTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//        return openStalls;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check open stalls based on"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a given choosen canteen"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * return a list of stalls"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteen"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return List\u003cStall\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cStall\u003e checkOpenStalls(Canteen canteen){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cStall\u003e openStallList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Stall stall:canteen.stallList){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(stall.isOpen(this.dayOfWeek, this.arriveTime)){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                openStallList.add(stall);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openStallList;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check open stalls based on"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     *    a given list of canteens"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     *    return a list of open canteens"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param ListCanteen"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cCanteen\u003e checkOpenCanteens(List\u003cCanteen\u003e ListCanteen){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e openCanteens\u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Canteen canteen:ListCanteen){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(canteen.isOpen(this.dayOfWeek, this.arriveTime)){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                openCanteens.add(canteen);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openCanteens;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check dishes"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param ListDish"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cDish\u003e checkDish(List\u003cDish\u003e ListDish){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cDish\u003e dishList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Dish dish: ListDish){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            dishList.add(dish);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return dishList;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check waiting time"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stall"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int checkWaitingTime(Stall stall){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return stall.queue * stall.servingTimePerPersom;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to make the order according to the type of order"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteen"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stall"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dish"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param typeOfOrder"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Order order(Canteen canteen,Stall stall,List\u003cDish\u003e dish, String typeOfOrder) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Delivery\")\u003d\u003d0){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new deliveryOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Dine in\")\u003d\u003d0){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new dineInOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(typeOfOrder.compareTo(\"Take away\")\u003d\u003d0){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            return new takeAwayOrder(canteen,stall,dish,this,true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return  null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.name + \" arrives at \" +this.arriveTime ;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WYing333": 3,
      "Louis-Feng": 151
    }
  },
  {
    "path": "src/main/java/Dish.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * a class represents dish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Dish {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String dishName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private double price;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private String comment;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dishName"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param price"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param comment"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    Dish(String dishName, double price, String comment) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dishName \u003d dishName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.price \u003d price;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.comment \u003d comment;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * return the name of this dish"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String getDishName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * return the price of this dish"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return double"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getPrice() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.price;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * return the comment of this dish"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String getComment(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return this.comment;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishName + \" price: \" + this.price;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 7,
      "Louis-Feng": 41
    }
  },
  {
    "path": "src/main/java/Initializer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * class Initializer"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * for initializing the canteen information"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * at the start of the program"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Initializer {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cCanteen\u003e initialize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish porkChop \u003d new Dish(\"Pork Chop\",4,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Sugar, spice, and everything nice.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish fishNChip \u003d new Dish(\"Fish \u0026 Chip\",4,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very crispy, makes me feel the happiness of eating!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chickenCutLet \u003d new Dish(\"Chicken Cutlet\",3.5,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Not very good tasting, I think the meat is a bit hard to eat.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall westernStall \u003d new Stall(\"Western Stall\", 1,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                900,1800, Arrays.asList(1,2,3,5,6,7),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(porkChop,fishNChip,chickenCutLet),1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish espresso \u003d new Dish(\"Espresso\",5,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The coffee smells good but it is a bit bitter for me.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish caramelFrappuccino \u003d new Dish(\"Caramel Frappuccino\",7.5,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"I don\u0027t taste any coffee. Extremely sweet\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish signatureHotChocolateckenCutLet \u003d new Dish(\"Signature Hot Chocolate\",6,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The cake is accompanied by a slight bitterness from the dark chocolate \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                        \"that lingers at the back of your throat. It is super addictive for a chocolate lover like myself.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall starbucks \u003d new Stall(\"Starbucks\", 2,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                900,1830, Arrays.asList(2,3,4,5,6,7),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(espresso,caramelFrappuccino,signatureHotChocolateckenCutLet),1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish sweetNSourPorkRice \u003d new Dish(\"Sweet \u0026 Sour Pork Rice\",4.5,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The meat is good taste, but the rice is not very good\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish curryChickenRice \u003d new Dish(\"Curry Chicken Rice\",3.5,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The curry is sooooo delicious!!!!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish friedRiceWithBeef \u003d new Dish(\"Fried Rice with Beef\",5,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"I think there is too much oil in this dish\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall claypotRice \u003d new Stall(\"ClaypotRice\", 3,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                800,2000, Arrays.asList(3,4,5,6,7),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(sweetNSourPorkRice,curryChickenRice,friedRiceWithBeef),1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen1 \u003d new Canteen(\"Canteen 1\", Arrays.asList(westernStall,starbucks,claypotRice),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(900,900,800,800,800,800,800),Arrays.asList(1800,1830,2000,2000,2000,2000,2000));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish kimchiFriedRice \u003d new Dish(\"Kimchi Fried Rice\", 3.50,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"As a korean, I find the taste in my home country.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish spicyChickenSet \u003d new Dish(\"Spicy Chicken Set\", 5.00,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The chicken tastes good but it is too spicy for me.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish kimchiRamen \u003d new Dish(\"Kimchi Ramen\", 4.00,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The kimchi is really delicious as this is my first time to eat this.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall koreanStall \u003d new Stall(\"KoreanStall\", 4, \"35 Students Walk\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                830, 1730, Arrays.asList(1,2,3,4),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(kimchiFriedRice, spicyChickenSet, kimchiRamen), 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pepperoni \u003d new Dish(\"Pepperoni\", 8.50,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"This dish made me feel like diving in the sea.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish hawaiian \u003d new Dish(\"Hawaiian\", 9.50,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"I love this hawaii pizza. I want to marry it and eat it at the wedding.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish aglioOlio \u003d new Dish(\"Aglio Olio\",10.50,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The preparation of this dish is easy and quick. Pasta is made in many colors, different shapes\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                        \" and is known by many names in a different country.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall pizzaHut \u003d new Stall(\"PizzaHut\",5, \"35 Students Walk\", 900, 1800,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(1,2,4,5,6), Arrays.asList(pepperoni, hawaiian, aglioOlio),2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish mcChicken \u003d new Dish(\"Mc Chicken\", 2,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The most classic hamburger in the world!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish mcNuggets \u003d new Dish(\"Mc Nuggets\", 4,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"This is really my favorite among all fast food.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish applePie \u003d new Dish(\"Apple Pie\", 2,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"this one is good but i prefer the other flavor\u0027s pie :)\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall macDonalds \u003d new Stall(\"MacDonalds\",6, \"35 Students Walk\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                930, 1830, Arrays.asList(2,3,4,7),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(mcChicken, mcNuggets, applePie),2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen2 \u003dnew Canteen(\"Canteen 2\",Arrays.asList(koreanStall,pizzaHut,macDonalds),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(830,830,830,830,900,900,930), Arrays.asList(1730,1830,1830,1830,1800,1800,1830));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish beefNoodle \u003d new Dish(\"Beef Noodle\",3,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The beef is really good, but I think this dish is a bit salty :(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish tomatoEggNoodle \u003d new Dish(\"Tomato Egg Noodle\", 2.5,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really tasteful!!! After this, I know the reason why most Chinese like tomato and egg.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish noodlesWithSoyBeanPaste \u003d new Dish (\"Noodles with Soy Bean Paste\",3,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Although my Chinese friends like this very much, but as an Indian I do not like this.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall noodles \u003d new Stall(\"Noodles\",7,\"20 Nanyang Cres\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                830,1930,Arrays.asList(1,2,3,6),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(beefNoodle,tomatoEggNoodle,noodlesWithSoyBeanPaste),3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish sweetAndSourMeet \u003d new Dish(\"Sweet\u0026Sour Meet\",5,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The taste of the sweetness and sour are just right.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish kungPaoTofu \u003d new Dish(\"Kung Pao Tofu\", 4.5,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really good, worth try, but not understand the name of this dish.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish boiledFish \u003d new Dish(\"Boiled Fish\", 5.5,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try! Really spicy!!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall siChuan \u003d new Stall(\"Si Chuan\",8,\"24 Nanyang Ave\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                900,1830,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(sweetAndSourMeet,kungPaoTofu,boiledFish),3);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish spicyChicken \u003d new Dish(\"Spicy Chicken\",3.5,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very crispy and spicy!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish saltedEggChicken \u003d new Dish(\"Salted Egg Chicken\",4,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this taste of chicken with salted egg.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish mapoTofu \u003d new Dish(\"Mapo Tofu\",2.5,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Heard of this dish before, really good.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall mixedRice \u003d new Stall(\"Mixed Rice\",9,\"32 Nanyang Cres\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                800,1900,Arrays.asList(1,2,5,7),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(spicyChicken,saltedEggChicken,mapoTofu),3);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen3 \u003d new Canteen(\"Canteen 3\",Arrays.asList(noodles,siChuan,mixedRice),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(800,800,830,900,800,830,800), Arrays.asList(1830,1830,1830,1830,1830,1930,1900));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000,Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e canteens \u003d new ArrayList\u003cCanteen\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen1);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen3);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteens.add(canteen4);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return canteens;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 156
    }
  },
  {
    "path": "src/main/java/Logic.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "//import necessary libraries"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import exception.NoCanteenException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import exception.NoStallException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * Main logic of the whole program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public static String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    //input is for each statement input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    protected static List\u003cCanteen\u003e canteens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    protected static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    public static FileInputStream inputFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public static ArrayList\u003cOrder\u003e Order \u003d new ArrayList\u003cOrder\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * main method"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Initializer initializer \u003d new Initializer();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e canteens \u003d initializer.initialize();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        main(canteens);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void main(List\u003cCanteen\u003e canteens) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            UI.greet();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            // call greet() method to greet"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Customer customer \u003d UI.getCustomer(sc);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"Please enter your command. (Type help for instruction.)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            input\u003dsc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                //if input is not \"bye\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /** print the list of tasks*/"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.printOrder(input, Order);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.help();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                else if (input.equals(\"checkcanteen\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.checkCanteenOperatingTime(canteens,customer,sc);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                else if (input.equals(\"checkstall\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.checkStallOperatingTime(canteens,customer,sc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /** mark one task as done */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /** delete one task */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.deleteOrder(input,Order);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /** to find tasks containing a certain keyword*/"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.findDishinOrder(input, Order);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /** user decides to make orders*/"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                else if (input.startsWith(\"order\"))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.order(canteens,customer,sc,Order);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                else if (input.startsWith(\"change\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    UI.changeOrder(customer,input,Order);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    //dealing with undefined type of input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    System.out.println(\"  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                /*exception handling of wrong input*/"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                input\u003dsc.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                // get next input statement"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            UI.bye();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(NoStallException e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! No stall opens at that time. Please change your time. :-(\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            main(canteens);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (NoCanteenException e){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! No canteen opens at that time. Please change your time. :-(\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            main(canteens);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 35,
      "AnnanWangDaniel": 16,
      "WYing333": 18,
      "Louis-Feng": 37
    }
  },
  {
    "path": "src/main/java/Order.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents an order"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Order {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private Canteen canteen;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private Stall stall;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private List\u003cDish\u003e dishes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private Customer customer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Constructor of the Order class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param canteen canteen name of the order"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param stall stall name of the order"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param dishes dishes that the customer ordered"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param customer customer name who did the order"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    Order(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.canteen \u003d canteen;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stall \u003d stall;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.dishes \u003d dishes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        this.customer \u003d customer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the canteen of the order"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the canteen"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Canteen getCanteen() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.canteen;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the stall of the order"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the stall"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Stall getStall() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.stall;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the list of dishes that the customer order"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the list of dishes"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public List\u003cDish\u003e getDish() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        return this.dishes;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Format the meaningful string for user to see"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String dishString \u003d \"1. \" + dishes.get(0).getDishName() + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(int i\u003d1; i\u003cdishes.size();i++){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            dishString \u003d dishString  + (i+1)+\". \" + dishes.get(i).getDishName() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return this.canteen + \" order in\" + this.stall + \": \\n\" + dishString ;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5,
      "WYing333": 39,
      "Louis-Feng": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * class Parser"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * to parse user\u0027s input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Parser {//name week time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to parseCustomer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * when they input their infomation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param inputMessage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @throws DayOfWeekException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @throws ArriveTimeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static Customer parseCustomer(String inputMessage) throws DayOfWeekException, ArriveTimeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String[] inputWords \u003d inputMessage.split(\"/\"); //split the input message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String customerName \u003d inputWords[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int dayOfWeek \u003d Integer.parseInt(inputWords[1])-1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(dayOfWeek\u003e\u003d7||dayOfWeek\u003c0){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            throw new DayOfWeekException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int arriveTime \u003d Integer.parseInt(inputWords[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(arriveTime\u003c0||arriveTime\u003e\u003d2400){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            throw new ArriveTimeException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return new Customer(customerName,1,arriveTime,dayOfWeek);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 16,
      "Louis-Feng": 14
    }
  },
  {
    "path": "src/main/java/Stall.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * a class represents a stall in a canteen"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class Stall {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String stall_name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int stallID;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private String stallLocation;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int openTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private int closeTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cInteger\u003e openDayOfWeek;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private List\u003cDish\u003e  dishes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int queue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int servingTimePerPersom;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get the open time of this stall"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getOpenTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return openTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get the close time of this stall"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return int"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getCloseTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return closeTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * constructor for Stall class"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stall_name"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stallID"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stallLocation"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param openTime"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param closeTime"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param openDayOfWeek"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dishes"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param servingTimePerPersom"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public Stall(String stall_name, int stallID, String stallLocation, int openTime, int closeTime, List\u003cInteger\u003e openDayOfWeek, List\u003cDish\u003e dishes, int servingTimePerPersom) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stall_name \u003d stall_name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallID \u003d stallID;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.stallLocation \u003d stallLocation;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openTime \u003d openTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.closeTime \u003d closeTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.openDayOfWeek \u003d openDayOfWeek;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.dishes \u003d dishes;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.servingTimePerPersom \u003d servingTimePerPersom;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.queue \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to return all the dishes in this stall"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * in a list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return List\u003cDish\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public List\u003cDish\u003e getDish(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.dishes;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public void setQueue(int queue) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.queue \u003d queue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public int getQueue() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return queue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check if this stall is open based on"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * given dayOfWeek and time"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dayOfWeek"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    boolean isOpen (int dayOfWeek, int time) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(Integer day:this.openDayOfWeek){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            if(day \u003d\u003d dayOfWeek){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                if(time\u003e\u003dthis.openTime\u0026\u0026time\u003c\u003dthis.closeTime){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to print all the dishes in this stall"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public void printDishes(){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        for(int i\u003d0;i\u003cdishes.size();i++){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "            System.out.println(dishes.get(i));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.stall_name;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 105
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " * UI class to deal with interactions with user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * when user wants to make an order"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * this method is invoked to create Order objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * call methods inside to perform steps"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * for knowing which canteen, stall user goes to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * how many dishes user orders, dishes user orders"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteens"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void order(List\u003cCanteen\u003e canteens, Customer customer,Scanner sc, ArrayList\u003cOrder\u003e Order) throws NoStallException, NoCanteenException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen canteenChoosed \u003d getCanteen(canteens, customer,sc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall stallChoosed \u003d getStall(customer, canteenChoosed,sc);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cDish\u003e orderedDishes \u003d getDishes(stallChoosed,sc);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Order order \u003d getOrder(customer, canteenChoosed, stallChoosed, orderedDishes,sc,Order);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Your order created! Thanks.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(order);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * when a user starts our app,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * collect his basic information"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * including name,day of week and time arrive"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs input following the format name/day of week/time arrive"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static Customer getCustomer(Scanner sc) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please enter your name/day of week/time arrive:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String inputMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Customer customer \u003d Parser.parseCustomer(inputMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return customer;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        } catch(DayOfWeekException e){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong day of week! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer(sc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(ArriveTimeException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong time! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer(sc);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong format! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCustomer(sc);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * method to get the order type"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * for creating an order"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteenChoosed"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stallChoosed"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param orderedDishes"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Order getOrder(Customer customer, Canteen canteenChoosed, Stall stallChoosed, List\u003cDish\u003e orderedDishes,Scanner sc, ArrayList\u003cOrder\u003e Order) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            System.out.println(\"Please choose your order type:\\n\\t1.Dine in.\\n\\t2.Take away.\\n\\t3.delivery.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int typeChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String orderType\u003d \"Dine in\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (typeChoosed \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Dine in\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (typeChoosed \u003d\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Take away\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else if (typeChoosed \u003d\u003d 3){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderType \u003d \"Delivery\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Order order \u003d customer.order(canteenChoosed, stallChoosed, orderedDishes,orderType);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Order.add(order);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return order;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (WrongNumberException e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong number. Please enter correct number. :-(\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getOrder(customer,canteenChoosed,stallChoosed,orderedDishes,sc, Order);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Please enter number. :-(\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getOrder(customer,canteenChoosed,stallChoosed,orderedDishes,sc, Order);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * what dishes the user orders"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param stallChoosed"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static List\u003cDish\u003e getDishes(Stall stallChoosed, Scanner sc) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int dishCount;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(stallChoosed + \" provides following dishes:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            dishCount \u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cDish\u003e dishinStall \u003d stallChoosed.getDish();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for (Dish d : dishinStall) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                dishCount++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(dishCount +\". \" + d);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int numOfDishes \u003d getNumOfDishes(dishCount,sc);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose what you want:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cDish\u003e orderedDishes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for(int num\u003d0;num\u003cnumOfDishes;num++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(\"Please enter the \" + (num + 1) + \" number.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                int dishIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(dishIdChoosed\u003c\u003d0||dishIdChoosed\u003edishCount){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    throw new WrongNumberException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                Dish dishChoosed \u003d dishinStall.get(dishIdChoosed - 1);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                orderedDishes.add(dishChoosed);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String dummy \u003d sc.nextLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String isComment \u003d getYN(sc);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (isComment.equals(\"y\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                checkComment(orderedDishes);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return orderedDishes;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong number of dish! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getDishes(stallChoosed,sc);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(Exception e){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong information! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getDishes(stallChoosed,sc);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to ask user whether he/she wants to know the comments"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * of the selected dish"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static String getYN(Scanner sc) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Do you want to check the comment for this stall? (y/n)\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            String isComment \u003d sc.nextLine();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if((!isComment.equals(\"y\"))\u0026\u0026(!isComment.equals(\"n\"))){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new YNException();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return isComment;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (YNException e){"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong input! Please enter y or n. :-(\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getYN(sc);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong input! Please enter y or n. :-(\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getYN(sc);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to know how many dishes user wants to order"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static int getNumOfDishes(int count,Scanner sc) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"How many dishes you want to order please?\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int numberOfDishes \u003d sc.nextInt();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (numberOfDishes\u003c\u003d0||numberOfDishes\u003ecount){"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return numberOfDishes;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (WrongNumberException e){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong dishes number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getNumOfDishes(count,sc);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong format! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getNumOfDishes(count,sc);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to get which stall the user selects"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteenChoosed"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Stall getStall(Customer customer, Canteen canteenChoosed, Scanner sc) throws NoStallException{"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"The avaliable stalls in \" + canteenChoosed + \" are:\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int stallCount;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cStall\u003e openStall \u003d customer.checkOpenStalls(canteenChoosed);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            stallCount \u003d 0;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for (Stall stall : openStall) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                stallCount++;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(stallCount + \". \" + stall);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(stallCount \u003d\u003d 0){"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new NoStallException();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose a stall:\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int stallIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(stallIdChoosed\u003c\u003d0||stallIdChoosed\u003estallCount){"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Stall stallChoosed \u003d openStall.get(stallIdChoosed - 1);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return stallChoosed;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong stall number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getStall(customer,canteenChoosed,sc);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(InputMismatchException e){"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Not number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getStall(customer,canteenChoosed,sc);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to know which canteen the user selects"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteens"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static Canteen getCanteen(List\u003cCanteen\u003e canteens, Customer customer, Scanner sc) throws NoCanteenException{"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Dear \" + customer.name + \",\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Please choose a canteen from the list:\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int canteenCount \u003d 0;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                canteenCount++;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(canteenCount +\". \" + canteen);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(canteenCount \u003d\u003d 0){"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new NoCanteenException();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(canteenIdChoosed\u003c\u003d0||canteenIdChoosed\u003ecanteenCount){"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new WrongNumberException();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return canteenChoosed;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(WrongNumberException e){"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Wrong canteen number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCanteen(canteens, customer,sc);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(InputMismatchException e){"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  OOPS!!! Not number! Please enter again. :-(\\n\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return getCanteen(canteens, customer,sc);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to greet the user at the start of the program"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void greet(){"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Canteenhelper\\n\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\" What can I do for you?\\n\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "     * method to say bye"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "     * @return void"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to display help information for the user"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * if the user does not know what to do next"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void help() {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Hello! Here is a list of commands you can try:\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"1. Order dish: \u0027order\u0027\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"2. Delete order: \u0027delete [order number]\u0027\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"3. Find order: \u0027find [keyword]\u0027\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"4. List order: \u0027list\u0027\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"5. Change order: \u0027change/[number]/[type]\u0027\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"6. Check Canteen Operating Time: \u0027checkcanteen\u0027\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"7. Check Stall Operating Time: \u0027checkstall \u0027\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        System.out.println(\"8. Exit program: \u0027bye\u0027 \");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * method to check comments"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * based on list of dishes"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to choose y/n"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param dCs"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void checkComment(List\u003cDish\u003e dCs) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for (int i \u003d 0; i \u003c dCs.size(); i++) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(dCs.get(i).getComment());"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check the operating time of a canteen"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * prints operating time of user selected canteen"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to choose the number before canteen list"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteens"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void checkCanteenOperatingTime(List\u003cCanteen\u003e canteens,Customer customer,Scanner sc){"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Choose the canteen you want to check:\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(j +\". \" + canteen);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Operating hours for the canteen you choosed is: \\n\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Open Time: \" + canteenChoosed.getOpenTime(customer.getDayOfWeek())/100 + \":00\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Closing Time: \" + canteenChoosed.getCloseTime(customer.getDayOfWeek())/100 +\":\" +"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                           canteenChoosed.getCloseTime(customer.getDayOfWeek())%100 );"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to check the operating time of a stall"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * prints operating time of user selected stall"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to choose the number before the canteen list"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * and stall list"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * to get the corresponding one"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param canteens"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param sc"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void checkStallOperatingTime(List\u003cCanteen\u003e canteens,Customer customer,Scanner sc){"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Input the canteen which your desired stall belongs to: \\n\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cCanteen\u003e openCanteens \u003d customer.checkOpenCanteens(canteens);//list of canteens"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(Canteen canteen:openCanteens) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(j +\". \" + canteen);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Enter the number in front to choose:\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int canteenIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen canteenChoosed \u003d openCanteens.get(canteenIdChoosed - 1);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cStall\u003e openStall \u003d customer.checkOpenStalls(canteenChoosed);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        j \u003d 0;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for (Stall stall : openStall) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(j +\". \" + stall);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Please choose a stall:\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int stallIdChoosed \u003d sc.nextInt();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall stallChoosed \u003d openStall.get(stallIdChoosed - 1);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Operating hours for the stall you chose is: \\n\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Open Time: \" + stallChoosed.getOpenTime()/100 + \":00\" );"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Closing Time: \" + stallChoosed.getCloseTime()/100 + \":\""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                           + String.format(\"%02d\",stallChoosed.getCloseTime()%100));"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to change order"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * if the user wants to change type of order"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to input index of order and what order type he/she wants to change to"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param customer"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void changeOrder(Customer customer,String input,ArrayList\u003cOrder\u003e Order)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve changed this order:  \\n\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String[] inputWords \u003d input.split(\"/\"); //split the input message"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String orderNumberchenged \u003d inputWords[1];"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int orderNumberchanged \u003d Integer.parseInt(orderNumberchenged) - 1;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String changedtype \u003d inputWords[2];"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(Order.get(orderNumberchanged) + \"\\n\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Canteen can \u003d Order.get(orderNumberchanged).getCanteen();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Stall stall \u003d Order.get(orderNumberchanged).getStall();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        List\u003cDish\u003e dishes \u003d Order.get(orderNumberchanged).getDish();"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Order changedOrder \u003d customer.order(can,stall,dishes,changedtype);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Order.set(orderNumberchanged,changedOrder);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"to \\n\");"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(Order.get(orderNumberchanged) + \"\\n\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to print all the orders made by the user"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void printOrder(String input,ArrayList\u003cOrder\u003e Order) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for (int i \u003d 0; i \u003c Order.size(); i++) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Order.get(i) instanceof dineInOrder) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println((i + 1) + \":\" + (dineInOrder) Order.get(i));"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Order.get(i) instanceof deliveryOrder) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println((i + 1) + \":\" + (deliveryOrder) Order.get(i));"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Order.get(i) instanceof takeAwayOrder) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println((i + 1) + \":\" + (takeAwayOrder) Order.get(i));"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method to delete one order"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * if user wants to delete one order from what he had ordered"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to provide order index to delete"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void deleteOrder(String input,ArrayList\u003cOrder\u003e Order) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this order:  \");"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int orderNumberdeleted \u003d Integer.parseInt(input.replaceAll(\"\\\\D+\", \"\")) - 1; //find the corresponding index of task to be deleted"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(Order.get(orderNumberdeleted));"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Order.remove(orderNumberdeleted); //remove that task from arrayList"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Now you have \" + Order.size() + \" orders in the list. \");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * a method for user to find all the orders containing certain dish"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * user needs to input dish name"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     * @param Order"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void findDishinOrder(String input,ArrayList\u003cOrder\u003e Order) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Here are the matching orders in your list:\\n\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String keyword \u003d input.substring(5); // to get the keyword string"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        /*iterate the task arrayList to find corresponding items*/"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(int i\u003d0;i\u003c Order.size();i++){"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            for(int j\u003d0;j\u003cOrder.get(i).getDish().size();j++)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(Order.get(i).getDish().get(j).getDishName().compareTo(keyword) \u003d\u003d 0){"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    System.out.println(count +\": \" + Order.get(i));"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    count ++;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 377,
      "WYing333": 6,
      "Louis-Feng": 125
    }
  },
  {
    "path": "src/main/java/deliveryOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a delivery order which extends order class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class deliveryOrder extends Order {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double carrierFee \u003d 0.3;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double deliveryFee \u003d 2.0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isDeliveryOrder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Constructor of the delivery order"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param canteen canteen name of the order"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param stall stall name of the order"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param dishes dishes that the customer ordered"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param customer customer name who did the order"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param isDeliveryOrder order type"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    deliveryOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isDeliveryOrder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isDeliveryOrder \u003d isDeliveryOrder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the order type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return whether the order is delivery type or not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsDeliveryOrder() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isDeliveryOrder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the carrier fee of the delivery order"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the carrier fee"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getCarrierFee() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.carrierFee;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the delivery fee of the delivery order"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the delivery fee"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getDeliveryFee() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.deliveryFee;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Format the meaningful string for user to see"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (isDeliveryOrder) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            return super.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Delivery Order)\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 2,
      "WYing333": 40,
      "Louis-Feng": 20
    }
  },
  {
    "path": "src/main/java/dineInOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a dine in order which extends order class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class dineInOrder extends Order {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isDineIn;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Constructor of the dine in order"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param canteen canteen name of the order"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param stall stall name of the order"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param dishes dishes that the customer ordered"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param customer customer name who did the order"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param isDineIn order type"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    dineInOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isDineIn) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isDineIn \u003d isDineIn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the order type"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return whether the order is dine in type or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsDineIn() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isDineIn;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Format the meaningful string for user to see"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if (this.isDineIn) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Dine In)\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Dine In)\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 32,
      "Louis-Feng": 12
    }
  },
  {
    "path": "src/main/java/exception/ArriveTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents an arrive time Exception which extends from the exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class ArriveTimeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 8
    }
  },
  {
    "path": "src/main/java/exception/DayOfWeekException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a day of week Exception which extends from the exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class DayOfWeekException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 8
    }
  },
  {
    "path": "src/main/java/exception/NoCanteenException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class NoCanteenException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 4
    }
  },
  {
    "path": "src/main/java/exception/NoStallException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class NoStallException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 4
    }
  },
  {
    "path": "src/main/java/exception/WrongNumberException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a wrong number Exception which extends from the exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class WrongNumberException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 8
    }
  },
  {
    "path": "src/main/java/exception/YNException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a yes or no Exception which extends from the exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": "public class YNException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "package seedu.duke;//for pull request"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Main entry-point for the java.duke.seedu.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AnnanWangDaniel"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AnnanWangDaniel": 1,
      "WYing333": 2,
      "-": 19
    }
  },
  {
    "path": "src/main/java/takeAwayOrder.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": " * a class represents a take away order which extends order class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "public class takeAwayOrder extends Order {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    private boolean isTakeAway;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    private final static double carrierFee \u003d 0.3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Constructor of the delivery order"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param canteen canteen name of the order"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param stall stall name of the order"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param dishes dishes that the customer ordered"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param customer customer name who did the order"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @param isTakeAway order type"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    takeAwayOrder(Canteen canteen, Stall stall, List\u003cDish\u003e dishes, Customer customer, boolean isTakeAway) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        super(canteen, stall, dishes, customer);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        this.isTakeAway \u003d isTakeAway;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the order type"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return whether the order is take away type or not"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public boolean getIsTakeAway() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.isTakeAway;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Get the carrier fee of the delivery order"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the carrier fee"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    public double getCarrierFee() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        return this.carrierFee;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * Format the meaningful string for user to see"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        if(isTakeAway) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Take Away)\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "            return super.toString() + \"(Not Take Away)\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 38,
      "Louis-Feng": 15
    }
  },
  {
    "path": "src/test/java/CanteenTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "class CanteenTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getOpenTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,canteen4.getOpenTime(1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,canteen4.getOpenTime(2));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,canteen4.getOpenTime(3));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,canteen4.getOpenTime(4));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,canteen4.getOpenTime(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1100,canteen4.getOpenTime(6));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1000,canteen4.getOpenTime(7));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getCloseTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2130,canteen4.getCloseTime(1));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2130,canteen4.getCloseTime(2));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2200,canteen4.getCloseTime(3));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2200,canteen4.getCloseTime(4));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2200,canteen4.getCloseTime(5));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2200,canteen4.getCloseTime(6));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2000,canteen4.getCloseTime(7));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getStallList() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(indian,canteen4.getStallList().get(0));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(waffles,canteen4.getStallList().get(1));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(drinks,canteen4.getStallList().get(2));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void isOpen() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(true,canteen4.isOpen(1,1200));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(false,canteen4.isOpen(1,0000));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(true,canteen4.isOpen(5,1500));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getCanteenName() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(\"Canteen 4\",canteen4.getCanteenName());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 212
    }
  },
  {
    "path": "src/test/java/CustomerTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "class CustomerTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(\"Louis\",customer.getName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getID() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1,customer.getID());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getArriveTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1200,customer.getArriveTime());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getDayOfWeek() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1,customer.getDayOfWeek());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void checkOpenStalls() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1,customer.checkOpenStalls(canteen4).size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(waffles,customer.checkOpenStalls(canteen4).get(0));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void checkOpenCanteens() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Customer customer \u003d new Customer(\"Louis\",1,1200,1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        List\u003cCanteen\u003e canteenList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        canteenList.add(canteen4);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(1,customer.checkOpenCanteens(canteenList).size());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(canteen4,customer.checkOpenCanteens(canteenList).get(0));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 119
    }
  },
  {
    "path": "src/test/java/DishTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "class DishTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getDishName() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish dish \u003d new Dish(\"Chicken rice\",5,\"so nice!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(\"Chicken rice\",dish.getDishName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getPrice() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish dish \u003d new Dish(\"Chicken rice\",5,\"so nice!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(5,dish.getPrice());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getComment() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish dish \u003d new Dish(\"Chicken rice\",5,\"so nice!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(\"so nice!\",dish.getComment());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 28
    }
  },
  {
    "path": "src/test/java/OrderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "class OrderTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getCanteen() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish porkChop \u003d new Dish(\"Pork Chop\",4,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Sugar, spice, and everything nice.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish fishNChip \u003d new Dish(\"Fish \u0026 Chip\",4,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy, makes me feel the happiness of eating!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish chickenCutLet \u003d new Dish(\"Chicken Cutlet\",3.5,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Not very good tasting, I think the meat is a bit hard to eat.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall westernStall \u003d new Stall(\"Western Stall\", 1,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1800, Arrays.asList(1,2,3,5,6,7),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(porkChop,fishNChip,chickenCutLet),1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish espresso \u003d new Dish(\"Espresso\",5,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The coffee smells good but it is a bit bitter for me.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish caramelFrappuccino \u003d new Dish(\"Caramel Frappuccino\",7.5,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I don\u0027t taste any coffee. Extremely sweet\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish signatureHotChocolateckenCutLet \u003d new Dish(\"Signature Hot Chocolate\",6,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The cake is accompanied by a slight bitterness from the dark chocolate \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \"that lingers at the back of your throat. It is super addictive for a chocolate lover like myself.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall starbucks \u003d new Stall(\"Starbucks\", 2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830, Arrays.asList(2,3,4,5,6,7),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(espresso,caramelFrappuccino,signatureHotChocolateckenCutLet),1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetNSourPorkRice \u003d new Dish(\"Sweet \u0026 Sour Pork Rice\",4.5,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The meat is good taste, but the rice is not very good\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish curryChickenRice \u003d new Dish(\"Curry Chicken Rice\",3.5,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The curry is sooooo delicious!!!!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish friedRiceWithBeef \u003d new Dish(\"Fried Rice with Beef\",5,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I think there is too much oil in this dish\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall claypotRice \u003d new Stall(\"ClaypotRice\", 3,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,2000, Arrays.asList(3,4,5,6,7),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetNSourPorkRice,curryChickenRice,friedRiceWithBeef),1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen1 \u003d new Canteen(\"Canteen 1\", Arrays.asList(westernStall,starbucks,claypotRice),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(900,900,800,800,800,800,800),Arrays.asList(1800,1830,2000,2000,2000,2000,2000));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(canteen1, new Order(canteen1,starbucks,Arrays.asList(espresso),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"w\",1,900,2)).getCanteen());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getStall() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiFriedRice \u003d new Dish(\"Kimchi Fried Rice\", 3.50,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"As a korean, I find the taste in my home country.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChickenSet \u003d new Dish(\"Spicy Chicken Set\", 5.00,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The chicken tastes good but it is too spicy for me.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiRamen \u003d new Dish(\"Kimchi Ramen\", 4.00,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The kimchi is really delicious as this is my first time to eat this.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall koreanStall \u003d new Stall(\"KoreanStall\", 4, \"35 Students Walk\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830, 1730, Arrays.asList(1,2,3,4),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(kimchiFriedRice, spicyChickenSet, kimchiRamen), 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish pepperoni \u003d new Dish(\"Pepperoni\", 8.50,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This dish made me feel like diving in the sea.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish hawaiian \u003d new Dish(\"Hawaiian\", 9.50,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I love this hawaii pizza. I want to marry it and eat it at the wedding.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish aglioOlio \u003d new Dish(\"Aglio Olio\",10.50,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The preparation of this dish is easy and quick. Pasta is made in many colors, different shapes\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \" and is known by many names in a different country.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall pizzaHut \u003d new Stall(\"PizzaHut\",5, \"35 Students Walk\", 900, 1800,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(1,2,4,5,6), Arrays.asList(pepperoni, hawaiian, aglioOlio),2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcChicken \u003d new Dish(\"Mc Chicken\", 2,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The most classic hamburger in the world!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcNuggets \u003d new Dish(\"Mc Nuggets\", 4,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This is really my favorite among all fast food.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish applePie \u003d new Dish(\"Apple Pie\", 2,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"this one is good but i prefer the other flavor\u0027s pie :)\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall macDonalds \u003d new Stall(\"MacDonalds\",6, \"35 Students Walk\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                930, 1830, Arrays.asList(2,3,4,7),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(mcChicken, mcNuggets, applePie),2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen2 \u003dnew Canteen(\"Canteen 2\",Arrays.asList(koreanStall,pizzaHut,macDonalds),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(830,830,830,830,900,900,930), Arrays.asList(1730,1830,1830,1830,1800,1800,1830));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(pizzaHut, new Order(canteen2,pizzaHut,Arrays.asList(hawaiian),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"y\",2,830,3)).getStall());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getDish() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish beefNoodle \u003d new Dish(\"Beef Noodle\",3,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The beef is really good, but I think this dish is a bit salty :(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish tomatoEggNoodle \u003d new Dish(\"Tomato Egg Noodle\", 2.5,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really tasteful!!! After this, I know the reason why most Chinese like tomato and egg.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish noodlesWithSoyBeanPaste \u003d new Dish (\"Noodles with Soy Bean Paste\",3,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Although my Chinese friends like this very much, but as an Indian I do not like this.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall noodles \u003d new Stall(\"Noodles\",7,\"20 Nanyang Cres\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830,1930,Arrays.asList(1,2,3,6),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(beefNoodle,tomatoEggNoodle,noodlesWithSoyBeanPaste),3);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetAndSourMeet \u003d new Dish(\"Sweet\u0026Sour Meet\",5,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The taste of the sweetness and sour are just right.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kungPaoTofu \u003d new Dish(\"Kung Pao Tofu\", 4.5,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really good, worth try, but not understand the name of this dish.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish boiledFish \u003d new Dish(\"Boiled Fish\", 5.5,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"First try! Really spicy!!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall siChuan \u003d new Stall(\"Si Chuan\",8,\"24 Nanyang Ave\","
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetAndSourMeet,kungPaoTofu,boiledFish),3);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChicken \u003d new Dish(\"Spicy Chicken\",3.5,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy and spicy!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish saltedEggChicken \u003d new Dish(\"Salted Egg Chicken\",4,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really like this taste of chicken with salted egg.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mapoTofu \u003d new Dish(\"Mapo Tofu\",2.5,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Heard of this dish before, really good.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall mixedRice \u003d new Stall(\"Mixed Rice\",9,\"32 Nanyang Cres\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,1900,Arrays.asList(1,2,5,7),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(spicyChicken,saltedEggChicken,mapoTofu),3);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen3 \u003d new Canteen(\"Canteen 3\",Arrays.asList(noodles,siChuan,mixedRice),"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(800,800,830,900,800,830,800), Arrays.asList(1830,1830,1830,1830,1830,1930,1900));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(spicyChicken, new Order(canteen3,mixedRice,Arrays.asList(spicyChicken),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"q\",3,900,4)).getDish().get(0));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 131
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import exception.ArriveTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import exception.DayOfWeekException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    void parseCustomer() throws DayOfWeekException, ArriveTimeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        assertEquals(\"z\", Parser.parseCustomer(\"z/2/1200\").name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        assertEquals(1, Parser.parseCustomer(\"z/2/1200\").dayOfWeek);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        assertEquals(1200, Parser.parseCustomer(\"z/2/1200\").arriveTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 15
    }
  },
  {
    "path": "src/test/java/StallTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "class StallTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getOpenTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130, Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(730,waffles.getOpenTime());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getCloseTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130, Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(2130,waffles.getCloseTime());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void getDish() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130, Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(plainWaffle,waffles.getDish().get(0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(chocoBanaWaffle,waffles.getDish().get(1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(oreoCheese,waffles.getDish().get(2));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    void isOpen() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                730,2130, Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "        assertEquals(true,waffles.isOpen(2,1200));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Louis-Feng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Louis-Feng": 71
    }
  },
  {
    "path": "src/test/java/UITest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "class UITest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    protected static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    void getCustomer() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            assertEquals(\"z\", UI.getCustomer(sc).name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            assertEquals(1, UI.getCustomer(sc).dayOfWeek);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            assertEquals(1200, UI.getCustomer(sc).arriveTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            assertEquals(\"Wrong Message\", e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    void getOrder(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 25
    }
  },
  {
    "path": "src/test/java/deliveryOrderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "class deliveryOrderTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getIsDeliveryOrder() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish porkChop \u003d new Dish(\"Pork Chop\",4,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Sugar, spice, and everything nice.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish fishNChip \u003d new Dish(\"Fish \u0026 Chip\",4,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy, makes me feel the happiness of eating!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish chickenCutLet \u003d new Dish(\"Chicken Cutlet\",3.5,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Not very good tasting, I think the meat is a bit hard to eat.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall westernStall \u003d new Stall(\"Western Stall\", 1,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1800, Arrays.asList(1,2,3,5,6,7),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(porkChop,fishNChip,chickenCutLet),1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish espresso \u003d new Dish(\"Espresso\",5,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The coffee smells good but it is a bit bitter for me.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish caramelFrappuccino \u003d new Dish(\"Caramel Frappuccino\",7.5,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I don\u0027t taste any coffee. Extremely sweet\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish signatureHotChocolateckenCutLet \u003d new Dish(\"Signature Hot Chocolate\",6,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The cake is accompanied by a slight bitterness from the dark chocolate \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \"that lingers at the back of your throat. It is super addictive for a chocolate lover like myself.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall starbucks \u003d new Stall(\"Starbucks\", 2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830, Arrays.asList(2,3,4,5,6,7),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(espresso,caramelFrappuccino,signatureHotChocolateckenCutLet),1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetNSourPorkRice \u003d new Dish(\"Sweet \u0026 Sour Pork Rice\",4.5,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The meat is good taste, but the rice is not very good\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish curryChickenRice \u003d new Dish(\"Curry Chicken Rice\",3.5,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The curry is sooooo delicious!!!!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish friedRiceWithBeef \u003d new Dish(\"Fried Rice with Beef\",5,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I think there is too much oil in this dish\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall claypotRice \u003d new Stall(\"ClaypotRice\", 3,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,2000, Arrays.asList(3,4,5,6,7),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetNSourPorkRice,curryChickenRice,friedRiceWithBeef),1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen1 \u003d new Canteen(\"Canteen 1\", Arrays.asList(westernStall,starbucks,claypotRice),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(900,900,800,800,800,800,800),Arrays.asList(1800,1830,2000,2000,2000,2000,2000));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(true, new deliveryOrder(canteen1,claypotRice,Arrays.asList(curryChickenRice),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"r\",4,900,6),true).getIsDeliveryOrder());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getCarrierFee() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiFriedRice \u003d new Dish(\"Kimchi Fried Rice\", 3.50,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"As a korean, I find the taste in my home country.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChickenSet \u003d new Dish(\"Spicy Chicken Set\", 5.00,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The chicken tastes good but it is too spicy for me.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiRamen \u003d new Dish(\"Kimchi Ramen\", 4.00,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The kimchi is really delicious as this is my first time to eat this.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall koreanStall \u003d new Stall(\"KoreanStall\", 4, \"35 Students Walk\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830, 1730, Arrays.asList(1,2,3,4),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(kimchiFriedRice, spicyChickenSet, kimchiRamen), 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish pepperoni \u003d new Dish(\"Pepperoni\", 8.50,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This dish made me feel like diving in the sea.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish hawaiian \u003d new Dish(\"Hawaiian\", 9.50,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I love this hawaii pizza. I want to marry it and eat it at the wedding.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish aglioOlio \u003d new Dish(\"Aglio Olio\",10.50,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The preparation of this dish is easy and quick. Pasta is made in many colors, different shapes\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \" and is known by many names in a different country.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall pizzaHut \u003d new Stall(\"PizzaHut\",5, \"35 Students Walk\", 900, 1800,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(1,2,4,5,6), Arrays.asList(pepperoni, hawaiian, aglioOlio),2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcChicken \u003d new Dish(\"Mc Chicken\", 2,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The most classic hamburger in the world!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcNuggets \u003d new Dish(\"Mc Nuggets\", 4,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This is really my favorite among all fast food.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish applePie \u003d new Dish(\"Apple Pie\", 2,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"this one is good but i prefer the other flavor\u0027s pie :)\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall macDonalds \u003d new Stall(\"MacDonalds\",6, \"35 Students Walk\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                930, 1830, Arrays.asList(2,3,4,7),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(mcChicken, mcNuggets, applePie),2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen2 \u003dnew Canteen(\"Canteen 2\",Arrays.asList(koreanStall,pizzaHut,macDonalds),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(830,830,830,830,900,900,930), Arrays.asList(1730,1830,1830,1830,1800,1800,1830));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(0.3, new deliveryOrder(canteen2,macDonalds,Arrays.asList(mcNuggets),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"t\",5,1000,2),true).getCarrierFee());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getDeliveryFee() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish beefNoodle \u003d new Dish(\"Beef Noodle\",3,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The beef is really good, but I think this dish is a bit salty :(\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish tomatoEggNoodle \u003d new Dish(\"Tomato Egg Noodle\", 2.5,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really tasteful!!! After this, I know the reason why most Chinese like tomato and egg.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish noodlesWithSoyBeanPaste \u003d new Dish (\"Noodles with Soy Bean Paste\",3,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Although my Chinese friends like this very much, but as an Indian I do not like this.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall noodles \u003d new Stall(\"Noodles\",7,\"20 Nanyang Cres\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830,1930,Arrays.asList(1,2,3,6),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(beefNoodle,tomatoEggNoodle,noodlesWithSoyBeanPaste),3);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetAndSourMeet \u003d new Dish(\"Sweet\u0026Sour Meet\",5,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The taste of the sweetness and sour are just right.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kungPaoTofu \u003d new Dish(\"Kung Pao Tofu\", 4.5,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really good, worth try, but not understand the name of this dish.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish boiledFish \u003d new Dish(\"Boiled Fish\", 5.5,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"First try! Really spicy!!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall siChuan \u003d new Stall(\"Si Chuan\",8,\"24 Nanyang Ave\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetAndSourMeet,kungPaoTofu,boiledFish),3);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChicken \u003d new Dish(\"Spicy Chicken\",3.5,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy and spicy!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish saltedEggChicken \u003d new Dish(\"Salted Egg Chicken\",4,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really like this taste of chicken with salted egg.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mapoTofu \u003d new Dish(\"Mapo Tofu\",2.5,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Heard of this dish before, really good.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall mixedRice \u003d new Stall(\"Mixed Rice\",9,\"32 Nanyang Cres\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,1900,Arrays.asList(1,2,5,7),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(spicyChicken,saltedEggChicken,mapoTofu),3);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen3 \u003d new Canteen(\"Canteen 3\",Arrays.asList(noodles,siChuan,mixedRice),"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(800,800,830,900,800,830,800), Arrays.asList(1830,1830,1830,1830,1830,1930,1900));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(2.0, new deliveryOrder(canteen3,siChuan,Arrays.asList(boiledFish ),"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"a\",6,1200,5),true).getDeliveryFee());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 129
    }
  },
  {
    "path": "src/test/java/dineInOrderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "class dineInOrderTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getIsDineIn() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiFriedRice \u003d new Dish(\"Kimchi Fried Rice\", 3.50,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"As a korean, I find the taste in my home country.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish spicyChickenSet \u003d new Dish(\"Spicy Chicken Set\", 5.00,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The chicken tastes good but it is too spicy for me.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish kimchiRamen \u003d new Dish(\"Kimchi Ramen\", 4.00,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The kimchi is really delicious as this is my first time to eat this.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall koreanStall \u003d new Stall(\"KoreanStall\", 4, \"35 Students Walk\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                830, 1730, Arrays.asList(1,2,3,4),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(kimchiFriedRice, spicyChickenSet, kimchiRamen), 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish pepperoni \u003d new Dish(\"Pepperoni\", 8.50,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This dish made me feel like diving in the sea.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish hawaiian \u003d new Dish(\"Hawaiian\", 9.50,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I love this hawaii pizza. I want to marry it and eat it at the wedding.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish aglioOlio \u003d new Dish(\"Aglio Olio\",10.50,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The preparation of this dish is easy and quick. Pasta is made in many colors, different shapes\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \" and is known by many names in a different country.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall pizzaHut \u003d new Stall(\"PizzaHut\",5, \"35 Students Walk\", 900, 1800,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(1,2,4,5,6), Arrays.asList(pepperoni, hawaiian, aglioOlio),2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcChicken \u003d new Dish(\"Mc Chicken\", 2,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The most classic hamburger in the world!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish mcNuggets \u003d new Dish(\"Mc Nuggets\", 4,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"This is really my favorite among all fast food.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish applePie \u003d new Dish(\"Apple Pie\", 2,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"this one is good but i prefer the other flavor\u0027s pie :)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall macDonalds \u003d new Stall(\"MacDonalds\",6, \"35 Students Walk\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                930, 1830, Arrays.asList(2,3,4,7),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(mcChicken, mcNuggets, applePie),2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen2 \u003dnew Canteen(\"Canteen 2\",Arrays.asList(koreanStall,pizzaHut,macDonalds),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(830,830,830,830,900,900,930), Arrays.asList(1730,1830,1830,1830,1800,1800,1830));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(true, new dineInOrder(canteen2,koreanStall,Arrays.asList(kimchiRamen),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"c\",10,1600,4),true).getIsDineIn());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 47
    }
  },
  {
    "path": "src/test/java/takeAwayOrderTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WYing333"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WYing333"
        },
        "content": "class takeAwayOrderTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getIsTakeAway() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish pattaya \u003d new Dish(\"Pattaya\", 5.5,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"First try, quite impressive to me!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish plainThosai \u003d new Dish(\"Plain Thosai\", 2.0,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Quite good, bu I like butter one more.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish prata \u003d new Dish(\"Prata\", 3.0,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Recommended by my friends, after this try, I will also recommend this to others.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall indian \u003d new Stall(\"Indian\", 10,\"Jurong West 964\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                1000,2000, Arrays.asList(2,3,5,7),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(pattaya,plainThosai,prata),4);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish plainWaffle \u003d new Dish(\"Plain Waffle\", 1.8,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Like other flavor more, but this one is cheap :)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish chocoBanaWaffle \u003d new Dish(\"Choco Banana Waffle\", 2.2,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The flavor of the chocolate and banana are so good!!!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish oreoCheese \u003d new Dish(\"Oreo Cheese Waffle\", 2.2,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very suitable for the cheese lovers.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall waffles \u003d new Stall(\"Waffles\",11,\"North Spine Level 1\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                730,2130,Arrays.asList(1,2,3,4,5),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(plainWaffle,chocoBanaWaffle,oreoCheese),4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish milo \u003d new Dish(\"Coffee\",1.2,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Normal milo lol\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish watermelon \u003d new Dish(\"Watermelon Drink\", 1.8,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Really like this since eat watermelon is quite mafan.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish milkshade \u003d new Dish(\"Milk shade\",1.8,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"A bit too sweet for me.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall drinks \u003d new Stall(\"Drinks\",12,\"Jurong West Ave 5\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                1100,2200,Arrays.asList(3,4,5,6),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(milo,watermelon,milkshade),4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen4 \u003d new Canteen(\"Canteen 4\",Arrays.asList(indian,waffles,drinks),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(730,730,730,730,730,1100,1000), Arrays.asList(2130,2130,2200,2200,2200,2200,2000));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(true, new takeAwayOrder(canteen4,drinks,Arrays.asList(milo),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"u\",9,800,4),true).getIsTakeAway());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    void getCarrierFee() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish porkChop \u003d new Dish(\"Pork Chop\",4,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Sugar, spice, and everything nice.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish fishNChip \u003d new Dish(\"Fish \u0026 Chip\",4,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Very crispy, makes me feel the happiness of eating!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish chickenCutLet \u003d new Dish(\"Chicken Cutlet\",3.5,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Not very good tasting, I think the meat is a bit hard to eat.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall westernStall \u003d new Stall(\"Western Stall\", 1,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1800, Arrays.asList(1,2,3,5,6,7),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(porkChop,fishNChip,chickenCutLet),1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish espresso \u003d new Dish(\"Espresso\",5,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The coffee smells good but it is a bit bitter for me.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish caramelFrappuccino \u003d new Dish(\"Caramel Frappuccino\",7.5,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I don\u0027t taste any coffee. Extremely sweet\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish signatureHotChocolateckenCutLet \u003d new Dish(\"Signature Hot Chocolate\",6,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The cake is accompanied by a slight bitterness from the dark chocolate \" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                        \"that lingers at the back of your throat. It is super addictive for a chocolate lover like myself.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall starbucks \u003d new Stall(\"Starbucks\", 2,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                900,1830, Arrays.asList(2,3,4,5,6,7),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(espresso,caramelFrappuccino,signatureHotChocolateckenCutLet),1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish sweetNSourPorkRice \u003d new Dish(\"Sweet \u0026 Sour Pork Rice\",4.5,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The meat is good taste, but the rice is not very good\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish curryChickenRice \u003d new Dish(\"Curry Chicken Rice\",3.5,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"The curry is sooooo delicious!!!!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Dish friedRiceWithBeef \u003d new Dish(\"Fried Rice with Beef\",5,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"I think there is too much oil in this dish\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Stall claypotRice \u003d new Stall(\"ClaypotRice\", 3,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                \"Hall of Residence 1, 21 Nanyang Cir, Singapore 639778\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                800,2000, Arrays.asList(3,4,5,6,7),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(sweetNSourPorkRice,curryChickenRice,friedRiceWithBeef),1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        Canteen canteen1 \u003d new Canteen(\"Canteen 1\", Arrays.asList(westernStall,starbucks,claypotRice),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                Arrays.asList(900,900,800,800,800,800,800),Arrays.asList(1800,1830,2000,2000,2000,2000,2000));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WYing333"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WYing333"
        },
        "content": "        assertEquals(0.3, new takeAwayOrder(canteen1,westernStall,Arrays.asList(fishNChip),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WYing333"
        },
        "content": "                new Customer(\"d\",11,1500,7),true).getCarrierFee());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WYing333"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WYing333"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WYing333": 90
    }
  }
]
