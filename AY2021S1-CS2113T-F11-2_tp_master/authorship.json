[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 3,
      "-": 46
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "D | 0 | assignment | 2020-11-03 23:59"
      }
    ],
    "authorContributionMap": {
      "gy716": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Geng | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhong Ningmou | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jin Yixuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhang Shenjia | [Github](https://github.com/) | [Portfolio](docs/team/shenjia.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Zhang Danrui | [Github](https://github.com/zhangcaicai123) | [Portfolio](docs/team/zhangdanrui.md)"
      }
    ],
    "authorContributionMap": {
      "gy716": 3,
      "zhangcaicai123": 1,
      "-": 4,
      "jessicazhang617": 6
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [1. Introduction](#1-Introduction1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.1 Software Overview](#11-Software-Overview1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.2 Purpose](#12-Purpose1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.3 Scope](#13-Scope1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [2. Setting up and getting started](#2-Setting-up-and-getting-started1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [3. Design](#3-Design1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [3.1 Architecture](#31-Architecture1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [3.2 Classes](#32-Classes1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.1 Ui class](#321-Ui-class1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.2 Parser class](#322-Parser-class1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.3 Module class](#323-Module-class1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.4 Task class](#324-Task-class1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.5 TimeTable class](#325-TimeTable-class1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [4. Implementation](#4-Implementation1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [5. Testing](#5-Testing1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [6. Appendix: Requirements](#6-Appendix-Requirements1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1 Product scope](#61-Product-scope1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1.1 Target user profile](#611-Target-user-profile1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1.2 Value proposition](#612-Value-proposition1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.2 User stories](#62-User-stories1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.1 Software Overview"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods is a command line (CLI) application that helps computer engineering (CEG) students to manage their modules, tasks and projects. "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods will allow students to categorize their tasks based on their modules and automatically help prioritize them by deadlines. It will also help students manage project deadlines by splitting them into mini-milestones."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "This document describes the architecture and software design of CEGMods. The goal of this document is to cover the high-level system architecture and design."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "The document is divided into three main parts: design, implementation and documantation. The design includes the architecture diagram and the introduction of each class. The implementation describes some details on how certain features are implemented. The documentation details the logging, testing and configuration of CEGMods. It also includes the requirement and the instructions for manual testing in the appendices."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.3 Scope"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "The intended audience of this document is the developers, designers, and software testers of CEGMods."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 2. Setting up and getting started"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "Setting up the project in your computer"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "\u003e \u003cfont color\u003d#FF5733\u003eCaution: \u003c/font\u003e \u003cfont color\u003d#00000\u003e\u003cfont color\u003d#00000\u003e  **Please follow each steps in the guide carefully.** \u003c/font\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### Before you start:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": "Please ensure you have Java 11 installed in you computer."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": "1. Fork this repo from this [link](https://github.com/AY2021S1-CS2113T-F11-2/tp.git)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gy716"
        },
        "content": "2. Clone the fork to your own computer. You are highly recommended to use Git tool (like Sourcetree) to track your work. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "3. Use your own IDEA to program. You are highly recommended to use IntelliJ IDEA. Please check whether you have correct JDK version (JDK 11) in your computer and congiure the JDK."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": "    If you are using IntelliJ IDEA: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Open IntelliJ"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Set up JDK 11 for Gradle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gy716"
        },
        "content": "        1. Click `Configure` -\u003e `Project Defaults` -\u003e `Project Structure`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": "        2. Click `New...` and set it to the directory of the JDK 11 installed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gy716"
        },
        "content": "4. Import the project as a Gradle project."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": "    \u003e \u003cfont color\u003d#FF5733\u003eNote: \u003c/font\u003e \u003cfont color\u003d#00000\u003e It is different from importing a normal Java project.\u003c/font\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gy716"
        },
        "content": "    If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `Import Project` (or `Open or Import` in newer version of Intellij)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Locate the `build.gradle` file (not the root folder as you would do in a normal importing) and select it. Click `OK`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `OK` to accept the default settings but do ensure that the selected version of `Gradle JVM` matches the JDK being used for the project."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Wait for importing process to complete"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gy716"
        },
        "content": "5. Do the testing. Please follow the testing guide"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gy716"
        },
        "content": "   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 3. Design "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gy716"
        },
        "content": "The ***Architecture diagram*** given below shows the major components, and explains the structure of the software system."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gy716"
        },
        "content": "[![Architecture diagram](https://iili.io/3Ei2Vf.md.png)](https://freeimage.host/i/3Ei2Vf)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.2 Classes"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gy716"
        },
        "content": "The CEGMods consists of six classes:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Main`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Ui`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Parser`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Module`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Task`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `TimeTable`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.1 Ui class"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gy716"
        },
        "content": "The Ui class reads the uses\u0027s input and response relevant messages."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.2 Parser class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Parser` class deals with making sense of the user\u0027s command and execute the command relevantly:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Module` into `Timetable`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delte `Module` from `Timetable`."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Task` into tasklist."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delete `Task` from tasklist."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gy716"
        },
        "content": "- print out `Timetable` of a certain day or one week."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gy716"
        },
        "content": "  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.3 Module class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gy716"
        },
        "content": "The Module class contains the information of a module, including the title, description, and time slots of lectures, tutorials and labs."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.4 Task class"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Task` class contains the information of a task, including the todo, event and deadline tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.5 TimeTable class"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Timetable` class shows the timetable for all the module slots and tasks. It also stores `Module` details in an arraylist and checks whether there is a time conflict between two classes."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "       "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gy716"
        },
        "content": "This section provides details on the implementations of certain features."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Feature: Add a module"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gy716"
        },
        "content": "The user type in command in `module mod/\u003cMODULE_CODE\u003e lec/\u003cLECTURE_DAY\u003e \u003cLECTURE_TIME\u003e tut/\u003cTUTORIAL_DAY\u003e \u003cTUTORIAL_TIME\u003e lab/\u003cLAB_DAY\u003e \u003cLAB_TIME\u003e` this form to add a module into the timetable. The time slot of lab is optional. The program will detect whether the user command is in this form, and store module data in arraylist `modules` in `Timetable` class after Ui passing command and calling `addModule()` in Parser class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gy716"
        },
        "content": "The ***sequence diagram*** below shows the interaction between these classes when the user adds a module."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gy716"
        },
        "content": "[![3GRaM7.md.png](https://iili.io/3GRaM7.md.png)](https://freeimage.host/i/3GRaM7)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Feature: Delete a module"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gy716"
        },
        "content": "The user enters the command: `delete m/\u003cMODULE_CODE\u003e` to delete a module in the timetable. The `Parser` class will make sense of the command and enable the `deleteModule()` method in the `TimeTable` class."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 5. Testing"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Running tests"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Types of tests"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gy716"
        },
        "content": "Running tests"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gy716"
        },
        "content": "-"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gy716"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gy716"
        },
        "content": "- **Method 1: Using IntelliJ JUnit test runner**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - To run all tests, you can click `src` -\u003e `test`, right-click on the `java` folder and choose `Run \u0027Tests in \u0027tp.test\u0027\u0027`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - To run a subset of tests, you can click `src` -\u003e `test` -\u003e `java` and right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gy716"
        },
        "content": "- **Method 2: Using Gradle**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `Terminal` to open a new console and type in the command `gradlew clean test` to run a test (Mac/Linux: ./gradlew clean test)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gy716"
        },
        "content": "Types of tests"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gy716"
        },
        "content": "-"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gy716"
        },
        "content": "This project has three types of tests: ..."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 6. Appendix: Requirements"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 6.1 Product scope"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 6.1.1 Target user profile"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gy716"
        },
        "content": "This application is intended for users who"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gy716"
        },
        "content": "- are NUS Computer Engineering Students"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have a large variety of lesson (lab, tutorial, lecture, webcast) and commitment types (CCA, external commitments)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have a certain type of homework based on standard formats (pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have various projects ongoing at the same time (individual, team, for technical modules and non-technical modules)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gy716"
        },
        "content": "- are reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 6.1.2 Value proposition "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Tasks based on:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the module: eg. CS2113T, CG2271, CS2101 (can be colour-coded according to modules)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - tasks unrelated to modules can be placed under “others”"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the deadline of the task: eg.pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - urgency: a chronological list of what is due the earliest"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the amount of time taken for the task: range of 30min-3hours"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Schedule based on:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - NUSMods schedule, ie. modules"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Webcast option, ie. can be shifted around"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Team meetings (regular scheduled and ad hoc)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Project based on:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Deadlines of subtasks (subclass of task but for projects)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Percentage of completion "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 6.2 User stories"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gy716"
        },
        "content": "| Priority level| As a/an | I want to | so that I can"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gy716"
        },
        "content": "| -------- | -------- | -------- |-------- |"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gy716"
        },
        "content": "| must-have    | new user     | add my modules |I can categorise my tasks and schedule"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have | new user|add my lecture slots|I can plan my timetable"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|new user|add tutorial slots|I can plan my timetable"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add lab slots|I can plan my timetable"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|view my timetable |I can go about my day following the planned timetable"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nict-to-have|user|view my project progress|I can manage my project "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add subtasks of project |I can divide whole project in various subtasks and record them"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|create daily or weekly to-do list |I can view all the tasks to be completed"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add deadline to tasks(assignment, tutorials)|I can know when to complete"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|prioritize tasks in to-do list by urgency level|I can plan what to do first "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|mark tasks as done or delete them|"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|add alarm to remind the upcoming event|I won\u0027t forget or miss relevant events"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|add periodic zoom links for online lectures/tutorials|I can join the zoom session quickly before the class"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|share project schedule and details with teammates|I can cooperate with my teammate better"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gy716": 144,
      "-": 29
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "CEGMods is a desktop application to manage NUS CEG\u0027s courses via a Command Line Interface (CLI). If you are an NUS CEG student and looking for an app to manage your course and project schedule, CEGMods can help you get all your tasks down in an organized manner."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## Content page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [1. Quick Start](#1-quick-start-1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [2. Features](#2-features-1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.1 Adding a Module: `add mod`](#21-adding-a-module-add-mod-1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.2 Deleting a Module: `delete mod`](#22-deleting-a-module-delete-mod-1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.3 Viewing Timetable: `timetable`](#23-viewing-timetable-timetable-1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### [2.4 Viewing Task List: `task list`](#24-viewing-to-do-list-task-list-1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.5 Adding a Task:](#25-adding-a-task-1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.5.1 Adding a Todo Task: `todo`](#251-adding-a-todo-task-todo-1) "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.5.2 Adding a Deadline Task: `deadline`](#252-adding-a-deadline-deadline)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.5.3 Adding a Event Task: `event`](#253-adding-an-event-event)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.6 Marking a Task as Done: `done`](#26-marking-a-task-as-done-done-1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.7 Deleting a Task: `delete`](#27-deleting-a-task-delete-1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.8 Adding a Project Task: `projectTask`](#28-adding-a-project-task-projecttask-1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.9 Viewing project task list: `project task list`](#29-viewing-project-task-list-project-task-list-1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.10 Viewing project progress: `project progress`](#210-viewing-project-progress-project-progress-1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.11 Exiting the Program: `exit`](#211-exiting-the-program-exit-1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.12 Viewing Help: `help`](#212-viewing-help-help-1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [3. FAQ](#3-faq-1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [4. Command Summary](#4-command-summary-1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 1. Quick Start"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. Ensure you have Java 11 installed in your Computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2. Download the jar file from (link)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your CEGmods"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "4. Open a command window. Run the java -version command to ensure you are using Java 11. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "5. Launch the jar file using the java -jar command (do not use double-clicking)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "6. Type `help` in the command box as prompted and press Enter to execute it. You will see the  commands available."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "6. Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 2. Features"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.1 Adding a Module: `add mod`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "You can add a module to the module list and timetable by typing in the module code and its time slots of lectures and tutorials (the time slot of lab is optional)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `add mod/\u003cMODULE_CODE_IN\u003e`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "**Step 1:** Type in the module code of the module you want to add following the command format. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "For example: `add mod/CG2271`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Then you will see the following: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Module code: CG2271"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Title: Real-Time Operating Systems"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Description: Real-time systems must respond quickly to inputs from the environment in order to work effectively and safely, and realtime operating systems (RTOS) are a critical part of such systems. In this course the student is exposed to basic RTOS concepts like tasks, scheduling algorithms, RTOS customisation and concurrent real-time programming. By the end of this course a student will not only understand how an RTOS is built, but will also gain practical hands-on experience in customising RTOSs and in writing real-time programs."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Please enter your time slots for lectures, tutorials, and labs for this module."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Please enter your time slots for lectures, tutorials, and labs for this module."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "The format of the time slots is: Day HH:MM-HH:MM (Eg. Thur 12:00-13:00)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "If the time slot does not exit, please enter null."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "**Step 2:** Type in the lecture slot and tutorial slot of this module, and indicate whether there is lab for this module as prompted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `day HH:MM-HH:MM`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `Thur 12:00-13:00`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "For example, if you key in the following:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lecture slot: `Wed 09:00-11:00`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Tutorial slot: `Tue 08:00-10:00`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Does this modules have lab? [Y/N]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "`Y`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lab slot: `Fri 08:00-10:00`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "You will see the following if it is successful:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Got it! I have add CG2271 to timetable."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "If you have **conflicting module timeslots**, you will see the following as per the example:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "OOPS!!! There is a time conflict."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Which module do you want to keep? Please enter the module name."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Module: CS1010"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lecture Slot: Mon 13:00-14:00"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Tutorial Slot: Fri 16:00-17:00"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lab Slot: null"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Module: CG2271"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lecture Slot: Wed 09:00-11:00"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Tutorial Slot: Tue 08:00-10:00"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Lab Slot: Fri 08:00-10:00"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Please enter the module you wish to keep, and you will see the following:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "CG2271"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Got it! I have add CG2271 to timetable."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.2 Deleting a Module: `delete mod`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will delete a module from the module list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `delete mod/\u003cMODULE_CODE\u003e`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `delete mod/CG1111`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Noted. I\u0027ve removed this module."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.3 Viewing Timetable: `timetable`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the whole timetable."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1.`today timetable`: viewing today\u0027s timetable"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2.`this week timetable`: viewing weekly timetable"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "today timetable"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-21"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "14:00-15:00 CG1111 tutorial"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "weekly timetable"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-21"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "14:00-15:00 CG1111 tutorial"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-22"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-23"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-24"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "10:00-12:00 CG1111 lecture"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-25"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-26"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2020-10-27"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "9:00-12:00 CG1111 lab"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.4 Viewing Task List: `task list`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the to-do list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `task list`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Constraint: The task list must contain at least 1 task."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Here is the list of your tasks:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1.lab report"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "..."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.5 Adding a Task"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### 2.5.1 Adding a Todo Task: `todo`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will add a task todo to the task list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `todo \u003cDESCRIPTION\u003e `"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `todo read book`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "      [T][F]read book"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### 2.5.2 Adding a Deadline: `deadline`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will add a deadline to the task list."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH-MM\u003e`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `deadline lab report /by 2020-11-26 00:00`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "      [D][F]lab report (by:2020-11-26 00:00)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### 2.5.3 Adding an Event: `event`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will add an event to the task list."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH-MM\u003e`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "`event team meeting /at 2020-09-10 10:00`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Please type the duration of the event in hours:(e.g. 1, 0.5)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "`1`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "      [E][F]party (at:2020-09-10 08:00)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.6 Marking a Task as Done: `done`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will mark a task as done."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `done \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": " \tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "\t[T][T]lab report"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.7 Deleting a Task: `delete`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will delete a task from task list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `delete \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `delete 1`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "\t   [T][T]lab report"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.8 Adding a Project Task: `projectTask`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will add a subtask of a specific project to the task list."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e`"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 ptask/write report by/Fri 23:59`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Is there any material you need for this project task?"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Enter your materials or NA"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "NA"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Module: CG2271"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "ProjectTask: write report"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "By: Fri 23:59"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Materials: NA"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "      [P][F]write report (by:Fri 23:59) material: NA"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.9 Viewing project task list: `project task list`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the project task list."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e project task list`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 project task list`"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "CG2271"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. [P][F]write report (by:Fri 23:59) material: NA"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.10 Viewing project progress: `project progress`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the progress of a specific project."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e progress`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 progress`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "CG2271"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "You have done 0/1 (0.00%)."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.11 Exiting the Program: `exit`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will exit the program."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Bye! Have a nice day with CEG!"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### 2.12 Viewing Help: `help`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view help message."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. Add a module: add mod/\u003cMODULE_CODE\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2. Delete a module: delete mod/\u003cMODULE_CODE\u003e"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "3. Add a task to do: todo \u003cDESCRIPTION\u003e"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "4. Add a deadline: deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH-MM\u003e"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "5. Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH-MM\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "6. View today\u0027s timetable: today timetable"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "7. View weekly timetable: this week timetable"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "8. Add a project subtask: mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "9. View project task list: mod/\u003cMODULE_CODE\u003e project task list"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "10. View project progress: mod/\u003cMODULE_CODE\u003e progress"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "11. View task list: task list"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "12. Delete task: delete \u003cTASK_INDEX\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "13. Mark task as done: done \u003cTASK_INDEX\u003e"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "14. Exit CEGMods: exit"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 3. FAQ"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Feature                              |Command                                               |"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "|---                                   |---                                                   |"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Adding a Module                    |`add mod/\u003cMODULE_CODE\u003e`                             |"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Deleting a Module                    |`delete m/\u003cMODULE_CODE\u003e`                             |"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Viewing Timetable                  |`today timetable`, `weekly timetable`  |"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Viewing To-Do List                   |`task list`     |"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Adding a Todo Task\t                        |`todo \u003cDESCRIPTION\u003e` "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Adding a Deadline Task\t                        |`deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH-MM`   |"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Adding an Event Task\t                        |`event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH-MM\u003e` | "
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Marking a Task as Done               |`done \u003cTASK_INDEX\u003e`                                      |"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Deleting a Task  |`delete \u003cTASK_INDEX\u003e`                                    |"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Exiting the Program                       |`exit`                                                |"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "| Viewing Help                                 |`help`                                                 |"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 3,
      "-": 21,
      "jessicazhang617": 317
    }
  },
  {
    "path": "docs/team/shenjia.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "# Zhang Shenjia - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "jessicazhang617": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String userCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    TimeTable modules;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs java file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //load tasks in data file to current task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            modules \u003d new TimeTable(storage.loadModule());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "            storage.loadJson();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.getModFromFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Some errors occurred during the process of fetching data.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Please check your Internet Connection.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (!Parser.isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "            userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            parser.parse(userCommand, tasks, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs main."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param args User input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 5,
      "gy716": 16,
      "zhangcaicai123": 14,
      "-": 12,
      "jessicazhang617": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/ModDataBase.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModDataBase {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static HashMap\u003cString, Module\u003e modules \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Convert module from Json object to local module object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module JSON object module."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void parseModule(JSONObject module) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Module mod \u003d new Module();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCode \u003d (String) module.get(\"moduleCode\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.title \u003d (String) module.get(\"title\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.description \u003d (String) module.get(\"description\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCredit \u003d (String) module.get(\"moduleCredit\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "        modules.put(mod.moduleCode, mod);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Read module from storage and retrieve information from JSON."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If unable to read data from storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse data from storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void getModFromFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Object obj \u003d parser.parse(new FileReader(\"data/AllModsInfo.json\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONArray moduleList \u003d (JSONArray) obj;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": "        moduleList.forEach(module -\u003e parseModule((JSONObject) module));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 46,
      "jessicazhang617": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String moduleCredit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String lecSlot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String tutSlot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String labSlot \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecSlot2 \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int lecDay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int tutDay;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int labDay;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int lecDay2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String lecTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String tutTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String labTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String lecTime2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecBegin;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime tutBegin;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime labBegin;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecBegin2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecEnd;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime tutEnd;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime labEnd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecEnd2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration lecDuration;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration tutDuration;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration labDuration;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration lecDuration2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    boolean isSetSlotSuccess \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Creates Module class object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Module(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds lecture, tutorial and lab slot timings to module."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setSlot() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String lecDay \u003d this.lecSlot.substring(0, this.lecSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecDay \u003d weekOfDay(lecDay);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecTime \u003d this.lecSlot.substring(this.lecSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecBegin \u003d beginTime(this.lecTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecEnd \u003d endTime(this.lecTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecDuration \u003d setInterval(this.lecBegin, this.lecEnd);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String lecDay2 \u003d this.lecSlot2.substring(0, this.lecSlot2.indexOf(\" \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecDay2 \u003d weekOfDay(lecDay2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecTime2 \u003d this.lecSlot2.substring(this.lecSlot2.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecBegin2 \u003d beginTime(this.lecTime2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecEnd2 \u003d endTime(this.lecTime2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecDuration2 \u003d setInterval(this.lecBegin2, this.lecEnd2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,lecBegin2,lecEnd2,this.lecDay,this.lecDay2)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String tutDay \u003d this.tutSlot.substring(0, this.tutSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutDay \u003d weekOfDay(tutDay);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutTime \u003d this.tutSlot.substring(this.tutSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutBegin \u003d beginTime(this.tutTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutEnd \u003d endTime(this.tutTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutDuration \u003d setInterval(this.tutBegin, this.tutEnd);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,tutBegin,tutEnd,this.lecDay,this.tutDay)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    || TimeTable.checkTimeDayConflict(lecBegin2,lecEnd2,tutBegin,tutEnd,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    this.lecDay2,this.tutDay)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (this.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String labDay \u003d this.labSlot.substring(0, this.labSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labDay \u003d weekOfDay(labDay);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labTime \u003d this.labSlot.substring(this.labSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labBegin \u003d beginTime(this.labTime);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labEnd \u003d endTime(this.labTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labDuration \u003d setInterval(this.labBegin, this.labEnd);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,labBegin,labEnd,this.lecDay,this.labDay)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        || TimeTable.checkTimeDayConflict(labBegin,labEnd,tutBegin,tutEnd,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        this.labDay,this.tutDay)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (!isSetSlotSuccess) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"OOPS!!! Cannot add \" + this.moduleCode"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        + \" because of the time conflict between slots.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"Please carefully check your module timetable and add the module again.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"OOPS!!! Cannot add \" + this.moduleCode + \".\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Please carefully follow the time format.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns lecture time, module code."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lecture text."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecText() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.lecTime + \" \" + this.moduleCode + \" lecture\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns tutorial time, module code."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of tutorial text."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String tutText() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.tutTime + \" \" + this.moduleCode + \" tutorial\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns lab time, module code."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lab text."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String labText() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.labTime + \" \" + this.moduleCode + \" lab\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns second lecture time, module code."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lecture text."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecText2() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.lecTime2 + \" \" + this.moduleCode + \" lecture\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int weekOfDay(String day) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        day \u003d day.toLowerCase();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int dayValue \u003d 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"sun\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 7;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"mon\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"tue\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 2;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"wed\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 3;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"thur\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 4;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"fri\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 5;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        case \"sat\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 6;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Sorry, the day value was not recognized. \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return dayValue;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns begin time after parsing."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param timeInterval Time interval entered by user."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return LocalTime beginTime."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalTime beginTime(String timeInterval) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return LocalTime.parse(timeInterval.substring(0, timeInterval.indexOf(\"-\")).trim());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns end time after parsing."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param timeInterval Time interval entered by user."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return LocalTime endTime."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalTime endTime(String timeInterval) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return LocalTime.parse(timeInterval.substring(timeInterval.indexOf(\"-\") + 1).trim());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns interval duration after parsing."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param begin Interval begin time."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param end Interval end time."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return Duration of interval."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Duration setInterval(LocalTime begin, LocalTime end) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return Duration.between(begin, end);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts module details to string for data saving."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return moduleToAdd."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleToAdd;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (labSlot !\u003d null) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + labSlot + \"|\" + lecSlot2;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + labSlot;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + null + \"|\" + lecSlot2;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return moduleToAdd;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 1,
      "ZhongNingmou": 33,
      "gy716": 12,
      "zhangcaicai123": 132,
      "jessicazhang617": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs parsing on user commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param userCommand User Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList  Task List."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void parse(String userCommand, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintHelpCommand \u003d userCommand.toLowerCase().contains(\"help\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isExitCommand \u003d userCommand.toLowerCase().equals(\"exit\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isAddModCommand \u003d Pattern.matches(\"^add[\\\\s]+mod/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isAddTask \u003d Pattern.matches(\"^(todo|deadline|event).*\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                userCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isAddProjectTaskCommand \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "                Pattern.matches(\"^mod/[\\\\S\\\\s]+ptask/[\\\\s\\\\S]+by/[\\\\s\\\\S]+\", userCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isDeleteModule \u003d userCommand.contains(\"delete mod/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isDeleteTask \u003d Pattern.matches(\"^delete task/\\\\d\",userCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintWeeklyTimetable \u003d userCommand.equals(\"this week timetable\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintTodayTimeTable \u003d userCommand.equals(\"today timetable\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintProjectTaskList \u003d userCommand.contains(\"project task list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintProgress \u003d userCommand.toLowerCase().contains(\"progress\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintTodayDeadline \u003d userCommand.equals(\"today deadline\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintWeeklyDeadline \u003d userCommand.equals(\"this week deadline\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintTaskList \u003d userCommand.equals(\"task list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isMarkAsDone \u003d Pattern.matches(\"^done task/\\\\d\", userCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isFind \u003d Pattern.matches(\"^find.*\", userCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (isPrintHelpCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printHelpMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isExitCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printByeMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddModCommand) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.addModule(userCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isDeleteModule) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.deleteModule(userCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyTimetable) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Command.printWeeklyTimetable(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayTimeTable) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Command.printTodayTimetable(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isDeleteTask) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.deleteTask(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isAddTask) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                String type \u003d Command.getTaskType(userCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addToDo(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addDeadline(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addEvent(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddProjectTaskCommand) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.addProjectTask(userCommand, taskList, storage);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProjectTaskList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printProjectTaskList(userCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProgress) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printProgress(userCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayDeadline) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printTodayDeadline(taskList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyDeadline) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printWeeklyDeadline(taskList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isMarkAsDone) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.done(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isFind) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.find(taskList, userCommand);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTaskList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (DukeException | ParseException | IOException | org.json.simple.parser.ParseException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Ui.dealWithException(userCommand);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 6,
      "ZhongNingmou": 47,
      "gy716": 45,
      "zhangcaicai123": 36,
      "jessicazhang617": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/TimeTable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class TimeTable {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public TimeTable() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs Timetable class object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param loadedList  Loaded timetable arraylist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public TimeTable(ArrayList\u003cModule\u003e loadedList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.modules \u003d loadedList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints module\u0027s code, lecture, tutorial and lab (if applicable) details."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module  Module selected."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModule(Module module) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "        System.out.println(\"Module: \" + module.moduleCode);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lecture Slot: \" + module.lecSlot);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Tutorial Slot: \" + module.tutSlot);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lab Slot: \" + module.labSlot);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static boolean isModuleAdded(String moduleCode) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        for (int i \u003d 0;i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (modules.get(i).moduleCode.equals(moduleCode)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModuleDetails(String moduleCode) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Module code: \" + ModDataBase.modules.get(moduleCode).moduleCode);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Title: \" + ModDataBase.modules.get(moduleCode).title);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Description: \" + ModDataBase.modules.get(moduleCode).description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printAddTaskInformation() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Is there any task you want to add for this module? Y/N\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String isHaveTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        while (!isHaveTask.equalsIgnoreCase(\"Y\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                \u0026\u0026 !isHaveTask.equalsIgnoreCase(\"N\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Is there any task you want to add for this module? Y/N\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            isHaveTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (isHaveTask.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Please enter T for todo, D for deadline, E for event, \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"P for project subtask.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String taskType \u003d in.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (taskType.equalsIgnoreCase(\"T\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add a task to do: todo \u003cDESCRIPTION\u003e\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add a deadline: deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH-MM\u003e\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"E\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH-MM\u003e\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"P\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add a project subtask: mod/\u003cMODULE_CODE\u003e \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        + \"ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addModuleToStorage(Module module) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleToAdd;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        moduleToAdd \u003d module.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Storage.appendToFileModule(moduleToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Creates and adds module to data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command Command of user input."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If there is no matching module."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */      "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addModule(String command) throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "        String moduleCode \u003d command.substring(command.indexOf(\"/\") + 1).toUpperCase();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isModuleAdded \u003d isModuleAdded(moduleCode);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (!isModuleAdded) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            boolean isModuleExit \u003d ModDataBase.modules.containsKey(moduleCode);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Module module \u003d new Module();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (isModuleExit) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    printModuleDetails(moduleCode);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module \u003d ModDataBase.modules.get(moduleCode);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.println(\"Please enter your time slots for lectures, tutorials, \""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            + \"and labs for this module.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    System.out.println(\"The format of the time slots is: Day HH:MM-HH:MM (Eg. Thur 12:00-13:00)\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.println(\"If the time slot does not exit, please enter null.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.print(\"Lecture slot: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module.lecSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Does this module have another lecture slot?[Y/N]\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String isHaveAnotherLec \u003d in.nextLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (isHaveAnotherLec.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.print(\"Another lecture slot: \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecSlot2 \u003d in.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.print(\"Tutorial slot: \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module.tutSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Does this module have lab?[Y/N]\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String isHaveLab \u003d in.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    if (isHaveLab.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.print(\"Lab slot: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.labSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    module.setSlot();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (module.isSetSlotSuccess) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gy716"
        },
        "content": "                        int moduleIndex \u003d checkInsertion(module);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gy716"
        },
        "content": "                        if (moduleIndex !\u003d -1) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            checkModule(module, moduleIndex);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            modules.add(module);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            addModuleToStorage(module);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            System.out.println(\"Noted! I have added this module.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            printAddTaskInformation();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    throw new NoSuchElementException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gy716"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"There is no such module.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"You have already add this module.\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"Please enter another module code.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns the index of the module added."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns -1 if there is a conflict in the module with another module in timetable."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module Newly added module."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return i index of module, unless there is a conflict, then -1."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static int checkInsertion(Module module) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (modules.size() \u003e 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            for (i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).lecBegin, modules.get(i).lecEnd,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecDay,modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).tutBegin, modules.get(i).tutEnd,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecDay,modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).lecBegin, modules.get(i).lecEnd,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.tutDay,modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).tutBegin, modules.get(i).tutEnd,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.tutDay,modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin, modules.get(i).lecEnd,module.labDay,modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).tutBegin, modules.get(i).tutEnd,module.labDay,modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).labSlot !\u003d null) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd,module.lecDay,modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd,module.tutDay,modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).labSlot !\u003d null \u0026\u0026 module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd,module.labDay,modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin2, modules.get(i).lecEnd2,module.lecDay,modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin2, modules.get(i).lecEnd2,module.tutDay,modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin2, modules.get(i).lecEnd2,module.labDay,modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                modules.get(i).lecBegin2, modules.get(i).lecEnd2,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                module.lecDay2,modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin, modules.get(i).lecEnd,module.lecDay2,modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).tutBegin, modules.get(i).tutEnd,module.lecDay2,modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                modules.get(i).labBegin, modules.get(i).labEnd,module.lecDay2,modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds the chosen module should there be a conflict."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module Module."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param moduleIndex Index of module."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If invalid input."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void checkModule(Module module, int moduleIndex) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"OOPS!!! There is a time conflict.\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Which module do you want to keep? Please enter the module name.\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        printModule(modules.get(moduleIndex));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        printModule(module);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (userCommand.equals(module.moduleCode)) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            modules.set(moduleIndex, module);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Storage.updateModuleToFile(modules);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Got it! I have add \" + userCommand + \" to timetable.\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Deletes a module."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints statement of error if there is invalid module input."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModule(String command) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String modCode \u003d command.substring(command.indexOf(\u0027/\u0027) + 1).toUpperCase();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (modules.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                throw new NoSuchElementException();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                for (int i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (modules.get(i).moduleCode.contains(modCode)) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        modules.remove(i);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        Storage.updateModuleToFile(modules);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this module\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (i \u003d\u003d modules.size() - 1) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        throw new NoSuchElementException();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"OOPS!!! There is no such module.\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches timetable."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse taskList content."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyTimetable(todayMonth, todayDay, todayYear, taskList);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints daily timetable."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param month  Month."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param day Day."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param year Year"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse input."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyTimetable(int month, int day, int year, TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%02d-%02d\", year, month, day);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(date);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d todayList(date, taskList);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String event : todayList) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches today\u0027s deadlines."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyDeadline(todayMonth, todayDay, todayYear, taskList);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints today\u0027s deadlines."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param day Day."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param month Month."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param year Year."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyDeadline(int month, int day, int year, TaskList taskList) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%02d-%02d\", year, month, day);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"Today\u0027s Deadline (haven\u0027t done):\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e deadlineList \u003d todayDeadline(date, taskList);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String ddl : deadlineList) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(ddl);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches this week\u0027s deadlines."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list of deadlines."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyDeadline(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR), taskList);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints this week\u0027s timetable."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException  If unable to parse input."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyTimetable(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR), taskList);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns arraylist of today\u0027s events."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return todayList Today\u0027s events."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException  If unable to parse input."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayList(String date, TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.parse(date, dtf);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int weekDay \u003d todayDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (module.lecDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.lecText());"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.tutDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.tutText());"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.labDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.labText());"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.lecDay2 \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.lecText2());"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (event.getStatusIcon().equals(\"F\") \u0026\u0026 event.beginTime.toLocalDate().equals(todayDate)) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    todayList.add(event.calendarFormat());"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Collections.sort(todayList);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayList;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns arraylist of today\u0027s deadlines."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param date Date of deadlines."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return todayDeadline Today\u0027s deadlines."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayDeadline(String date, TaskList taskList) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayDeadline \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //deadline task"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.text().startsWith(\"D\") \u0026\u0026 task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (date.equals(\"date\")) {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    todayDeadline.add(task.text());"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayDeadline;"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns existing event if there is an conflict."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * If there is no conflict, null is returned."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param insertEvent New event."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list of current events."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return existEvent current event, if existing."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static Event checkEventConflict(Event insertEvent, TaskList taskList) {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Event existEvent \u003d (Event) task;"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (existEvent.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkDateTimeConflict(existEvent.beginTime, existEvent.endTime,"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.beginTime, insertEvent.endTime)) {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return existEvent;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is datetime conflict."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of event A."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of event B."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA End of event A."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB End of event B."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkDateTimeConflict(LocalDateTime beginA, LocalDateTime endA,"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                                LocalDateTime beginB, LocalDateTime endB) {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (beginA.isAfter(beginB) \u0026\u0026 beginA.isBefore(endB)) {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginB.isAfter(beginA) \u0026\u0026 beginB.isBefore(endA)) {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginA.isEqual(beginB)) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is time conflict."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of todo A."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of todo B."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA End of todo A."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB End of todo B."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkTimeConflict(LocalTime beginA, LocalTime endA, LocalTime beginB, LocalTime endB) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (beginA.isAfter(beginB) \u0026\u0026 beginA.isBefore(endB)) {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginB.isAfter(beginA) \u0026\u0026 beginB.isBefore(endA)) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginA.equals(beginB)) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is module with event conflict."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param insertEvent newEvent."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkEventModuleConflict(Event insertEvent) {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int weekday \u003d insertEvent.beginTime.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (weekday \u003d\u003d module.lecDay) {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        insertEvent.endTime.toLocalTime(), module.lecBegin, module.lecEnd)) {"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (weekday \u003d\u003d module.tutDay) {"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        insertEvent.endTime.toLocalTime(), module.tutBegin, module.tutEnd)) {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (weekday \u003d\u003d module.labDay) {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.endTime.toLocalTime(), module.labBegin, module.labEnd)) {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (weekday \u003d\u003d module.lecDay2) {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.endTime.toLocalTime(), module.lecBegin2, module.lecEnd2)) {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is time-day conflict."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of event A."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of event B."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA End of event A."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB End of event B."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkTimeDayConflict(LocalTime beginA, LocalTime endA,"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                               LocalTime beginB, LocalTime endB,"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                               int weekDayA, int weekDayB) {"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (weekDayA \u003d\u003d weekDayB) {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return checkTimeConflict(beginA,endA,beginB,endB);"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 183,
      "gy716": 8,
      "zhangcaicai123": 292,
      "jessicazhang617": 134
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints the logo of CEGMods and prompts for command \u0027help\u0027."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            \" ██████╗███████╗ ██████╗ ███╗   ███╗ ██████╗ ██████╗ ███████╗\\n\" "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            + \"██╔════╝██╔════╝██╔════╝ ████╗ ████║██╔═══██╗██╔══██╗██╔════╝\\n\" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            + \"██║     █████╗  ██║  ███╗██╔████╔██║██║   ██║██║  ██║███████╗\\n\" "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            + \"██║     ██╔══╝  ██║   ██║██║╚██╔╝██║██║   ██║██║  ██║╚════██║\\n\" "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            + \"╚██████╗███████╗╚██████╔╝██║ ╚═╝ ██║╚██████╔╝██████╔╝███████║\\n\" "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            + \" ╚═════╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝ ╚═════╝ ╚═════╝ ╚══════╝\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Hello, this is CEGMods! What can I do for you?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"Enter \u0027help\u0027 to get more information.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints content of help message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"1. Add a module: add mod/\u003cMODULE_CODE\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"2. Delete a module: delete mod/\u003cMODULE_CODE\u003e\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"3. Add a task to do: todo \u003cDESCRIPTION\u003e\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"4. Add a deadline: deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH-MM\u003e\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"5. Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH-MM\u003e\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"6. View today\u0027s timetable: today timetable\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"7. View weekly timetable: this week timetable\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"8. Add a project subtask: mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"9. View project task list: mod/\u003cMODULE_CODE\u003e project task list\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"10. View project progress: mod/\u003cMODULE_CODE\u003e progress\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                + \"11. View task list: task list\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"12. Mark a task as done: done task/\u003cTASK_INDEX\u003e\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"13. Delete task: delete \u003cTASK_INDEX\u003e\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"14. Mark task as done: done \u003cTASK_INDEX\u003e\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"15. Exit CEGMods: exit\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints content of bye message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Bye! Have a nice day with CEG!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints error message if delete index is out of bound."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * If it is not a delete exception, prints standard error message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command  Command input by user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void dealWithException(String command) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The delete index is out of bound.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println((\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    + \"Please follow the input format correctly.\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints statement that there is file loading error."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\tThere are some errors when loading file.%n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Print affirmative statement of task being marked done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param task Task that is marked done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printMarkMessage(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\" \\tNice! I\u0027ve marked this task as done:%n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"\\t  \" + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 17,
      "ZhongNingmou": 32,
      "zhangcaicai123": 17,
      "jessicazhang617": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.TimeTable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyFindException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.project.ProjectManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "import java.lang.IndexOutOfBoundsException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "import java.lang.NullPointerException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "import java.lang.NumberFormatException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void addModule(String userCommand) throws IOException, org.json.simple.parser.ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.addModule(userCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printHelpMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printByeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModule(String userCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.deleteModule(userCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        TimeTable.printWeeklyTimetable(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        TimeTable.printTodayTimetable(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Add todo task to the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addToDo(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Todo taskToAdd \u003d new Todo(getTodo(command));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (NumberFormatException | NullPointerException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            //ExceptionMessage.printEmptyDescriptionExceptionMessage(\"todo\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! The description of a todo cannot be empty.%n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Add deadline task to the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addDeadline(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String by \u003d getTime(command);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Deadline taskToAdd \u003d new Deadline(getTask(command));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskToAdd.setBy(by);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Add event to the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addEvent(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String at \u003d getTime(command);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Please type the duration of the event in hours:(e.g. 1, 0.5)\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            long duration \u003d Long.parseLong(in.nextLine());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Event taskToAdd \u003d new Event(getTask(command));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToAdd.setAt(at);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToAdd.setDuration(duration);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Event conflictEvent \u003d TimeTable.checkEventConflict(taskToAdd, taskList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (conflictEvent \u003d\u003d null \u0026\u0026 !TimeTable.checkEventModuleConflict(taskToAdd)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                taskToAdd.setAt(at);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (conflictEvent !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                while (conflictEvent !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Oops!There is a time conflict with your previous event.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Which one do you want to keep?\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Type 1 for \" + conflictEvent.getDescription()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            + \" 2 for \" + taskToAdd.getDescription());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    int index \u003d in.nextInt();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Do you want to re-allocate the other one?[Y/N]\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String isChange \u003d in.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (isChange.equals(\"Y\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        System.out.println(\"Please enter a new time for this event:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        String time \u003d in.next();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            taskToAdd.setAt(time);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            conflictEvent.setAt(time);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (index \u003d\u003d 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            taskList.deleteTask(taskList.getTaskList().indexOf(conflictEvent));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            storage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            taskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    conflictEvent \u003d TimeTable.checkEventConflict(taskToAdd, taskList);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                //conflict with module"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                while (TimeTable.checkEventModuleConflict(taskToAdd)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Oops!There is a time conflict with your module.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Please enter a new time for your event :\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String newAt \u003d in.nextLine();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    taskToAdd.setAt(newAt);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyIndexException if no index is input"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void done(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d getIndex(command) - 1;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Task taskToMark \u003d taskList.get(index);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskToMark.markAsDone();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Ui.printMarkMessage(taskToMark);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.updateDoneToFile(index, taskList);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Delete task from task list."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteTask(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d getIndex(command) - 1;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get the description of todo task."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return the description of user\u0027s input todo task"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static String getTodo(String command) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String todoPattern \u003d \"^todo (.*)\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(todoPattern);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return m.group(1).trim();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get the task description for deadline and event."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return the task description of user\u0027s input deadline or event"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getTask(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String pattern \u003d \"(event|deadline)( .* )(/at|/by)( .*)\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (Pattern.matches(\"event|deadline *\", command)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return m.group(2).trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Returns the time for event or deadline."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Accept dates in yyyy-mm-dd format (e.g., 2019-10-15)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * and print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return time for event or deadline task"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyTimeException If no String for time information is found"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getTime(String command) throws EmptyTimeException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(event|deadline)( .* )(/at|/by)( \\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d \\\\d\\\\d:\\\\d\\\\d)\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //yyyy-mm-dd HH:MM format"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (m.find()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            time \u003d m.group(4).trim();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyTimeException();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addProjectTask(String command, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectTask projectTask \u003d ProjectManager.addProjectTask(command);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (projectTask !\u003d null) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                taskList.addTask(projectTask);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                storage.appendToFile(projectTask.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProjectTaskList(String userCommand) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectManager.printProjectTaskList(userCommand);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProgress(String userCommand) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectManager.printProgress(userCommand);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printTodayDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.printTodayDeadline(taskList);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printWeeklyDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.printWeeklyDeadline(taskList);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Find task in the task list with keyword."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyFindException if no keyword is input"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void find(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String keyword \u003d getFind(command);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.printSearchResult(keyword);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (EmptyFindException e) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ExceptionMessage.printEmptyKeywordMessage();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get the keyword of finding task command."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return the keyword that user wants to search in the task list"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyFindException If no keyword is found"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getFind(String command) throws EmptyFindException {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String pattern \u003d \"find *\";"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (Pattern.matches(pattern, command)) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            return command.substring(command.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get index of task that need to be deleted or mark as done."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return index the index of task that user wants to delete or mark as done"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyIndexException If user does not input any integer"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static int getIndex(String command) throws EmptyIndexException {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(done|delete)( task/)(\\\\d+)\";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (Pattern.matches(\"done|delete task/ *\", command)) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyIndexException();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            index \u003d Integer.parseInt(m.group(3));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getTaskType(String command) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String pattern \u003d \"^(todo|deadline|event).*\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return m.group(1);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 11,
      "ZhongNingmou": 279,
      "gy716": 1,
      "zhangcaicai123": 64,
      "jessicazhang617": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 3,
      "zhangcaicai123": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyDescriptionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyFindException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyFindException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyIndexException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ExceptionMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class ExceptionMessage extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyDescriptionExceptionMessage(String option) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! The description of a %s cannot be empty.%n\", option);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyTimeExceptionMessage(String option) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You haven\u0027t set a time for the %s.%n\", option);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyIndexExceptionMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You did not type the index of the task.%n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyKeywordMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You did not type the keyword.%n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/ProjectManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.TimeTable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final ArrayList\u003cProjectTask\u003e projectTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds project task to project tasks arraylist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ProjectTask addProjectTask(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"ptask/\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d command.substring(command.indexOf(\"ptask/\"), command.indexOf(\"by/\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d description.substring(6).trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        by \u003d command.substring(command.indexOf(\"by/\")).substring(3).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isModuleAdded \u003d TimeTable.isModuleAdded(modName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isAddModule \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (!isModuleAdded) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Are you sure you want to add this project subtask?\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"It seems that you did not add this module. Y/N\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String isAdd \u003d in.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (isAdd.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                isAddModule \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            isAddModule \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (isAddModule) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Is there any material you need for this project task?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Enter your materials or NA\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String material \u003d in.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ProjectTask projectTask \u003d new ProjectTask(modName, description, by, material);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Module: \" + projectTask.getModName());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"ProjectTask: \" + projectTask.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"By: \" + projectTask.getBy());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Materials: \" + projectTask.getMaterial());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            projectTasks.add(projectTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return projectTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProjectTaskList(String command) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"project\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(modName + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        for (int i \u003d 0; i \u003c projectTasks.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (projectTasks.get(i).getModName().equals(modName)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(i + 1 + \". \" + projectTasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints progress of project."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProgress(String command) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numDone \u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numTotal \u003d 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\" \"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(modName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (ProjectTask projectTask : projectTasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (projectTask.getModName().equals(modName)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                numTotal++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (projectTask.getStatusIcon().equals(\"T\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    numDone++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (numTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"WELL DONE! 100% progress!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            float progress \u003d (float) numDone / numTotal * 100;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"You have done \" + numDone + \"/\" + numTotal"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", progress) + \"%).\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 87,
      "zhangcaicai123": 13,
      "jessicazhang617": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String directory \u003d projectRoot + \"/data\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String filePathOfTask \u003d directory + \"/duke.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String filePathOfModule \u003d directory + \"/module.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "    private static final String filePathOfJson \u003d directory + \"/AllModsInfo.json\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create directory if the directory does not exist."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName directory path name"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return true if the directory exist or have been successfully created"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *         false if fail to create the directory"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static boolean createDirectory(String directoryName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean result;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File dir \u003d new File(directoryName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d dir.mkdirs();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create the data file to store task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param pathName      the absolute path name of data file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName the directory path name"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void createFile(String pathName, String directoryName) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean mkdirs \u003d createDirectory(directoryName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (mkdirs) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            File f \u003d new File(pathName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Load data file to current task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTask() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File loadFile \u003d new File(this.filePathOfTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!loadFile.exists()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            createFile(this.filePathOfTask, directory);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Scanner file \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                assert file !\u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (!file.hasNext()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String text \u003d file.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Task taskToLoad \u003d parserTask(text);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                loadList.add(taskToLoad);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Task list has been loaded successfully.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Transfer the line in data file into task to load."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param text each line of the data file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task need to load"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private Task parserTask(String text) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Task taskToLoad \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String[] texts \u003d text.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String description \u003d texts[2];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String status \u003d texts[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (text.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Todo"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Todo(description);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Deadline"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Deadline(description);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Deadline) taskToLoad).setBy(time);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Event"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Event(description);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Event) taskToLoad).setAt(time);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"P\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Project task"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String material \u003d texts[5];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            modName \u003d texts[3];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[4];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new ProjectTask(modName, description, time, material);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad.markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskToLoad;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Update done status for the task in file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index    the index of task in the list that needs to be marked as done"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list contains all tasks"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void updateDoneToFile(int index, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File f \u003d new File(this.filePathOfTask);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                //update done status"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.println(taskList.get(index).text());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.flush();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete the task from data file."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task in the list that needs to be deleted"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void deleteTaskFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File f \u003d new File(this.filePathOfTask);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new line to the end of data file."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePathOfTask, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Load data file to current module list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a module"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ArrayList\u003cModule\u003e loadModule() throws DukeException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File loadFile \u003d new File(this.filePathOfModule);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ArrayList\u003cModule\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (!loadFile.exists()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            createFile(this.filePathOfModule, directory);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Scanner file \u003d null;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                assert file !\u003d null;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (!file.hasNext()) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                String text \u003d file.nextLine();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Module moduleToLoad \u003d parserModule(text);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                loadList.add(moduleToLoad);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Module list has been loaded successfully.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Transfer the line in data file into task to load."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param text each line of the data file"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return module need to load"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private Module parserModule(String text) throws DukeException {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Module module \u003d new Module();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        //split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String[] texts \u003d text.split(\"\\\\|\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (texts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else if (texts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.labSlot \u003d texts[3];"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (texts.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (!texts[3].equals(\"null\")) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                module.labSlot \u003d texts[3];"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                module.labSlot \u003d null;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.lecSlot2 \u003d texts[4];"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        module.setSlot();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Delete the module from data file."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param index the index of module in the list that needs to be deleted"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModuleFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File f \u003d new File(filePathOfModule);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Update module to file."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param modules contains the details of modules"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void updateModuleToFile(ArrayList\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            File f \u003d new File(filePathOfModule);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePathOfModule);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            for (Module module : modules) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (module !\u003d null) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    fw.write(module.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong with IO stream.\\n\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Add new line to the end of data file."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void appendToFileModule(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePathOfModule, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void loadJson() throws IOException {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "gy716"
        },
        "content": "        File f \u003d new File(filePathOfJson);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Loading information....please wait.\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gy716"
        },
        "content": "            createFile(filePathOfJson, directory);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "gy716"
        },
        "content": "            URL url \u003d new URL(\"https://api.nusmods.com/v2/2019-2020/moduleInfo.json\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gy716"
        },
        "content": "            HttpURLConnection conn \u003d (HttpURLConnection)url.openConnection();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "gy716"
        },
        "content": "            conn.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "gy716"
        },
        "content": "            conn.connect();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "gy716"
        },
        "content": "            InputStream in \u003d url.openStream();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "gy716"
        },
        "content": "            Files.copy(in, f.toPath(), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Module information has been loaded successfully\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 134,
      "gy716": 25,
      "zhangcaicai123": 208
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs deadline object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Assigns deadline of object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts deadline to string for printing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts deadline to string for storing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"D \" + super.text() + \" | \" + by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 13,
      "zhangcaicai123": 12,
      "jessicazhang617": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalDateTime beginTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalDateTime endTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    protected long duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs Event object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Assigns duration of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param duration Duration of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setDuration(long duration) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.endTime \u003d this.beginTime.plusHours(duration);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns time of event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Formats time of event by standard format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param at Time of event in string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.beginTime \u003d LocalDateTime.parse(at, dtf);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts event to string for printing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"E \" + super.text() + \" | \" + at + \"-\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                + endTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Formats event to fit calendar."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String calendarFormat() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return beginTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                + \"-\" + endTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                + \" \" + this.description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 13,
      "zhangcaicai123": 37,
      "jessicazhang617": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ProjectTask.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String material;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    protected String modName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs ProjectTask class object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param mod Module of project."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of project task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param material Material of project."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ProjectTask(String mod, String description, String by, String material) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.material \u003d material;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.modName \u003d mod;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns module name."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return modName string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getModName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.modName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns deadline of project."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return by string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns material of project."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return material string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getMaterial() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.material;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[P]\" + super.toString() + \" (by:\" + by + \") \" + \"material: \" + material;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"P \" + super.text() + \" | \" + modName + \" | \" + by + \" | \" + material;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 16,
      "zhangcaicai123": 24,
      "jessicazhang617": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns status icons of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return (isDone ? \"T\" : \"F\"); //return tick or X symbols"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return \"| 1 | \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return \"| 0 | \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 9,
      "ZhongNingmou": 7,
      "zhangcaicai123": 17,
      "jessicazhang617": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs ToDo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of ToDo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts ToDo task to string for printing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts ToDo task to string for storing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"T \" + super.text();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 1,
      "zhangcaicai123": 18,
      "jessicazhang617": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasklist/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs TaskList object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Assign the loaded list to this task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param loadedList the task list loaded from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList \u003d loadedList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns taskList arraylist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return taskList arraylist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskToAdd the task that needs to be added to the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printAddMessage(taskToAdd);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printNumOfTasksInList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete task from the task list with index of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskIndex the index of task which needs to be deleted"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDeleteMessage(taskIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the task with index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void showLine() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns size of taskList arraylist."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return size of taskList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the whole list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"      \" + (taskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of adding new task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param task task needs to add"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"      \" + task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the number of tasks in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printNumOfTasksInList() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     You don\u0027t have any task in your list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of deleting a task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task that needs to be deleted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printDeleteMessage(int index) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\tNoted. I\u0027ve removed this task:%n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t   %s%n\", this.taskList.get(index));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Find all the tasks which contain the keyword."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the list of tasks which contain the keyword"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                findList.add(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the list of searching keyword in task list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printSearchResult(String keyword) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d find(keyword);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (results.size() \u003e 0) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tHere are the matching tasks in your list:%n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : results) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"\\t\" + (results.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any matching task in your list.%n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 1,
      "zhangcaicai123": 152,
      "jessicazhang617": 16
    }
  },
  {
    "path": "src/test/java/seedu/duke/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testText() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/TimeTableTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import static junit.framework.Assert.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import static junit.framework.Assert.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class TimeTableTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testTodayList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void isModuleAdded() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleCode \u003d \"CS2113\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        assertEquals(TimeTable.isModuleAdded(moduleCode),false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void addModule_noSuchModule_exceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String command \u003d \"add mod/CS2114\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            table.addModule(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException | IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            assertEquals(\"_______________________________________________________\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"There is no such module.\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"_______________________________________________________\", e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void deleteModule() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String command \u003d \"delete mod/CS2113\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            table.deleteModule(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            assertEquals(\"_______________________________________________________\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"OOPS!!! There is no such module.\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"_______________________________________________________\", e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 39,
      "gy716": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "module mod/CG1111 lec/Fri 10:00-12:00 tut/Tue 14:00-15:00 lab/Mon 9:00-12:00"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 1
    }
  }
]
