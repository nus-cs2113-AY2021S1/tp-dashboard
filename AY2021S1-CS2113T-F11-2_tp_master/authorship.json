[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 3,
      "-": 46
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "T | 0 | lab report"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": "D | 0 | assignment | Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "D | 0 | assignment | hahaha"
      }
    ],
    "authorContributionMap": {
      "gy716": 3
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Geng | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhong Ningmou | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jin Yixuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhang Shenjia | [Github](https://github.com/) | [Portfolio](docs/team/shenjia.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Zhang Danrui | [Github](https://github.com/zhangcaicai123) | [Portfolio](docs/team/zhangdanrui.md)"
      }
    ],
    "authorContributionMap": {
      "gy716": 3,
      "zhangcaicai123": 1,
      "-": 4,
      "jessicazhang617": 6
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [1. Introduction](#1-Introduction1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.1 Software Overview](#11-Software-Overview1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.2 Purpose](#12-Purpose1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [1.3 Scope](#13-Scope1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [2. Setting up and getting started](#2-Setting-up-and-getting-started1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [3. Design](#3-Design1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [3.1 Architecture](#31-Architecture1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [3.2 Classes](#32-Classes1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.1 Ui class](#321-Ui-class1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.2 Parser class](#322-Parser-class1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.3 Module class](#323-Module-class1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.4 Task class](#324-Task-class1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "##### [3.2.5 TimeTable class](#325-TimeTable-class1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [4. Implementation](#4-Implementation1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [5. Testing](#5-Testing1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "### [6. Appendix: Requirements](#6-Appendix-Requirements1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1 Product scope](#61-Product-scope1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1.1 Target user profile](#611-Target-user-profile1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.1.2 Value proposition](#612-Value-proposition1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### [6.2 User stories](#62-User-stories1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.1 Software Overview"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods is a command line (CLI) application that helps computer engineering (CEG) students to manage their modules, tasks and projects. "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods will allow students to categorize their tasks based on their modules and automatically help prioritize them by deadlines. It will also help students manage project deadlines by splitting them into mini-milestones."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "This document describes the architecture and software design of CEGMods. The goal of this document is to cover the high-level system architecture and design."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "The document is divided into three main parts: design, implementation and documantation. The design includes the architecture diagram and the introduction of each class. The implementation describes some details on how certain features are implemented. The documentation details the logging, testing and configuration of CEGMods. It also includes the requirement and the instructions for manual testing in the appendices."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.3 Scope"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "The intended audience of this document is the developers, designers, and software testers of CEGMods."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 2. Setting up and getting started"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "Setting up the project in your computer"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "\u003e \u003cfont color\u003d#FF5733\u003eCaution: \u003c/font\u003e \u003cfont color\u003d#00000\u003e\u003cfont color\u003d#00000\u003e  **Please follow each steps in the guide carefully.** \u003c/font\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### Before you start:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": "Please ensure you have Java 11 installed in you computer."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": "1. Fork this repo from this [link](https://github.com/AY2021S1-CS2113T-F11-2/tp.git)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gy716"
        },
        "content": "2. Clone the fork to your own computer. You are highly recommended to use Git tool (like Sourcetree) to track your work. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "3. Use your own IDEA to program. You are highly recommended to use IntelliJ IDEA. Please check whether you have correct JDK version (JDK 11) in your computer and congiure the JDK."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": "    If you are using IntelliJ IDEA: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Open IntelliJ"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Set up JDK 11 for Gradle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gy716"
        },
        "content": "        1. Click `Configure` -\u003e `Project Defaults` -\u003e `Project Structure`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": "        2. Click `New...` and set it to the directory of the JDK 11 installed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gy716"
        },
        "content": "4. Import the project as a Gradle project."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": "    \u003e \u003cfont color\u003d#FF5733\u003eNote: \u003c/font\u003e \u003cfont color\u003d#00000\u003e It is different from importing a normal Java project.\u003c/font\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gy716"
        },
        "content": "    If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `Import Project` (or `Open or Import` in newer version of Intellij)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Locate the `build.gradle` file (not the root folder as you would do in a normal importing) and select it. Click `OK`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `OK` to accept the default settings but do ensure that the selected version of `Gradle JVM` matches the JDK being used for the project."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Wait for importing process to complete"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gy716"
        },
        "content": "5. Do the testing. Please follow the testing guide"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gy716"
        },
        "content": "   "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 3. Design "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gy716"
        },
        "content": "The ***Architecture diagram*** given below shows the major components, and explains the structure of the software system."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gy716"
        },
        "content": "[![Architecture diagram](https://iili.io/3Ei2Vf.md.png)](https://freeimage.host/i/3Ei2Vf)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.2 Classes"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gy716"
        },
        "content": "The CEGMods consists of six classes:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Main`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Ui`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Parser`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Module`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Task`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `TimeTable`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.1 Ui class"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gy716"
        },
        "content": "The Ui class reads the uses\u0027s input and response relevant messages."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.2 Parser class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Parser` class deals with making sense of the user\u0027s command and execute the command relevantly:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Module` into `Timetable`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delte `Module` from `Timetable`."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Task` into tasklist."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delete `Task` from tasklist."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gy716"
        },
        "content": "- print out `Timetable` of a certain day or one week."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gy716"
        },
        "content": "  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.3 Module class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gy716"
        },
        "content": "The Module class contains the information of a module, including the title, description, and time slots of lectures, tutorials and labs."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.4 Task class"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Task` class contains the information of a task, including the todo, event and deadline tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.5 TimeTable class"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Timetable` class shows the timetable for all the module slots and tasks. It also stores `Module` details in an arraylist and checks whether there is a time conflict between two classes."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "       "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gy716"
        },
        "content": "This section provides details on the implementations of certain features."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Feature: Add a module"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gy716"
        },
        "content": "The user type in command in `module mod/\u003cMODULE_CODE\u003e lec/\u003cLECTURE_DAY\u003e \u003cLECTURE_TIME\u003e tut/\u003cTUTORIAL_DAY\u003e \u003cTUTORIAL_TIME\u003e lab/\u003cLAB_DAY\u003e \u003cLAB_TIME\u003e` this form to add a module into the timetable. The time slot of lab is optional. The program will detect whether the user command is in this form, and store module data in arraylist `modules` in `Timetable` class after Ui passing command and calling `addModule()` in Parser class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gy716"
        },
        "content": "The ***sequence diagram*** below shows the interaction between these classes when the user adds a module."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gy716"
        },
        "content": "[![3GRaM7.md.png](https://iili.io/3GRaM7.md.png)](https://freeimage.host/i/3GRaM7)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Feature: Delete a module"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gy716"
        },
        "content": "The user enters the command: `delete m/\u003cMODULE_CODE\u003e` to delete a module in the timetable. The `Parser` class will make sense of the command and enable the `deleteModule()` method in the `TimeTable` class."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 5. Testing"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Running tests"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Types of tests"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gy716"
        },
        "content": "Running tests"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gy716"
        },
        "content": "-"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gy716"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gy716"
        },
        "content": "- **Method 1: Using IntelliJ JUnit test runner**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - To run all tests, you can click `src` -\u003e `test`, right-click on the `java` folder and choose `Run \u0027Tests in \u0027tp.test\u0027\u0027`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - To run a subset of tests, you can click `src` -\u003e `test` -\u003e `java` and right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gy716"
        },
        "content": "- **Method 2: Using Gradle**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Click `Terminal` to open a new console and type in the command `gradlew clean test` to run a test (Mac/Linux: ./gradlew clean test)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gy716"
        },
        "content": "Types of tests"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gy716"
        },
        "content": "-"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gy716"
        },
        "content": "This project has three types of tests: ..."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 6. Appendix: Requirements"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 6.1 Product scope"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 6.1.1 Target user profile"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gy716"
        },
        "content": "This application is intended for users who"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gy716"
        },
        "content": "- are NUS Computer Engineering Students"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have a large variety of lesson (lab, tutorial, lecture, webcast) and commitment types (CCA, external commitments)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have a certain type of homework based on standard formats (pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gy716"
        },
        "content": "- have various projects ongoing at the same time (individual, team, for technical modules and non-technical modules)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gy716"
        },
        "content": "- are reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 6.1.2 Value proposition "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Tasks based on:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the module: eg. CS2113T, CG2271, CS2101 (can be colour-coded according to modules)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - tasks unrelated to modules can be placed under “others”"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the deadline of the task: eg.pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - urgency: a chronological list of what is due the earliest"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - the amount of time taken for the task: range of 30min-3hours"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Schedule based on:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - NUSMods schedule, ie. modules"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Webcast option, ie. can be shifted around"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Team meetings (regular scheduled and ad hoc)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gy716"
        },
        "content": "- Manages Project based on:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Deadlines of subtasks (subclass of task but for projects)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gy716"
        },
        "content": "    - Percentage of completion "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 6.2 User stories"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gy716"
        },
        "content": "| Priority level| As a/an | I want to | so that I can"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gy716"
        },
        "content": "| -------- | -------- | -------- |-------- |"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gy716"
        },
        "content": "| must-have    | new user     | add my modules |I can categorise my tasks and schedule"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have | new user|add my lecture slots|I can plan my timetable"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|new user|add tutorial slots|I can plan my timetable"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add lab slots|I can plan my timetable"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|view my timetable |I can go about my day following the planned timetable"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nict-to-have|user|view my project progress|I can manage my project "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add subtasks of project |I can divide whole project in various subtasks and record them"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|create daily or weekly to-do list |I can view all the tasks to be completed"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|add deadline to tasks(assignment, tutorials)|I can know when to complete"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|prioritize tasks in to-do list by urgency level|I can plan what to do first "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gy716"
        },
        "content": "|must-have|user|mark tasks as done or delete them|"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|add alarm to remind the upcoming event|I won\u0027t forget or miss relevant events"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|add periodic zoom links for online lectures/tutorials|I can join the zoom session quickly before the class"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gy716"
        },
        "content": "|nice-to-have|user|share project schedule and details with teammates|I can cooperate with my teammate better"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gy716": 144,
      "-": 29
    }
  },
  {
    "path": "docs/team/shenjia.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "# Zhang Shenjia - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "jessicazhang617": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String userCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //load tasks in data file to current task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": "            //"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.getModFromFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Some errors occurred in module database.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (!Parser.isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "            userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Parser.parse(userCommand, tasks, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Ui.bye();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 1,
      "ZhongNingmou": 2,
      "gy716": 17,
      "zhangcaicai123": 14,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/ModDataBase.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModDataBase {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static HashMap\u003cString, Module\u003e modules \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void parseModule(JSONObject module) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Module mod \u003d new Module();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCode \u003d (String) module.get(\"moduleCode\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.title \u003d (String) module.get(\"title\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.description \u003d (String) module.get(\"description\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCredit \u003d (String) module.get(\"moduleCredit\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "        modules.put(mod.moduleCode, mod);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void getModFromFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Object obj \u003d parser.parse(new FileReader(\"src/main/java/data/allModInfo.json\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONArray moduleList \u003d (JSONArray) obj;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "        moduleList.forEach(module -\u003e parseModule((JSONObject) module));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String moduleCode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String moduleCredit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String lecSlot;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String tutSlot;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String labSlot;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int lecDay;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int tutDay;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int labDay;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String lecTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String tutTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String labTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setSlot() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String lecDay \u003d this.lecSlot.substring(0, this.lecSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.lecDay \u003d weekOfDay(lecDay);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.lecTime \u003d this.lecSlot.substring(this.lecSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String tutDay \u003d this.tutSlot.substring(0, this.tutSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.tutDay \u003d weekOfDay(tutDay);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.tutTime \u003d this.tutSlot.substring(this.tutSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String labDay \u003d this.labSlot.substring(0, this.labSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.labDay \u003d weekOfDay(labDay);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.labTime \u003d this.labSlot.substring(this.labSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecText() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.lecTime + \" \" + this.moduleCode + \" lecture\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String tutText() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.tutTime + \" \" + this.moduleCode + \" tutorial\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String labText() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.labTime + \" \" + this.moduleCode + \" lab\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int weekOfDay(String day) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int dayValue \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Sun\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Mon\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Tue\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 3;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Wed\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 4;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Thur\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 5;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Fri\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 6;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Sat\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 7;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Sorry, the day value was not recognized. \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return dayValue;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 1,
      "gy716": 16,
      "zhangcaicai123": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.EmptyFindException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.EmptyIndexException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.OutOfIndexBound;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.project.ProjectManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void parse(String userCommand, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintHelpCommand \u003d userCommand.toLowerCase().contains(\"help\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isAddModCommand \u003d Pattern.matches(\"^add[\\\\s]+module/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isAddProjectTaskCommand \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "                Pattern.matches(\"^mod/[\\\\S\\\\s]+ptask/[\\\\s\\\\S]+by/[\\\\s\\\\S]+\", userCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isExitCommand \u003d userCommand.equals(\"exit\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isDeleteModule \u003d userCommand.contains(\"delete m/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "        boolean isDeleteTask \u003d userCommand.contains(\"delete t/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintWeeklyTimetable \u003d userCommand.equals(\"this week timetable\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintTodayTimeTable \u003d userCommand.equals(\"today timetable\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintProjectTaskList \u003d userCommand.contains(\"project task list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintProgress \u003d userCommand.contains(\"progress\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintTodayDeadline \u003d userCommand.equals(\"today deadline\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintWeeklyDeadline \u003d userCommand.equals(\"this week deadline\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isAddTask \u003d Pattern.matches(\"^(todo|deadline|event).*\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                userCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isMarkAsDone \u003d Pattern.matches(\"^done.*\", userCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isFind \u003d Pattern.matches(\"^find.*\", userCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (isPrintHelpCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Ui.printHelpMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddModCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gy716"
        },
        "content": "                addModule(userCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isExitCommand) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gy716"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isDeleteModule) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                deleteModule(userCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyTimetable) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TimeTable.printWeeklyTimetable();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayTimeTable) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TimeTable.printTodayTimetable();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isDeleteTask) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                deleteTask(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isAddTask) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String type \u003d getTaskType(userCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    addToDo(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    addDeadline(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    addEvent(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddProjectTaskCommand) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                addProjectTask(userCommand, taskList, storage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProjectTaskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                ProjectManager.printProjectTaskList(userCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProgress) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                ProjectManager.printProgress(userCommand);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayDeadline) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TimeTable.printTodayDeadline(taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyDeadline) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TimeTable.printWeeklyDeadline(taskList);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isMarkAsDone) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                done(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isFind) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                find(taskList, userCommand);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Ui.dealWithException(userCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void addModule(String command) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "        String moduleCode \u003d command.substring(command.indexOf(\"/\") + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isModuleExit \u003d ModDataBase.modules.containsKey(moduleCode);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (isModuleExit) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"_______________________________________________________\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Module code: \" + ModDataBase.modules.get(moduleCode).moduleCode);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Title: \" + ModDataBase.modules.get(moduleCode).title);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Description: \" + ModDataBase.modules.get(moduleCode).description);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"_______________________________________________________\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Please enter the time slot for the lectures, tutorials, and labs for this module.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"If the time slot does not exit, please enter null.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.print(\"Lecture slot: \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.modules.get(moduleCode).lecSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.print(\"Tutorial slot: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.modules.get(moduleCode).lecSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.print(\"Lab slot: \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.modules.get(moduleCode).lecSlot \u003d in.nextLine();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"OK! I have added this module.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"_______________________________________________________\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gy716"
        },
        "content": "            TimeTable.addModule(ModDataBase.modules.get(moduleCode));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"_______________________________________________________\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"The module code does not exist.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"_______________________________________________________\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void deleteModule(String command) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.deleteModule(command);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Find task in the task list with keyword."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command  user input"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @exception EmptyFindException if no keyword is input"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void find(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String keyword \u003d Parser.getFind(command);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.printSearchResult(keyword);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyFindException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyKeywordMessage();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void addProjectTask(String command, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ProjectTask projectTask \u003d ProjectManager.addProjectTask(command);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.addTask(projectTask);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.appendToFile(projectTask.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String getTaskType(String command) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"^(todo|deadline|event).*\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return m.group(1);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the description of todo task."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the description of user\u0027s input todo task"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String getTodo(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String todoPattern \u003d \"^todo (.*)\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(todoPattern);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (Pattern.matches(\"^todo *\", command)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return m.group(1).trim();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the task description for deadline and event."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the task description of user\u0027s input deadline or event"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String getTask(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(event|deadline)( .* )(/at|/by)( .*)\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (Pattern.matches(\"event|deadline *\", command)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return m.group(2).trim();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add todo task to the task list."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void addToDo(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Todo taskToAdd \u003d new Todo(getTodo(command));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"todo\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add deadline task to the task list."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void addDeadline(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String by \u003d Parser.getTime(command);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Deadline taskToAdd \u003d new Deadline(Parser.getTask(command));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToAdd.setBy(by);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add event to the task list."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void addEvent(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String at \u003d Parser.getTime(command);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Event taskToAdd \u003d new Event(Parser.getTask(command));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToAdd.setAt(at);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Returns the time for event or deadline."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Accept dates in yyyy-mm-dd format (e.g., 2019-10-15)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * and print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return time for event or deadline task"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyTimeException If no String for time information is found"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String getTime(String command) throws EmptyTimeException {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(event|deadline)( .* )(/at|/by)(.*)\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (m.find()) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d m.group(4).trim();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new EmptyTimeException();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String timePattern \u003d \"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\";//yyyy-mm-dd format"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isDate \u003d Pattern.matches(timePattern, time);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (isDate) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.ENGLISH));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the keyword of finding task command."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the keyword that user wants to search in the task list"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyFindException If no keyword is found"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String getFind(String command) throws EmptyFindException {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"find *\";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (Pattern.matches(pattern, command)) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return command.substring(command.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get indext of task that need to be deleted or mark as done."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return index the index of task that user wants to delete or mark as done"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws OutOfIndexBound     If the index is larger than size of list"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws EmptyIndexException If user does not input any integer"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static int getIndex(TaskList taskList, String command) throws OutOfIndexBound, EmptyIndexException {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(done|delete)( )(\\\\d+)\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (Pattern.matches(\"done|delete *\", command)) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new EmptyIndexException();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            index \u003d Integer.parseInt(m.group(3));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003c index || index \u003c 1) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new OutOfIndexBound();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @exception EmptyIndexException if no index is input"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void done(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d Parser.getIndex(taskList, command) - 1;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Task taskToMark \u003d taskList.get(index);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToMark.markAsDone();"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Ui.printMarkMessage(taskToMark);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.updateDoneToFile(index, taskList);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (OutOfIndexBound e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printOutOfIndexBoundMessage();"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete task from task list."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void deleteTask(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d Parser.getIndex(taskList, command) - 1;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            storage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (OutOfIndexBound e) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printOutOfIndexBoundMessage();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ExceptionMessage.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 12,
      "ZhongNingmou": 24,
      "gy716": 90,
      "zhangcaicai123": 283,
      "jessicazhang617": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/TimeTable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class TimeTable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static final ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModuleWithLab(Module module) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "        System.out.println(\"Module: \" + module.moduleCode);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lecture Slot: \" + module.lecSlot);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Tutorial Slot: \" + module.tutSlot);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lab Slot: \" + module.labSlot);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModuleWithoutLab(Module module) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "        System.out.println(\"Module: \" + module.moduleCode);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lecture Slot: \" + module.lecSlot);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Tutorial Slot: \" + module.tutSlot);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addModule(Module module) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modules.add(module);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        int moduleIndex \u003d checkInsertion(module);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (moduleIndex !\u003d -1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "            checkModuleKeep(module, moduleIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "            if (module.labSlot \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "                printModuleWithoutLab(module);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gy716"
        },
        "content": "                printModuleWithLab(module);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "         */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static int checkInsertion(Module module) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (modules.size() \u003e 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (module.labSlot \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                for (i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (module.lecSlot.equals(modules.get(i).lecSlot)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.lecSlot.equals(modules.get(i).tutSlot)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    } else if (module.tutSlot.equals(modules.get(i).lecSlot)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.tutSlot.equals(modules.get(i).tutSlot)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                for (i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (module.lecSlot.equals(modules.get(i).lecSlot)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.lecSlot.equals(modules.get(i).tutSlot)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.lecSlot.equals(modules.get(i).labSlot)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    } else if (module.tutSlot.equals(modules.get(i).lecSlot)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.tutSlot.equals(modules.get(i).tutSlot)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            || module.tutSlot.equals(modules.get(i).labSlot)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void checkModuleKeep(Module module, int moduleIndex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"OOPS!!! There is a time conflict.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Which module do you want to keep? Please enter the module name.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (modules.get(moduleIndex).labSlot \u003d\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            printModuleWithoutLab(modules.get(moduleIndex));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            printModuleWithLab(modules.get(moduleIndex));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (module.labSlot \u003d\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            printModuleWithoutLab(module);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            printModuleWithLab(module);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (userCommand.equals(module.moduleCode)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            modules.set(moduleIndex, module);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Got it! I have add \" + userCommand + \" to timetable.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModule(String line) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (line.equals(\"delete\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String details \u003d line.substring(line.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (modules.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                for (int i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "                    if (modules.get(i).moduleCode.contains(details)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        modules.remove(i);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this module\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (i \u003d\u003d modules.size() - 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"OOPS!!! There is no such module.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayTimetable() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyTimetable(todayMonth, todayDay, todayYear);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyTimetable(int month, int day, int year) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%2d-%2d\", year, month, day);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(date);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d todayList(date);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String event : todayList) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyDeadline(todayMonth, todayDay, todayYear, taskList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyDeadline(int month, int day, int year, TaskList taskList) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%2d-%2d\", year, month, day);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"Today\u0027s Deadline (haven\u0027t done):\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e deadlineList \u003d todayDeadline(date, taskList);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String ddl : deadlineList) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(ddl);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyDeadline(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR), taskList);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyTimetable() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyTimetable(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayList(String date) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int weekDay \u003d todayDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (module.lecDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.lecText());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.tutDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.tutText());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.labDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.labText());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Collections.sort(todayList);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayList;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayDeadline(String date, TaskList taskList) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayDeadline \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //deadline task"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.text().startsWith(\"D\") \u0026\u0026 task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (date.equals(\"date\")) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    todayDeadline.add(task.text());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayDeadline;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 116,
      "gy716": 26,
      "zhangcaicai123": 105
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Hello, this is CEGMods! What can I do for you?\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"Enter help to get more information.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "        System.out.println(\"1. Add a module: add module/\u003cMODULE_CODE\u003e\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"2. Delete a module: delete m/\u003cMODULE_CODE\u003e\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"3. View today\u0027s timetable: today timetable\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "                + \"4. View weekly timetable: this week timetable\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"5. Add a project subtask: mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"6. View project task list: mod/\u003cMODULE_CODE\u003e project task list\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"7. View project progress: mod/\u003cMODULE_CODE\u003e progress\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                + \"8. Exit CEGMods: exit\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Bye! Have a nice day with CEG!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void dealWithException(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The done index is out of bound.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\" OOPS!!! The delete index is out of bound.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println((\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    + \"Please follow the input format correctly.\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    //print horizontal line"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\tThere are some errors when loading file.%n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printMarkMessage(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\" \\tNice! I\u0027ve marked this task as done:%n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"\\t  \" + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 16,
      "ZhongNingmou": 24,
      "gy716": 2,
      "zhangcaicai123": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 3,
      "zhangcaicai123": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyDescriptionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyFindException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyFindException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyIndexException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ExceptionMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class ExceptionMessage extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /*public static void printIllegalCommandExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(%n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "*/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyDescriptionExceptionMessage(String option) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! The description of a %s cannot be empty.%n\", option);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyTimeExceptionMessage(String option) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You haven\u0027t set a time for the %s.%n\", option);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printOutOfIndexBoundMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyIndexExceptionMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You did not type the index of the task.%n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEmptyKeywordMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You did not type the keyword.%n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/IllegalCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/OutOfIndexBound.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class OutOfIndexBound extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/ProjectManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final ArrayList\u003cProjectTask\u003e projectTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ProjectTask addProjectTask(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"ptask/\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d command.substring(command.indexOf(\"ptask/\"), command.indexOf(\"by/\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d description.substring(6).trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        by \u003d command.substring(command.indexOf(\"by/\")).substring(3).trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Is there any material you need for this project task?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Enter your materials or NA\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String material \u003d in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectTask projectTask \u003d new ProjectTask(modName, description, by, material);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"Module: \" + projectTask.getModName());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"ProjectTask: \" + projectTask.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"By: \" + projectTask.getBy());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"Materials: \" + projectTask.getMaterial());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        projectTasks.add(projectTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return projectTask;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProjectTaskList(String command) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"project\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(modName + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        for (int i \u003d 0; i \u003c projectTasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (projectTasks.get(i).getModName().equals(modName)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(i + 1 + \". \" + projectTasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProgress(String command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numDone \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numTotal \u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\" \"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(modName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (ProjectTask projectTask : projectTasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (projectTask.getModName().equals(modName)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                numTotal++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (projectTask.getStatusIcon().equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    numDone++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (numTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"WELL DONE! 100% progress!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            float progress \u003d (float) numDone / numTotal * 100;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"You have done \" + numDone + \"/\" + numTotal"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \" (\" + String.format(\"%.2f\", progress) + \"%).\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 70,
      "zhangcaicai123": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private final String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private final String directory \u003d projectRoot + \"/data\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private final String filePath \u003d directory + \"/duke.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create directory if the directory does not exist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName directory path name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return true if the directory exist or have been successfully created"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *         false if fail to create the directory"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public boolean createDirectory(String directoryName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File dir \u003d new File(directoryName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d dir.mkdirs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create the data file to store task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param pathName      the absolute path name of data file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName the directory path name"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void createFile(String pathName, String directoryName) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean mkdirs \u003d createDirectory(directoryName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (mkdirs) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            File f \u003d new File(pathName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Load data file to current task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File loadFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!loadFile.exists()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            createFile(this.filePath, directory);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Scanner file \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                assert file !\u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (!file.hasNext()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String text \u003d file.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Task taskToLoad \u003d parserTask(text);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                loadList.add(taskToLoad);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"List has been loaded successfully.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Transfer the line in data file into task to load."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param text each line of the data file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task need to load"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private Task parserTask(String text) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Task taskToLoad \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String[] texts \u003d text.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String description \u003d texts[2];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String status \u003d texts[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (text.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Todo"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Todo(description);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Deadline"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Deadline(description);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Deadline) taskToLoad).setBy(time);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Event"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Event(description);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Event) taskToLoad).setAt(time);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"P\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Project task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String material \u003d texts[5];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            modName \u003d texts[3];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[4];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new ProjectTask(modName, description, time, material);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad.markAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskToLoad;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Update done status for the task in file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index    the index of task in the list that needs to be marked as done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list contains all tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void updateDoneToFile(int index, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                //update done status"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.println(taskList.get(index).text());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.flush();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete the task from data file."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task in the list that needs to be deleted"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void deleteTaskFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new line to the end of data file."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 213
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"D \" + super.text() + \" | \" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 13,
      "zhangcaicai123": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"E \" + super.text() + \" | \" + at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 13,
      "zhangcaicai123": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ProjectTask.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String material;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    protected String modName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ProjectTask(String mod, String description, String by, String material) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.material \u003d material;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.modName \u003d mod;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getModName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.modName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getMaterial() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.material;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[P]\" + super.toString() + \" (by:\" + by + \") \" + \"material: \" + material;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"P \" + super.text() + \" | \" + modName + \" | \" + by + \" | \" + material;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 16,
      "zhangcaicai123": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return (isDone ? \"T\" : \"F\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return \"| 1 | \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return \"| 0 | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 9,
      "ZhongNingmou": 7,
      "zhangcaicai123": 17,
      "jessicazhang617": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"T \" + super.text();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasklist/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Assign the loaded list to this task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param loadedList the task list loaded from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList \u003d loadedList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new task to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskToAdd the task that needs to be added to the list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printAddMessage(taskToAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printNumOfTasksInList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete task from the task list with index of task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskIndex the index of task which needs to be deleted"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDeleteMessage(taskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the task with index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the whole list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.size() \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"      \" + (this.taskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of adding new task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param task task needs to add"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"      \" + task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the number of tasks in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printNumOfTasksInList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     You don\u0027t have any task in your list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of deleting a task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task that needs to be deleted"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printDeleteMessage(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\tNoted. I\u0027ve removed this task:%n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\t   %s%n\", this.taskList.get(index));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Find all the tasks which contain the keyword."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the list of tasks which contain the keyword"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                findList.add(task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the list of searching keyword in task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printSearchResult(String keyword) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d find(keyword);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (this.size() \u003e 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tHere are the matching tasks in your list:%n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : results) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"\\t\" + (results.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any matching task in your list.%n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 159
    }
  },
  {
    "path": "src/test/java/seedu/duke/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testText() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/TimeTableTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class TimeTableTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testTodayList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "module mod/CG1111 lec/Fri 10:00-12:00 tut/Tue 14:00-15:00 lab/Mon 9:00-12:00"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 1
    }
  }
]
