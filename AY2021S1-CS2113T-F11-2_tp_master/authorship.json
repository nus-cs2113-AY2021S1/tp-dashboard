[
  {
    "path": "README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "CEGMods is a desktop to manage NUS CEG\u0027s courses via a Command Line Interface (CLI). If you are an NUS CEG student and looking for an app to manage your course and project schedule, CEGMods can help you get all your tasks down in an organized manner."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :compileJava"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :processResources NO-SOURCE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :classes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003e Task :Duke.main()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   _______________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                      __ _                      _           "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      __      ___    / _` |  _ __     ___    __| |    ___   "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     / _|    / -_)   \\__, | | \u0027  \\   / _ \\  / _` |   (_-\u003c   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     \\__|_   \\___|   |___/  |_|_|_|  \\___/  \\__,_|   /__/_  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   _|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"| "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   \"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027 "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Hello, this is CEGMods! What can I do for you?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Enter \u0027help\u0027 to get more information."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   _______________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Task list has been loaded successfully."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Module list has been loaded successfully."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Today is 2020-11-09"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Now is 22:12"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "   Currently you don\u0027t have any event!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Type `help` and press enter to let the execution to proceed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "## Build automation using Gradle"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "### I/O redirection tests"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit tests"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## Checkstyle"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* A sample CheckStyle rule configuration is provided in this project."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "## CI using GitHub Actions"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "## Documentation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "`/docs` folder contains a skeleton version of the project documentation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Steps for publishing documentation to the public: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   If you are using this project template for a team project, go to the team fork on GitHub."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `settings` tab."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Scroll down to the `GitHub Pages` section."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set the `source` as `master branch /docs folder`."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "1. Optionally, use the `choose a theme` button to choose a theme for your documentation."
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 17,
      "-": 54
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation \u0027org.jetbrains:annotations:19.0.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 3,
      "-": 47
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/team/Yu%20Geng.png\" width\u003d\"100\" height\u003d\"100\"/\u003e | Yu Geng | [Github](https://github.com/gy716) | [Portfolio](https://ay2021s1-cs2113t-f11-2.github.io/tp/team/gy716.html)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/team/Zhong%20Ningmou.jpg\" width\u003d\"100\" height\u003d\"100\"/\u003e | Zhong Ningmou | [Github](https://github.com/ZhongNingmou) | [Portfolio](https://ay2021s1-cs2113t-f11-2.github.io/tp/team/zhongningmou.html)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/team/Jin%20Yixuan.jpg\" width\u003d\"100\" height\u003d\"100\"/\u003e | Jin Yixuan | [Github](https://github.com/JinYixuan-Au) | [Portfolio](https://ay2021s1-cs2113t-f11-2.github.io/tp/team/jinyixuan-au.html)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/team/eaf9fc413139c3f67d734c03569c4e4.jpg\" width\u003d\"100\" height\u003d\"100\"/\u003e | Zhang Shenjia | [Github](https://github.com/jessicazhang617) | [Portfolio](https://ay2021s1-cs2113t-f11-2.github.io/tp/team/jessicazhang617.html)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/team/Zhang%20Danrui.jpg\" width\u003d\"100\" height\u003d\"100\"/\u003e | Zhang Danrui | [Github](https://github.com/zhangcaicai123) | [Portfolio](https://ay2021s1-cs2113t-f11-2.github.io/tp/team/zhangcaicai123.html)"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 5,
      "-": 4,
      "jessicazhang617": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "## Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [1. Introduction](#1-introduction-1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [1.1 Software Overview](#11-software-overview-1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [1.2 Purpose](#12-purpose-1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [1.3 Scope](#13-scope-1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [2. Setting up and getting started](#2-setting-up-and-getting-started-1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [3. Design](#3-design-1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [3.1 Architecture](#31-architecture-1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [3.2 Classes](#32-classes-1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.1 Ui class](#321-ui-class-1)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.2 Parser class](#322-parser-class-1)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.3 Module class](#323-module-class-1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.4 Task class](#324-task-class-1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.5 TimeTable class](#325-timetable-class-1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.6 TaskList class](#326-tasklist-class-1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### [3.2.7 ProjectManager class](#327-projectmanager-class-1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [4. Implementation](#4-implementation-1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [5. Documentation and Dev-ops](#5-Documentation-and-Dev-ops-1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [Appendix A: Product Scope](#appendix-a-product-scope-1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [Target user profile](#target-user-profile-1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### [Value proposition](#value-proposition-1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [Appendix B: User Stories](#appendix-b-user-stories-1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements-1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [Appendix D: Glossary](#appendix-d-glossary-1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### [Appendix E: Instructions for manual testing](#appendix-e-instructions-for-manual-testing-1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.1 Software Overview"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods is a command line (CLI) application that helps computer engineering (CEG) students to manage their modules, tasks and projects. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods will allow students to categorize their tasks based on their modules and automatically help prioritize them by deadlines. It will also help students manage project deadlines by splitting them into mini-milestones."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.2 Purpose"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "This document describes the architecture and software design of CEGMods. The goal of this document is to cover the high-level system architecture and design."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": "The document is divided into three main parts: design, implementation and documantation. The design includes the architecture diagram and the introduction of each class. The implementation describes some details on how certain features are implemented. The documentation details the logging, testing and configuration of CEGMods. It also includes the requirement and the instructions for manual testing in the appendices."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 1.3 Scope"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "The intended audience of this document is the developers, designers, and software testers of CEGMods."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author zhangcaicai123--\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "## 2. Setting up and getting started"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Setting up the project in your computer"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003e \u003cfont color\u003d#FF5733\u003eCaution: \u003c/font\u003e \u003cfont color\u003d#00000\u003e\u003cfont color\u003d#00000\u003e  **Please follow each steps in the guide carefully.** \u003c/font\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### Before you start:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Please ensure you have Java 11 installed in you computer."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Fork this repo from this [link](https://github.com/AY2021S1-CS2113T-F11-2/tp.git)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "2. Clone the fork to your own computer. You are highly recommended to use Git tool (like Sourcetree) to track your work. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "3. Use your own IDEA to program. You are highly recommended to use IntelliJ IDEA. Please check whether you have correct JDK version (JDK 11) in your computer and congiure the JDK."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    If you are using IntelliJ IDEA: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Open IntelliJ"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Set up JDK 11 for Gradle"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        1. Click `Configure` -\u003e `Project Defaults` -\u003e `Project Structure`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        2. Click `New...` and set it to the directory of the JDK 11 installed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "4. Import the project as a Gradle project."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    \u003e \u003cfont color\u003d#FF5733\u003eNote: \u003c/font\u003e \u003cfont color\u003d#00000\u003e It is different from importing a normal Java project.\u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    If you are using IntelliJ IDEA:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Click `Import Project` (or `Open or Import` in newer version of Intellij)."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Locate the `build.gradle` file (not the root folder as you would do in a normal importing) and select it. Click `OK`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Click `OK` to accept the default settings but do ensure that the selected version of `Gradle JVM` matches the JDK being used for the project."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Wait for importing process to complete"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "5. Do the testing. Please follow the testing guide"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 3. Design "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.1 Architecture"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "The ***Class diagram*** given below shows the interaction between major classes, and explains the structure of the software system."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "[![F2bCN9.md.png](https://iili.io/F2bCN9.md.png)](https://freeimage.host/i/F2bCN9)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gy716"
        },
        "content": "### 3.2 Classes"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gy716"
        },
        "content": "    "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": "The CEGMods consists of six classes:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Main`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Ui`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Parser`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Module`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `Task`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gy716"
        },
        "content": "* `TimeTable`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* `Storage`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* `ProjectManager`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.1 Ui class"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "The Ui class reads the user\u0027s input and response relevant messages. It also contains the welcome message and help message to help the user navigate the "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.2 Parser class"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gy716"
        },
        "content": "The `Parser` class deals with making sense of the user\u0027s command and execute the command relevantly:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Module` into `Timetable`."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delte `Module` from `Timetable`."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gy716"
        },
        "content": "- add new `Task` into tasklist."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gy716"
        },
        "content": "- delete `Task` from tasklist."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gy716"
        },
        "content": "- print out `Timetable` of a certain day or one week."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gy716"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gy716"
        },
        "content": "#### 3.2.3 Module class"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gy716"
        },
        "content": "The Module class contains the information of a module, including the title, description, and time slots of lectures, tutorials and labs."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author zhangcaicai123 --\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### 3.2.4 Task class"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "The `Task` class contains the information of a task, including the todo, event and deadline tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add new `task` "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add `at` or `by` for task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- get `done` status for task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### 3.2.5 TimeTable class"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "The `Timetable` class shows the timetable for all the module slots and tasks. It also stores `Module` details in an arraylist and checks whether there is a time conflict between two classes."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print today `timetable`   "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print weekly `timetable`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print upcoming `deadline`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- view today\u0027s `deadline` and time remaining"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- view this week\u0027s `deadline` and time remaining"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add `module` into `timetable`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- check time conflict for `module` and `event`    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### 3.2.6 TaskList class"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print the `tasklist`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add `task` into `tasklist`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- remove `task` from `module`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print `todo list`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print `event list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print `undone list`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- print `deadline list`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- clear past `deadline`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- delete `done task`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author ZhongNingmou --\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "#### 3.2.7 ProjectManager class"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- print the `project tasklist`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- add `project task` into `project tasklist`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- print `project progress`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "## 4. Implementation"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "This section provides details on the implementations of certain features."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Feature: Add a module"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gy716"
        },
        "content": "The user type in command in `module mod/\u003cMODULE_CODE\u003e lec/\u003cLECTURE_DAY\u003e \u003cLECTURE_TIME\u003e tut/\u003cTUTORIAL_DAY\u003e \u003cTUTORIAL_TIME\u003e lab/\u003cLAB_DAY\u003e \u003cLAB_TIME\u003e` this form to add a module into the timetable. The time slot of lab is optional. The program will detect whether the user command is in this form, and store module data in arraylist `modules` in `Timetable` class after Ui passing command and calling `addModule()` in Parser class."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gy716"
        },
        "content": "The ***sequence diagram*** below shows the interaction between these classes when the user adds a module."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "[![F2bWSp.md.png](https://iili.io/F2bWSp.md.png)](https://freeimage.host/i/F2bWSp)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author ZhongNingmou --\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Feature: Delete a module"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `delete mod/\u003cMODULE_CODE\u003e` to delete a module in the timetable. The `Parser` class will take this user command and pass it to `Command` class to enable the `deleteModule()` method in the `TimeTable` class."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Feature: Add a task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `todo \u003cDESCRIPTION\u003e` to add a todo task in the tasklist."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e` to add a deadline in the tasklist."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e` to add an event in the tasklist."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cTIME_DESCRIPTION\u003e` to add a project subtask in the tasklist."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The `Parser` class will take the user command and pass it to the `Command` class to enable the `addToDo`/`addDeadline`/`addEvent`/`addProjectTask`/ method, and then call both `addTask` method in `TaskList` class and `appendToFile` method in `Storage` class to update the task list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Feature: Delete a task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `delete task/\u003cTASK_INDEX\u003e` to delete a task from the `tasklist`. The `Parser` class will take the user command and pass it to the `Command` class to enable the `deleteTask` method, and then call both the `deleteTask` method in `TaskList` class and `deleteTaskFromFile` method in `Storage` class to update the task list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Feature: Print task list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `task list` to view the task list. The `Parser` class will take the user command and pass it to the `TaskList` class to enable the `printList` method."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Feature: View time table"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "The user enters the command: `today timetable` or `this week timetable` to view the the `timetable`. The `Parser` class will take the user command and pass it to the `Command` class to enable the `printTodayTimetable` or `printWeeklyTimetable` method, and then call `printTodayTimetable` or `printWeeklyTimetable` method in `TimeTable` class."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## 5. Documentation and Dev-ops"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### Documentation"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Setting up and maintaining the project website:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* We use [Jekyll](https://jekyllrb.com/) to manage documentation."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* The `docs/` folder is used for documentation."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* To learn how set it up and maintain the project website, follow the guide [*[se-edu/guides] Using Jekyll for project documentation*](https://se-education.org/guides/tutorials/jekyll.html)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Style guidance:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Follow the [*Google developer documentation style guide*](https://developers.google.com/style)."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Also relevant is the [*[se-edu/guides] Markdown coding standard*](https://se-education.org/guides/conventions/markdown.html)."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Diagrams:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* See the [*[se-edu/guides] Using PlantUML*](https://se-education.org/guides/tutorials/plantUml.html)."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Converting a document to the PDF format:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "See the guide [*[se-edu/guides] Saving web documents as PDF files*](https://se-education.org/guides/tutorials/savingPdf.html)."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### DevOps Guide"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Making a release"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "1. Update the version number in Main.java."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2. Generate a fat JAR file using Gradle (i.e., gradlew shadow)."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "3. Tag the repo with the version number. e.g. v0.1"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "4. Create a new release using GitHub. Upload the JAR file you created. "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Build Automation"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "We use Gradle for tasks related to build automation, such as running tests, and checking code for style compliance."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "To run all build-related tasks:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "1. Open a terminal in the project’s root directory."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2. Run the command:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Windows: `gradlew build`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* MacOS/Linux: `./gradlew build`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "3. A message stating BUILD SUCCESSFUL will be shown in the terminal if all tasks run successfully. Otherwise, use the error report provided to resolve the issue before trying again."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Appendix A: Product Scope"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author zhangcaicai123--\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### Target user profile"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This application is intended for users who"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- are NUS Computer Engineering Students"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- have a large variety of lesson (lab, tutorial, lecture, webcast) and commitment types (CCA, external commitments)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- have a certain type of homework based on standard formats (pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- have various projects ongoing at the same time (individual, team, for technical modules and non-technical modules)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- are reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### Value proposition "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Manages Tasks based on:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - the module: eg. CS2113T, CG2271, CS2101 (can be colour-coded according to modules)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - tasks unrelated to modules can be placed under “others”"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - the deadline of the task: eg.pre-lecture/ post-lecture/ pre-tutorial/ post-tutorial/ pre-lab/ post-lab "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - urgency: a chronological list of what is due the earliest"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - the amount of time taken for the task: range of 30min-3hours"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Manages Schedule based on:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - NUSMods schedule, ie. modules"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Webcast option, ie. can be shifted around"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Team meetings (regular scheduled and ad hoc)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Manages Project based on:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Deadlines of subtasks (subclass of task but for projects)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Percentage of completion "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Appendix B: User Stories"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author zhangcaicai123--\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "| Priority level| As a/an | I want to | so that I can"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "| -------- | -------- | -------- |-------- |"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "| must-have    | new user     | add my modules |I can categorise my tasks and schedule"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have | new user|add my lecture slots|I can plan my timetable"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|new user|add tutorial slots|I can plan my timetable"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|add lab slots|I can plan my timetable"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|view my timetable |I can go about my day following the planned timetable"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|nict-to-have|user|view my project progress|I can manage my project "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|add subtasks of project |I can divide whole project in various subtasks and record them"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|nice-to-have|user|create daily or weekly to-do list |I can view all the tasks to be completed"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|add deadline to tasks(assignment, tutorials)|I can know when to complete"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|prioritize tasks in to-do list by urgency level|I can plan what to do first "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|must-have|user|mark tasks as done or delete them|"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|nice-to-have|user|add alarm to remind the upcoming event|I won\u0027t forget or miss relevant events"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|nice-to-have|user|add periodic zoom links for online lectures/tutorials|I can join the zoom session quickly before the class"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|nice-to-have|user|share project schedule and details with teammates|I can cooperate with my teammate better"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Appendix C: Non-Functional Requirements"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "The following statements describe the non-functional requirements for the application:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "1. CEGMods should be able to work on any mainstream OS which has Java 11 or a higher version of Java installed."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2. The system should not take more than 5s to run for every command."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "3. The user is expected to have a basic idea about the modules in NUS."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "4. A user comfortable with faster typing speed than average should be able to use this program with ease."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    "
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Appendix D: Glossary"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "- Mainstream OS: Windows, Linux, macOS"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Appendix E: Instructions for manual testing"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This portion contains instructions on how to perform manual testing."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "*  [Running tests](#Running-tests)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "*  [Types of tests](#Types-of-tests)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author ZhongNingmou --\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "## Running tests"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- **Method 1: Using IntelliJ JUnit test runner**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - To run all tests, you can click `src` -\u003e `test`, right-click on the `java` folder and choose `Run \u0027Tests in \u0027tp.test\u0027\u0027`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - To run a subset of tests, you can click `src` -\u003e `test` -\u003e `java` and right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- **Method 2: Using Gradle**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Click `Terminal` to open a new console and type in the command `gradlew clean test` to run a test (Mac/Linux: ./gradlew clean test)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Types of tests"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "-"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This project has 1 type of tests: "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "1. Unit testing：targeting the lowest level methods/classes."
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 88,
      "ZhongNingmou": 40,
      "gy716": 37,
      "zhangcaicai123": 96,
      "-": 14
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "CEGMods is a desktop to manage NUS CEG\u0027s courses via a Command Line Interface (CLI). If you are an NUS CEG student and looking for an app to manage your course and project schedule, CEGMods can help you get all your tasks down in an organized manner."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## Content page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [1. Quick Start](#1-quick-start-1)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [2. Features](#2-features-1)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.1 Adding a Module: `add mod`](#21-adding-a-module-add-mod-1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.2 Deleting a Module: `delete mod`](#22-deleting-a-module-delete-mod-1)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "#### [2.3 Checking Modules: `check modules`](#23-checking-modules-check-mod-1)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.4 Viewing Timetable: `timetable`](#24-viewing-timetable-timetable-1)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "#### [2.5 Viewing Task List: `task list`](#25-viewing-task-list-task-list-1)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.6 Adding a Task:](#26-adding-a-task-1)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.6.1 Adding a Todo Task: `todo`](#261-adding-a-todo-task-todo-1) "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.6.2 Adding a Deadline Task: `deadline`](#262-adding-a-deadline-deadline)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "##### [2.6.3 Adding a Event Task: `event`](#263-adding-an-event-event)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.7 Marking a Task as Done: `done`](#27-marking-a-task-as-done-done-1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.8 Deleting a Task: `delete`](#28-deleting-a-task-delete-1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.9 Finding a Task with Keyword: `find`](#29-finding-a-task-with-keyword-find-1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.10 Adding a Project Task: `project task`](#210-adding-a-project-task-project-task-1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.11 Viewing project task list: `project task list`](#211-viewing-project-task-list-project-task-list-1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.12 Viewing project progress: `project progress`](#212-viewing-project-progress-project-progress-1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.13 Viewing to do list: `print todo list`](#213-viewing-to-do-list-print-todo-list-1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.14 Viewing event list: `print event list`](#214-viewing-event-list-print-event-list-1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.15 Viewing the deadline list: `print deadline list`](#215-viewing-the-deadline-list-print-deadline-list-1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.16 Viewing the undone task list: `print undone task list`](#216-viewing-the-undone-task-list-print-undone-task-list-1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.17 Clearing past deadlines: `clear deadlines`](#217-clearing-past-deadlines-clear-deadlines-1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.18 Delete done tasks: `delete done task`](#218-delete-done-tasks-delete-done-task-1)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.19 Viewing today\u0027s deadlines: `today deadline`](#219-viewing-todays-deadline-today-deadline)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "#### [2.20 Viewing this week\u0027s deadlines: `this week deadline`](#220-viewing-this-weeks-deadline-this-week-deadline)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "#### [2.21 Exiting the Program: `exit`](#221-exiting-the-program-exit-1)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "#### [2.22 Viewing Help: `help`](#222-viewing-help-help-1)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [3. FAQ](#3-faq-1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "### [4. Command Summary](#4-command-summary-1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 1. Quick Start"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. Ensure you have Java 11 installed in your Computer."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2. Download the jar file from (link)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your CEGmods"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "4. Ensure you have internet connection."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "5. Open a command window. Run the java -version command to ensure you are using Java 11. "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "6. Launch the jar file using the java -jar command (do not use double-clicking). On successful launch, you will be greeted with a welcome screen as seen below:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                   __ _                      _           "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "   __      ___    / _` |  _ __     ___    __| |    ___   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "  / _|    / -_)   \\__, | | \u0027  \\   / _ \\  / _` |   (_-\u003c   "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "  \\__|_   \\___|   |___/  |_|_|_|  \\___/  \\__,_|   /__/_  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"| "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027\"`-0-0-\u0027 "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Hello, this is CEGMods! What can I do for you?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Enter \u0027help\u0027 to get more information."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Task list has been loaded successfully."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Module list has been loaded successfully."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Today is 2020-11-09"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Now is 20:14"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Currently you don\u0027t have any event!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "6. Type `help` in the command box as prompted and press Enter to execute it. You will see the  commands available."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "6. Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "## 2. Features"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\u003c!-- @@author JinYixuan-Au --\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.1 Adding a Module: `add mod`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "You can add a module to the module list and timetable by typing in the module code and its time slots of lectures and tutorials (the time slot of lab is optional)."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**Step 1:** Type in the module code of the module you want to add following the command format. "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `add mod/\u003cMODULE_CODE\u003e`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `add mod/ST2334`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Then you will see the following: "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Module code: ST2334"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Title: Probability and Statistics"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Description: Basic concepts of probability, conditional probability, independence, random variables, joint and marginal distributions, mean and variance, some common probability distributions, sampling distributions, estimation and hypothesis testing based on a normal population.  This module is targeted at students who are interested in Statistics and are able to meet the pre-requisites. Preclude ME students taking or have taken ME4273."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please enter your time slots for lectures, tutorials, and labs (optional) for this module."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "The format of the time slots is: Day HH:mm-HH:mm (Eg. Thur 12:00-13:00)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture slot:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**Step 2:** Type in the lecture slot and tutorial slot of this module, and indicate whether there is lab for this module as prompted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `Day HH:mm-HH:mm`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `Tue 12:00-14:00`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "For example, if you key in the following:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture slot: Tue 12:00-14:00"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Does this module have another lecture slot?([Y] for yes,type any other character for no)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Y"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Another lecture slot: Fri 12:00-14:00"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Tutorial slot: Mon 14:00-15:00"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Does this module have lab? ([Y] for yes,type any other character for no)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "N"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Noted! I have added this module."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "If you have **conflicting module timeslots**, you will see the following as per the example:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "OOPS!!! There is a time conflict."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Which module do you want to keep? Please enter the module name."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Module: ST2334"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture Slot: Tue 12:00-14:00"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Tutorial Slot: Mon 14:00-15:00"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lab Slot: null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Module: GEH1036"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture Slot: Tue 12:00-14:00"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Tutorial Slot: Mon 13:00-14:00"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lab Slot: null"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please enter the module you wish to keep, and you will see the following:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "ST2334"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Got it! I have add ST2334 to timetable."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**Step 3:** Add the task for the module if necessary."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\u003eNote: Please refer to [`Adding a Task`](#26-Adding-a-Task1) feature to see the detailed formats."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "For example, if you key in the following:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Is there any task you want to add for this module? Y/N"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Y"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please enter T for todo, D for deadline, E for event, P for project subtask."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "E"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "event final exam /at 2020-11-23 17:00"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please type the duration of the event in hours:(e.g. 1, 0.5)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      [E][F]final exam (at:2020-11-23 17:00)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.2 Deleting a Module: `delete mod`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will delete a module from the module list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `delete mod/\u003cMODULE_CODE\u003e`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `delete mod/CG1111`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Noted. I\u0027ve removed this module."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.3 Checking modules: `check modules`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will check all the modules existing in the module list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `check modules`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Module: CG1111"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture Slot: Tue 14:00-17:00"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Tutorial Slot: Fri 14:00-16:00"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lab Slot: null"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Module: ST2334"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lecture Slot: Tue 12:00-14:00"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Tutorial Slot: Mon 14:00-15:00"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Lab Slot: null"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.4 Viewing Timetable: `timetable`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will view the whole timetable."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "1.`today timetable`: viewing today\u0027s timetable"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2.`this week timetable`: viewing weekly timetable"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "today timetable"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-10-21"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14:00-15:00 CG1111 tutorial"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "this week timetable"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-09"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14:00-15:00 ST2334 tutorial"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-10"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "12:00-14:00 ST2334 lecture"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14:00-17:00 CG1111 lecture"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-11"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-12"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14:00-17:00 CG1111 lecture"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-13"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "12:00-14:00 ST2334 lecture"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14:00-16:00 CG1111 tutorial"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-14"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "11:00-13:00 team meeting"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "2020-11-15"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.5 Viewing Task List: `task list`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will view the to-do list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `task list`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Constraint: The task list must contain at least 1 task."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      1.[T][T]debug project"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      2.[E][F]final exam (at:2020-11-23 17:00)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      3.[E][F]team meeting (at:2020-11-14 11:00)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      4.[D][F]project (by:2020-11-10 00:00) [Remaining time: 0 days 5 hours 10 minutes]"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\tYou  have 3 undone task in your list. (3/4)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.6 Adding a Task"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### 2.6.1 Adding a Todo Task: `todo`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will add a task todo to the task list."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `todo \u003cDESCRIPTION\u003e `"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `todo read book`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      [T][F]read book"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### 2.6.2 Adding a Deadline: `deadline`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will add a deadline to the task list."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `deadline lab report /by 2020-11-26 00:00`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "deadline CS2113T project submission /by 2020-11-09 23:59"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      [D][F]CS2113T project submission (by:2020-11-09 23:59) [Remaining time: 0 days 3 hours 34 minutes]"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### 2.6.3 Adding an Event: `event`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will add an event to the task list."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "`event team meeting /at 2020-09-10 10:00`"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please type the duration of the event in hours:(e.g. 1, 0.5)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "`1`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "      [E][F]party (at:2020-09-10 08:00)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.7 Marking a Task as Done: `done`"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will mark a task as done."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `done task/\u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `done task/2`"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": " \tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\t[T][T]lab report"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.8 Deleting a Task: `delete`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will delete a task from task list."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `delete task/\u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `delete task/1`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\t   [T][T]lab report"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### 2.9 Finding a Task with Keyword `find`"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This will find a task from task list with the keyword."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Example of usage: `find book`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\t1.[T][F]read book"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\u003c!-- @@author --\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.10 Adding a Project Task: `project task`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will add a subtask of a specific project to the task list."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e`"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 ptask/write report by/Fri 23:59`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Is there any material you need for this project task?"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Enter your materials or NA"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "NA"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Module: CG2271"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "ProjectTask: write report"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "By: Fri 23:59"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Materials: NA"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "      [P][F]write report (by:Fri 23:59) material: NA"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.11 Viewing project task list: `project task list`"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the project task list."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e project task list`"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 project task list`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "CG2271"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. [P][F]write report (by:Fri 23:59) material: NA"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.12 Viewing project progress: `project progress`"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view the progress of a specific project."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `mod/\u003cMODULE_CODE\u003e progress`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Example of usage: `mod/CG2271 progress`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "CG2271"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "You have done 0/1 (0.00%)."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.13 Viewing to do list: `print todo list`"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will view the list of all the todo tasks"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `print todo list`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "print todo list"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Here are the todo tasks in your list:"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      1.[T][F]read book"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      2.[T][F]return book"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tYou have 2 undone tasks in your todo list (2/2)."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.14 Viewing event list: `print event list`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will view the list of all the events"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format:`print event list`"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "print event list"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Here are the events in your list:"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      1.[E][F]attend CS2113T project meeting (at:2020-11-19 20:00)"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tYou have 1 undone event in your list (1/1)."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.15 Viewing the deadline list: `print deadline list`"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will view the list of all the deadlines"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format:`print deadline list`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "print deadline list"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Here are the deadlines in your list:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      1.[D][F]CS2102 assignment (by:2020-11-11 23:59) [Remaining time: 2 days 3 hours 46 minutes]"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tYou have 1 undone deadline in your list (1/1)."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.16 Viewing the undone task list: `print undone task list`"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will view the list of all the undone tasks"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `print undone task list`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "print undone task list"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Here are the undone tasks in your list:"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      1.[T][F]read book"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      2.[T][F]return book"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      3.[E][F]attend CS2113T project meeting (at:2020-11-19 20:00)"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      4.[D][F]CS2102 assignment (by:2020-11-11 23:59) [Remaining time: 2 days 3 hours 40 minutes]"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tYou have 4 undone tasks in your list."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.17 Clearing past deadlines: `clear deadlines`"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will clear all the past dealines"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format:`clear deadlines`"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "clear deadlines"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "You have removed all the past deadlines!"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Here are the deadlines in your list:"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "      1.[D][F]CS2102 assignment (by:2020-11-11 23:59) [Remaining time: 2 days 3 hours 37 minutes]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tYou have 1 undone deadline in your list (1/1)."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### 2.18 Delete done tasks: `delete done task`"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This will delete all the tasks that have been marked as done"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format:`delete done task`"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "delete done task"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "You have deleted all the done tasks from task list."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "```"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.19 Viewing today\u0027s deadline: `today deadline`"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "This will print out today\u0027s deadline that is not done and the remaining time left to complete."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `today deadline`"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-09 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "[D][F]Homework (by:2020-11-09 23:59) [Remaining time: 0 days 2 hours 29 minutes]"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.20 Viewing this week\u0027s deadline `this week deadline`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "This will print out this week\u0027s deadline that is not done and the remaining time left to complete."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `this week deadline`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-09 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "[D][F]Homework (by:2020-11-09 23:59) [Remaining time: 0 days 2 hours 27 minutes]"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-10 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-11 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "[D][F]Homework2 (by:2020-11-11 12:00) [Remaining time: 1 days 14 hours 28 minutes]"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-12 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-13 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-14 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "2020-11-15 Deadline (haven\u0027t done):"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.21 Exiting the Program: `exit`"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will exit the program."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Bye! Have a nice day with CEG!"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.22 Viewing Help: `help`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "This will view help message."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "```"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Commands are colored green while user input are colored blue."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Please enter using the format as stated strictly!"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "1. Add a module: add mod/\u003cMODULE_CODE\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "2. Delete a module: delete mod/\u003cMODULE_CODE\u003e"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "3. View today\u0027s timetable: today timetable"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "4. View weekly timetable: this week timetable"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "5. View task list: task list"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "6. Add a todo task: todo \u003cDESCRIPTION\u003e"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "7. Add a deadline: deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "8. Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "9. Mark a task as done: done task/\u003cTASK_INDEX\u003e"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "10. Delete a task: delete task/\u003cTASK_INDEX\u003e"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "11. Find a task with keyword: find \u003cKEYWORD\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "12. Add a project subtask: mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e "
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "13. View project task list: mod/\u003cMODULE_CODE\u003e project task list"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "14. View project progress: mod/\u003cMODULE_CODE\u003e progress"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "15. View today\u0027s deadline: today deadline"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "16. View this week deadline: this week deadline"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "17. View all modules\u0027 information: check modules"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "18. View to do list: print todo list"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "19. View event list: print event list"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "20. View deadline list: print deadline list"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "21. View undone task list: print undone task list"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "22. Clear past deadlines: clear deadlines"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "23. Delete done tasks: delete done tasks"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "24. Exit CEGMods: exit"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "_______________________________________________________"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "\u003c!-- @@author JinYixuan-Au --\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## 3. FAQ"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**Q:** How can I save my data?"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**A:** **CEGMods** automatically saves your data on every action you take. You can find them in /data folder in the same directory you run **CEGMods** in."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**Q:** Can I edit the information in data directory?"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "**A:** Yes! As **CEGMods** saves and loads your information from the data directory, editing the files in data folder works. However, we would highly recommend you not to as you may cause data corruption. Use the command line instead if you wish to edit your information!"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "|Feature                              |Command                                               |"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "|---                                   |---                                                   |"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Adding a Module                    |`add mod/\u003cMODULE_CODE\u003e`                             |"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Deleting a Module                    |`delete m/\u003cMODULE_CODE\u003e`                             |"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Checking Modules | `check mod` |"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing Timetable                  |`today timetable`, `this week timetable`  |"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing Task List                   |`task list`     |"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Adding a Todo Task\t                        |`todo \u003cDESCRIPTION\u003e` "
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Adding a Deadline Task\t                        |`deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm`   |"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Adding an Event Task\t                        |`event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e` | "
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Marking a Task as Done               |`done \u003cTASK_INDEX\u003e`                                      |"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Deleting a Task  |`delete \u003cTASK_INDEX\u003e`                                    |"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Finding a Task with Keyword   |`find/ \u003cKEYWORD\u003e`                                              |"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Adding a Project Task   |  `mod/\u003cMODULE_CODE\u003e ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e`       |"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing Project Task List  |  `mod/\u003cMODULE_CODE\u003e project task list`                      |"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing project progress   |    `mod/\u003cMODULE_CODE\u003e progress`                                  |"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing to do list | `print todo list` |"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing event list | `print event list` |"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing deadline list | `print deadline list` |"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing the undone task list | `print undone task list` |\\"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Clearing past deadlines | `clear deadlines` |"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Delete done tasks | `delete done task` |"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing today\u0027s deadlines | `today deadline` |"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing this week\u0027s deadlines | `this week deadline` |"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Exiting the Program                       |`exit`                                                |"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "| Viewing Help                                 |`help`                                                 |"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 332,
      "zhangcaicai123": 112,
      "-": 62,
      "jessicazhang617": 89
    }
  },
  {
    "path": "docs/team/gy716.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "# Yu Geng\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": "## Project: CEGMods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "### Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "CEGMods is a command line (CLI) application that helps computer engineering (CEG) students to manage their modules, tasks and projects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "### My Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "* **Code contributed**: [[Click this link]](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dF11\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgy716\u0026tabRepo\u003dAY2021S1-CS2113T-F11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "* **Enhancement implemented**:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Link to the NUSMods API, which allows the user to check the detailed information of an added module. There are many difficulties in packing json file fetched from API into the jar file. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Allow the user to add the different timeslots freely rather than subject to the limitations of the timeslots provided by NUSMods."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Add a feature to have an overview of all the information of all the modules added."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "* **Contributions to documentations**:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * User Guide: Write the features of adding modules and checking modules in the sections of features and command summary."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Developer Guide: Write the design section of the developer guide and add architecture diagrams and class diagrams."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "* **Contributions beyond the project team**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Response to the other\u0027s questions in the forum.[Link](https://github.com/nus-cs2113-AY2021S1/forum/issues/83)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "  * Bugs reported to other teams\u0027 products.[Link](https://github.com/gy716/ped/issues)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gy716": 18
    }
  },
  {
    "path": "docs/team/jinyixuan-au.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "# Jin Yixuan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## PROJECT: CEGMods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "CEGMods is a command line (CLI) application that helps NUS computer engineering (CEG) students to manage their modules, tasks and projects. CEGMods will allow students to categorize their tasks based on their modules and automatically help prioritize them by deadlines. It will also help students manage project deadlines by splitting them into mini-milestones."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "## Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### Major Enhancement:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Task Class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Functionality: This enhancement allows the user to add tasks (including todo, deadline and event) in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Justification: This feature improves the product a lot more significantly as it allows users to input what they are going to do, and record the task in a list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Highlights: This enhancement shows the users a list with [T]/[F] icons, allowing for quick reading at a glance."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Project Class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Functionality: This enhancement allows the user to add subtasks to their projects, and manage the projects with milestones."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Justification: This feature improves the product a lot more significantly because it helps users to record the subtasks for a project, and it can generate the progress of the projects for the users."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Highlights: Users can view the progress of their projects directly."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### UI Maintenance"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Functionality: This enhancement fix the user interface so that the users are able to use the application more comfortably."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Justification: This improves the product a lot more significantly because the application becomes more convenient to use with suitable user interface."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Highlights: UI can guide the users to input effective commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "### Minor enhancement:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Add Exceptions"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "This enhancement allows the application to detect and locate the errors when the program cannot run correctly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Code Contribution: [Functional and Test Code](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djinyixuan-au\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Other Contributions:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### Documentation:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Added and updated the appendices in Developer Guide. (Pull Request: [#116](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/116))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Added and updated the existing features and FAQ part in User Guide. (Pull Request: [#116](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/116))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "##### Community:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Reviewed Developer Guide from other teams."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Reported bugs for other teams."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* Evaluated code, tested and provided feedback to teammates during many online meetups."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Contributions to User Guide"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Given below are sections I contributed to the User Guide. "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "They showcase my ability to write technical documentation and the technical depth of my contributions to the project."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Adding a Module](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#21-adding-a-module-add-mod-1)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Checking Modules](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#23-checking-modules-check-mod-1)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Viewing Timetable](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#24-viewing-timetable-timetable-1)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Viewing To-Do List](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#25-viewing-to-do-list-task-list-1)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Adding a Task](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#26-adding-a-task-1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [FAQ](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/UserGuide.md#26-adding-a-task-1)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "#### Contributions to Developer Guide"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "Given below are sections I contributed to the Developer Guide. "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "They showcase my ability to write technical documentation and the technical depth of my contributions to the project."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Introduction](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/DeveloperGuide.md#1-introduction-1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Appendix A: Product Scope](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/DeveloperGuide.md#appendix-a-product-scope-1)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Appendix B: User Stories](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/DeveloperGuide.md#appendix-b-user-stories-1)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Appendix C: Non-Functional Requirements](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/DeveloperGuide.md#appendix-c-non-functional-requirements-1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "* [Appendix D: Glossary](https://github.com/AY2021S1-CS2113T-F11-2/tp/blob/master/docs/DeveloperGuide.md#appendix-c-non-functional-requirements-1)"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 61
    }
  },
  {
    "path": "docs/team/zhangcaicai123.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Zhang Danrui\u0027s Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "#### Project: CEGMods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "CEGMods is a task and schedule management desktop CLI App for NUS CEG students. The application is written in Java. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Below are my contributions to the project."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- New Feature:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to view timetable including enrolled modules and added events. [#20](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/20) [#32](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/32)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - What it does: allow users to view all modules\u0027 slots and events"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Justification: This feature helps to visualize all the events added in time order which is clearer for users "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        to manage their schedule."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Highlight: This feature requires searching all the module slots and event happened today or this week and "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        sorting them in time order."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to view upcoming deadlines for today and upcoming week [#118](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/118)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - What it does: allow users to view today\u0027s deadlines and this week deadlines"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Justification: This feature helps users to visualize upcoming deadlines with date and time which can remind "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        users to prioritize their work."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Highlight: This feature requires filtering all the deadline tasks, checking these deadlines date and sorting "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        them according to their remaining time which is more convenient for users."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to storage task list and load task list from storage file [#32](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/32)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - What it does: allow users storage added to-do task,event and deadline and load the stored task list everytime "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        users run the app."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Justification: This feature helps users to view previous added tasks which is more convenient so that users do"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "         not need to type tasks repeatedly."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to check time conflict when adding modules and events [#36](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/36) [#39](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/39) [#90](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/90)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - What it does: check time conflict with exist modules events when adding a module or event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Justification: This feature helps users to check time conflict before adding events or modules into the "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        timetable."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Highlight: This feature requires checking all the slots of each module and events date time which needs "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        consider different situations and implement the algorithm frequently."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to delete all the past deadlines [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - What it does: allow users to clear all the deadlines in the past [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Justification: This feature helps users to clear all the past deadlines instead of deleting them one by ine"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to delete all the tasks have been marked as done [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to view different types of task list including todo list, deadline list,event list and undone "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    list [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Added the ability to display current date,time and ongoing event [#118](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/118)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Modified task class and added the ability to print and find tasks in the task list[#32](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/32) "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Code contributed: [Response link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#sort\u003dgroupTitle\u0026groupSelect\u003dgroupByAuthors\u0026search\u003dzhangcaicai123\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dzhangcaicai123\u0026tabRepo\u003dAY2021S1-CS2113T-F11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~other)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Enhancement to exist features:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Update the ability to convert input time into LocalDateTime format including module class, event and deadline class [#32](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/32)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Modify the deadline class so that user can view the remaining time for every deadline when printing the task list and timetable [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Modify the event class to allow user set event duration [#32](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/32)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Modify add module method to check correct time format before adding [#115](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/115)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    1. Modify module class to taking modules with two lecture slots into consideration [#94](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/94)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Documentation: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - UG: Added the documentation for features: [#122](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/122) [#121](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/121)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        `print todo list`,`print event list`,`print deadline list`, `print undone task list`,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        `clear deadlines`,`delete done task` and `check modules`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - DG: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Added the set up instruction part"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Added the design and implementations part for `task` `tasklist` and `timetable`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        - Added the Appendix for target user profile, value proposition and user stories"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Contributions beyond the project team:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Reporting bugs for other team\u0027s repo: [link](https://github.com/zhangcaicai123/ped/issues)"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 55
    }
  },
  {
    "path": "docs/team/zhongningmou.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "# Zhong Ningmou\u0027s - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "CEGMods is a command line (CLI) application that helps computer engineering (CEG) students to manage their modules, tasks and projects. It is written in Java, and has about 3 kLoC."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Given below are my contributions to the project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Code contributed: [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dZhongNingmou\u0026tabRepo\u003dAY2021S1-CS2113T-F11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code~test-code)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Enhancements implemented:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added project management feature"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: allows students to manage their projects by modules."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: This feature is a unique point of our product because our target users are NUS CEG students, who have plenty of projects. Users can use this feature to manage their projects based on modules. Users can view each project\u0027s task list, as well as the project progress (in percentage). Additionally, users can noted down the materials they need for a particular subtask. What\u0027s more, all the project subtasks will be added into the whole task list, in order to remind our users their coming tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Highlights: This enhancement affects existing task types and storage to txt file. The \u0027ProjectTask\u0027 class need to extend on \u0027Task\u0027. Additionally, our program need to identify whether the user command is in a specific pattern of project task or not. If so, our program will add this project task to each module\u0027s project task list, as well as the whole task list. After that, the storage function will store this task to the duke.txt file. When deleting a project subtask, the task list and txt file also need update. What\u0027s more, our product will confirm with users whether you want to add this project subtask if there is no such module in your timetable, which makes this feature more reasonable and logic."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/31)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/92)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added storage feature of modules"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: stores added module to a local module.txt file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: This feature helps our users to save their schedule. They do not need to re-add their modules to the timetable because our product will read from the local txt file to get all the information about the time slots."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/37)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added `addModule` and `deleteModule` feature"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: allows users to add or delete modules from their time table."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: This feature can help our users to better plan their own timetable and add the timeslots of lecture, tutorial, or lab into their timetable."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Highlights: When adding or deleting a module, the module.txt file need to be updated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/13)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added `Command` class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: improves the whole structure."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: The `Parser` class will take the user command and pass it to the `Command` class to call all the corresponding method."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/35)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added `Ui` class"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: print help, hello and goodbye messages."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: The `Ui` class will print out hello message when a user launch our product, print goodbye message if a user enter in `exit` command, and print out help list when a user enter in `help` command. It will also print out the exception message if the user command does not follow specific patterns. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/30)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Modified exceptions"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: removes redundant exceptions to improve our code quality."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - Justification: There were some redundant exception class in our program, I removed them and replaced with Java\u0027s built in exceptions like `NoSuchElementException`."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/101)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Added Unit tests "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - What is does: adds tests to examine the correctness of exceptions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/106)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    - [Pull Request](https://github.com/AY2021S1-CS2113T-F11-2/tp/pull/98)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Contributions to the DG:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- [Testing Guide](https://demo.codimd.org/YxNfR9oUT5eDWl27gokPxg)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Feature: Add a task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Feature: Delete a task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Feature: Print task list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Feature: View time table"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Review/mentoring contributions:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Help my teammates to fix bugs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Improve the code quality and make the code more SLAP."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "Contributions beyond the project team:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "- Provide my idea to the whole product and help to distribute all the tasks."
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String userCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    TimeTable modules;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs java file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    void run() throws java.text.ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //load tasks in data file to current task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTask());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            modules \u003d new TimeTable(storage.loadModule());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "            storage.loadJson();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ModDataBase.getModFromFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Some errors occurred during the process of fetching data.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Please check your Internet Connection.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Ui.showNow(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (!Parser.isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "                userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                parser.parse(userCommand, tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs main."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param args User input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void main(String[] args) throws java.text.ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 11,
      "gy716": 15,
      "zhangcaicai123": 17,
      "-": 11,
      "jessicazhang617": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/ModDataBase.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModDataBase {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static HashMap\u003cString, Module\u003e modules \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Convert module from Json object to local module object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module JSON object module."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void parseModule(JSONObject module) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Module mod \u003d new Module();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCode \u003d (String) module.get(\"moduleCode\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.title \u003d (String) module.get(\"title\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.description \u003d (String) module.get(\"description\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "        mod.moduleCredit \u003d (String) module.get(\"moduleCredit\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "        modules.put(mod.moduleCode, mod);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Read module from storage and retrieve information from JSON."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If unable to read data from storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse data from storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void getModFromFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Object obj \u003d parser.parse(new FileReader(\"data/AllModsInfo.json\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gy716"
        },
        "content": "        JSONArray moduleList \u003d (JSONArray) obj;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gy716"
        },
        "content": "        moduleList.forEach(module -\u003e parseModule((JSONObject) module));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 46,
      "jessicazhang617": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Module {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String moduleCode;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "    String moduleCredit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String lecSlot;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String tutSlot;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String labSlot \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecSlot2 \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int lecDay;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int tutDay;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int labDay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    int lecDay2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String lecTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String tutTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String labTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    String lecTime2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecBegin;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime tutBegin;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime labBegin;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecBegin2;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecEnd;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime tutEnd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime labEnd;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    LocalTime lecEnd2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration lecDuration;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration tutDuration;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration labDuration;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Duration lecDuration2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    boolean isSetSlotSuccess \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Creates Module class object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Module(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds lecture, tutorial and lab slot timings to module."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void setSlot() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String lecDay \u003d this.lecSlot.substring(0, this.lecSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecDay \u003d weekOfDay(lecDay);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecTime \u003d this.lecSlot.substring(this.lecSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecBegin \u003d beginTime(this.lecTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecEnd \u003d endTime(this.lecTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.lecDuration \u003d setInterval(this.lecBegin, this.lecEnd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String lecDay2 \u003d this.lecSlot2.substring(0, this.lecSlot2.indexOf(\" \"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecDay2 \u003d weekOfDay(lecDay2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecTime2 \u003d this.lecSlot2.substring(this.lecSlot2.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecBegin2 \u003d beginTime(this.lecTime2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecEnd2 \u003d endTime(this.lecTime2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.lecDuration2 \u003d setInterval(this.lecBegin2, this.lecEnd2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,lecBegin2,lecEnd2,this.lecDay,this.lecDay2)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String tutDay \u003d this.tutSlot.substring(0, this.tutSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutDay \u003d weekOfDay(tutDay);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutTime \u003d this.tutSlot.substring(this.tutSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutBegin \u003d beginTime(this.tutTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutEnd \u003d endTime(this.tutTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            this.tutDuration \u003d setInterval(this.tutBegin, this.tutEnd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,tutBegin,tutEnd,this.lecDay,this.tutDay)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    || TimeTable.checkTimeDayConflict(lecBegin2,lecEnd2,tutBegin,tutEnd,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    this.lecDay2,this.tutDay)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (this.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String labDay \u003d this.labSlot.substring(0, this.labSlot.indexOf(\" \"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labDay \u003d weekOfDay(labDay);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labTime \u003d this.labSlot.substring(this.labSlot.indexOf(\" \")).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labBegin \u003d beginTime(this.labTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labEnd \u003d endTime(this.labTime);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                this.labDuration \u003d setInterval(this.labBegin, this.labEnd);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (TimeTable.checkTimeDayConflict(lecBegin,lecEnd,labBegin,labEnd,this.lecDay,this.labDay)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        || TimeTable.checkTimeDayConflict(labBegin,labEnd,tutBegin,tutEnd,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        this.labDay,this.tutDay)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (!isSetSlotSuccess) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"OOPS!!! Cannot add \" + this.moduleCode"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        + \" because of the time conflict between slots.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"Please carefully check your module timetable and add the module again.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            isSetSlotSuccess \u003d false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"OOPS!!! Cannot add \" + this.moduleCode + \".\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Please carefully follow the time format.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns lecture time, module code."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lecture text."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecText() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.lecTime + \" \" + this.moduleCode + \" lecture\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns tutorial time, module code."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of tutorial text."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String tutText() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.tutTime + \" \" + this.moduleCode + \" tutorial\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns lab time, module code."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lab text."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String labText() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "        return this.labTime + \" \" + this.moduleCode + \" lab\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns second lecture time, module code."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return String of lecture text."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String lecText2() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.lecTime2 + \" \" + this.moduleCode + \" lecture\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int weekOfDay(String day) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int dayValue \u003d 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Sun\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Sunday\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 7;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Mon\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Monday\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Tue\":"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Tuesday\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 2;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Wed\":"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Wednesday\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 3;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Thur\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Thursday\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Thu\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 4;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Fri\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Friday\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 5;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Sat\":"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        case \"Saturday\":"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            dayValue \u003d 6;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Sorry, the day value was not recognized. \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return dayValue;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns begin time after parsing."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param timeInterval Time interval entered by user."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return LocalTime beginTime."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalTime beginTime(String timeInterval) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return LocalTime.parse(timeInterval.substring(0, timeInterval.indexOf(\"-\")).trim());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns end time after parsing."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param timeInterval Time interval entered by user."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return LocalTime endTime."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalTime endTime(String timeInterval) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return LocalTime.parse(timeInterval.substring(timeInterval.indexOf(\"-\") + 1).trim());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns interval duration after parsing."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param begin Interval begin time."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param end Interval end time."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return Duration of interval."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Duration setInterval(LocalTime begin, LocalTime end) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return Duration.between(begin, end);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts module details to string for data saving."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return moduleToAdd."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleToAdd;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (labSlot !\u003d null) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + labSlot + \"|\" + lecSlot2;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + labSlot;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot + \"|\" + null + \"|\" + lecSlot2;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            moduleToAdd \u003d moduleCode + \"|\" + lecSlot + \"|\" + tutSlot;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return moduleToAdd;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 1,
      "ZhongNingmou": 25,
      "gy716": 12,
      "zhangcaicai123": 147,
      "jessicazhang617": 50
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Runs parsing on user commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param userCommand User Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList    Task List."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param storage     Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void parse(String userCommand, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isPrintHelpCommand \u003d userCommand.toLowerCase().contains(\"help\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isExitCommand \u003d userCommand.toLowerCase().equals(\"exit\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isAddModCommand \u003d Pattern.matches(\"^add[\\\\s]+mod/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isAddTask \u003d Pattern.matches(\"^(todo|deadline|event) [\\\\S\\\\s]+\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                userCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isAddProjectTaskCommand \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Pattern.matches(\"^mod/[\\\\S\\\\s]+ptask/[\\\\S\\\\s]+by/[\\\\s\\\\S]+\", userCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isDeleteModule \u003d Pattern.matches(\"^delete[\\\\s]+mod/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isDeleteTask \u003d Pattern.matches(\"^delete[\\\\s]+task/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isMarkAsDone \u003d Pattern.matches(\"^done[\\\\s]+task/[\\\\S\\\\s]+\", userCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintWeeklyTimetable \u003d Pattern.matches(\"^this[\\\\s]+week[\\\\s]+timetable[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintTodayTimeTable \u003d Pattern.matches(\"^today[\\\\s]+timetable[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintProjectTaskList \u003d Pattern.matches(\"^mod/[\\\\S\\\\s]+project[\\\\s]+task[\\\\s]+list[\\\\s]*\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": "                userCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintProgress \u003d Pattern.matches(\"^mod/[\\\\S\\\\s]+project[\\\\s]+progress[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintTodayDeadline \u003d Pattern.matches(\"^today[\\\\s]+deadline[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintWeeklyDeadline \u003d Pattern.matches(\"^this[\\\\s]+week[\\\\s]+deadline[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isPrintTaskList \u003d Pattern.matches(\"^task[\\\\s]+list[\\\\s]*\", userCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintUndoneList \u003d Pattern.matches(\"^print undone task list\", userCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isDeleteDoneTask \u003d Pattern.matches(\"^delete done task\", userCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintToDoList \u003d Pattern.matches(\"^print todo list\", userCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintEventList \u003d Pattern.matches(\"^print event list\", userCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isPrintDeadlineList \u003d Pattern.matches(\"^print deadline list\", userCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean isClearDeadlines \u003d Pattern.matches(\"^clear deadlines\", userCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isFind \u003d Pattern.matches(\"^find [\\\\s\\\\S]+\", userCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isCheckModule \u003d Pattern.matches(\"^check[\\\\s]+modules[\\\\s]*\",userCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (isPrintHelpCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printHelpMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isExitCommand) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gy716"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printByeMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddModCommand) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.addModule(userCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isDeleteModule) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.deleteModule(userCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyTimetable) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Command.printWeeklyTimetable(taskList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayTimeTable) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Command.printTodayTimetable(taskList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isDeleteTask) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.deleteTask(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isAddTask) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                String type \u003d Command.getTaskType(userCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addToDo(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addDeadline(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    Command.addEvent(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isAddProjectTaskCommand) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.addProjectTask(userCommand, taskList, storage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProjectTaskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printProjectTaskList(userCommand);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (isPrintProgress) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printProgress(userCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTodayDeadline) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printTodayDeadline(taskList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintWeeklyDeadline) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.printWeeklyDeadline(taskList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isMarkAsDone) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.done(taskList, storage, userCommand);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isFind) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Command.find(taskList, userCommand);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintTaskList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printList();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintUndoneList) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printUndoneList();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isDeleteDoneTask) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.deleteDoneTask();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintToDoList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printTodoList();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintEventList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printEventList();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isPrintDeadlineList) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.printDeadlineList();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (isClearDeadlines) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                TaskList.clearDeadlines();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isCheckModule) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gy716"
        },
        "content": "                Command.printModuleInfo();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (DukeException | ParseException | IOException | org.json.simple.parser.ParseException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Ui.dealWithException(userCommand);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 6,
      "ZhongNingmou": 43,
      "gy716": 59,
      "zhangcaicai123": 61,
      "jessicazhang617": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/TimeTable.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class TimeTable {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static ArrayList\u003cModule\u003e modules \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public TimeTable() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs Timetable class object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param loadedList Loaded timetable arraylist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public TimeTable(ArrayList\u003cModule\u003e loadedList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.modules \u003d loadedList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints module\u0027s code, lecture, tutorial and lab (if applicable) details."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module Module selected."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModule(Module module) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gy716"
        },
        "content": "        System.out.println(\"Module: \" + module.moduleCode);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lecture Slot: \" + module.lecSlot);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Tutorial Slot: \" + module.tutSlot);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Lab Slot: \" + module.labSlot);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static boolean isModuleAdded(String moduleCode) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        for (int i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (modules.get(i).moduleCode.equals(moduleCode)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printModuleDetails(String moduleCode) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Module code: \" + ModDataBase.modules.get(moduleCode).moduleCode);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Title: \" + ModDataBase.modules.get(moduleCode).title);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Description: \" + ModDataBase.modules.get(moduleCode).description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printAddTaskInformation() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Is there any task you want to add for this module? Y/N\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String isHaveTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        while (!isHaveTask.equalsIgnoreCase(\"Y\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                \u0026\u0026 !isHaveTask.equalsIgnoreCase(\"N\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Is there any task you want to add for this module? Y/N\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            isHaveTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (isHaveTask.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Please enter T for todo, D for deadline, E for event, \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"P for project subtask.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String taskType \u003d in.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (taskType.equalsIgnoreCase(\"T\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add a task to do: todo \u003cDESCRIPTION\u003e\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"D\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                System.out.println(\"Add a deadline: deadline \u003cDESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:mm\u003e\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"E\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                System.out.println(\"Add an event: event \u003cDESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:mm\u003e\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else if (taskType.equalsIgnoreCase(\"P\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Add a project subtask: mod/\u003cMODULE_CODE\u003e \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        + \"ptask/\u003cDESCRIPTION\u003e by/\u003cDEADLINE\u003e\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addModuleToStorage(Module module) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleToAdd;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        moduleToAdd \u003d module.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Storage.appendToFileModule(moduleToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Creates and adds module to data file."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command Command of user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If there is no matching module."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addModule(String command) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "        String moduleCode \u003d command.substring(command.indexOf(\"/\") + 1).toUpperCase();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isModuleAdded \u003d isModuleAdded(moduleCode);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (!isModuleAdded) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            boolean isModuleExit \u003d ModDataBase.modules.containsKey(moduleCode);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Module module \u003d new Module();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (isModuleExit) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    printModuleDetails(moduleCode);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module \u003d ModDataBase.modules.get(moduleCode);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.println(\"Please enter your time slots for lectures, tutorials, \""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gy716"
        },
        "content": "                            + \"and labs (optional) for this module.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    System.out.println(\"The format of the time slots is: Day HH:mm-HH:mm (Eg. Thur 12:00-13:00)\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.print(\"Lecture slot: \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module.lecSlot \u003d checkSlotsFormat(in.nextLine());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Does this module have another lecture slot?\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            + \"([Y] for yes,type any other character for no)\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String isHaveAnotherLec \u003d in.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (isHaveAnotherLec.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.print(\"Another lecture slot: \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecSlot2 \u003d checkSlotsFormat(in.nextLine());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.print(\"Tutorial slot: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    module.tutSlot \u003d checkSlotsFormat(in.nextLine());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"Does this module have lab? ([Y] for yes,type any other character for no)\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    String isHaveLab \u003d in.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    if (isHaveLab.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.print(\"Lab slot: \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.labSlot \u003d checkSlotsFormat(in.nextLine());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    module.setSlot();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (module.isSetSlotSuccess) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gy716"
        },
        "content": "                        int moduleIndex \u003d checkInsertion(module);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gy716"
        },
        "content": "                        if (moduleIndex !\u003d -1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            checkModule(module, moduleIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            modules.add(module);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            addModuleToStorage(module);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            System.out.println(\"Noted! I have added this module.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                            printAddTaskInformation();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    throw new NoSuchElementException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gy716"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"There is no such module.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"You have already add this module.\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"Please enter another module code.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns the index of the module added."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns -1 if there is a conflict in the module with another module in timetable."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module Newly added module."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return i index of module, unless there is a conflict, then -1."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static int checkInsertion(Module module) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (modules.size() \u003e 1) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            for (i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).lecBegin, modules.get(i).lecEnd,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecDay, modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).tutBegin, modules.get(i).tutEnd,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.lecDay, modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).lecBegin, modules.get(i).lecEnd,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.tutDay, modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        modules.get(i).tutBegin, modules.get(i).tutEnd,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        module.tutDay, modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin, modules.get(i).lecEnd, module.labDay, modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).tutBegin, modules.get(i).tutEnd, module.labDay, modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).labSlot !\u003d null) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd, module.lecDay, modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd, module.tutDay, modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).labSlot !\u003d null \u0026\u0026 module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).labBegin, modules.get(i).labEnd, module.labDay, modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (modules.get(i).lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin, module.lecEnd,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin2, modules.get(i).lecEnd2, module.lecDay, modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.tutBegin, module.tutEnd,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin2, modules.get(i).lecEnd2, module.tutDay, modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.labBegin, module.labEnd,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                modules.get(i).lecBegin2, modules.get(i).lecEnd2,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                module.labDay, modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                modules.get(i).lecBegin2, modules.get(i).lecEnd2,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                module.lecDay2, modules.get(i).lecDay2)) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).lecBegin, modules.get(i).lecEnd, module.lecDay2, modules.get(i).lecDay)) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            modules.get(i).tutBegin, modules.get(i).tutEnd, module.lecDay2, modules.get(i).tutDay)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return i;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        if (checkTimeDayConflict(module.lecBegin2, module.lecEnd2,"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                modules.get(i).labBegin, modules.get(i).labEnd,"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                module.lecDay2, modules.get(i).labDay)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            return i;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds the chosen module should there be a conflict."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param module      Module."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param moduleIndex Index of module."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws IOException If invalid input."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void checkModule(Module module, int moduleIndex) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"OOPS!!! There is a time conflict.\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Which module do you want to keep? Please enter the module name.\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        printModule(modules.get(moduleIndex));"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        printModule(module);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String userCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (userCommand.equals(module.moduleCode)) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            modules.set(moduleIndex, module);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Storage.updateModuleToFile(modules);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Got it! I have add \" + userCommand + \" to timetable.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Deletes a module."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints statement of error if there is invalid module input."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModule(String command) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String modCode \u003d command.substring(command.indexOf(\u0027/\u0027) + 1).toUpperCase();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (modules.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                throw new NoSuchElementException();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                for (int i \u003d 0; i \u003c modules.size(); i++) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (modules.get(i).moduleCode.contains(modCode)) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        modules.remove(i);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        Storage.updateModuleToFile(modules);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this module\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    if (i \u003d\u003d modules.size() - 1) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        throw new NoSuchElementException();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"OOPS!!! There is no such module.\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches timetable."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse taskList content."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyTimetable(todayMonth, todayDay, todayYear, taskList);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints daily timetable."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param month Month."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param day   Day."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param year  Year"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse input."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyTimetable(int month, int day, int year, TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%02d-%02d\", year, month, day);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(date);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d todayList(date, taskList);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String event : todayList) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches today\u0027s deadlines."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance(Locale.ENGLISH);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayMonth \u003d (calendar.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayDay \u003d calendar.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int todayYear \u003d calendar.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDailyDeadline(todayMonth, todayDay, todayYear, taskList);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints today\u0027s deadlines."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param day   Day."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param month Month."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param year  Year."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDailyDeadline(int month, int day, int year, TaskList taskList) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String date \u003d String.format(\"%4d-%02d-%02d\", year, month, day);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(date + \" Deadline (haven\u0027t done):\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e deadlineList \u003d todayDeadline(date, taskList);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (String ddl : deadlineList) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(ddl);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Fetches this week\u0027s deadlines."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list of deadlines."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyDeadline(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR), taskList);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints this week\u0027s timetable."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse input."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int week \u003d 7;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int day \u003d 0;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (day \u003c week) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            printDailyTimetable(calendar.get(Calendar.MONTH) + 1,"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.DAY_OF_MONTH),"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    calendar.get(Calendar.YEAR), taskList);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            day++;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns arraylist of today\u0027s events."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param date     Date of event."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return todayList Today\u0027s events."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @throws ParseException If unable to parse input."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayList(String date, TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        LocalDate todayDate \u003d LocalDate.parse(date, dtf);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int weekDay \u003d todayDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (module.lecDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.lecText());"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.tutDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.tutText());"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.labDay \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.labText());"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.lecDay2 \u003d\u003d weekDay) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                todayList.add(module.lecText2());"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (event.getStatusIcon().equals(\"F\") \u0026\u0026 event.beginTime.toLocalDate().equals(todayDate)) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    todayList.add(event.calendarFormat());"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Collections.sort(todayList);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayList;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns arraylist of today\u0027s deadlines."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param date     Date of deadlines."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return todayDeadline Today\u0027s deadlines."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ArrayList\u003cString\u003e todayDeadline(String date, TaskList taskList) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cString\u003e todayDeadline \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //deadline task"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.text().startsWith(\"D\")) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (deadline.getBy().substring(0,deadline.getBy().indexOf(\" \")).trim().equals(date)) {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    deadlines.add(deadline);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Collections.sort(deadlines, (deadline1, deadline2) -\u003e {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (deadline1.remainingTime() \u003c deadline2.remainingTime()) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (deadline1.remainingTime() \u003d\u003d deadline1.remainingTime()) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        });"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Deadline deadline: deadlines) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            todayDeadline.add(deadline.toString());"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return todayDeadline;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns existing event if there is an conflict."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * If there is no conflict, null is returned."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param insertEvent New event."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param taskList    Task list of current events."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return existEvent current event, if existing."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static Event checkEventConflict(Event insertEvent, TaskList taskList) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Event existEvent \u003d (Event) task;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (existEvent.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkDateTimeConflict(existEvent.beginTime, existEvent.endTime,"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.beginTime, insertEvent.endTime)) {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return existEvent;"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is datetime conflict."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of event A."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of event B."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA   End of event A."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB   End of event B."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkDateTimeConflict(LocalDateTime beginA, LocalDateTime endA,"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                                LocalDateTime beginB, LocalDateTime endB) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (beginA.isAfter(beginB) \u0026\u0026 beginA.isBefore(endB)) {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginB.isAfter(beginA) \u0026\u0026 beginB.isBefore(endA)) {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginA.isEqual(beginB)) {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is time conflict."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of todo A."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of todo B."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA   End of todo A."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB   End of todo B."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkTimeConflict(LocalTime beginA, LocalTime endA, LocalTime beginB, LocalTime endB) {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (beginA.isAfter(beginB) \u0026\u0026 beginA.isBefore(endB)) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginB.isAfter(beginA) \u0026\u0026 beginB.isBefore(endA)) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (beginA.equals(beginB)) {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is module with event conflict."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param insertEvent newEvent."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkEventModuleConflict(Event insertEvent) {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int weekday \u003d insertEvent.beginTime.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Module module : modules) {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (weekday \u003d\u003d module.lecDay) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        insertEvent.endTime.toLocalTime(), module.lecBegin, module.lecEnd)) {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (weekday \u003d\u003d module.tutDay) {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        insertEvent.endTime.toLocalTime(), module.tutBegin, module.tutEnd)) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.labSlot !\u003d null) {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (weekday \u003d\u003d module.labDay) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.endTime.toLocalTime(), module.labBegin, module.labEnd)) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (module.lecSlot2 !\u003d null) {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (weekday \u003d\u003d module.lecDay2) {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (checkTimeConflict(insertEvent.beginTime.toLocalTime(),"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                            insertEvent.endTime.toLocalTime(), module.lecBegin2, module.lecEnd2)) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns boolean if there is time-day conflict."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginA Start of event A."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param beginB Start of event B."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endA   End of event A."
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param endB   End of event B."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static boolean checkTimeDayConflict(LocalTime beginA, LocalTime endA,"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                               LocalTime beginB, LocalTime endB,"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                               int weekDayA, int weekDayB) {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (weekDayA \u003d\u003d weekDayB) {"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return checkTimeConflict(beginA, endA, beginB, endB);"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get correct formats slots."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param slots input slots"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return slots with correct format"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static String checkSlotsFormat(String slots) {"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(^Mon|Monday|Tue|Wuesday|Wed|Wednesday|Thursday|Thur|Thu|Fri|Friday)\""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                + \"( \\\\d\\\\d:\\\\d\\\\d)(-)(\\\\d\\\\d:\\\\d\\\\d)\";"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //DDD HH:MM-HH:MM format"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Matcher m \u003d r.matcher(slots);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (m.find()) {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                LocalTime endTime \u003d LocalTime.parse(m.group(4));"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                LocalTime beginTime \u003d LocalTime.parse(m.group(2).trim());"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (beginTime.isBefore(endTime)) {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    return slots;"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"The begin time cannot be after the end time.\");"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    System.out.println(\"Please enter correct slots with DDD HH:mm-HH:mm format\");"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    slots \u003d in.nextLine();"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                System.out.println(\"Please enter the slot again with DDD HH:mm-HH:mm format: (e.g.Fri 11:00-12:00)\");"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                slots \u003d in.nextLine();"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 178,
      "gy716": 11,
      "zhangcaicai123": 342,
      "jessicazhang617": 136
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    public static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    public static final String ANSI_GREEN \u003d \"\\u001B[32;1m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    public static final String ANSI_BLUE \u003d \"\\u001B[34;1m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints the logo of CEGMods and prompts for command \u0027help\u0027."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "            \"                   __ _                      _           \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    + \"   __      ___    / _` |  _ __     ___    __| |    ___   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    +  \"  / _|    / -_)   \\\\__, | | \u0027  \\\\   / _ \\\\  / _` |   (_-\u003c   \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    +  \"  \\\\__|_   \\\\___|   |___/  |_|_|_|  \\\\___/  \\\\__,_|   /__/_  \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    +  \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"| \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    +  \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                    +  \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027 \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "        System.out.println(ANSI_GREEN + logo + ANSI_RESET);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(\"Hello, this is CEGMods! What can I do for you?\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "                + \"Enter \" + ANSI_GREEN + \"\u0027help\u0027\" + ANSI_RESET + \" to get more information.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Prints content of help message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Commands are colored \" + ANSI_GREEN + \"green\" + ANSI_RESET"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \" while user input are colored \" + ANSI_BLUE + \"blue.\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"Please enter using the format as stated strictly!\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"1. Add a module:\" + ANSI_GREEN + \" add mod/\" + ANSI_BLUE + \"\u003cMODULE_CODE\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"2. Delete a module: \" + ANSI_GREEN + \"delete mod/\" + ANSI_BLUE + \"\u003cMODULE_CODE\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"3. View today\u0027s timetable: \" + ANSI_GREEN + \"today timetable\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"4. View weekly timetable:\" + ANSI_GREEN + \" this week timetable\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"5. View task list: \" + ANSI_GREEN + \"task list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"6. Add a todo task: \" + ANSI_GREEN + \"todo\" + ANSI_BLUE + \" \u003cDESCRIPTION\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"7. Add a deadline: \" + ANSI_GREEN + \"deadline\" + ANSI_BLUE + \" \u003cDESCRIPTION\u003e \" + ANSI_GREEN + \"/by\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + ANSI_BLUE + \" \u003cYYYY-MM-DD HH:mm\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"8. Add an event: \" + ANSI_GREEN + \"event\" + ANSI_BLUE + \" \u003cDESCRIPTION\u003e \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + ANSI_GREEN + \"/at\" + ANSI_BLUE + \" \u003cYYYY-MM-DD HH:mm\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"9. Mark a task as done: \" + ANSI_GREEN + \"done task/\" + ANSI_BLUE + \"\u003cTASK_INDEX\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"10. Delete a task: \" + ANSI_GREEN + \"delete task/\" + ANSI_BLUE + \"\u003cTASK_INDEX\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"11. Find a task with keyword: \" + ANSI_GREEN + \"find \" + ANSI_BLUE + \"\u003cKEYWORD\u003e\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"12. Add a project subtask: \" + ANSI_GREEN + \"mod/\" + ANSI_BLUE + \"\u003cMODULE_CODE\u003e \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + ANSI_GREEN + \"ptask/\" + ANSI_BLUE + \"\u003cDESCRIPTION\u003e \" + ANSI_GREEN + \"by/\" + ANSI_BLUE"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"\u003cDEADLINE\u003e\" + \" \\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"13. View project task list: \" + ANSI_GREEN + \"mod/\" + ANSI_BLUE + \"\u003cMODULE_CODE\u003e\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + ANSI_GREEN + \" project \" + \"task list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"14. View project progress: \" + ANSI_GREEN + \"mod/\" + ANSI_BLUE + \"\u003cMODULE_CODE\u003e\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + ANSI_GREEN + \" progress\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"15. View today\u0027s deadline: \" + ANSI_GREEN + \"today deadline\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"16. View this week deadline:\" + ANSI_GREEN + \" this week deadline\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"17. View all modules\u0027 information: \" + ANSI_GREEN + \"check modules\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"18. View to do list: \" + ANSI_GREEN + \"print todo list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"19. View event list: \" + ANSI_GREEN + \"print event list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"20. View deadline list: \" + ANSI_GREEN + \"print deadline list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"21. View undone task list: \" + ANSI_GREEN + \"print undone task list\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"22. Clear past deadlines: \" + ANSI_GREEN + \"clear deadlines\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"23. Delete done tasks: \" + ANSI_GREEN + \"delete done tasks\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"24. Exit CEGMods: \" + ANSI_GREEN + \"exit\" + ANSI_RESET"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Prints content of bye message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Bye! Have a nice day with CEG!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Prints error message if delete index is out of bound."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * If it is not a delete exception, prints standard error message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  Command input by user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void dealWithException(String command) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println((\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"Please follow the input format correctly.\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Prints statement that there is file loading error."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.printf(\"\\tThere are some errors when loading file.%n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Print affirmative statement of task being marked done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param task Task that is marked done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printMarkMessage(Task task) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\" \\t\" + lineCutOff);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.printf(\" \\tNice! I\u0027ve marked this task as done:%n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"\\t  \" + task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\" \\t\" + lineCutOff);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Show current date, time and ongoing event."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param taskList task list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @throws ParseException if cannot parse date time"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void showNow(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        ArrayList\u003cString\u003e todayList \u003d TimeTable.todayList(now.toLocalDate().toString(),taskList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Today is \" + now.toLocalDate().toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"Now is \" + now.toLocalTime().getHour() + \":\" + now.toLocalTime().getMinute());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        for (String event : todayList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String begin \u003d event.substring(0,event.indexOf(\"-\"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String end \u003d event.substring(event.indexOf(\"-\") + 1,event.indexOf(\" \"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            DateTimeFormatter parser \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            LocalTime beginTime \u003d LocalTime.parse(begin,parser);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            LocalTime endTime \u003d LocalTime.parse(end,parser);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            if (now.toLocalTime().isAfter(beginTime) \u0026\u0026 now.toLocalTime().isBefore(endTime)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    || now.toLocalTime().equals(beginTime)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                System.out.println(\"Your current event is: \" + event);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"Currently you don\u0027t have any event!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 113,
      "ZhongNingmou": 14,
      "zhangcaicai123": 9,
      "jessicazhang617": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import seedu.duke.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.TimeTable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.exception.EmptyFindException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.project.ProjectManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "import java.lang.IndexOutOfBoundsException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void addModule(String userCommand) throws IOException, org.json.simple.parser.ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.addModule(userCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printHelpMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printHelpMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Ui.printByeMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModule(String userCommand) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.deleteModule(userCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printWeeklyTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        TimeTable.printWeeklyTimetable(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodayTimetable(TaskList taskList) throws ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        TimeTable.printTodayTimetable(taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Add todo task to the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void addToDo(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String task \u003d getTodo(command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Todo taskToAdd \u003d new Todo(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Add deadline task to the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void addDeadline(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Deadline taskToAdd \u003d new Deadline(getTask(command));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String by \u003d getTime(command);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskToAdd.setBy(by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Add event to the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void addEvent(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Event taskToAdd \u003d new Event(getTask(command));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String at \u003d getTime(command);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskToAdd.setAt(at);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"Please type the duration of the event in hours:(e.g. 1, 0.5)\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            long duration \u003d Long.parseLong(in.nextLine());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskToAdd.setDuration(duration);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            Event conflictEvent \u003d TimeTable.checkEventConflict(taskToAdd, taskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            if (conflictEvent \u003d\u003d null \u0026\u0026 !TimeTable.checkEventModuleConflict(taskToAdd)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                taskToAdd.setAt(at);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                taskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                storage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            } else if (conflictEvent !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                while (conflictEvent !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Oops!There is a time conflict with your previous event.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Which one do you want to keep?\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Type 1 for \" + conflictEvent.getDescription()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            + \" 2 for \" + taskToAdd.getDescription());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    int index \u003d in.nextInt();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Do you want to re-allocate the other one?[Y/N]\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    String isChange \u003d in.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    if (isChange.equals(\"Y\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        System.out.println(\"Please enter a new time for this event:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        String time \u003d in.next();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            taskToAdd.setAt(time);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            conflictEvent.setAt(time);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        if (index \u003d\u003d 2) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            taskList.deleteTask(taskList.getTaskList().indexOf(conflictEvent));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            storage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                            taskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    conflictEvent \u003d TimeTable.checkEventConflict(taskToAdd, taskList);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                //conflict with module"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                while (TimeTable.checkEventModuleConflict(taskToAdd)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Oops!There is a time conflict with your module.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    System.out.println(\"Please enter a new time for your event :\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    String newAt \u003d in.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                    taskToAdd.setAt(newAt);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            ExceptionMessage.printEmptyDescriptionExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            ExceptionMessage.printEmptyTimeExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.println(\"This is not a valid duration.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IllegalStateException if no index is input"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void done(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d getIndex(command) - 1;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Task taskToMark \u003d taskList.get(index);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskToMark.markAsDone();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Ui.printMarkMessage(taskToMark);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.updateDoneToFile(index, taskList);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You did not type or type wrong index of the task.%n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Delete task from task list."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IllegalStateException if no index is input"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteTask(TaskList taskList, Storage storage, String command) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            int index \u003d getIndex(command) - 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            storage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            taskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.printf(\"\\t  OOPS!!! You did not type or type wrong index of the task.%n\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get the description of todo task."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return the description of user\u0027s input todo task"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IllegalStateException If description is null"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static String getTodo(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gy716"
        },
        "content": "        String todoTask \u003d command.substring(4);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (todoTask.isBlank()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gy716"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gy716"
        },
        "content": "            return todoTask.trim();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Get the task description for deadline and event."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return the task description of user\u0027s input deadline or event"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getTask(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gy716"
        },
        "content": "        String pattern \u003d \"(event|deadline)([\\\\s\\\\S]+)(/at|/by)(.*)\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (Pattern.matches(\"^(event|deadline)[\\\\s]*(/at|/by)[\\\\s\\\\S]*\", command)) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gy716"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return m.group(2).trim();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Returns the time for event or deadline."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Accept dates in yyyy-mm-dd format (e.g., 2019-10-15)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * and print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return time for event or deadline task"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws EmptyTimeException If no String for time information is found"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static String getTime(String command) throws EmptyTimeException {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String pattern \u003d \"(event|deadline)( .*)(/at|/by)( \\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d \\\\d\\\\d:\\\\d\\\\d)\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //yyyy-mm-dd HH:MM format"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (m.find()) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            time \u003d m.group(4).trim();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            throw new EmptyTimeException();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void addProjectTask(String command, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectTask projectTask \u003d ProjectManager.addProjectTask(command);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (projectTask !\u003d null) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                taskList.addTask(projectTask);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                storage.appendToFile(projectTask.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProjectTaskList(String userCommand) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectManager.printProjectTaskList(userCommand);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProgress(String userCommand) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ProjectManager.printProgress(userCommand);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printTodayDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.printTodayDeadline(taskList);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printWeeklyDeadline(TaskList taskList) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable.printWeeklyDeadline(taskList);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public static void printModuleInfo() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (TimeTable.modules.size() !\u003d 0) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gy716"
        },
        "content": "            for (Module module : TimeTable.modules) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gy716"
        },
        "content": "                System.out.println(TimeTable.lineCutOff);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gy716"
        },
        "content": "                TimeTable.printModule(module);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gy716"
        },
        "content": "                System.out.println(TimeTable.lineCutOff);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"You haven\u0027t added any modules.\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Find task in the task list with keyword."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  user input"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @throws EmptyFindException if no keyword is input"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void find(TaskList taskList, String command) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            String keyword \u003d getFind(command);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            taskList.printSearchResult(keyword);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } catch (EmptyFindException e) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            ExceptionMessage.printEmptyKeywordMessage();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Get the keyword of finding task command."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command user input command"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @return the keyword that user wants to search in the task list"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @throws EmptyFindException If no keyword is found"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static String getFind(String command) throws EmptyFindException {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        String keyword \u003d command.substring(4);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (keyword.isBlank()) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            return keyword.trim();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Get index of task that need to be deleted or mark as done."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param command  user input command"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @return index the index of task that user wants to delete or mark as done"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @throws IllegalStateException If user does not input any integer"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static int getIndex(String command) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        String pattern \u003d \"(done|delete)( task/)(\\\\d+)\";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (Pattern.matches(\"done|delete task/ *\", command)) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            throw new IllegalStateException();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            index \u003d Integer.parseInt(m.group(3));"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static String getTaskType(String command) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        String pattern \u003d \"^(todo|deadline|event).*\";"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Pattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Matcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return m.group(1);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 182,
      "ZhongNingmou": 156,
      "gy716": 28,
      "zhangcaicai123": 13,
      "jessicazhang617": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 3,
      "zhangcaicai123": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyDescriptionException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyFindException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyFindException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyTimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/ExceptionMessage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "//@@author JinYixuan-Au"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "public class ExceptionMessage extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printEmptyDescriptionExceptionMessage(String option) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! The description of a %s cannot be empty.%n\", option);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printEmptyTimeExceptionMessage(String option) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You haven\u0027t set a time for the %s or the time format is incorrect.%n\", option);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public static void printEmptyKeywordMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        System.out.printf(\"\\t  OOPS!!! You did not type the keyword.%n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 24,
      "zhangcaicai123": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/project/ProjectManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import seedu.duke.ModDataBase;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.TimeTable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    static String lineCutOff \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static ArrayList\u003cProjectTask\u003e projectTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Adds project task to project tasks arraylist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static ProjectTask addProjectTask(String command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"ptask/\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d command.substring(command.indexOf(\"ptask/\"), command.indexOf(\"by/\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        description \u003d description.substring(6).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        by \u003d command.substring(command.indexOf(\"by/\")).substring(3).trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isModuleCode \u003d ModDataBase.modules.containsKey(modName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isModuleAdded \u003d TimeTable.isModuleAdded(modName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        boolean isAddModule \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (!isModuleCode) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"This is not a valid module code\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else if (description.isBlank() || by.isBlank()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"The task description or the deadline is empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else if (!isModuleAdded) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Are you sure you want to add this project subtask?\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"It seems that you did not add this module. Y/N\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String isAdd \u003d in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (isAdd.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                isAddModule \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gy716"
        },
        "content": "            } else if (isAdd.equalsIgnoreCase(\"N\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gy716"
        },
        "content": "                isAddModule \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gy716"
        },
        "content": "                System.out.println(\"Sorry, I cannot identify this!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (isModuleAdded || isAddModule) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Is there any material you need for this project task?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Enter your materials or NA\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            String material \u003d in.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ProjectTask projectTask \u003d new ProjectTask(modName, description, by, material);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Module: \" + projectTask.getModName());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"ProjectTask: \" + projectTask.getDescription());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"By: \" + projectTask.getBy());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"Materials: \" + projectTask.getMaterial());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(lineCutOff);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            projectTasks.add(projectTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            return projectTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProjectTaskList(String command) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gy716"
        },
        "content": "        int numOfTask \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"project\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isModuleCode \u003d ModDataBase.modules.containsKey(modName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (isModuleCode) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(modName + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            for (int i \u003d 0; i \u003c projectTasks.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (projectTasks.get(i).getModName().equals(modName)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    System.out.println(i + 1 + \". \" + projectTasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gy716"
        },
        "content": "                    numOfTask++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gy716"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gy716"
        },
        "content": "            if (numOfTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gy716"
        },
        "content": "                System.out.println(\"There are no project tasks of this module.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"This is not a valid module code.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints progress of project."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param command User input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void printProgress(String command) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numDone \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int numTotal \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gy716"
        },
        "content": "        modName \u003d command.substring(command.indexOf(\"mod/\"), command.indexOf(\"project\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        modName \u003d modName.substring(4).trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gy716"
        },
        "content": "        boolean isModuleCode \u003d ModDataBase.modules.containsKey(modName);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (isModuleCode) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(modName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (ProjectTask projectTask : projectTasks) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (projectTask.getModName().equals(modName)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    numTotal++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (projectTask.getStatusIcon().equals(\"T\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        numDone++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (numTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gy716"
        },
        "content": "                System.out.println(\"There are no project tasks of this module.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                float progress \u003d (float) numDone / numTotal * 100;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                System.out.println(\"You have done \" + numDone + \"/\" + numTotal"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                        + \" (\" + String.format(\"%.2f\", progress) + \"%).\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"This is not a valid module code.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 76,
      "gy716": 30,
      "zhangcaicai123": 14,
      "jessicazhang617": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.Module;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.net.HttpURLConnection;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String directory \u003d projectRoot + \"/data\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String filePathOfTask \u003d directory + \"/duke.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private static final String filePathOfModule \u003d directory + \"/module.txt\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "    private static final String filePathOfJson \u003d directory + \"/AllModsInfo.json\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create directory if the directory does not exist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName directory path name"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return true if the directory exist or have been successfully created"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *         false if fail to create the directory"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static boolean createDirectory(String directoryName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File dir \u003d new File(directoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d dir.mkdirs();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            result \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Create the data file to store task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param pathName      the absolute path name of data file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param directoryName the directory path name"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void createFile(String pathName, String directoryName) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        boolean mkdirs \u003d createDirectory(directoryName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (mkdirs) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            File f \u003d new File(pathName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Load data file to current task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTask() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File loadFile \u003d new File(this.filePathOfTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (!loadFile.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            createFile(this.filePathOfTask, directory);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Scanner file \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                assert file !\u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (!file.hasNext()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                String text \u003d file.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Task taskToLoad \u003d parserTask(text);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                loadList.add(taskToLoad);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Task list has been loaded successfully.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Transfer the line in data file into task to load."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param text each line of the data file"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task need to load"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private Task parserTask(String text) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        Task taskToLoad \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String modName;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String[] texts \u003d text.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String description \u003d texts[2];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String status \u003d texts[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (text.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Todo"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Todo(description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Deadline"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Deadline(description);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Deadline) taskToLoad).setBy(time);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Event"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new Event(description);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[3];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gy716"
        },
        "content": "            String duration \u003d texts[4];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ((Event) taskToLoad).setAt(time);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gy716"
        },
        "content": "            ((Event) taskToLoad).setDuration(Long.parseLong(duration));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (text.startsWith(\"P\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            //Project task"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            String material \u003d texts[5];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            modName \u003d texts[3];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            time \u003d texts[4];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad \u003d new ProjectTask(modName, description, time, material);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ProjectTask projectTask \u003d new ProjectTask(modName, description, time, material);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            ProjectManager.projectTasks.add(projectTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskToLoad.markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskToLoad;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Update done status for the task in file."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index    the index of task in the list that needs to be marked as done"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskList the list contains all tasks"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void updateDoneToFile(int index, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File f \u003d new File(this.filePathOfTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                //update done status"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.println(taskList.get(index).text());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                writer.flush();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete the task from data file."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task in the list that needs to be deleted"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void deleteTaskFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        File f \u003d new File(filePathOfTask);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.println(line);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new line to the end of data file."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePathOfTask, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Load data file to current module list."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a module"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ArrayList\u003cModule\u003e loadModule() throws DukeException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File loadFile \u003d new File(this.filePathOfModule);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        ArrayList\u003cModule\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (!loadFile.exists()) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            createFile(this.filePathOfModule, directory);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            Scanner file \u003d null;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                assert file !\u003d null;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (!file.hasNext()) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                String text \u003d file.nextLine();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                Module moduleToLoad \u003d parserModule(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                loadList.add(moduleToLoad);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Module list has been loaded successfully.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Transfer the line in data file into task to load."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param text each line of the data file"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @return module need to load"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    private Module parserModule(String text) throws DukeException {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Module module \u003d new Module();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        //split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String[] texts \u003d text.split(\"\\\\|\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (texts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } else if (texts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            module.labSlot \u003d texts[3];"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (texts.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.moduleCode \u003d texts[0];"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.lecSlot \u003d texts[1];"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.tutSlot \u003d texts[2];"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (!texts[3].equals(\"null\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                module.labSlot \u003d texts[3];"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                module.labSlot \u003d null;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            module.lecSlot2 \u003d texts[4];"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        module.setSlot();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return module;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Delete the module from data file."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param index the index of module in the list that needs to be deleted"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void deleteModuleFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        File f \u003d new File(filePathOfModule);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        int lineNum \u003d 0;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            if (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                lineNum++;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        //replace original data file with new data file"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        f.delete();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        newFile.renameTo(f);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Update module to file."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param modules contains the details of modules"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void updateModuleToFile(ArrayList\u003cModule\u003e modules) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            File f \u003d new File(filePathOfModule);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePathOfModule);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            for (Module module : modules) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                if (module !\u003d null) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    fw.write(module.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            System.out.println(\"Something went wrong with IO stream.\\n\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * Add new line to the end of data file."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public static void appendToFileModule(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePathOfModule, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void loadJson() throws IOException {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "gy716"
        },
        "content": "        File f \u003d new File(filePathOfJson);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "gy716"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Loading information....please wait.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "gy716"
        },
        "content": "            createFile(filePathOfJson, directory);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "gy716"
        },
        "content": "            URL url \u003d new URL(\"https://api.nusmods.com/v2/2019-2020/moduleInfo.json\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "gy716"
        },
        "content": "            HttpURLConnection conn \u003d (HttpURLConnection)url.openConnection();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "gy716"
        },
        "content": "            conn.setRequestMethod(\"GET\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "gy716"
        },
        "content": "            conn.connect();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "gy716"
        },
        "content": "            InputStream in \u003d url.openStream();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "gy716"
        },
        "content": "            Files.copy(in, f.toPath(), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "gy716"
        },
        "content": "            System.out.println(\"Module information has been loaded successfully\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "gy716"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 136,
      "gy716": 27,
      "zhangcaicai123": 209
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Constructs deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Assigns deadline of object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Gets the deadline of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @return deadline date time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts deadline to string for printing."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \" [Remaining time: \" + calculateDeadline() + \"]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts deadline to string for storing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"D \" + super.text() + \" | \" + by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String calculateDeadline() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        LocalDateTime deadline \u003d LocalDateTime.parse(by,df);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Duration duration \u003d Duration.between(now,deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        long days \u003d duration.toDays();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        long hours \u003d duration.minusDays(days).toHours();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        long minutes \u003d duration.minusDays(days).minusHours(hours).toMinutes();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (now.isAfter(deadline)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            return days + \" days \" + hours + \" hours \" + minutes + \" minutes\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public long remainingTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        LocalDateTime deadline \u003d LocalDateTime.parse(by,df);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        Duration duration \u003d Duration.between(now,deadline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        long minutes \u003d duration.toMinutes();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return minutes;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 64,
      "ZhongNingmou": 5,
      "zhangcaicai123": 6
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalDateTime beginTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public LocalDateTime endTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    protected long duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    //@@author JinYixuan-Au"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Constructs Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Assigns duration of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param duration Duration of event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public void setDuration(long duration) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.endTime \u003d this.beginTime.plusHours(duration);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Returns time of event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Formats time of event by standard format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param at Time of event in string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.beginTime \u003d LocalDateTime.parse(at, dtf);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts event to string for printing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"E \" + super.text() + \" | \" + at + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + duration;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Formats event to fit calendar."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String calendarFormat() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return beginTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \"-\" + endTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HH:mm\"))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "                + \" \" + this.description;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 70,
      "zhangcaicai123": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/ProjectTask.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "public class ProjectTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    protected String material;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    protected String modName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs ProjectTask class object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param mod Module of project."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of project task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param material Material of project."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public ProjectTask(String mod, String description, String by, String material) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.material \u003d material;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.modName \u003d mod;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns module name."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return modName string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getModName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.modName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns deadline of project."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return by string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns material of project."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return material string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String getMaterial() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.material;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        return \"[P]\" + super.toString() + \" (by:\" + by + \") \" + \"material: \" + material;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"P \" + super.text() + \" | \" + modName + \" | \" + by + \" | \" + material;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 16,
      "zhangcaicai123": 24,
      "jessicazhang617": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "//@@author JinYixuan-Au"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Constructs Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Returns status icons of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return (isDone ? \"T\" : \"F\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts task to string for printing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     * Converts task to string for storing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            return \"| 1 | \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "            return \"| 0 | \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinYixuan-Au"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinYixuan-Au": 54,
      "zhangcaicai123": 1,
      "jessicazhang617": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs ToDo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @param description Description of ToDo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts ToDo task to string for printing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Converts ToDo task to string for storing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return \"T \" + super.text();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 1,
      "zhangcaicai123": 18,
      "jessicazhang617": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasklist/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package seedu.duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import seedu.duke.project.ProjectManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.ProjectTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Constructs TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Assign the loaded list to this task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param loadedList the task list loaded from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList \u003d loadedList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns taskList arraylist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return taskList arraylist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Add new task to the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskToAdd the task that needs to be added to the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        this.taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printAddMessage(taskToAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printNumOfTasksInList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Delete task from the task list with index of task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param taskIndex the index of task which needs to be deleted"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (task.text().startsWith(\"P\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ProjectTask projectTask \u003d (ProjectTask) task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            ProjectManager.projectTasks.remove(projectTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        printDeleteMessage(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Get the task with index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param index the index of task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private static void showLine() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * Returns size of taskList arraylist."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     * @return size of taskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jessicazhang617"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the whole list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"      \" + (taskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    num++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou  have %d undone task in your list. (%d/%d)%n\",num,num,taskList.size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the tasks have not marked as done."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printUndoneList() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the undone tasks in your list:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    num++;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"      \" + num + \".\" + task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (num \u003e 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have %d undone tasks in your list.%n\", num);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have 1 undone task in your list.%n\", num);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any undone task in your list.%n\", num);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of adding new task."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param task task needs to add"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"      \" + task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the number of tasks in the list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printNumOfTasksInList() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     You don\u0027t have any task in your list.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the message of deleting a task."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "     * @param task the task that needs to be deleted"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    public void printDeleteMessage(Task task) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.printf(\"\\tNoted. I\u0027ve removed this task:%n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        System.out.printf(\"\\t   %s%n\", task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Find all the tasks which contain the keyword."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @return the list of tasks which contain the keyword"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    private ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                findList.add(task);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        return findList;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Print the list of searching keyword in task list."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @param keyword keyword to find task"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public void printSearchResult(String keyword) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d find(keyword);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        if (results.size() \u003e 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tHere are the matching tasks in your list:%n\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : results) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.println(\"\\t\" + (results.indexOf(task) + 1) + \".\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        + task + \" (No.\" + taskList.indexOf(task) + \" in the whole task list) \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any matching task in your list.%n\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void deleteDoneTask() throws IOException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cTask\u003e done \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.getStatusIcon().equals(\"T\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                done.add(task);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : done) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.text().startsWith(\"P\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                ProjectManager.projectTasks.remove((ProjectTask) task);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Storage.deleteTaskFromFile(taskList.indexOf(task));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.remove(task);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"You have deleted all the done tasks from task list.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printNumOfTasksInList();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Prints all the todo tasks in the list."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printTodoList() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the todo tasks in your list:\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (task.text().startsWith(\"T\")) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"      \" + index + \".\" + task);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        num++;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (num \u003e 1) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have %d undone tasks in your todo list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have 1 undone task in your todo list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any undone task in your todo list (%d/%d).%n\","
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        num,num,taskList.size());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any todo task in your list.%n\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Prints all the events in the list."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printEventList() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the events in your list:\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (task.text().startsWith(\"E\")) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"      \" + index + \".\" + task);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        num++;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (num \u003e 1) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have %d undone events in your list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have 1 undone event in your list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any undone event in your list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any event in your list.%n\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Prints all the deadlines in the list."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void printDeadlineList() {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int num \u003d 0;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.println(\"     Here are the deadlines in your list:\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (task.text().startsWith(\"D\")) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    System.out.println(\"      \" + index + \".\" + task);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    if (task.getStatusIcon().equals(\"F\")) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                        num++;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (num \u003e 1) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have %d undone deadlines in your list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou have 1 undone deadline in your list (%d/%d).%n\", num,num,taskList.size());"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any undone deadline in your  list \""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                                + \"(%d/%d).%n\",num,num,taskList.size());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                System.out.printf(\"\\tYou don\u0027t have any deadline in your list.%n\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            System.out.printf(\"\\tYou don\u0027t have any task in your list.%n\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * Clears past deadlines."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     * @throws IOException if cannot edit the file"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    public static void clearDeadlines() throws IOException {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            if (task.text().startsWith(\"D\")) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                if (deadline.remainingTime() \u003c 0) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                    deadlines.add(deadline);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        for (Deadline deadline : deadlines) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            Storage.deleteTaskFromFile(taskList.indexOf(deadline));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "            taskList.remove(deadline);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        System.out.println(\"You have removed all the past deadlines!\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "        printDeadlineList();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 7,
      "zhangcaicai123": 332,
      "jessicazhang617": 16
    }
  },
  {
    "path": "src/test/java/seedu/duke/ModuleTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ModuleTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testText() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "        "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gy716"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gy716": 14
    }
  },
  {
    "path": "src/test/java/seedu/duke/TimeTableTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gy716"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gy716"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import static junit.framework.Assert.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import static junit.framework.Assert.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gy716"
        },
        "content": "public class TimeTableTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gy716"
        },
        "content": "    public void testTodayList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gy716"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void isModuleAdded() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String moduleCode \u003d \"CS2113\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        assertEquals(TimeTable.isModuleAdded(moduleCode),false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void addModule_noSuchModule_exceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String command \u003d \"add mod/CS2114\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            table.addModule(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException | IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            assertEquals(\"_______________________________________________________\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"There is no such module.\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"_______________________________________________________\", e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void deleteModule_noSuchModule_exceptionThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        TimeTable table \u003d new TimeTable();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String command \u003d \"delete mod/CS2113\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            table.deleteModule(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            assertEquals(\"_______________________________________________________\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"OOPS!!! There is no such module.\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "                    + \"_______________________________________________________\", e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gy716"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 39,
      "gy716": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/CommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gy716"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gy716"
        },
        "content": "import seedu.duke.exception.EmptyTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "import static junit.framework.Assert.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    void getTodo_descriptionCannotBeEmpty_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String userCommand \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "            command.getTodo(userCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gy716"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gy716"
        },
        "content": "            assertEquals(null, e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gy716"
        },
        "content": "    void getTodo_returnDescription() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "        String userCommand \u003d \"todo read book\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertEquals(\"read book\", Command.getTodo(userCommand));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gy716"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gy716"
        },
        "content": "    void getTask_returnDescription() throws EmptyDescriptionException, EmptyTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gy716"
        },
        "content": "        String userCommand1 \u003d \"event team meeting /at 2020-11-09 17:25\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gy716"
        },
        "content": "        String userCommand2 \u003d \"deadline assignment /by 2020-11-09 23:59\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertEquals(\"team meeting\",Command.getTask(userCommand1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertEquals(\"2020-11-09 17:25\",Command.getTime(userCommand1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertEquals(\"assignment\",Command.getTask(userCommand2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gy716"
        },
        "content": "        assertEquals(\"2020-11-09 23:59\",Command.getTime(userCommand2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gy716"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gy716"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhongNingmou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhongNingmou": 21,
      "gy716": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "module mod/CG1111 lec/Fri 10:00-12:00 tut/Tue 14:00-15:00 lab/Mon 9:00-12:00"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 1
    }
  }
]
