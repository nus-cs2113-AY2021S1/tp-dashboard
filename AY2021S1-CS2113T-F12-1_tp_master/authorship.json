[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027  //Google Json serialzation library"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    implementation \u0027org.apache.commons:commons-lang3:3.11\u0027 //Apache commons lang for Class builder"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 2,
      "-": 46
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Display | Name | Github Profile"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "---|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/60382285?s\u003d400) | Jerrold Lam |  [jerroldlam](https://github.com/jerroldlam \"Github User Profile\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/56764814?s\u003d100) | Khenus Tan |  [Khenus](https://github.com/Khenus \"Github User Profile\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/60414537?s\u003d100) | Harry Lee |  [harryleecp](https://github.com/harryleecp \"Github User Profile\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/57383789?s\u003d100) | Ju Zihao |  [JuZihao](https://github.com/JuZihao \"Github User Profile\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "![](https://avatars3.githubusercontent.com/u/49282734?s\u003d400) | Vanessa Kang |  [Vanessa-Kang](https://github.com/vanessa-kang \"Github User Profile\")"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7,
      "-": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|v1.0|fresh undergraduate|visualize the modules in the recommended schedule and course requirements|better plan out my academic journey for the next 4-5 years in NUS|"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|v1.0|undergraduate with at least 1 semester of study completed|calculate my CAP easily|forecast my own expected graduation CAP and if they match my expected CAP|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "|v1.0|undergraduate with at least 1 semester of study completed|print out a personalised list of modules taken so far and grades obtained|track my academic progression in NUS|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 3,
      "-": 33
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# PlanNUS"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "#### Foreword"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "plaNUS is a greenfield project which aims to solve the gap in undergraduate academic planning in NUS."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "With the `Academic Calendar Planner`,plaNUS will be able to assist undergraduate students in forecasting their academic journey for their 4 or 5 years in NUS."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "With the `CAP Calulator` , plaNUS will be able to tell you your current CAP and forecast future grades needed to achieve your target CAP."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Target User Profile"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. All Fresh NUS Undergraduates"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. NUS Undergraduates who have completed at least 1 semester of study"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Feature List (for V1.0)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. Academic Calendar Planner"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    1. Add module"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    1. Edit module"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    1. Remove module"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    1. Print Calendar"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. CAP Calculator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    1. Get Cap"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Planned Feature List for the future"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "1. Saving of Academic Calendar Planner into text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "2. Loading of Academic Calendar Planner from text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "* [Planning Document](https://docs.google.com/document/d/1ikOD_2NS2qUSGtQJpqbVWX7g5mAFV6_jxhiAlka_SSs/edit?usp\u003dsharing \"Collaborative Document\")"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 27,
      "-": 6
    }
  },
  {
    "path": "docs/team/Harry.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Harry Lee - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Edit, Remove Module in Academic Planner"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7
    }
  },
  {
    "path": "docs/team/Khenus.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Khenus Tan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "JSON object data from NUSMODs"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7
    }
  },
  {
    "path": "docs/team/Lam.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Jerrold Lam - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Add Module in Academic Planner, module and person object"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7
    }
  },
  {
    "path": "docs/team/Vanessa.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Vanessa - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Calendar Printer"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7
    }
  },
  {
    "path": "docs/team/Zihao.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "# Ju Zihao - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "Cap Calculator"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import seedu.duke.moduledata.ModuleDatum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import seedu.duke.moduledata.ModuleInitializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Main entry-point for the PlanNus application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        ModuleInitializer allModules \u003d  new ModuleInitializer();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String modCode \u003d input.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Integer idx \u003d allModules.getModuleMap().get(modCode);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        ModuleDatum cs1010Data \u003d allModules.getModuleFullDetails()[idx];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        System.out.println(\"Module loaded... Checking for CS1010 validity...\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        System.out.println(cs1010Data);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 6,
      "Khenus": 7,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/apps/AcademicPlanner.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package seedu.duke.apps;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import seedu.duke.exceptions.AcademicException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import seedu.duke.moduledata.ModuleInitializer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import seedu.duke.objects.Module;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import seedu.duke.objects.Person;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class AcademicPlanner {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final int STARTING_SEMESTER_INDEX \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final int FINAL_SEMESTER_INDEX \u003d 10;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final int COMMAND_INDEX \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final int MODULE_CODE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private static final int FROM_ADD \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private static final int FROM_EDIT \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private static final int FROM_REMOVE \u003d 3;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String COMMAND_REGEX \u003d \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EDIT_SEMESTER \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EDIT_GRADE \u003d \"2\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String PROMPT_NEW_SEMESTER_VALUE \u003d \"Enter the new semester value: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String PROMPT_NEW_GRADE \u003d \"Enter the new grade: \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EXITING_CURRENT_COMMAND \u003d \"Exiting current command back to Academic Planner Main Menu.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_INVALID_COMMAND \u003d \"INVALID COMMAND\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_INVALID_SEMESTER_INDEX \u003d \"INVALID SEMESTER INDEX\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_INVALID_GRADE \u003d \"INVALID GRADE VALUE\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_NOT_OFFERED \u003d \" IS NOT OFFERED BY NUS\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_DUPLICATE_MOD \u003d \"You already have this mod on your calendar!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_NOT_ADDED \u003d \"You have not added this module into your list yet\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_EDIT_OPTION \u003d \"Number entered does not correspond to any feature\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"\\nWelcome to Academic Planner!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ADD_COMMAND \u003d \"ADD\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EDIT_COMMAND \u003d \"EDIT\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String REMOVE_COMMAND \u003d \"REMOVE\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String VIEW_COMMAND \u003d \"VIEW\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"EXIT\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Thank you for using Academic Planner!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String COMMANDS_LIST \u003d \"Available commands are: \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  add \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  edit \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  remove \u003cmodule code\u003e\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  view\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  exit\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"Type a command to continue...\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public static final String PROMPT_EDIT_CHOICES \u003d \"Enter the number corresponding to the feature you wish to edit:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            + \"1) Semester\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            + \"2) Grade\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final ModuleInitializer allModules;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final ArrayList\u003cModule\u003e modulesList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final HashMap\u003cString,Module\u003e modulesAddedMap;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final Person currentPerson;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public AcademicPlanner(ModuleInitializer allModules, Person currentPerson) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.allModules \u003d allModules;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesList \u003d currentPerson.getModulesList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesAddedMap \u003d currentPerson.getModulesAddedMap();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentPerson \u003d currentPerson;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printCommandsList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(COMMANDS_LIST);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void planner() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        printCommandsList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String fullInput \u003d scanner.nextLine().toUpperCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String[] inputs \u003d fullInput.split(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        while (!inputs[COMMAND_INDEX].equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                switch (inputs[COMMAND_INDEX]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case ADD_COMMAND:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    addModule(scanner, inputs[MODULE_CODE_INDEX]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case EDIT_COMMAND:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    editModule(scanner, inputs[MODULE_CODE_INDEX]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case REMOVE_COMMAND:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    removeModule(inputs[MODULE_CODE_INDEX]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                case VIEW_COMMAND:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    // printCalendar();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    System.out.println(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    System.out.println(EXITING_CURRENT_COMMAND);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } catch (AcademicException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                System.out.println(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                System.out.println(EXITING_CURRENT_COMMAND);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            printCommandsList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            fullInput \u003d scanner.nextLine().toUpperCase();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            inputs \u003d fullInput.split(COMMAND_REGEX);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Adds a module to the user\u0027s academic calendar if it exists in ModuleDatum,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else does not add module into user\u0027s academic calendar."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Validates user\u0027s input semester and grade."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * If either is invalid, does not add module into user\u0027s academic calendar."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param in scanner class"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode string of module code"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private void addModule(Scanner in, String moduleCode) throws AcademicException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!isModOfferedByNus(moduleCode)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new AcademicException(moduleCode + ERROR_NOT_OFFERED);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (isModTakenByUser(moduleCode)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new AcademicException(ERROR_DUPLICATE_MOD);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Semester you plan to take \" + moduleCode.toUpperCase() + \"?\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        int semesterValue;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            semesterValue \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!isValidSemester(semesterValue)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_SEMESTER_INDEX);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Grade received for \" + moduleCode.toUpperCase() + \"?\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String gradeValue \u003d in.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!isValidGrade(gradeValue)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_GRADE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int moduleCredit \u003d getModuleCreditForModule(moduleCode);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        addModuleToUser(moduleCode, semesterValue, gradeValue, moduleCredit);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Creates a new instance of a module of the parameters and adds it into the hashmap and array list of user modules."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module to be added"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param semesterValue semester that module is taken in"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param gradeValue grade achieved for module"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCredit module\u0027s credit weightage"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void addModuleToUser(String moduleCode, int semesterValue, String gradeValue, int moduleCredit) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        Module newModuleToAdd \u003d new Module(moduleCode, semesterValue, gradeValue, moduleCredit);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        modulesList.add(newModuleToAdd);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        modulesAddedMap.put(moduleCode, newModuleToAdd);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        updateCap(FROM_ADD, newModuleToAdd);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        System.out.println(newModuleToAdd.getModuleCode()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                + \" added into Semester \" + semesterValue + \".\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Update Cap after every change in current module list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * @param type An int storing the type of function calling update cap"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * @param currentModule A Module object storing current module"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * @param caps An optional number of double storing old cap and new cap (If you send in old, must send in new also)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    //TODO Look into throwing error and short circuiting this command"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private void updateCap(int type, Module currentModule, double... caps) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        // Caps is an array, 0 being oldCap, 1 being newCap"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (type \u003d\u003d FROM_ADD) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Incrementing total MC regardless of SU"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            int moduleCredit \u003d currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            currentPerson.setCurrentMc(currentPerson.getCurrentMc() + moduleCredit);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Incrementing total MC after SU only if module is not SU"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (currentModule.getCap() !\u003d -1.00) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                currentPerson.setCurrentMcAfterSU(currentPerson.getCurrentMcAfterSU() + moduleCredit);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double newMCxGrade \u003d currentModule.getCap() * moduleCredit;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                currentPerson.setCurrentTotalMcxGrade(currentPerson.getCurrentTotalMcxGrade() + newMCxGrade);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (type \u003d\u003d FROM_REMOVE) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            //Decreasing total MC regardless of SU"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            currentPerson.setCurrentMc(currentPerson.getCurrentMc()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    - currentModule.getModuleCredit());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            //Decreasing total MC after SU only if module is not SU"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (currentModule.getCap() !\u003d -1.00) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentMcAfterSU(currentPerson.getCurrentMcAfterSU()"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        - currentModule.getModuleCredit());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double mcxGradeToMinus \u003d currentModule.getCap() * currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentTotalMcxGrade(currentPerson.getCurrentTotalMcxGrade()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        - mcxGradeToMinus);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (type \u003d\u003d FROM_EDIT) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (caps[0] \u003d\u003d -1.00 \u0026\u0026 caps[1] !\u003d -1.00) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                //Case where previously was SU but new is not SU"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentMcAfterSU(currentPerson.getCurrentMcAfterSU()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        + currentModule.getModuleCredit());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double newMCxGrade \u003d caps[1] * currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentTotalMcxGrade(currentPerson.getCurrentTotalMcxGrade()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        + newMCxGrade);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }  else if (caps[0] !\u003d -1.00 \u0026\u0026 caps[1] \u003d\u003d -1.00) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                //Case where previously was not SU but now is SU"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentMcAfterSU(currentPerson.getCurrentMcAfterSU()"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        - currentModule.getModuleCredit());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double mcxGradeToMinus \u003d caps[0] * currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentTotalMcxGrade(currentPerson.getCurrentTotalMcxGrade()"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        - mcxGradeToMinus);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            } else if (caps[0] !\u003d caps[1]) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                //Case where previously and new cap are not SU but not the same"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double oldMCxGrade \u003d caps[0] * currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double newMCxGrade \u003d caps[1] * currentModule.getModuleCredit();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                double mcxGradeToSet \u003d newMCxGrade - oldMCxGrade;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                currentPerson.setCurrentTotalMcxGrade(currentPerson.getCurrentTotalMcxGrade()"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                        + mcxGradeToSet);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     * Allows user to edit the module entry of his academic calendar."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     * Parameters allowed to change are semesterIndex or Grade."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param in scanner"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module code to edit"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void editModule(Scanner in, String moduleCode) throws AcademicException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (isModTakenByUser(moduleCode)) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                System.out.println(PROMPT_EDIT_CHOICES);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                String choice \u003d in.nextLine();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                if (choice.equals(EDIT_SEMESTER)) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    editModuleSemester(in, moduleCode);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                } else if (choice.equals(EDIT_GRADE)) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    editModuleGrade(in, moduleCode);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    throw new AcademicException(ERROR_EDIT_OPTION);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                throw new AcademicException(ERROR_NOT_ADDED);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Changes the current grade of module to the input of the user."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Module must exist in user\u0027s list and hashmap"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param in scanner"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode code of module to edit the grade"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @throws AcademicException invalid grade"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void editModuleGrade(Scanner in, String moduleCode) throws AcademicException {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(PROMPT_NEW_GRADE);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        String gradeValue \u003d in.nextLine().toUpperCase();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!isValidGrade(gradeValue)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_GRADE);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "harryleecp"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        System.out.println(moduleCode);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        updateModuleGrade(moduleCode, gradeValue);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Grade for \" + moduleCode + \" successfully updated!\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "harryleecp"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Updates user\u0027s module with new grade and updates user\u0027s Cap."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module to edit"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param gradeValue grade to edit to"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void updateModuleGrade(String moduleCode, String gradeValue) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        for (Module item : modulesList) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "            if (item.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                double oldCap \u003d item.getCap();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                item.setGrade(gradeValue);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                double newCap \u003d item.getCap();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                updateCap(FROM_EDIT, item, oldCap, newCap);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        modulesAddedMap.get(moduleCode).setGrade(gradeValue);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "harryleecp"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Edits module semester taken when module is in user\u0027s list."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Module must exist in user\u0027s module list and hashmap."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param in scanner"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module to edit"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @throws AcademicException invalid semester index"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void editModuleSemester(Scanner in, String moduleCode) throws AcademicException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(PROMPT_NEW_SEMESTER_VALUE);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        String newValue \u003d in.nextLine();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (!isValidSemester(Integer.parseInt(newValue))) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            throw new AcademicException(ERROR_INVALID_SEMESTER_INDEX);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        updateModuleSemester(moduleCode, newValue);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        modulesAddedMap.get(moduleCode).setSemesterIndex(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Semester for \" + moduleCode + \" successfully updated!\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Finds the module and updates the semester taken."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module to edit"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param newValue new semester index"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void updateModuleSemester(String moduleCode, String newValue) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        for (Module item : modulesList) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (item.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                item.setSemesterIndex(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "harryleecp"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     * Removes moduleCode from user\u0027s academic calendar if it exists,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     * else prompts user of error."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void removeModule(String moduleCode) throws AcademicException {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            if (isModTakenByUser(moduleCode)) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                modulesAddedMap.remove(moduleCode);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                removeModuleFromUserModuleList(moduleCode);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                throw new AcademicException(ERROR_NOT_ADDED);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(EXITING_CURRENT_COMMAND);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Removes module from user\u0027s module list."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Module must exist in user\u0027s module list."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode module to remove."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void removeModuleFromUserModuleList(String moduleCode) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        for (Module item : modulesList) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "            if (item.getModuleCode().equals(moduleCode)) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                System.out.println(item.getModuleCode() + \" has been removed from the list\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                updateCap(FROM_REMOVE, item);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "                modulesList.remove(item);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "harryleecp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "harryleecp"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if module code is offered by NUS,"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode input module code"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean of module code in ModuleDatum"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean isModOfferedByNus(String moduleCode) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (allModules.getModuleMap().get(moduleCode) \u003e -1);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Returns true if module is in the user\u0027s academic calendar,"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode moduleCode to check"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean isModTakenByUser(String moduleCode) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (modulesAddedMap.containsKey(moduleCode));"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Returns true if semsesterIndex is a valid semesterIndex,"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param semesterIndex semesterIndex to check"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean isValidSemester(int semesterIndex) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (semesterIndex \u003e\u003d STARTING_SEMESTER_INDEX \u0026\u0026 semesterIndex \u003c\u003d FINAL_SEMESTER_INDEX);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * Returns true if grade is a Grade option offered by NUS,"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param grade grade to check"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private boolean isValidGrade(String grade) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        switch (grade.toUpperCase()) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A+\":"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A-\":"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B+\":"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B-\":"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"C+\":"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"D+\":"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"CS\":           //Completed Satisfactorily"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"CU\":           //Completed Unsatisfactorily"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"S\":            //Satisfactory"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"U\":            //Unsatisfactory"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"W\":            //Withdrawn"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"IC\":           //Incomplete"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"IP\":           //In progress"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"AUD\":          //Audit"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"WU\":           //Withdrawn from University"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"EXE\" :         //Exempted"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"NT\":           //Not taken"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Function to return module credits for module code."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     *"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @param moduleCode string of module code"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     * @return int of module credit"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "     */"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int getModuleCreditForModule(String moduleCode) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int mapIndex \u003d allModules.getModuleMap().get(moduleCode);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return allModules.getModuleFullDetails()[mapIndex].getModuleCredit();"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 337,
      "harryleecp": 41,
      "JuZihao": 9,
      "Khenus": 76
    }
  },
  {
    "path": "src/main/java/seedu/duke/apps/CapCalculator.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "package seedu.duke.apps;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "import seedu.duke.objects.Person;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "import java.math.RoundingMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "public class CapCalculator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    private final Person person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private final DecimalFormat formatFinalCap \u003d new DecimalFormat(\"#.##\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    //CONSTANTS"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String ERROR_INVALID_COMMAND \u003d \"INVALID COMMAND\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String AWAIT_COMMAND \u003d \"Type a command to continue...\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"EXIT\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String CURRENT_COMMAND \u003d \"CURRENT\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String SET_TARGET_COMMAND \u003d \"SET TARGET\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"EXITING CAPCALC\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to CAP Calculator! Commands available are:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  Current\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"  Set target\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"To exit CAP Calculator, use command: \\\"exit\\\"\\n\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            + \"Initializing your CAP...\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    public CapCalculator(Person currentPerson) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        this.person \u003d currentPerson;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    //Main Function"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void capCalculator() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        System.out.println(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        System.out.println(AWAIT_COMMAND);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        String input \u003d scanner.nextLine().toUpperCase();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        formatFinalCap.setRoundingMode(RoundingMode.UP);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        while (!input.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            if (input.equals(CURRENT_COMMAND)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                printCurrentCap();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            } else if (input.equals(SET_TARGET_COMMAND)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                setTargetCap();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "                System.out.println(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            input \u003d scanner.nextLine().toUpperCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        System.out.println(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Prints out current CAP and number of graded MCs."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void printCurrentCap() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        double currentCap \u003d person.getCurrentTotalMcxGrade() / (double) person.getCurrentMcAfterSU();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Your current now CAP is: \" + formatCapToString(currentCap));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        System.out.println(\"Number of graded MCs taken is: \" + person.getCurrentMcAfterSU());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Allow the user to set the target CAP that user want to achieve in the next given MCs."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void setTargetCap() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            System.out.println(\"What is your target CAP?\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            double targetCap \u003d Double.parseDouble(in.nextLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            System.out.println(\"How many graded MCs you are taking to achieve the target CAP?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            int targetGradedMC \u003d Integer.parseInt(in.nextLine());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            calculateResults(targetCap, targetGradedMC);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            System.out.println(ERROR_INVALID_COMMAND);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            System.out.println(AWAIT_COMMAND);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Calculate what should be the user\u0027s minimum CAP in order to achieve user\u0027s target CAP."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private void calculateResults(double targetCap,int targetGradedMC) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        int totalMcToTarget \u003d person.getCurrentMcAfterSU() + targetGradedMC;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        double targetCapxTargetMC \u003d (double) totalMcToTarget * targetCap;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        double neededCap \u003d (targetCapxTargetMC - person.getCurrentTotalMcxGrade()) / (double) targetGradedMC;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        if (neededCap \u003c\u003d 5) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(\"You should achieve a minimum CAP of \" + formatCapToString(neededCap) + \" for your next \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                    + targetGradedMC + \" MCs to achieve your target CAP of \" + targetCap + \".\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            System.out.println(\"OOPS!! Looks like you are not able to achieve your target CAP of \" + targetCap"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "                    + \" with you target MCs of \" + targetGradedMC + \".\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Returns CAP score as a string."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * @param academicPoint academic point to parse"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * @return string of academic point"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String formatCapToString(double academicPoint) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        if (isNaN(academicPoint)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return formatFinalCap.format(academicPoint);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JuZihao"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * Returns true if CAP is NaN"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * else returns false."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * @param academicPoint academic point to check"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    public boolean isNaN(double academicPoint) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "        return (academicPoint !\u003d academicPoint);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JuZihao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 29,
      "JuZihao": 90
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/AcademicException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package seedu.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class AcademicException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private static final String NEW_LINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private static final String EXITING_CURRENT_COMMAND \u003d \"Exiting current command back to Academic Planner Main Menu.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public AcademicException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String stringToPrint \u003d errorMessage + NEW_LINE + EXITING_CURRENT_COMMAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.errorMessage \u003d stringToPrint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/moduledata/ModuleDatum.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package seedu.duke.moduledata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import org.apache.commons.lang3.builder.EqualsBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import org.apache.commons.lang3.builder.ToStringBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static org.apache.commons.lang3.builder.ToStringStyle.JSON_STYLE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"moduleCode\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"title\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"moduleCredit\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"department\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"faculty\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"semester\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"preclusion\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"attibutes\" \u003d ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     su: false, Index 0 of attribute"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     sfs: false, Index 1 of attribute"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     ssgf: false, Index 2 of attribute"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     ism: false, Index 3 of attribute"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     fyp: false, Index 4 of attribute"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     year: false, Index 5 of attribute"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     grsu: false, Index 6 of attribute"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     lab: false, Index 7 of attribute"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//     urop: false, Index 8 of attribute"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    ],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"prerequisite\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//    \"corequisite\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class ModuleDatum {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private Integer moduleCredit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String department;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String faculty;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private List\u003cInteger\u003e semester \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String preclusion;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private List\u003cBoolean\u003e attributes \u003d new ArrayList\u003cBoolean\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String prerequisite;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String corequisite;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private Map\u003cString, Object\u003e additionalProperties \u003d new HashMap\u003cString, Object\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Integer getModuleCredit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return moduleCredit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getDepartment() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return department;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getFaculty() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return faculty;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public List\u003cInteger\u003e getSemester() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return semester;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getPreclusion() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return preclusion;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public List\u003cBoolean\u003e getAttributes() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return attributes;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getPrerequisite() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return prerequisite;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getCorequisite() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return corequisite;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return ToStringBuilder.reflectionToString(this, JSON_STYLE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if ((other instanceof ModuleDatum) \u003d\u003d false) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        ModuleDatum rhs \u003d ((ModuleDatum) other);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return new EqualsBuilder().append(moduleCode, rhs.moduleCode).append(title, rhs.title)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                .append(moduleCredit, rhs.moduleCredit).append(department, rhs.department)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                .append(faculty, rhs.faculty).append(semester, rhs.semester).append(preclusion, rhs.preclusion)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                .append(attributes, rhs.attributes).append(prerequisite, rhs.prerequisite)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "                .append(corequisite, rhs.corequisite).append(additionalProperties, rhs.additionalProperties).isEquals();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 6,
      "Khenus": 101
    }
  },
  {
    "path": "src/main/java/seedu/duke/moduledata/ModuleInitializer.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package seedu.duke.moduledata;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.Reader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class ModuleInitializer {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private Map\u003cString, Integer\u003e moduleMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private ModuleDatum[] moduleFullDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public ModuleInitializer() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        InputStream in \u003d ModuleInitializer.class.getResourceAsStream(\"/ModuleData.json\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Reader jsonReader \u003d new InputStreamReader(in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        moduleFullDetails \u003d gson.fromJson(jsonReader, ModuleDatum[].class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        for (int i \u003d 0; i \u003c moduleFullDetails.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            moduleMap.put(moduleFullDetails[i].getModuleCode(), i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Map\u003cString, Integer\u003e getModuleMap() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return this.moduleMap;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public ModuleDatum[] getModuleFullDetails() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return this.moduleFullDetails;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 2,
      "Khenus": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/objects/Module.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package seedu.duke.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import org.apache.commons.lang3.builder.ToStringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class Module implements Comparable\u003cModule\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String moduleCode;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int semesterIndex; // 1 to 8"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String grade;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int moduleCredit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private double cap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Module(String moduleCode, int semesterIndex, String grade, int moduleCredit) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setModuleCode(moduleCode);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setSemesterIndex(semesterIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setGrade(grade);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setModuleCredit(moduleCredit);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setCap(grade);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getModuleCode() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return moduleCode;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Integer getModuleCredit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return moduleCredit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getGrade() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return grade;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int getSemesterIndex() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return semesterIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setModuleCredit(int moduleCredit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.moduleCredit \u003d moduleCredit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setModuleCode(String moduleCode) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.moduleCode \u003d moduleCode;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setSemesterIndex(int semesterIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.semesterIndex \u003d semesterIndex;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setGrade(String grade) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.grade \u003d grade;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        setCap(grade);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setCap(String grade) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        switch (grade.toUpperCase()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A+\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 5.00;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"A-\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 4.50;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B+\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 4.00;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 3.50;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"B-\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 3.00;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"C+\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 2.50;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 2.00;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"D+\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 1.50;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 1.00;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 0.00;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"CS\":           //Completed Satisfactorily"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"CU\":           //Completed Unsatisfactorily"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"S\":            //Satisfactory"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"U\":            //Unsatisfactory"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"W\":            //Withdrawn"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"IC\":           //Incomplete"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"IP\":           //In progress"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"AUD\":          //Audit"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"WU\":           //Withdrawn from University"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"EXE\":         //Exempted"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        case \"NT\":           //Not taken"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d -1.00;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            this.cap \u003d 0.00;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public double getCap() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return cap;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int compareTo(Module module) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return (Double.compare(this.getCap(), module.getCap()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return ToStringBuilder.reflectionToString(this);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 128
    }
  },
  {
    "path": "src/main/java/seedu/duke/objects/Person.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "package seedu.duke.objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    //General Variables"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private String personName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    //Variables needed for CAP Calculation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private double currentTotalMcxGrade;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int currentMc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private int currentMcAfterSU;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    //Variables needed for Academic Planner"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private ArrayList\u003cModule\u003e modulesList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    private HashMap\u003cString,Module\u003e modulesAddedMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public Person(String personName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentTotalMcxGrade \u003d 0.0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentMc \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentMcAfterSU \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.personName \u003d personName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesAddedMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public String getPersonName() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return personName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public double getCurrentTotalMcxGrade() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return currentTotalMcxGrade;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setCurrentTotalMcxGrade(double currentTotalMcxGrade) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentTotalMcxGrade \u003d currentTotalMcxGrade;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int getCurrentMc() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return currentMc;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setCurrentMc(int currentMc) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentMc \u003d currentMc;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public int getCurrentMcAfterSU() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return currentMcAfterSU;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setCurrentMcAfterSU(int currentMcAfterSU) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.currentMcAfterSU \u003d currentMcAfterSU;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public ArrayList\u003cModule\u003e getModulesList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return modulesList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setModulesList(ArrayList\u003cModule\u003e modulesList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesList \u003d modulesList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public HashMap\u003cString, Module\u003e getModulesAddedMap() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        return modulesAddedMap;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    public void setModulesAddedMap(HashMap\u003cString, Module\u003e modulesAddedMap) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "        this.modulesAddedMap \u003d modulesAddedMap;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 71
    }
  },
  {
    "path": "src/test/java/seedu/duke/PlanNusTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerroldlam"
        },
        "content": "class PlanNusTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerroldlam": 1,
      "-": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "CS1010"
      }
    ],
    "authorContributionMap": {
      "Khenus": 1
    }
  }
]
