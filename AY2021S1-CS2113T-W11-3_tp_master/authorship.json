[
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://via.placeholder.com/100.png?text\u003dPhoto\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Tolentino Abner Jr Morales| [Github](https://github.com/abnermtj) | [Portfolio](docs/team/abner.md) "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/60168552?s\u003d400\u0026u\u003d70ed3bb19e26b16aadf133b9ff21ee01345defff\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Aldo Maximillian | [Github](https://github.com/domaxi) | [Portfolio](docs/team/aldomax.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars0.githubusercontent.com/u/60382521?s\u003d400\u0026u\u003dcf1fd251902a9305731ac4732d85abb1f83c6755\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Toh Yong Xiang Brandon | [Github](https://github.com/brandontoh) | [Portfolio](docs/team/TohYongXiangBrandon.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars1.githubusercontent.com/u/54772103?s\u003d460\u0026u\u003daaf323e6171a155d2080ea54e18a429e81d8bb55\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Hubertus Adhy Pratama Setiawan | [Github](https://github.com/adhy-p) | [Portfolio](docs/team/adhy-p.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://via.placeholder.com/100.png?text\u003dPhoto\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Theodore Pinto | [Github](https://github.com/theopin) | [Portfolio](docs/team/theopin.md)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "domaxi": 1,
      "abnermtj": 5,
      "-": 4
    }
  },
  {
    "path": "docs/team/TohYongXiangBrandon.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "# Toh Yong Xiang Brandon - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "Y2 NUS CEG Student"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 6
    }
  },
  {
    "path": "docs/team/abner.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "A Nus student."
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1
    }
  },
  {
    "path": "docs/team/adhy-p.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "# Hubertus Adhy Pratama Setiawan - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 6
    }
  },
  {
    "path": "docs/team/aldomax.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "domaxi"
        },
        "content": "# Aldo Maximillian - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "domaxi"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "domaxi"
        },
        "content": "I am a Y2 Computer Engineering student, currently enrolling in NUS."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "domaxi"
        },
        "content": "### Summary of Contributions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "domaxi"
        },
        "content": "I am the alleged leader of the tem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "domaxi"
        },
        "content": "I made the team repo, organization"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "domaxi"
        },
        "content": "I am in charge of the cheatSheet class"
      }
    ],
    "authorContributionMap": {
      "domaxi": 9
    }
  },
  {
    "path": "docs/team/theopin.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "# Theodore Pinto - Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": "### Summary of Contributions"
      }
    ],
    "authorContributionMap": {
      "theopin": 6
    }
  },
  {
    "path": "src/main/java/cheatsheet/CheatSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "domaxi"
        },
        "content": "package cheatsheet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "domaxi"
        },
        "content": "public class CheatSheet {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    private String cheatSheetName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    private String cheatSheetProgrammingLanguage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    private String cheatSheetDetails;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public CheatSheet(String cheatSheetName, String cheatSheetProgrammingLanguage, String cheatSheetDetails) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetName \u003d cheatSheetName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetProgrammingLanguage \u003d cheatSheetProgrammingLanguage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetDetails \u003d cheatSheetDetails;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public String getCheatSheetName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        return cheatSheetName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public void setCheatSheetName(String cheatSheetName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetName \u003d cheatSheetName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public String getCheatSheetProgrammingLanguage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        return cheatSheetProgrammingLanguage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public void setCheatSheetProgrammingLanguage(String cheatSheetProgrammingLanguage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetProgrammingLanguage \u003d cheatSheetProgrammingLanguage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public String getCheatSheetDetails() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        return cheatSheetDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public void setCheatSheetDetails(String cheatSheetDetails) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        this.cheatSheetDetails \u003d cheatSheetDetails;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        return \"CheatSheet{\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "domaxi"
        },
        "content": "                + \"cheatSheetName\u003d\u0027\" + cheatSheetName + \u0027\\\u0027\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "domaxi"
        },
        "content": "                + \", cheatSheetProgrammingLanguage\u003d\u0027\" + cheatSheetProgrammingLanguage + \u0027\\\u0027\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "domaxi"
        },
        "content": "                + \", cheatSheetDetails\u003d\u0027\" + cheatSheetDetails + \u0027\\\u0027\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "domaxi"
        },
        "content": "                + \u0027}\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "domaxi"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "domaxi": 48
    }
  },
  {
    "path": "src/main/java/cheatsheet/CheatSheetList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package cheatsheet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class CheatSheetList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private static ArrayList\u003cCheatSheet\u003e cheatSheets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public CheatSheetList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Gets the number of cheat sheet currently in the CheatSheetList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return size of cheatSheets"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return cheatSheets.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Gets all the cheat sheets in the cheatSheetList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return cheatSheets The current list of cheat sheets"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static ArrayList\u003cCheatSheet\u003e getCheatSheetList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return cheatSheets;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Converts the cheatSheetName attribute for each cheat sheet into a string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * The string will be used by UI for printing"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return printedByUI The string to be printed by UI"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static String printCheatSheetNames() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        StringBuilder printedByUI \u003d new StringBuilder(\"Current list of cheat sheet:\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (CheatSheet cs : cheatSheets) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            printedByUI.append(cs.getCheatSheetName()).append(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return printedByUI.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Adds a new cheat sheet to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void add(CheatSheet cheatSheet) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        cheatSheets.add(cheatSheet);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Deletes a cheat sheet from the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints an error message if name is not found."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param name The name attribute of the desired cheat sheet"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void remove(String name) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (CheatSheet cs : cheatSheets) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (cs.getCheatSheetName().equals(name)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            cheatSheets.remove(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            // todo: add error message in UI"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Retrieves a cheat sheet from the list using its index."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param index The index of desired cheat sheet"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return size of cheatSheets"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static CheatSheet getCheatSheet(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        CheatSheet cheatSheet;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            cheatSheet \u003d cheatSheets.get(index - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            // todo: add error message in UI"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return cheatSheet;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 91
    }
  },
  {
    "path": "src/main/java/command/AddCheatSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import cheatsheet.CheatSheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class AddCheatSheet extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 10
    }
  },
  {
    "path": "src/main/java/command/ClearCheetSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ClearCheetSheet extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " * The base class for all commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public boolean isExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExitCommand \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute(CommandEnum commandType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        Command commandToBeExecuted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case ADDCHEATSHEET:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new AddCheatSheet();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case CLEARCHEETSHEET:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new ClearCheetSheet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case DELETECHEATHSHEET:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new DeleteCheatSheet();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new Exit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case FINDCHEATSHEET:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new FindCheatSheet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new Help();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case LISTCHEATSHEET:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new ListCheatSheets();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        case VIEWCHEATSHEET:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new ViewCheatSheet();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            commandToBeExecuted \u003d new Exit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        commandToBeExecuted.execute();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 49
    }
  },
  {
    "path": "src/main/java/command/CommandEnum.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public enum CommandEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    ADDCHEATSHEET,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    CLEARCHEETSHEET,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    DELETECHEATHSHEET,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    FINDCHEATSHEET,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    LISTCHEATSHEET,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    VIEWCHEATSHEET;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 12
    }
  },
  {
    "path": "src/main/java/command/DeleteCheatSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class DeleteCheatSheet extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/command/Exit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Exit extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        isExitCommand \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 9
    }
  },
  {
    "path": "src/main/java/command/FindCheatSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class FindCheatSheet extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/command/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Help extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/command/ListCheatSheets.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ListCheatSheets extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/command/ViewCheatSheet.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class ViewCheatSheet extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "import command.CommandEnum;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    CommandEnum parser(String userInput) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            String parsedInput \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            switch (parsedInput) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/add\":"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.ADDCHEATSHEET;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/clear\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.CLEARCHEETSHEET;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/delete\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.DELETECHEATHSHEET;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/exit\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.EXIT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/find\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.FINDCHEATSHEET;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/help\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.HELP;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.LISTCHEATSHEET;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            case \"/view\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.VIEWCHEATSHEET;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "                return CommandEnum.EXIT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException a) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "            return CommandEnum.EXIT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello \" + in.nextLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "adhy-p": 1
    }
  },
  {
    "path": "src/main/java/storage/DataFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": " * A general class that stores certain constants regarding the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": " * file location of duke.txt, as well as a method that can be"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": " * executed based on the type of class that is a child of this class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": "public abstract class DataFile {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String USER_DIR \u003d  System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String DATA \u003d \"data\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final Path DATA_DIR \u003d  Paths.get(USER_DIR, DATA);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * A method that is to be run when its subclass is created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public abstract void executeFunction();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 22
    }
  },
  {
    "path": "src/main/java/storage/ParseCheatSheetFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import cheatsheet.CheatSheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": "public class ParseCheatSheetFile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String NAME \u003d \"Name: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String PROGRAMMING_LANGUAGE \u003d \"Programming Language: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String DETAILS \u003d \"Details: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": "    protected static final String EMPTY \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private final StringBuilder cheatSheetDetails \u003d new StringBuilder();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private String cheatSheetName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private String cheatSheetProgrammingLanguage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public ParseCheatSheetFile(File cheatSheetDocument) throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theopin"
        },
        "content": "        parseCheatSheet(cheatSheetDocument);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Parses the given cheatSheet file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheetDocument cheatSheet file to be parsed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @throws FileNotFoundException Thrown if the file is not found in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *                               the user directory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void parseCheatSheet(File cheatSheetDocument) throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theopin"
        },
        "content": "        Scanner componentScanner \u003d new Scanner(cheatSheetDocument);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theopin"
        },
        "content": "        while (componentScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theopin"
        },
        "content": "            extractCheatSheetComponents(componentScanner.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theopin"
        },
        "content": "        new CheatSheet(cheatSheetName, cheatSheetProgrammingLanguage,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theopin"
        },
        "content": "                 cheatSheetDetails.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Extracts the contents of the cheatsheet from the specified file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheetLine Line of the file being analyzed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void extractCheatSheetComponents(String cheatSheetLine) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theopin"
        },
        "content": "        if (cheatSheetLine.startsWith(NAME)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetName \u003d cheatSheetLine.replace(NAME, EMPTY).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } else if (cheatSheetLine.startsWith(PROGRAMMING_LANGUAGE)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetProgrammingLanguage \u003d cheatSheetLine.replace(PROGRAMMING_LANGUAGE,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theopin"
        },
        "content": "                    EMPTY).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } else if (cheatSheetLine.startsWith(DETAILS)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetDetails.append(cheatSheetLine.replace(DETAILS,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theopin"
        },
        "content": "                    EMPTY).trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetDetails.append(cheatSheetLine.trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theopin"
        },
        "content": "            this.cheatSheetDetails.append(System.lineSeparator());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 61
    }
  },
  {
    "path": "src/main/java/storage/ReadDataFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": " * Allows the user to read data from documentTracker.txt and use it"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": " * to insert the cheatsheets present in the folder to the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "public class ReadDataFile extends DataFile {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theopin"
        },
        "content": "    // ReadDataFile Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public ReadDataFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theopin"
        },
        "content": "        executeFunction();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Converts the file contents into tasks that can be added into"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * the list of tasks. Also handles an exception arising"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * from missing directory at the specified location."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theopin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public void executeFunction() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theopin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theopin"
        },
        "content": "            insertStoredCheatSheets();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theopin"
        },
        "content": "            createNewDirectory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Converts the data obtained from the /data folder into cheatsheets and adds"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * them to the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @throws NullPointerException Thrown if the /data folder is not found or is empty"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void insertStoredCheatSheets() throws NullPointerException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theopin"
        },
        "content": "        // create a File for the given file path"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theopin"
        },
        "content": "        File[] cheatSheetFiles \u003d new File(String.valueOf(DATA_DIR)).listFiles();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theopin"
        },
        "content": "        assert cheatSheetFiles !\u003d null : \"No files found! Loading Application!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theopin"
        },
        "content": "        for (File cheatSheetFile : cheatSheetFiles) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theopin"
        },
        "content": "            extractCheatSheet(cheatSheetFile);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Creates a new directory and file at the specified location"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * if it currently does not exist."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void createNewDirectory()  {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theopin"
        },
        "content": "        if (!Files.exists(DATA_DIR)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theopin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theopin"
        },
        "content": "                Files.createDirectories(DATA_DIR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theopin"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theopin"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theopin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Extracts the contents of the cheatsheet from the specified file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheetDocument File of the cheatSheet"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void extractCheatSheet(File cheatSheetDocument)  {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theopin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theopin"
        },
        "content": "            new ParseCheatSheetFile(cheatSheetDocument);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theopin"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 75
    }
  },
  {
    "path": "src/main/java/storage/WriteDataFile.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import cheatsheet.CheatSheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "import static storage.ParseCheatSheetFile.NAME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": "import static storage.ParseCheatSheetFile.PROGRAMMING_LANGUAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "theopin"
        },
        "content": "import static storage.ParseCheatSheetFile.DETAILS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "theopin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "theopin"
        },
        "content": " * Allows the user to write data based on the cheatSheets currently present"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "theopin"
        },
        "content": " * in the list of cheatSheets into individual .txt files."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "theopin"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "theopin"
        },
        "content": "public class WriteDataFile extends DataFile {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private static final String FILE_EXTENSION \u003d \".txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "theopin"
        },
        "content": "    // WriteDataFile Constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public WriteDataFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "theopin"
        },
        "content": "        executeFunction();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Converts the cheatSheets present in the list of cheatSheet into"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * a string. This string is then saved in a form of .txt file, 1 file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * for each cheatSheet."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "theopin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public void executeFunction() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "theopin"
        },
        "content": "        storeCheatSheet();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Converts the cheatSheets present in the list of cheatSheets into"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void storeCheatSheet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "theopin"
        },
        "content": "        /*for(CheatSheet cheatSheet : cheatSheets) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "theopin"
        },
        "content": "            convertStringToFile(cheatSheet);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "theopin"
        },
        "content": "        */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Converts the cheatSheet into a file format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheet The cheatSheet that is currently being converted into a file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void convertStringToFile(CheatSheet cheatSheet) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "theopin"
        },
        "content": "        StringBuilder cheatSheetFileBuild \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "theopin"
        },
        "content": "        // build cheatsheet content"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "theopin"
        },
        "content": "        buildFileContents(cheatSheetFileBuild, cheatSheet);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "theopin"
        },
        "content": "        String fileName \u003d cheatSheet.getCheatSheetName() + FILE_EXTENSION;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "theopin"
        },
        "content": "        Path textFileDirectory \u003d Paths.get(USER_DIR, DATA, fileName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "theopin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "theopin"
        },
        "content": "            if (!Files.exists(textFileDirectory)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "theopin"
        },
        "content": "                Files.createFile(textFileDirectory);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "theopin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "theopin"
        },
        "content": "            writeToFile(String.valueOf(textFileDirectory), cheatSheetFileBuild.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "theopin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "theopin"
        },
        "content": "            System.out.println(\"\\tSomething went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "theopin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Sets the contents for the respective cheatSheet file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheetFileBuild the stringBuilder used to connect the contents of the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param cheatSheet The cheatSheet that is currently being converted into a file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void buildFileContents(StringBuilder cheatSheetFileBuild, CheatSheet cheatSheet) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "theopin"
        },
        "content": "        cheatSheetFileBuild.append(NAME).append("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "theopin"
        },
        "content": "                cheatSheet.getCheatSheetName());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "theopin"
        },
        "content": "        cheatSheetFileBuild.append(System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "theopin"
        },
        "content": "        cheatSheetFileBuild.append(PROGRAMMING_LANGUAGE).append("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "theopin"
        },
        "content": "                cheatSheet.getCheatSheetProgrammingLanguage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "theopin"
        },
        "content": "        cheatSheetFileBuild.append(System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "theopin"
        },
        "content": "        cheatSheetFileBuild.append(DETAILS).append(cheatSheet.getCheatSheetDetails());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "theopin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * Writes the values of textContent into duke.txt"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param directory Name of the file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @param fileContents Contents of the file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "theopin"
        },
        "content": "     * @throws IOException Thrown if there are issues with writing the string"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "theopin"
        },
        "content": "     *                     into duke.txt"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "theopin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "theopin"
        },
        "content": "    private void writeToFile(String directory, String fileContents) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "theopin"
        },
        "content": "        FileWriter fileEditor \u003d new FileWriter(directory);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "theopin"
        },
        "content": "        fileEditor.write(fileContents);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "theopin"
        },
        "content": "        fileEditor.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 104
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import cheatsheet.CheatSheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import cheatsheet.CheatSheetList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void displayWelcomeScreen() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"What is your name?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public String askForUserInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        System.out.println(\"Bye Friend\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void printCheatSheet() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        CheatSheetList cheatSheetList \u003d new CheatSheetList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        for (int i \u003d 0; i \u003c cheatSheetList.getSize(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "            System.out.println(cheatSheetList.getCheatSheet(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 40
    }
  },
  {
    "path": "src/test/java/cheatsheet/CheatSheetListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package cheatsheet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "class CheatSheetListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testGetSize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        assertEquals(10, CheatSheetList.getSize());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.remove(\"Name\" + i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testGetCheatSheetList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        // to be added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testPrintCheatSheetNames() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        StringBuilder print \u003d new StringBuilder(\"Current list of cheat sheet:\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            print.append(\"Name\").append(i).append(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        assertEquals(print.toString(), CheatSheetList.printCheatSheetNames());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.remove(\"Name\" + i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testAdd() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        assertEquals(10, CheatSheetList.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.remove(\"Name\" + i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testRemove() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        CheatSheetList.remove(\"Name1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        CheatSheetList.remove(\"Name3\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        CheatSheetList.remove(\"Name5\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        assertEquals(7, CheatSheetList.getSize());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (i \u003d\u003d 1 || i \u003d\u003d 3 || i \u003d\u003d 5) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.remove(\"Name\" + i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    void testGetCheatSheet() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        CheatSheet test \u003d new CheatSheet(\"Name1\", \"Language1\", \"Details1\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                CheatSheetList.add(test);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                CheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        assertEquals(test, CheatSheetList.getCheatSheet(2));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            CheatSheetList.remove(\"Name\" + i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 6,
      "adhy-p": 76
    }
  },
  {
    "path": "src/test/java/cheatsheet/CheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "domaxi"
        },
        "content": "package cheatsheet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "domaxi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "domaxi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "domaxi"
        },
        "content": "class CheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void getCheatSheetName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"Test1\", cheatSheet1.getCheatSheetName());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void setCheatSheetName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        cheatSheet1.setCheatSheetName(\"Java 11 cheatsheet\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"Java 11 cheatsheet\", cheatSheet1.getCheatSheetName());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void getCheatSheetProgrammingLanguage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"Java 11\", cheatSheet1.getCheatSheetProgrammingLanguage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void setCheatSheetProgrammingLanguage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        cheatSheet1.setCheatSheetProgrammingLanguage(\"C++ 11\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"C++ 11\", cheatSheet1.getCheatSheetProgrammingLanguage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void getCheatSheetDetails() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"Java 11 is a Java programming language.\", cheatSheet1.getCheatSheetDetails());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "domaxi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    void setCheatSheetDetails() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        cheatSheet1.setCheatSheetDetails(\"Java 11 is an awesome language\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "domaxi"
        },
        "content": "        assertEquals(\"Java 11 is an awesome language\", cheatSheet1.getCheatSheetDetails());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "domaxi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "domaxi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "domaxi": 47
    }
  },
  {
    "path": "src/test/java/command/AddCheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class AddCheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/ClearCheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class ClearCheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/CommandTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void testExecute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    public void testCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        // todo : implement this"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 6,
      "brandontoh": 16
    }
  },
  {
    "path": "src/test/java/command/DeleteCheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class DeleteCheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/ExitTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class ExitTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/FindCheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class FindCheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/HelpTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class HelpTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/ListCheatSheetsTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class ListCheatSheetsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/command/ViewCheatSheetTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class ViewCheatSheetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 12
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void parser_incompleteInput_exceptionThrown() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 17
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "adhy-p": 1
    }
  },
  {
    "path": "src/test/java/storage/ReadTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": "public class ReadTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 13
    }
  },
  {
    "path": "src/test/java/storage/WriteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "theopin"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "theopin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "theopin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "theopin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "theopin"
        },
        "content": "public class WriteTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "theopin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "theopin"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "theopin"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "theopin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "theopin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "theopin": 13
    }
  },
  {
    "path": "src/test/java/ui/UiTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    public void displayWelcomeScreen() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void askForUserInput() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void printExitMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandontoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    void printCheatSheet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandontoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandontoh": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "James Gosling"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "abnermtj"
        },
        "content": "abner"
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1,
      "-": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "abnermtj"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "abnermtj": 1,
      "-": 23
    }
  }
]
