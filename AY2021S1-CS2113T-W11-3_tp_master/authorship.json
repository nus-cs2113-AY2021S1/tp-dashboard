[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"![Our Logo](https://i.ibb.co/VxzKbbz/a1.png)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"This document guides you through the process of using this project directory."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/cheatlogs/CheatLogs.java` file, right-click it, and choose `Run CheatLogs.main()`. If the setup is correct, you should see something like the image below:"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":""},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"![CheatLogs welcome screen](https://i.ibb.co/L6LmYGZ/mainMenu.png)"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"Type some word and press enter to let the execution proceed to the end."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":20,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"* There are a number of JUnit tests that are provided for you to test the various features of CheatLogs."},{"lineNumber":25,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":30,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"`/docs` folder contains a few important documents featuring different aspects of this project."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."}],"authorContributionMap":{"theopin":8,"-":38}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"    compile group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00271.18\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"domaxi"},"content":"    mainClassName \u003d \"cheatlogs.CheatLogs\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"    archiveBaseName \u003d \"CheatLogs\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"    enableAssertions \u003d true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"domaxi":1,"-":44,"adhy-p":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://via.placeholder.com/100.png?text\u003dPhoto\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Tolentino Abner Jr Morales| [Github](https://github.com/abnermtj) | [Portfolio](team/abnermtj.md) "},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":"\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/60168552?s\u003d400\u0026u\u003d70ed3bb19e26b16aadf133b9ff21ee01345defff\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Aldo Maximillian | [Github](https://github.com/domaxi) | [Portfolio](team/aldomax.md)"},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars0.githubusercontent.com/u/60382521?s\u003d400\u0026u\u003dcf1fd251902a9305731ac4732d85abb1f83c6755\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Toh Yong Xiang Brandon | [Github](https://github.com/brandontoh) | [Portfolio](team/brandontoh.md)"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://avatars1.githubusercontent.com/u/54772103?s\u003d460\u0026u\u003daaf323e6171a155d2080ea54e18a429e81d8bb55\u0026v\u003d4\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Hubertus Adhy Pratama Setiawan | [Github](https://github.com/adhy-p) | [Portfolio](team/adhy-p.md)"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"\u003ca href\u003d\"url\"\u003e\u003cimg src\u003d\"https://i.ibb.co/0Ygn4Sr/theoPPP.jpg\" style\u003d\"vertical-align:middle\" height\u003d\"50\" width\u003d\"50\"\u003e\u003c/a\u003e | Theodore Pinto | [Github](https://github.com/theopin) | [Portfolio](team/theopin.md)"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":""}],"authorContributionMap":{"domaxi":1,"-":4,"adhy-p":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":""},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"\u003ch1 align\u003d\"center\"\u003e  CheatLogs Developer Guide \u003c/h1\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"![Our Logo](https://i.ibb.co/VxzKbbz/a1.png)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"Welcome to the official developer guide of CheatLogs, a free and open-source cheatsheet manager with blazing fast organization, editing and searching via both a command-line interface (CLI) and a graphical user interface (GUI) ."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"The table of contents below lets you easily access the documentation for CheatLogs\u0027s architecture and feature design/implmentation details."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"\u003e \u003cfont size \u003d \"5\" \u003e:bulb: Here are some patterns you will come across and their definitions."},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"\u003e ------"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"\u003e|Pattern|Definition|"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"\u003e|--|--|"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"\u003e| :bulb: |Tip on current section  |"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"\u003e|:exclamation:|Warning of potential error|"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"\u003e|:memo:|Important details to note|"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"\u003e|\u003cfont size\u003d\"3\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e| Returns to table of contents on left click|"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"\u003e|**bold**|Key terms specific to CheatLogs|"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"\u003e|*italics*|Files|"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"\u003e|`Snippets`|Typed input or output going into or out of CheatLogs|"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":""},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"# Table of Contents"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":""},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"* [1. Introduction](#introduction)"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"* [2. Purpose](#purpose)"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"* [3. Setting Up, Getting Started](#setting-up-getting-started)"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    * [3.1. Prerequisites](#prerequisites)"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    * [3.2. Running the Project](#running-the-project)"},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"    * [3.3 Importing into IntelliJ \\[optional\\]](#importing-to-intellij)"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"* [4. Design](#design)"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    * [4.1. Architecture](#architecture)"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    * [4.2. Components](#components)"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"         * [4.2.1. User Interface](#user-interface)"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"\t        * [4.2.1.1. UserSesssion](#user-sesh)"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"\t        * [4.2.1.2. Input](#in)"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"\t        * [4.2.1.3. Output](#out)"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        * [4.2.2. Command Parser](#command-parser)"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        * [4.2.3. Command](#command)"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.1. FinderCommand](#findercommand)"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.2. Add](#add)"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.3. Edit](#edit)"},{"lineNumber":47,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.4. View](view)"},{"lineNumber":48,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.5. Exit](#exit)"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.6. List](#list)"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.7. Find](#find)"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.8. Setting](#setting)"},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.9. Delete](#delete)"},{"lineNumber":53,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.10. Clear](#clear)"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.11. Favourite](#favourite)"},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"            * [4.2.3.12. Exit](#help)"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"        * [4.2.4. Cheat Sheet Structure](#cheat-sheet-structure)"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"        * [4.2.5. Cheat Sheet Management](#cheat-sheet-management)"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"        * [4.2.6. Data Storage](#data-storage)"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"            * [4.2.6.1 Writing files](#file-writer-design)"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"            * [4.2.6.2 Reading files](#file-reader-design)"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"            * [4.2.6.3 Deleting files](#file-destroyer-design)"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"* [5. Implementation](#implementation)"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"    * [5.1. Parsing of Data to Construct Commands](#parsing-of-data-to-construct-commands)"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"    * [5.2. Editing Feature](#editing-feature)"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"    * [5.3. Sorting Feature](#sorting-feature)"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"    * [5.4. Data Management](#data-management)"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"        * [5.4.1 Writing files](#impln-file-writer)"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"        * [5.4.2 Reading files](#impln-file-reader)"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"        * [5.4.3 Deleting files](#impln-file-destroyer)"},{"lineNumber":70,"author":{"gitId":"adhy-p"},"content":"    * [5.5. Changing default settings](#settings-implementation)"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"    * [5.6. Colour coding for code snippet](#colour-coding-for-code-snippet)"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"* [6. Appendix: Documentation](#appendix-documentation)"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"* [7. Appendix: Logging](#appendix-logging)"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"* [8. Appendix: Testing](#appendix-testing)"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"    * [8.1 Executing tests](#appendix-executing-tests)"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"    * [8.2 Types of tests](#appendix-types-of-tests)"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"* [9. Appendix: Dev-ops](#appendix-dev-ops)"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"    * [9.1 Build automation](#appendix-build-automation)"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"    * [9.2 Making a new release](#appendix-new-release)"},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"* [10. Appendix: Requirements](#appendix-requirements)"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"    * [10.1. Product scope](#product-scope-appendix)"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"    * [10.2. User stories](#user-stories)"},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"    * [10.3. Use cases](#use-cases)"},{"lineNumber":84,"author":{"gitId":"domaxi"},"content":"        * [10.3.1 Use cases](#use-cases-add)"},{"lineNumber":85,"author":{"gitId":"domaxi"},"content":"        * [10.3.2 Use cases](#use-cases-edit)"},{"lineNumber":86,"author":{"gitId":"domaxi"},"content":"        * [10.3.3 Use cases](#use-cases-delete)"},{"lineNumber":87,"author":{"gitId":"domaxi"},"content":"        * [10.3.4 Use cases](#use-cases-clear)"},{"lineNumber":88,"author":{"gitId":"domaxi"},"content":"        * [10.3.5 Use cases](#use-cases-favourite)"},{"lineNumber":89,"author":{"gitId":"domaxi"},"content":"        * [10.3.6 Use cases](#use-cases-find)"},{"lineNumber":90,"author":{"gitId":"domaxi"},"content":"        * [10.3.7 Use cases](#use-cases-view)"},{"lineNumber":91,"author":{"gitId":"domaxi"},"content":"        * [10.3.8 Use cases](#use-cases-list)"},{"lineNumber":92,"author":{"gitId":"domaxi"},"content":"        * [10.3.9 Use cases](#use-cases-exit) "},{"lineNumber":93,"author":{"gitId":"theopin"},"content":"    * [10.4. Non-Functional Requirements](#non-functional-requirements)"},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"* [11. Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":"    * [11.1. Start-up with preloaded data and restart with save data](#manual-test-1)"},{"lineNumber":96,"author":{"gitId":"adhy-p"},"content":"    * [11.2. Adding cheatsheets](#manual-test-2)"},{"lineNumber":97,"author":{"gitId":"adhy-p"},"content":"    * [11.3. Editing cheatsheets](#manual-test-3)"},{"lineNumber":98,"author":{"gitId":"adhy-p"},"content":"    * [11.4. Viewing cheatsheets](#manual-test-4)"},{"lineNumber":99,"author":{"gitId":"adhy-p"},"content":"    * [11.5. Finding cheatsheets](#manual-test-5)"},{"lineNumber":100,"author":{"gitId":"adhy-p"},"content":"    * [11.6. Deleting cheatsheets](#manual-test-6)"},{"lineNumber":101,"author":{"gitId":"adhy-p"},"content":"    * [11.7. Clearing cheatsheets](#manual-test-7)"},{"lineNumber":102,"author":{"gitId":"adhy-p"},"content":"    * [11.8. Add/remove cheatsheets to favourites](#manual-test-8)"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":""},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":""},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"introduction\"\u003e\u003c/a\u003e"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"# 1. Introduction\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":108,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":109,"author":{"gitId":"abnermtj"},"content":"The motivation behind CheatLogs is to reduce the time spent to scroll through pages of stack overflow posts or online documentation sites to find a syntax for a programming language, which is very common for novice programmers. "},{"lineNumber":110,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":111,"author":{"gitId":"abnermtj"},"content":"**CheatLogs** allows it\u0027s user to access cheat sheets and notes for various programming syntax and functions. This gives novice programmers a way faster to get references as they build their applications. It also provides a set of preloaded cheatsheets for common languages novice programmers adopt. It consists of both a command line interface and a graphical user interface. Below is a summary of all the commands."},{"lineNumber":112,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":113,"author":{"gitId":"abnermtj"},"content":"To cheatsheets in the list of cheatsheets:  `add`, `delete`, or`clear` "},{"lineNumber":114,"author":{"gitId":"theopin"},"content":""},{"lineNumber":115,"author":{"gitId":"abnermtj"},"content":"To modify properties of a specific cheatsheet: `edit` or `favorite`."},{"lineNumber":116,"author":{"gitId":"theopin"},"content":""},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":"To get specific cheatsheets:  `find`, `view`  and `list`"},{"lineNumber":118,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":119,"author":{"gitId":"abnermtj"},"content":"To use more general commands:  `help` , `set`, `exit`"},{"lineNumber":120,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":121,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"purpose\"\u003e\u003c/a\u003e"},{"lineNumber":122,"author":{"gitId":"abnermtj"},"content":"# 2. Purpose\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":123,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":"This document specifies the high-level architecture and software design decisions of CheatLogs and aims to quickly get developers familiar with the project. "},{"lineNumber":125,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"setting-up-getting-started\"\u003e\u003c/a\u003e"},{"lineNumber":127,"author":{"gitId":"abnermtj"},"content":"# 3. Setting Up, Getting Started\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":128,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":129,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"prerequisites\"\u003e\u003c/a\u003e"},{"lineNumber":131,"author":{"gitId":"abnermtj"},"content":"## 3.1. Prerequisites\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":132,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":133,"author":{"gitId":"brandontoh"},"content":"1. JDK 11.0.8"},{"lineNumber":134,"author":{"gitId":"brandontoh"},"content":"2. Java IDE (IntelliJ Recommended)"},{"lineNumber":135,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":136,"author":{"gitId":"brandontoh"},"content":"CheatLogs has been developed on Java 11 and may not be supported on other versions. "},{"lineNumber":137,"author":{"gitId":"brandontoh"},"content":"You are free to use any java file editor and run the program by following the step by step guide below. "},{"lineNumber":138,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":139,"author":{"gitId":"theopin"},"content":""},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"running-the-project\"\u003e\u003c/a\u003e"},{"lineNumber":141,"author":{"gitId":"abnermtj"},"content":"## 3.2. Running the Project\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":142,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":143,"author":{"gitId":"brandontoh"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":144,"author":{"gitId":"adhy-p"},"content":"2. Download the latest CheatLogs.jar from [here](https://github.com/AY2021S1-CS2113T-W11-3/tp/releases)."},{"lineNumber":145,"author":{"gitId":"brandontoh"},"content":"3. Move the file to a folder you want to use as the home folder for this application."},{"lineNumber":146,"author":{"gitId":"adhy-p"},"content":"4. Invoke java -jar CheatLogs.jar on the command line to run the program. A welcome message should appear, as shown below."},{"lineNumber":147,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":148,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/pK6CtPv/image.png)"},{"lineNumber":149,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":150,"author":{"gitId":"theopin"},"content":""},{"lineNumber":151,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"importing-to-intellij\"\u003e\u003c/a\u003e"},{"lineNumber":152,"author":{"gitId":"abnermtj"},"content":"## 3.3 Importing into IntelliJ [optional]\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":153,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":154,"author":{"gitId":"brandontoh"},"content":"In case you prefer to use IDEs to develop. "},{"lineNumber":155,"author":{"gitId":"brandontoh"},"content":"IntelliJ IDEA community edition is a popular free choice. "},{"lineNumber":156,"author":{"gitId":"brandontoh"},"content":"After installing a version of it you can import it using the “Get from Version Control” option below and clone from our [repository](https://github.com/AY2021S1-CS2113T-W11-3/tp.)."},{"lineNumber":157,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":158,"author":{"gitId":"theopin"},"content":""},{"lineNumber":159,"author":{"gitId":"brandontoh"},"content":"![](Images/Image2.PNG)"},{"lineNumber":160,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":161,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":162,"author":{"gitId":"theopin"},"content":""},{"lineNumber":163,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"design\"\u003e\u003c/a\u003e"},{"lineNumber":164,"author":{"gitId":"abnermtj"},"content":"# 4. Design\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"brandontoh"},"content":"This section will elaborate on the architecture and component design of CheatLogs."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"theopin"},"content":""},{"lineNumber":169,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"architecture\"\u003e\u003c/a\u003e"},{"lineNumber":170,"author":{"gitId":"abnermtj"},"content":"## 4.1. Architecture\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"abnermtj"},"content":"The following diagram describes the high-level architecture of CheatLogs\u0027 major components."},{"lineNumber":173,"author":{"gitId":"brandontoh"},"content":"![](Images/Image3.PNG)"},{"lineNumber":174,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":175,"author":{"gitId":"brandontoh"},"content":"Image 1: General Architecture of CheatLogs"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"brandontoh"},"content":"CheatLogs is split into 5 major components, each handling distinct features of the application. The components and a brief description of them is listed below."},{"lineNumber":178,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":179,"author":{"gitId":"brandontoh"},"content":"* `UI`: The user interface of the app."},{"lineNumber":180,"author":{"gitId":"brandontoh"},"content":"* `CheatSheet`: The structure of each cheat sheet"},{"lineNumber":181,"author":{"gitId":"brandontoh"},"content":"* `CheatSheetList`: A collection of every cheat sheet."},{"lineNumber":182,"author":{"gitId":"brandontoh"},"content":"* `Parser`: Builds a data structure based on user inputs."},{"lineNumber":183,"author":{"gitId":"brandontoh"},"content":"* `Command`: An encapsulation of data and methods to execute each command"},{"lineNumber":184,"author":{"gitId":"abnermtj"},"content":"* `Storage`: Reads and Writes data between CheatLogs and the system."},{"lineNumber":185,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"abnermtj"},"content":"For a more an extensive version of the various classes present in CheatLogs as well as their interactions with each other, you can refer to the diagram below."},{"lineNumber":188,"author":{"gitId":"theopin"},"content":""},{"lineNumber":189,"author":{"gitId":"abnermtj"},"content":"![Architecture-2113](https://i.ibb.co/jgGzmMw/Architecture-2113.png)"},{"lineNumber":190,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":191,"author":{"gitId":"brandontoh"},"content":"Image 2: In-Depth Architecture of CheatLogs"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"abnermtj"},"content":"Notice that for each component, it can be further split into different subclasses which have a unique responsibility. They will be further elaborated upon in the next section."},{"lineNumber":194,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"components\"\u003e\u003c/a\u003e"},{"lineNumber":195,"author":{"gitId":"abnermtj"},"content":"## 4.2. Components\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":196,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":197,"author":{"gitId":"theopin"},"content":"This application contains five different components. "},{"lineNumber":198,"author":{"gitId":"brandontoh"},"content":"Each component has a unique function and contributes to the functionality of this application."},{"lineNumber":199,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":200,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":201,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":202,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"user-interface\"\u003e\u003c/a\u003e"},{"lineNumber":203,"author":{"gitId":"abnermtj"},"content":"### 4.2.1. User Interface\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":204,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":205,"author":{"gitId":"theopin"},"content":"//Abner"},{"lineNumber":206,"author":{"gitId":"abnermtj"},"content":"This component handles interactions with the user. These interactions include providing a REPL style interface and managing input and output of the program.  "},{"lineNumber":207,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":208,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"user-sesh\"\u003e\u003c/a\u003e"},{"lineNumber":209,"author":{"gitId":"abnermtj"},"content":"####  4.2.1.1 UserSession\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":210,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":211,"author":{"gitId":"abnermtj"},"content":"One of the classes is `UserSession` which contains the main loop of the program. Below is the class in UML."},{"lineNumber":212,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":213,"author":{"gitId":"abnermtj"},"content":"![usersessionclass](https://i.ibb.co/C9s21vk/usersessionclass.png)"},{"lineNumber":214,"author":{"gitId":"brandontoh"},"content":"Image 3: User Session class fields and methods "},{"lineNumber":215,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":216,"author":{"gitId":"abnermtj"},"content":"The constructor of this class calls the constructors of the required objects used by **CheatLogs**. Method calls from these objects are later called in the `start()` method."},{"lineNumber":217,"author":{"gitId":"abnermtj"},"content":" "},{"lineNumber":218,"author":{"gitId":"abnermtj"},"content":"The main loop of the program is in `runProgramSequence()`. Every loop it reads and parses user input, which is then used to create an executable `Command` object which encapsulates all the necessary information needed to execute the command. "},{"lineNumber":219,"author":{"gitId":"abnermtj"},"content":"After execution, it handles potential exceptions thrown. Lastly, it saves the file between every command."},{"lineNumber":220,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":221,"author":{"gitId":"abnermtj"},"content":"When exiting the program, the `exit` command ensures all objects that require manual closing are closed."},{"lineNumber":222,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":223,"author":{"gitId":"abnermtj"},"content":"Below is a sequence diagram of the events occurring in a valid command."},{"lineNumber":224,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":225,"author":{"gitId":"abnermtj"},"content":"![User-Session](https://i.ibb.co/ryM7jR4/User-Session.png)"},{"lineNumber":226,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":227,"author":{"gitId":"abnermtj"},"content":"A single instance of common objects is usually created in `UserSession`, such as `Ui` and `Printer` objects. "},{"lineNumber":228,"author":{"gitId":"brandontoh"},"content":"These common objects are injected into other objects that need them via the class constructor instead of static methods."},{"lineNumber":229,"author":{"gitId":"abnermtj"},"content":"The `Ui` and `Printer` helper classes which provide an organized way to read and write data. "},{"lineNumber":230,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":231,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"in\"\u003e\u003c/a\u003e"},{"lineNumber":232,"author":{"gitId":"abnermtj"},"content":" #### 4.2.1.2. Input\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":233,"author":{"gitId":"abnermtj"},"content":" The `Ui` class controls the input into **CheatLogs**, it currently acts exactly like `java.util.Scanner` but will be extended in the future."},{"lineNumber":234,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":235,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"out\"\u003e\u003c/a\u003e"},{"lineNumber":236,"author":{"gitId":"abnermtj"},"content":" #### 4.2.1.3. Output\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":237,"author":{"gitId":"abnermtj"},"content":" The `ConsoleColorsEnum`, `Printer` and `TablePrinterClasses` are all used to control and centralize the output of **CheatLogs**.  They provide various helper methods to make the code of `Command` subclasses less verbose. In addition, `ConsoleColorsEnum` this class provides various ANSI escape characters that is used to format the colors of the output."},{"lineNumber":238,"author":{"gitId":"abnermtj"},"content":"  "},{"lineNumber":239,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":240,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"command-parser\"\u003e\u003c/a\u003e"},{"lineNumber":241,"author":{"gitId":"abnermtj"},"content":"### 4.2.2. Command Parser\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":242,"author":{"gitId":"theopin"},"content":"//Brandon"},{"lineNumber":243,"author":{"gitId":"brandontoh"},"content":"This component would parse the user input to produce useful information which is used to construct a `Command`. "},{"lineNumber":244,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":245,"author":{"gitId":"brandontoh"},"content":"The image belows shows the sequence for `Parser`."},{"lineNumber":246,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":247,"author":{"gitId":"brandontoh"},"content":"![Parser Sequence Diagram](https://i.ibb.co/wBJtHhq/Parser.png)"},{"lineNumber":248,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":249,"author":{"gitId":"brandontoh"},"content":"`userInput` is what the user types into the terminal when prompted."},{"lineNumber":250,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":251,"author":{"gitId":"brandontoh"},"content":"These steps explain the sequence diagram for `Parser` and how `userInput` is dissected into different parts and constructed into a `Command`:"},{"lineNumber":252,"author":{"gitId":"brandontoh"},"content":"1. When `Parser#parser(userInput)` is called, `Parser#parserCommandType(userInput)` is called immediately after. "},{"lineNumber":253,"author":{"gitId":"brandontoh"},"content":"2. `Parser#parserCommandType(userInput)` checks which type of command the user entered (`add`, `list`, etc.) and calls the creates a `Command` of that specified type."},{"lineNumber":254,"author":{"gitId":"brandontoh"},"content":"3. The `Command` created is assigned to variable named `commandToBeExecuted`"},{"lineNumber":255,"author":{"gitId":"brandontoh"},"content":"4. `commandToBeExecuted` contains a hashmap, `flagsToDescription` with the type of flag (`/n`, `/i`, etc.) as key and flag description (\"CheatSheet1\", \"1\", etc.) as value. `Parser#ParserFlagDescription(commandToBeExecuted, userInput)` will split the userInput into the keys and value and populate `flagsToDescription`."},{"lineNumber":256,"author":{"gitId":"brandontoh"},"content":"5. `Parser#setMissingDescriptions(commandToBeExecuted` will be called to ensure all necessary keys in `flagsToDescription` have been filled. If it is not filled, the program will prompt the user and fill the value with what the user inputted."},{"lineNumber":257,"author":{"gitId":"brandontoh"},"content":"6. `commandToBeExecuted` with populated `flagsToDescription` will be returned."},{"lineNumber":258,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":259,"author":{"gitId":"theopin"},"content":""},{"lineNumber":260,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"command\"\u003e\u003c/a\u003e"},{"lineNumber":261,"author":{"gitId":"abnermtj"},"content":"### 4.2.3. Commands\t\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":262,"author":{"gitId":"adhy-p"},"content":"All commands in CheatLogs inherit from an abstract `Command` class. Furthermore, classes which accept `NAME` or `INDEX` as its flag inherit from a sub-class of `Command` class, namely the `FinderCommand` class."},{"lineNumber":263,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":264,"author":{"gitId":"adhy-p"},"content":"Below is the class diagram for the command package."},{"lineNumber":265,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":266,"author":{"gitId":"adhy-p"},"content":"![image](https://i.ibb.co/phXS1Z6/image.png)"},{"lineNumber":267,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":268,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"findercommand\"\u003e\u003c/a\u003e"},{"lineNumber":269,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.1 FinderCommand \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":270,"author":{"gitId":"adhy-p"},"content":"`FinderCommand` provides the capability to search for the desired cheatsheet using the `getCheatSheetFromNameOrIndex()` method. Upon method calls, the sub-class of `FinderCommand` will first call this method to get the desired cheatsheet, then it proceeds to process this cheatsheet object based on its own functionality. A sequence diagram will be given for each commands to better illustrate the interaction between this class with its sub-classes."},{"lineNumber":271,"author":{"gitId":"theopin"},"content":""},{"lineNumber":272,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"add\"\u003e\u003c/a\u003e"},{"lineNumber":273,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.2 Add \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":274,"author":{"gitId":"domaxi"},"content":"The AddCommand is used to add cheatsheets into CheatLogs."},{"lineNumber":275,"author":{"gitId":"domaxi"},"content":"The picture bellow shows how the AddCommand is executed."},{"lineNumber":276,"author":{"gitId":"domaxi"},"content":"![AddCommand Sequence Diagram](https://i.ibb.co/GtFKP7V/Add-Command-4.png)"},{"lineNumber":277,"author":{"gitId":"domaxi"},"content":"1. When the AddCommand.execute()is called, it will self-invoke the `get(CommandFlag.NAME)` and will return `name`"},{"lineNumber":278,"author":{"gitId":"domaxi"},"content":"2. After that, the add command self-invoke the `get(CommandFlag.SUBJECT)` and returns the `subject`"},{"lineNumber":279,"author":{"gitId":"domaxi"},"content":"3. Add command will invoke the `callContentEditor()` within its class."},{"lineNumber":280,"author":{"gitId":"domaxi"},"content":"4. The callContent Editor will execute the `editor.setEditingContent(name,subject)`method followed by `editor.open()`"},{"lineNumber":281,"author":{"gitId":"domaxi"},"content":"5. The program will wait for the editor in the `editor.waitForClose()` to close and will return the control to the AddCommand class."},{"lineNumber":282,"author":{"gitId":"domaxi"},"content":"6. The program will give back control to the `AddCommand` object, and will call the `editor.getContent()` to get the description from the Editor."},{"lineNumber":283,"author":{"gitId":"domaxi"},"content":"7. The AddCommand will construct a CheatSheet object using `CheatSheet(name,subject,description)`"},{"lineNumber":284,"author":{"gitId":"domaxi"},"content":"8. After the CheatSheet object is constructed, it will be added to the CheatSheetList using `cheatSheetList.add(cheatSheet)` method."},{"lineNumber":285,"author":{"gitId":"domaxi"},"content":"9. Finally, once the cheatSheet has been added into the cheatSheetList, the AddCommand will invoke the `printAddNewCheatSheetMessage(cheatSheet,cheatSheetList)` to print the confirmation message."},{"lineNumber":286,"author":{"gitId":"theopin"},"content":""},{"lineNumber":287,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"edit\"\u003e\u003c/a\u003e"},{"lineNumber":288,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.3 Edit \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":289,"author":{"gitId":"domaxi"},"content":"The edit command allows the user to edit the content of the CheatSheet object."},{"lineNumber":290,"author":{"gitId":"domaxi"},"content":"The image bellow is how the EditCommand is executed."},{"lineNumber":291,"author":{"gitId":"domaxi"},"content":"![EditCommand Sequence Diagram](https://i.ibb.co/tPg1pjL/Edit-Command-4.png)"},{"lineNumber":292,"author":{"gitId":"domaxi"},"content":"1. When the `EditCommand.execute()` method is called, it self-invoke the `getCheatSheetFromNameOrIndex()` method"},{"lineNumber":293,"author":{"gitId":"domaxi"},"content":"2. Inside the `getCheatSheetFromNameOrIndex()` method, it will self-invoke the `flagToDescription.get(CommandFlag.NAME)` to retrieve the cheatsheet name."},{"lineNumber":294,"author":{"gitId":"domaxi"},"content":"3. The program execution continues by self-invoking the `flagToDescription.get(CommandFlag.INDEX)` to retrieve the cheatSheet index."},{"lineNumber":295,"author":{"gitId":"domaxi"},"content":"4. The program will get the cheatsheet from the CheatSheetList object with either the name using `get(name)` or index `get(index)` of the cheatsheet."},{"lineNumber":296,"author":{"gitId":"domaxi"},"content":"5. The `getCheatSheetFromNameOrIndex()` method will return the `desiredCheatSheet`"},{"lineNumber":297,"author":{"gitId":"domaxi"},"content":"6. After that, the EditCommand will invoke the `callContentEditor(cheatSheet)` to show the content editor."},{"lineNumber":298,"author":{"gitId":"domaxi"},"content":"7. Inside the `callContentEditor(cheatSheet)` method, it will call the `editor.open` method (to open the editor). "},{"lineNumber":299,"author":{"gitId":"domaxi"},"content":"8. After that, the content of the cheatsheet will be set inside the text editor when editor.setContent(desiredCheatSheet) method is called."},{"lineNumber":300,"author":{"gitId":"domaxi"},"content":"9. The program will wait for the editor to close when the `editor.waitForClose()` is called."},{"lineNumber":301,"author":{"gitId":"domaxi"},"content":"10. To reflect the change, the EditCommand object will invoke `cheatsheet.setDetail(editor.getContent())` method to get the content of the cheatsheet and also change the content of the cheatsheet."},{"lineNumber":302,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":303,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"view\"\u003e\u003c/a\u003e"},{"lineNumber":304,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.4 View \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":305,"author":{"gitId":"domaxi"},"content":"The view command is used to view the content of the cheatsheet in tht command line interface."},{"lineNumber":306,"author":{"gitId":"domaxi"},"content":"The sequence diagram bellow demonstrates how tht view command is executed."},{"lineNumber":307,"author":{"gitId":"domaxi"},"content":"![ViewCommand_Sequence_Diagram](https://i.ibb.co/GF4LZYy/View-Command-3.png)"},{"lineNumber":308,"author":{"gitId":"domaxi"},"content":"1. When the `ViewCommand.execute()` method is called, it self-invoke the `getCheatSheetFromNameOrIndex()` method"},{"lineNumber":309,"author":{"gitId":"domaxi"},"content":"2. Inside the `getCheatSheetFromNameOrIndex()` method, it will self-invoke the `flagToDescription.get(CommandFlag.NAME)` to retrieve the cheatsheet name."},{"lineNumber":310,"author":{"gitId":"domaxi"},"content":"3. The program execution continues by self-invoking the `flagToDescription.get(CommandFlag.INDEX)` to retrieve the cheatSheet index."},{"lineNumber":311,"author":{"gitId":"domaxi"},"content":"4. The program will get the cheatsheet from the CheatSheetList object with either the name using `get(name)` or index `get(index)` of the cheatsheet."},{"lineNumber":312,"author":{"gitId":"domaxi"},"content":"5. The `getCheatSheetFromNameOrIndex()` method will return the `desiredCheatSheet`"},{"lineNumber":313,"author":{"gitId":"domaxi"},"content":"6. Afterwards, it will call the `printViewCheatSheetMessage` of the printer class to print the cheatsheet into the command line."},{"lineNumber":314,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":315,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"exit\"\u003e\u003c/a\u003e"},{"lineNumber":316,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.5 Exit \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":317,"author":{"gitId":"domaxi"},"content":"The exit command is used to exit the CheatLogs program."},{"lineNumber":318,"author":{"gitId":"domaxi"},"content":"The sequence digaram bellow will demonstrate how it is executed."},{"lineNumber":319,"author":{"gitId":"domaxi"},"content":"![ExitCommand_Sequence-Diagram](https://i.ibb.co/4SxcnL5/Exit-Command-1.png)"},{"lineNumber":320,"author":{"gitId":"domaxi"},"content":"1. When a user type /exitThe ExitCommand is constructed."},{"lineNumber":321,"author":{"gitId":"domaxi"},"content":"2. It will invoke the execute() method which will set the isExitCommand to true."},{"lineNumber":322,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":323,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":324,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":325,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.6 List \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":326,"author":{"gitId":"brandontoh"},"content":"The `list` command lists all the cheatsheets in `cheatSheetList`."},{"lineNumber":327,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":328,"author":{"gitId":"brandontoh"},"content":"The image below shows the sequence diagram for `list` command."},{"lineNumber":329,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":330,"author":{"gitId":"brandontoh"},"content":"![ListCommand Sequence Diagram](https://i.ibb.co/sRLvDcx/List-Command.png)"},{"lineNumber":331,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":332,"author":{"gitId":"brandontoh"},"content":"`cheatSheetList` is a `CheatSheetList` object that is passed to `ListCommand` when `ListCommand` is created."},{"lineNumber":333,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":334,"author":{"gitId":"brandontoh"},"content":"These steps explain the sequence diagram for `list` command and how `list` command works:"},{"lineNumber":335,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":336,"author":{"gitId":"brandontoh"},"content":"1. When `ListCommand#execute()` is called, the `cheatSheetList` will be sorted by name via `SortByName` comparator."},{"lineNumber":337,"author":{"gitId":"brandontoh"},"content":"2. "},{"lineNumber":338,"author":{"gitId":"brandontoh"},"content":"    1. If `cheatSheetList` is empty, a CommandException will be thrown."},{"lineNumber":339,"author":{"gitId":"brandontoh"},"content":"    2. Else, a `TablePrinter` object will be created and `TablePrinter#execute()` prints `cheatSheetList` in a table format. Afterwards, a `SortFilter` object will be created and `SortFilter#execute()` to enter Sorting Mode. More details on Sorting Mode in [Section 5.3](#53-sorting-featurefont-size5-arrow_up_smalltable-of-contentsfont)"},{"lineNumber":340,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":341,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":342,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":343,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.7 Find \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":344,"author":{"gitId":"brandontoh"},"content":"The `find` command searches through `cheatSheetList` to find matching cheatsheets."},{"lineNumber":345,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":346,"author":{"gitId":"brandontoh"},"content":"The image below shows the sequence diagram for `find` command."},{"lineNumber":347,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":348,"author":{"gitId":"brandontoh"},"content":"![FindCommand Sequence Diagram](https://i.ibb.co/gzNv26r/Find-Command.png)"},{"lineNumber":349,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":350,"author":{"gitId":"brandontoh"},"content":"`cheatSheetList` is a `CheatSheetList` object that is passed to `FindCommand` when `FindCommand` is created."},{"lineNumber":351,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":352,"author":{"gitId":"brandontoh"},"content":"These steps explain the sequence diagram for `find` command and how `find` command works:"},{"lineNumber":353,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":354,"author":{"gitId":"brandontoh"},"content":"1. When `FindCommand#execute()` is called, "},{"lineNumber":355,"author":{"gitId":"brandontoh"},"content":"    1. `FindCommand` object calls `flagToDescriptions.get(CommandFlag.NAME)` and assigns it to variable `name`"},{"lineNumber":356,"author":{"gitId":"brandontoh"},"content":"    2. `FindCommand` object calls `flagToDescriptions.get(CommandFlag.SUBJECT)` and assigns it to variable `subject`"},{"lineNumber":357,"author":{"gitId":"brandontoh"},"content":"    3. `FindCommand` object calls `flagToDescriptions.get(CommandFlag.SECTIONKEYWORD)` and assigns it to variable `keyword`"},{"lineNumber":358,"author":{"gitId":"brandontoh"},"content":"2. A new `ArrayList\u003ccheatSheet\u003e` object is created and named `matchedContent`"},{"lineNumber":359,"author":{"gitId":"brandontoh"},"content":"3. For every cheatsheet in cheatSheetList, if the cheatsheet corresponds to what the user inputted, the cheatsheet would be added to `matchedContent`"},{"lineNumber":360,"author":{"gitId":"brandontoh"},"content":"4. "},{"lineNumber":361,"author":{"gitId":"brandontoh"},"content":"    5. If `matchedContent` is empty after the loop, it means no matching cheatsheet is found and Command Exception would be thrown"},{"lineNumber":362,"author":{"gitId":"brandontoh"},"content":"    6. Else, "},{"lineNumber":363,"author":{"gitId":"brandontoh"},"content":"        1. new `TablePrinter` object would be created and `TablePrinter#execute()` would be called to print a table with all matching cheatsheets"},{"lineNumber":364,"author":{"gitId":"brandontoh"},"content":"        2. new `SortFilter` object would be created and `SortFilter#execute()` would be called to enter Sorting Mode. More details on Sorting Mode in [Section 5.3](#53-sorting-featurefont-size5-arrow_up_smalltable-of-contentsfont)"},{"lineNumber":365,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":366,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"setting\"\u003e\u003c/a\u003e"},{"lineNumber":367,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.8 Setting \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":368,"author":{"gitId":"brandontoh"},"content":"The `setting` command allows user to change color scheme and either turn off or on help messages for commands."},{"lineNumber":369,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":370,"author":{"gitId":"brandontoh"},"content":"The image below shows the sequence diagram for `settings` command."},{"lineNumber":371,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":372,"author":{"gitId":"brandontoh"},"content":"![SettingsCommand Sequence Diagram](https://i.ibb.co/Cvg3Cd2/Settings.png)"},{"lineNumber":373,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":374,"author":{"gitId":"brandontoh"},"content":"These steps explain the sequence diagram for `find` command and how `find` command works:"},{"lineNumber":375,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":376,"author":{"gitId":"brandontoh"},"content":"1. When `FindCommand#execute()` is called, "},{"lineNumber":377,"author":{"gitId":"brandontoh"},"content":"    1. `FindCommand` object calls `flagToDescriptions.get(CommandFlag.COLOUROPTION)` and assigns it to variable `colorOption`"},{"lineNumber":378,"author":{"gitId":"brandontoh"},"content":"    2. `FindCommand` object calls `flagToDescriptions.get(CommandFlag.HELPMESSAGE)` and assigns it to variable `helpMessageOption`"},{"lineNumber":379,"author":{"gitId":"brandontoh"},"content":"2. If user entered `/c` flag, it means the user wants to change the color scheme:"},{"lineNumber":380,"author":{"gitId":"brandontoh"},"content":"    1. If `colorOption` is valid i.e. an integer within 1 -3, `Settings#setColor(colorOption, false)` will be called to set the color scheme to the choice the user chose. "},{"lineNumber":381,"author":{"gitId":"brandontoh"},"content":"    2. Else, a CommandException will be thrown."},{"lineNumber":382,"author":{"gitId":"brandontoh"},"content":"3. If user entered `/m` flag, it means the user wants to turn on/off the help messages. "},{"lineNumber":383,"author":{"gitId":"brandontoh"},"content":"    1. If `helpMessageOption` is `on`, `Settings#SetIsDisplayingHelpMessages(true, false)` will be called to turn on help messages."},{"lineNumber":384,"author":{"gitId":"brandontoh"},"content":"    2. If `helpMessageOption` is `off`, `Settings#SetIsDisplayingHelpMessages(false, false)` will be called to turn off help messages."},{"lineNumber":385,"author":{"gitId":"brandontoh"},"content":"    3. Else, a CommandException will be thrown"},{"lineNumber":386,"author":{"gitId":"brandontoh"},"content":"    "},{"lineNumber":387,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":388,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.9 Delete \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":389,"author":{"gitId":"adhy-p"},"content":"Delete command removes one cheatsheet from the CheatSheetList and deletes the corresponding file in the */data* directory."},{"lineNumber":390,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":391,"author":{"gitId":"adhy-p"},"content":"Here is an example of the usage of `/delete` command and how it works:"},{"lineNumber":392,"author":{"gitId":"adhy-p"},"content":"1. User type `/delete /i 1` to delete all cheatsheets. `UserSession` class reads the input and passes this to the `Parser` class."},{"lineNumber":393,"author":{"gitId":"adhy-p"},"content":"2. The parser parses the user command which results in a `DeleteCommand` object."},{"lineNumber":394,"author":{"gitId":"adhy-p"},"content":"3. This object is passed back to `UserSession` class and it calls `DeleteCommand.execute()`."},{"lineNumber":395,"author":{"gitId":"adhy-p"},"content":"4. `DeleteCommand.execute()` invokes `getCheatSheetFromNameOrIndex()` method from the `FinderCommand` class to find the desired cheatsheet. If the cheatsheet does not exist, it throws an exception."},{"lineNumber":396,"author":{"gitId":"adhy-p"},"content":"5. Then, it asks the user\u0027s confirmation through `printer.printDeleteConfirmation()`."},{"lineNumber":397,"author":{"gitId":"adhy-p"},"content":"6. If the user says yes, it invokes the `fileDestroyer.executeFunction(cheatSheetToDelete.getName())` to delete the corresponding file in the */data* directory. "},{"lineNumber":398,"author":{"gitId":"adhy-p"},"content":"7. Next, it invokes `cheatSheetList.remove(cheatSheetToDelete.getName())` to delete the cheatsheet from CheatSheetList."},{"lineNumber":399,"author":{"gitId":"adhy-p"},"content":"8. Lastly, it calls `printer.printDeleteCheatSheetMessage` to give feedback message to the user."},{"lineNumber":400,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":401,"author":{"gitId":"adhy-p"},"content":"The following sequence diagram illustrates how steps 4 - 8 are executed by DeleteCommand."},{"lineNumber":402,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/BGgTVgb/image.png)"},{"lineNumber":403,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"clear\"\u003e\u003c/a\u003e"},{"lineNumber":404,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.10 Clear \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":405,"author":{"gitId":"adhy-p"},"content":"Clear command deletes all user-defined cheatsheets while maintaining the preloaded cheatsheets."},{"lineNumber":406,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":407,"author":{"gitId":"adhy-p"},"content":"Here is an example of the usage of `/clear` command and how it works:"},{"lineNumber":408,"author":{"gitId":"adhy-p"},"content":"1. User type `/clear` to delete all cheatsheets. `UserSession` class reads the input and passes this to the `Parser` class."},{"lineNumber":409,"author":{"gitId":"adhy-p"},"content":"2. The parser parses the user command which results in a `ClearCommand` object."},{"lineNumber":410,"author":{"gitId":"adhy-p"},"content":"3. This object is passed back to `UserSession` class and it calls `ClearCommand.execute()`."},{"lineNumber":411,"author":{"gitId":"adhy-p"},"content":"4. `ClearCommand.execute()` first asks the user for confirmation by calling `printer.printClearConfirmation()`. If the user confirms, it invokes the `fileDestroyer.executeFunction()` to delete all user-defined cheatsheets stored in the */data* directory."},{"lineNumber":412,"author":{"gitId":"adhy-p"},"content":"5. Subsequently, it invokes the `cheatSheetList.clear()` to delete all cheatsheets in the CheatSheetList."},{"lineNumber":413,"author":{"gitId":"adhy-p"},"content":"6. Next, it invokes `fileReader.extractPreloadedCheatSheets()` and `fileReader.executeFunction()` to restore the preloaded cheatsheets."},{"lineNumber":414,"author":{"gitId":"adhy-p"},"content":"7. Lastly, it calls `printer.printClearCheatSheetMessage` to give feedback message to the user."},{"lineNumber":415,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":416,"author":{"gitId":"adhy-p"},"content":"The following sequence diagram illustrates how steps 4 - 7 are executed by ClearCommand."},{"lineNumber":417,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":418,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/CVRZ9dZ/image.png)"},{"lineNumber":419,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":420,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"favourite\"\u003e\u003c/a\u003e"},{"lineNumber":421,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.11 Favourite \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":422,"author":{"gitId":"adhy-p"},"content":"Favourite command adds/removes the cheatsheet from/to favourites."},{"lineNumber":423,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":424,"author":{"gitId":"adhy-p"},"content":"Here is an example of the usage of `/fav` command and how it works:"},{"lineNumber":425,"author":{"gitId":"adhy-p"},"content":"1. User type `/fav /i 1` to add the first cheatsheet to favourites. `UserSession` class reads the input and passes this to the `Parser` class."},{"lineNumber":426,"author":{"gitId":"adhy-p"},"content":"2. The parser parses the user command which results in a `FavouriteCommand` object."},{"lineNumber":427,"author":{"gitId":"adhy-p"},"content":"3. This object is passed back to `UserSession` class and it calls `FavouriteCommand.execute()`."},{"lineNumber":428,"author":{"gitId":"adhy-p"},"content":"4. `FavouriteCommand.execute()` invokes `getCheatSheetFromNameOrIndex()` method from the `FinderCommand` class to find the desired cheatsheet. If the cheatsheet does not exist, it throws an exception."},{"lineNumber":429,"author":{"gitId":"adhy-p"},"content":"5. Next, it checks the existence of the delete flag `/d` and invokes `cheatSheetToFavourite.setFavourite(isAddFav)` to add/remove the cheatsheet to/from favourites based on the existence of the delete flag."},{"lineNumber":430,"author":{"gitId":"adhy-p"},"content":"6. Lastly, it calls `printer.printFavouritedCheatSheetMessage` to give feedback message to the user."},{"lineNumber":431,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":432,"author":{"gitId":"adhy-p"},"content":"The following sequence diagram illustrates how steps 4 - 6 are executed by FavouriteCommand."},{"lineNumber":433,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/zszqCSf/image.png)"},{"lineNumber":434,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"help\"\u003e\u003c/a\u003e"},{"lineNumber":435,"author":{"gitId":"domaxi"},"content":"##### 4.2.3.12 Help \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":436,"author":{"gitId":"adhy-p"},"content":"Help command prints the descriptions and examples for all commands."},{"lineNumber":437,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":438,"author":{"gitId":"adhy-p"},"content":"Here is an example of the usage of `/help` command and how it works:"},{"lineNumber":439,"author":{"gitId":"adhy-p"},"content":"1. User type `/fav /i 1` to add the first cheatsheet to favourites. `UserSession` class reads the input and passes this to the `Parser` class."},{"lineNumber":440,"author":{"gitId":"adhy-p"},"content":"2. The parser parses the user command which results in a `FavouriteCommand` object."},{"lineNumber":441,"author":{"gitId":"adhy-p"},"content":"3. This object is passed back to `UserSession` class and it calls `HelpCommand.execute()`."},{"lineNumber":442,"author":{"gitId":"adhy-p"},"content":"4. `HelpCommand.execute()` invokes `printer.printHelpSheet()` method and it prints the help sheet to the user."},{"lineNumber":443,"author":{"gitId":"adhy-p"},"content":"The following sequence diagram illustrates how step 4 is executed by HelpCommand."},{"lineNumber":444,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/zmGSZhG/image.png)"},{"lineNumber":445,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"cheat-sheet-structure\"\u003e\u003c/a\u003e"},{"lineNumber":446,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":447,"author":{"gitId":"adhy-p"},"content":"#### 4.2.4. Cheat Sheet Structure \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":448,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":449,"author":{"gitId":"brandontoh"},"content":"To further understand our cheatsheet management application, it is important to understand the inner workings of the CheatSheet class. "},{"lineNumber":450,"author":{"gitId":"brandontoh"},"content":"CheatLogs comes with preloaded cheat sheets and the application has an in-built ability for the user to add, edit, and delete their own cheat sheets. "},{"lineNumber":451,"author":{"gitId":"brandontoh"},"content":"The preloaded cheat sheet cannot be modified by the user, as the user-made cheatsheet is able to be modified by the user."},{"lineNumber":452,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":453,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":454,"author":{"gitId":"brandontoh"},"content":"The CheatSheet class is the class that models the cheat sheet that we used in our program. "},{"lineNumber":455,"author":{"gitId":"brandontoh"},"content":"Each of our cheatsheet object is intended to store one cheatsheet topic for one specific programming language (both preloaded and user-created cheat sheets)."},{"lineNumber":456,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":457,"author":{"gitId":"brandontoh"},"content":"This system is intended to increase user access and organization of the cheat sheets."},{"lineNumber":458,"author":{"gitId":"brandontoh"},"content":"Each of the CheatSheet object has:"},{"lineNumber":459,"author":{"gitId":"brandontoh"},"content":"1. \tName"},{"lineNumber":460,"author":{"gitId":"brandontoh"},"content":"2. \tProgramming Language"},{"lineNumber":461,"author":{"gitId":"brandontoh"},"content":"3. \tDescription (Content of the cheatsheet)"},{"lineNumber":462,"author":{"gitId":"brandontoh"},"content":"4. \tisFavorite"},{"lineNumber":463,"author":{"gitId":"brandontoh"},"content":"5. \tisModifiable"},{"lineNumber":464,"author":{"gitId":"brandontoh"},"content":"6. \tDate Created"},{"lineNumber":465,"author":{"gitId":"brandontoh"},"content":"7. \tDate Modified"},{"lineNumber":466,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":467,"author":{"gitId":"brandontoh"},"content":"![](Images/Image8.PNG)"},{"lineNumber":468,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":469,"author":{"gitId":"brandontoh"},"content":"Image 6: class diagram of the cheatsheet class"},{"lineNumber":470,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":471,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":472,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":473,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"cheat-sheet-management\"\u003e\u003c/a\u003e"},{"lineNumber":474,"author":{"gitId":"adhy-p"},"content":"### 4.2.5. Cheat Sheet Management\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":475,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":476,"author":{"gitId":"adhy-p"},"content":"All cheat sheets, both pre-loaded and user-defined, are stored in a class called `CheatSheetList` during runtime. Here is a class diagram to illustrate the relation between CheatSheet and CheatSheetList."},{"lineNumber":477,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":478,"author":{"gitId":"adhy-p"},"content":"![](https://i.ibb.co/t3gR5RV/image.png)"},{"lineNumber":479,"author":{"gitId":"theopin"},"content":""},{"lineNumber":480,"author":{"gitId":"adhy-p"},"content":"Upon receiving a valid input from the user, the `execute()` method from `Command` class will invoke the mutation of `CheatSheetList`, "},{"lineNumber":481,"author":{"gitId":"adhy-p"},"content":"and then `DataFileWriter` will use the information in `CheatSheetList` to save it to the memory in the form of a `xml` file."},{"lineNumber":482,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":483,"author":{"gitId":"brandontoh"},"content":"The cheatSheets ArrayList is of type private, and setter/getter methods must be invoked to access the list. "},{"lineNumber":484,"author":{"gitId":"adhy-p"},"content":"For these setter and getter methods, it accepts both accessing by its index and accessing by its name to allow the user to easily search and fetch the cheat sheet."},{"lineNumber":485,"author":{"gitId":"adhy-p"},"content":"Here is the list of `Commands` that invokes a method call of CheatSheetList:"},{"lineNumber":486,"author":{"gitId":"adhy-p"},"content":"- `/add`"},{"lineNumber":487,"author":{"gitId":"adhy-p"},"content":"- `/clear`"},{"lineNumber":488,"author":{"gitId":"adhy-p"},"content":"- `/delete`"},{"lineNumber":489,"author":{"gitId":"adhy-p"},"content":"- `/edit`"},{"lineNumber":490,"author":{"gitId":"adhy-p"},"content":"- `/fav`"},{"lineNumber":491,"author":{"gitId":"adhy-p"},"content":"- `/find`"},{"lineNumber":492,"author":{"gitId":"adhy-p"},"content":"- `/list`"},{"lineNumber":493,"author":{"gitId":"adhy-p"},"content":"- `/view`"},{"lineNumber":494,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":495,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"data-storage\"\u003e\u003c/a\u003e"},{"lineNumber":496,"author":{"gitId":"abnermtj"},"content":"### 4.2.6. Data Storage\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":497,"author":{"gitId":"theopin"},"content":"This feature allows the application to read and update data in the form of [XML files](https://www.tutorialspoint.com/xml/xml_documents.htm). "},{"lineNumber":498,"author":{"gitId":"theopin"},"content":"Having an external source to store data will allow the application to retrieve it when it is relaunched at another instance. "},{"lineNumber":499,"author":{"gitId":"brandontoh"},"content":"This prevents the user from having to repeatedly create new cheatsheets and update the application settings each time he opens up CheatLogs. "},{"lineNumber":500,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":501,"author":{"gitId":"theopin"},"content":"The following class UML diagram illustrates the major interactions between the classes present in the "},{"lineNumber":502,"author":{"gitId":"theopin"},"content":"*storage* package. "},{"lineNumber":503,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":504,"author":{"gitId":"theopin"},"content":"![!Image](https://i.ibb.co/tqsXqjb/storage-Uml.png)"},{"lineNumber":505,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":506,"author":{"gitId":"theopin"},"content":"As we can see from the diagram above, the following 3 classes are subclasses of the *DataFile* class, which is an abstract class."},{"lineNumber":507,"author":{"gitId":"theopin"},"content":"* *DataFileReader*"},{"lineNumber":508,"author":{"gitId":"theopin"},"content":"  * This class is responsible for converting XML files present in your data directory into cheatsheets."},{"lineNumber":509,"author":{"gitId":"theopin"},"content":"  * Since it is a child of DataFile, it is capable of utilizing a common CheatSheetList node to store"},{"lineNumber":510,"author":{"gitId":"theopin"},"content":"    created cheatsheets.  "},{"lineNumber":511,"author":{"gitId":"theopin"},"content":"  * This class also reads your defined settings from the *settings.txt* file and writes it to the"},{"lineNumber":512,"author":{"gitId":"theopin"},"content":"    settings class. This allows you to apply customization options to certain features of CheatLogs."},{"lineNumber":513,"author":{"gitId":"theopin"},"content":"  "},{"lineNumber":514,"author":{"gitId":"theopin"},"content":"* *DataFileWriter*"},{"lineNumber":515,"author":{"gitId":"theopin"},"content":"  * This class is responsible for converting your cheatsheets in CheatLogs into XML files."},{"lineNumber":516,"author":{"gitId":"theopin"},"content":"  * Based on the number of cheatsheets present in CheatSheetList, it will store that number of cheatsheets"},{"lineNumber":517,"author":{"gitId":"theopin"},"content":"    in its class in the form of an arrayList. This is shown by the * multiplicity."},{"lineNumber":518,"author":{"gitId":"theopin"},"content":"    * This class also writes your defined settings to the *settings.txt* file by reading them from the"},{"lineNumber":519,"author":{"gitId":"theopin"},"content":"      settings class. This allows you to store your preferences for certain features of CheatLogs.  "},{"lineNumber":520,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":521,"author":{"gitId":"theopin"},"content":"* *DataFileDestroyer*"},{"lineNumber":522,"author":{"gitId":"theopin"},"content":"  * This class is responsible for deleting XML files corresponding to the relevant cheatsheet."},{"lineNumber":523,"author":{"gitId":"theopin"},"content":"  * Depending on the option stated by you, this feature can either delete a single file or all"},{"lineNumber":524,"author":{"gitId":"theopin"},"content":"    XML files currently stored in the user directory."},{"lineNumber":525,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":526,"author":{"gitId":"theopin"},"content":""},{"lineNumber":527,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"file-writer-design\"\u003e\u003c/a\u003e"},{"lineNumber":528,"author":{"gitId":"theopin"},"content":"#### 4.2.6.1 Writing files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":529,"author":{"gitId":"theopin"},"content":""},{"lineNumber":530,"author":{"gitId":"theopin"},"content":"Whenever you give a command to *add* or *edit* a cheatsheet, this feature will be activated. Through this"},{"lineNumber":531,"author":{"gitId":"theopin"},"content":"feature, CheatLogs will attempt to update all cheatsheet files, creating a new cheat sheet file if a new "},{"lineNumber":532,"author":{"gitId":"theopin"},"content":"cheat sheet is created. To ensure that your cheat sheet files"},{"lineNumber":533,"author":{"gitId":"theopin"},"content":""},{"lineNumber":534,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"file-reader-design\"\u003e\u003c/a\u003e"},{"lineNumber":535,"author":{"gitId":"theopin"},"content":"#### 4.2.6.2 Reading files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":536,"author":{"gitId":"theopin"},"content":""},{"lineNumber":537,"author":{"gitId":"theopin"},"content":"When CheatLogs is launched, it attempts to parse all XML files present in the /data directory and"},{"lineNumber":538,"author":{"gitId":"theopin"},"content":"use it to create individual cheat sheets for each file. In the event that a particular XML file "},{"lineNumber":539,"author":{"gitId":"theopin"},"content":"cannot be read, it will be skipped to ensure that other files can be converted into cheat sheets."},{"lineNumber":540,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":541,"author":{"gitId":"theopin"},"content":""},{"lineNumber":542,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"file-destroyer-design\"\u003e\u003c/a\u003e"},{"lineNumber":543,"author":{"gitId":"theopin"},"content":"#### 4.2.6.3 Deleting files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":544,"author":{"gitId":"theopin"},"content":""},{"lineNumber":545,"author":{"gitId":"theopin"},"content":"When you decide to remove a cheat sheet, CheatLogs will delete the relevant cheat sheet files immediately. After this "},{"lineNumber":546,"author":{"gitId":"theopin"},"content":"operation, it will perform a search through the /data directory and delete any subdirectories without any cheat sheet."},{"lineNumber":547,"author":{"gitId":"theopin"},"content":"This ensures that your /data file is not cluttered with empty directories."},{"lineNumber":548,"author":{"gitId":"theopin"},"content":""},{"lineNumber":549,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":550,"author":{"gitId":"theopin"},"content":""},{"lineNumber":551,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"implementation\"\u003e\u003c/a\u003e"},{"lineNumber":552,"author":{"gitId":"abnermtj"},"content":"# 5. Implementation\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":553,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":554,"author":{"gitId":"brandontoh"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":555,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":556,"author":{"gitId":"theopin"},"content":""},{"lineNumber":557,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"parsing-of-data-to-construct-commands\"\u003e\u003c/a\u003e"},{"lineNumber":558,"author":{"gitId":"abnermtj"},"content":"## 5.1. Parsing of Data to Construct Commands\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":559,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":560,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":561,"author":{"gitId":"abnermtj"},"content":"The current implementation to construct commands begins with the user input, which is taken in by ` ui.getUserInput()`.  The `Parser` then parser this through `Parser.parse()` which will construct the command based on the user input and provide the command which everything it needs to execute."},{"lineNumber":562,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":563,"author":{"gitId":"abnermtj"},"content":"`Parser` first derives the kind of command being executed, which is always the very first word typed. More important is how the parser parses the relevant flags. Each command has fields called `alternativeFlags` and `neccesaryFlags`. `alternativeFlags` have an \"at least one property\" which means that at least one of these flags needs to be filled for the command to execute. `neccesaryFlags` require all of the flags need to be filled for the command to execute. Parser references these two fields two know if the flags inputted are required by the command itself. It also uses this information to know which flags are missing. These flags are then stored in a `LinkedHashMap\u003cCommandFlag, String\u003e` in the command itself where the flag itself is the key, and the information associated with it is the value."},{"lineNumber":564,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":565,"author":{"gitId":"abnermtj"},"content":"The command can execute at a random time later via `commandObj.execute()`."},{"lineNumber":566,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":567,"author":{"gitId":"theopin"},"content":""},{"lineNumber":568,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"editing-feature\"\u003e\u003c/a\u003e"},{"lineNumber":569,"author":{"gitId":"abnermtj"},"content":"## 5.2. Editing Feauture\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":570,"author":{"gitId":"domaxi"},"content":"![ContentEditor](https://i.ibb.co/hYtY1GM/Screenshot-2020-11-09-at-6-30-12-PM.png)"},{"lineNumber":571,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":572,"author":{"gitId":"domaxi"},"content":"The editing feature is enabled using a simple text editor that uses the JSwing Library. "},{"lineNumber":573,"author":{"gitId":"brandontoh"},"content":"The strong reason that we wanted to use a GUI is that it offers more flexibility and editing power for the user rather than just using command-line editing methods."},{"lineNumber":574,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":575,"author":{"gitId":"domaxi"},"content":"The editing feature is handled by the Editor class. The Text Editor inherits from JFrame and implements the Action Listener class. "},{"lineNumber":576,"author":{"gitId":"domaxi"},"content":"The text editor is instantiated when the the user session is constructed."},{"lineNumber":577,"author":{"gitId":"domaxi"},"content":"The text editor remains opened throughtout the program execution, but it is hidden."},{"lineNumber":578,"author":{"gitId":"domaxi"},"content":"The text editor is shwon only when the AddCommand or the EditCommand is instantiated."},{"lineNumber":579,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":580,"author":{"gitId":"domaxi"},"content":"The text editor uses the Box Layout that divide the text editor into 5 sections, header,footer, left, right, and center."},{"lineNumber":581,"author":{"gitId":"domaxi"},"content":"Each of the sections, are implemented using JPanel."},{"lineNumber":582,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":583,"author":{"gitId":"domaxi"},"content":"* The header Panel contains the CheatLogs logo that is implemented using JLabel that contains an ImageIcon object."},{"lineNumber":584,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":585,"author":{"gitId":"domaxi"},"content":"* The center panel is filled with the text editor, which is implemented using the JTextArea and JScrollPane. "},{"lineNumber":586,"author":{"gitId":"domaxi"},"content":"Using both of those classes, the user can input any text into the text editor, except for escape characters."},{"lineNumber":587,"author":{"gitId":"domaxi"},"content":"The text editor will have the horizontal and vertical scroll pane as needed, especially when loading long texts."},{"lineNumber":588,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":589,"author":{"gitId":"domaxi"},"content":"* The right panel contains the buttons that is used for the editing and file functions, that include Copy, Cut, Paste, Clear All, Cancel, and Save."},{"lineNumber":590,"author":{"gitId":"domaxi"},"content":"The buttons are created using the JButton class, and in each of the buttons there is an ActionListener to invoke actions to be processed by the editor."},{"lineNumber":591,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":592,"author":{"gitId":"domaxi"},"content":"* The footer contains a JLabel that will display warning and the information of the CheatSheet that is being edited."},{"lineNumber":593,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":594,"author":{"gitId":"domaxi"},"content":"Every time a button is pressed, the ActionEvent will be processed by the actionPerformed class, and a switch statement will control the actions and command executions."},{"lineNumber":595,"author":{"gitId":"theopin"},"content":""},{"lineNumber":596,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"sorting-feature\"\u003e\u003c/a\u003e"},{"lineNumber":597,"author":{"gitId":"abnermtj"},"content":"## 5.3. Sorting Feature\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":598,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":599,"author":{"gitId":"brandontoh"},"content":"This feature allows cheat sheets to be sorted in ascending or descending order according to the name or programming language of the cheat sheet."},{"lineNumber":600,"author":{"gitId":"brandontoh"},"content":"The class `sortFilter` uses `sort()` from `java.util. Collections` and `comparator` (`SortByName`, `SortByNameRev`, `SortBySubject`, `SortBySubjectRev`) to sort the cheatsheets according to the user choice."},{"lineNumber":601,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":602,"author":{"gitId":"brandontoh"},"content":"The image belows shows the sequence diagram for `sortFilter`."},{"lineNumber":603,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":604,"author":{"gitId":"brandontoh"},"content":"![SortFilter Sequence Diagram](https://i.ibb.co/GvXHtYn/Sort-Filter.png)"},{"lineNumber":605,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":606,"author":{"gitId":"brandontoh"},"content":"These steps explain the sequence diagram for `sortFilter` and how `sortFilter`works:"},{"lineNumber":607,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":608,"author":{"gitId":"brandontoh"},"content":"1. When `SortFilter#execute()` is called, the program enters Sorting Mode and `SortFilter` object will keep repeating these steps until user entered characters that are not 1-4:"},{"lineNumber":609,"author":{"gitId":"brandontoh"},"content":"    "},{"lineNumber":610,"author":{"gitId":"brandontoh"},"content":"    1. `SortFilter` object calls `askForInput()` which will prompt the user to enter a character (1-4), and the cheatsheets will be sorted accordingly."},{"lineNumber":611,"author":{"gitId":"brandontoh"},"content":"        1. If the user entered a valid character, the `SortFilter` will use the corresponding `Comparator` and `sort()` to sort the cheatsheets"},{"lineNumber":612,"author":{"gitId":"brandontoh"},"content":"        2. Else, a CommandException will be thrown and the user will exit from Sorting Mode."},{"lineNumber":613,"author":{"gitId":"brandontoh"},"content":"    "},{"lineNumber":614,"author":{"gitId":"brandontoh"},"content":"    2. `TablePrinter` object will be created and `TablePrinter#execute()` will be called to display the cheatsheets in the specified order."},{"lineNumber":615,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":616,"author":{"gitId":"brandontoh"},"content":"Another alternative to sort the cheatsheets by name or subject is by using a `for` loop for each sorting. However, there would be many duplicate code and not good for reusability. "},{"lineNumber":617,"author":{"gitId":"brandontoh"},"content":"By using the sort() method present in `java.util. Collections` class, we would have better flexibility as the sort method could be reused with different functions just by including a new class that implements `comparator`."},{"lineNumber":618,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":619,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":620,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"data-management\"\u003e\u003c/a\u003e"},{"lineNumber":621,"author":{"gitId":"theopin"},"content":"## 5.4. Data management\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":622,"author":{"gitId":"theopin"},"content":""},{"lineNumber":623,"author":{"gitId":"theopin"},"content":"This feature stores cheat sheets on the hard-drive in the form of XML file. "},{"lineNumber":624,"author":{"gitId":"theopin"},"content":"When the application loads, data from these files will be converted and loaded into the application."},{"lineNumber":625,"author":{"gitId":"theopin"},"content":""},{"lineNumber":626,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"impln-file-writer\"\u003e\u003c/a\u003e"},{"lineNumber":627,"author":{"gitId":"theopin"},"content":"### 5.4.1 Writing files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":628,"author":{"gitId":"theopin"},"content":""},{"lineNumber":629,"author":{"gitId":"theopin"},"content":"Whenever you give a command to *add* or *edit* a cheatsheet, this feature will be activated. Through this"},{"lineNumber":630,"author":{"gitId":"theopin"},"content":"feature, CheatLogs will attempt to update all cheatsheet files, creating a new cheat sheet file if a new "},{"lineNumber":631,"author":{"gitId":"theopin"},"content":"cheat sheet is created. To ensure the organization of your cheatsheet files, these files are created "},{"lineNumber":632,"author":{"gitId":"theopin"},"content":"in a subdirectory whose name matches the subject name of each cheatsheets. "},{"lineNumber":633,"author":{"gitId":"theopin"},"content":""},{"lineNumber":634,"author":{"gitId":"theopin"},"content":"The sequence diagram below illustrates the general process when writing files to the */data* directory."},{"lineNumber":635,"author":{"gitId":"theopin"},"content":""},{"lineNumber":636,"author":{"gitId":"theopin"},"content":"![Image](https://i.ibb.co/k2ZPZTN/file-Writer.png)"},{"lineNumber":637,"author":{"gitId":"theopin"},"content":""},{"lineNumber":638,"author":{"gitId":"theopin"},"content":"From the sequence diagram above, the *DataWriter* class invokes a number of methods when the"},{"lineNumber":639,"author":{"gitId":"theopin"},"content":"*executeFunction* class is called. First, it obtains a list of all the cheatsheets present"},{"lineNumber":640,"author":{"gitId":"theopin"},"content":"in CheatLogs from *CheatSheetList*. Next, it iterates through each cheatsheet, and stores"},{"lineNumber":641,"author":{"gitId":"theopin"},"content":"them as XML files by invoking the *storeCheatSheet()* command. Finally, it will call its own *saveSettings()*"},{"lineNumber":642,"author":{"gitId":"theopin"},"content":"command, where it will store the user-defined settings into *settings.txt*."},{"lineNumber":643,"author":{"gitId":"theopin"},"content":""},{"lineNumber":644,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"impln-file-reader\"\u003e\u003c/a\u003e"},{"lineNumber":645,"author":{"gitId":"theopin"},"content":"### 5.4.2 Reading files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":646,"author":{"gitId":"theopin"},"content":""},{"lineNumber":647,"author":{"gitId":"theopin"},"content":"When CheatLogs is launched, this feature looks through the directories present in the */data* directory"},{"lineNumber":648,"author":{"gitId":"theopin"},"content":"recursively to find XML files that can be converted to cheatsheets. After verifying that the XML file has"},{"lineNumber":649,"author":{"gitId":"theopin"},"content":"the relevant attributes and does not contain any non-alphanumeric characters, the Java DOM parser "},{"lineNumber":650,"author":{"gitId":"theopin"},"content":"converts these files into cheatsheets and adds them to the list."},{"lineNumber":651,"author":{"gitId":"theopin"},"content":""},{"lineNumber":652,"author":{"gitId":"theopin"},"content":"The sequence diagram below illustrates the general process when reading preloaded cheatsheets from CheatLogs.jar."},{"lineNumber":653,"author":{"gitId":"theopin"},"content":""},{"lineNumber":654,"author":{"gitId":"theopin"},"content":"![!Image](https://i.ibb.co/F36bKhr/preloaded-Extract.png)"},{"lineNumber":655,"author":{"gitId":"theopin"},"content":""},{"lineNumber":656,"author":{"gitId":"theopin"},"content":"From the diagram above, when the *extractPreloadedCheatSheets()* method is called, *DataFileReader* calls a "},{"lineNumber":657,"author":{"gitId":"theopin"},"content":"few methods in order to execute this method. First, it creates a new JarFile object by calling its constructor,"},{"lineNumber":658,"author":{"gitId":"theopin"},"content":"*JarFile*, with its parameter being CheatLogs.jar. Next, it iterates through"},{"lineNumber":659,"author":{"gitId":"theopin"},"content":"each file present in this *JarFile*, looking out for XML files which are the preloaded cheatsheets. If such "},{"lineNumber":660,"author":{"gitId":"theopin"},"content":"a file is found, *createNewFile* method is called, which copies it over into the */data* directory to be"},{"lineNumber":661,"author":{"gitId":"theopin"},"content":"parsed by CheatLogs. Finally, *DataFileReader* will close the JarFile with the close() command since"},{"lineNumber":662,"author":{"gitId":"theopin"},"content":"it is not required anymore."},{"lineNumber":663,"author":{"gitId":"theopin"},"content":""},{"lineNumber":664,"author":{"gitId":"theopin"},"content":"The sequence diagram below illustrates the general process when reading files from the */data* directory. "},{"lineNumber":665,"author":{"gitId":"theopin"},"content":""},{"lineNumber":666,"author":{"gitId":"theopin"},"content":"![!Image](https://i.ibb.co/2shSvBS/file-Reader.png)"},{"lineNumber":667,"author":{"gitId":"theopin"},"content":""},{"lineNumber":668,"author":{"gitId":"theopin"},"content":"As you can see in the diagram above, when the *executeFunction()* method is called, *DataFileReader* invokes"},{"lineNumber":669,"author":{"gitId":"theopin"},"content":"a number of methods in order to complete this operation. First, it iterates through every directory"},{"lineNumber":670,"author":{"gitId":"theopin"},"content":"present within the */data* directory, including itself. For each directory, a file object is constructed "},{"lineNumber":671,"author":{"gitId":"theopin"},"content":"from their respective paths, and a list of files within it is produced. For each file within this newly created"},{"lineNumber":672,"author":{"gitId":"theopin"},"content":"list, 2 checks are done. If the file is an XML File, *DataFileReader* will attempt to create a new cheatsheet "},{"lineNumber":673,"author":{"gitId":"theopin"},"content":"out of it by invoking the method *createNewCheatSheet()*. However, if the file is the *settings.txt*, *DataFileReader*"},{"lineNumber":674,"author":{"gitId":"theopin"},"content":"will now inoke *loadUserSettings()* to transfer the data stored within it to configure the respective settings"},{"lineNumber":675,"author":{"gitId":"theopin"},"content":"of CheatLogs."},{"lineNumber":676,"author":{"gitId":"theopin"},"content":""},{"lineNumber":677,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"impln-file-destroyer\"\u003e\u003c/a\u003e"},{"lineNumber":678,"author":{"gitId":"theopin"},"content":"### 5.4.3 Deleting files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":679,"author":{"gitId":"theopin"},"content":""},{"lineNumber":680,"author":{"gitId":"theopin"},"content":"When you decide to remove a cheat sheet, CheatLogs will delete the relevant cheat sheet files immediately."},{"lineNumber":681,"author":{"gitId":"theopin"},"content":"This is done by locating the path of the XML file corresponding to the cheat sheet. Subsequently, this feature"},{"lineNumber":682,"author":{"gitId":"theopin"},"content":"will delete it provided that the XML file still exists. After deleting a file, this feature performs a recursive"},{"lineNumber":683,"author":{"gitId":"theopin"},"content":"search through the data directory, to delete any directories that are empty after this operation. This ensures"},{"lineNumber":684,"author":{"gitId":"theopin"},"content":"that there is no clutter of empty folders existing in the */data* directory. "},{"lineNumber":685,"author":{"gitId":"theopin"},"content":""},{"lineNumber":686,"author":{"gitId":"theopin"},"content":"Currently, CheatLogs provides two options to remove XML files, which are listed below."},{"lineNumber":687,"author":{"gitId":"theopin"},"content":""},{"lineNumber":688,"author":{"gitId":"theopin"},"content":"1. Deleting a single file"},{"lineNumber":689,"author":{"gitId":"theopin"},"content":"2. Clearing all files "},{"lineNumber":690,"author":{"gitId":"theopin"},"content":""},{"lineNumber":691,"author":{"gitId":"theopin"},"content":"\u003e :memo: Regardless of the method chosen, *settings.txt* will still remain in your directory."},{"lineNumber":692,"author":{"gitId":"theopin"},"content":""},{"lineNumber":693,"author":{"gitId":"theopin"},"content":"The sequence diagram below illustrates the general process when deleting a single file."},{"lineNumber":694,"author":{"gitId":"theopin"},"content":""},{"lineNumber":695,"author":{"gitId":"theopin"},"content":"![!Image](https://i.ibb.co/JRj5F1n/destroyer-Single.png)"},{"lineNumber":696,"author":{"gitId":"theopin"},"content":""},{"lineNumber":697,"author":{"gitId":"theopin"},"content":"As you can see in the diagram above, when the *executeFunction(String)* method is called, *DataFileDestroyer*"},{"lineNumber":698,"author":{"gitId":"theopin"},"content":"self invokes 2 methods to implement this function. The first function is *deleteFile(String)*, where the XML file"},{"lineNumber":699,"author":{"gitId":"theopin"},"content":"that matches the file name of the deleted cheatsheet is removed permanently from the directory. After that method,"},{"lineNumber":700,"author":{"gitId":"theopin"},"content":"*updateDirectory(File)* is invoked as well. This method runs recursively, looking out for empty directories as well "},{"lineNumber":701,"author":{"gitId":"theopin"},"content":"as XML files who have been placed in the directory. They will be removed to maintain the organization of the files"},{"lineNumber":702,"author":{"gitId":"theopin"},"content":"within the */data* folder."},{"lineNumber":703,"author":{"gitId":"theopin"},"content":""},{"lineNumber":704,"author":{"gitId":"theopin"},"content":"The sequence diagram below illustrates the general process when clearing all files."},{"lineNumber":705,"author":{"gitId":"theopin"},"content":""},{"lineNumber":706,"author":{"gitId":"theopin"},"content":"![!Image](https://i.ibb.co/58r7BcR/destroyer-Full.png)"},{"lineNumber":707,"author":{"gitId":"theopin"},"content":""},{"lineNumber":708,"author":{"gitId":"theopin"},"content":"As you can see in the diagram above, when the *executeFunction()* method is called, *DataFileDestroyer*"},{"lineNumber":709,"author":{"gitId":"theopin"},"content":"invokes a number of methods in order to complete this operation. First, it iterates through every"},{"lineNumber":710,"author":{"gitId":"theopin"},"content":"directory present within the */data* directory, including itself. For each directory, a file object is constructed "},{"lineNumber":711,"author":{"gitId":"theopin"},"content":"from their respective paths a list of strings of each file within it is produced. Based on this secondary list of the names of"},{"lineNumber":712,"author":{"gitId":"theopin"},"content":"files generated, *DataFileDestroyer* iterates through each of them and proceeds to delete the files which"},{"lineNumber":713,"author":{"gitId":"theopin"},"content":"are identified as XML files. \u003cbr\u003e"},{"lineNumber":714,"author":{"gitId":"theopin"},"content":"Finally, *updateDirectory(File)* is also called. This method runs recursively, looking out for empty directories as well "},{"lineNumber":715,"author":{"gitId":"theopin"},"content":"as XML files who have been placed in the directory. They will be removed to maintain the organization of the files"},{"lineNumber":716,"author":{"gitId":"theopin"},"content":"within the */data* folder."},{"lineNumber":717,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":718,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":719,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"settings-implementation\"\u003e\u003c/a\u003e"},{"lineNumber":720,"author":{"gitId":"adhy-p"},"content":"## 5.5. Changing default settings\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":721,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":722,"author":{"gitId":"adhy-p"},"content":"Settings class allows users to customize the application to fit their preference. The user can change the color scheme of the output and also change the behavior of help messages attached to each command. "},{"lineNumber":723,"author":{"gitId":"adhy-p"},"content":"The reason we chose color scheme and help messages to be customizable are as follows:"},{"lineNumber":724,"author":{"gitId":"adhy-p"},"content":"1. The color scheme of the terminal for each system may differ. The might be scenarios where the color scheme of the terminal and the application does not match and the text became not readable."},{"lineNumber":725,"author":{"gitId":"adhy-p"},"content":"2. The help messages are designed to help new users familiarize themselves with the commands available in CheatLogs. For more experienced users who are already familiar with all the commands, these help messages can be removed."},{"lineNumber":726,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":727,"author":{"gitId":"adhy-p"},"content":"Design consideration:"},{"lineNumber":728,"author":{"gitId":"adhy-p"},"content":"Alternative 1 (current choice): Saves the file using a txt file"},{"lineNumber":729,"author":{"gitId":"adhy-p"},"content":"* Pros: The txt file is simple and the parser used does not interfere with the one used to parse the cheatsheets"},{"lineNumber":730,"author":{"gitId":"adhy-p"},"content":"* Cons: Needs to create another parser for the settings file"},{"lineNumber":731,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":732,"author":{"gitId":"adhy-p"},"content":"Alternative 2: Uses xml file to save the settings"},{"lineNumber":733,"author":{"gitId":"adhy-p"},"content":"* Pros: Standardizes the save file to xml for both cheatsheets and settings file"},{"lineNumber":734,"author":{"gitId":"adhy-p"},"content":"* Cons: Needs to tamper with the existing cheatsheet parsers and not very straightforward to implement"},{"lineNumber":735,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":736,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"colour-coding-for-code-snippet\"\u003e\u003c/a\u003e"},{"lineNumber":737,"author":{"gitId":"adhy-p"},"content":"## 5.6. \\[Proposed\\] Colour coding for code snippet\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":738,"author":{"gitId":"brandontoh"},"content":"The idea of this feature is to improve the readability of the code snippets (if present) inside the cheat sheet. "},{"lineNumber":739,"author":{"gitId":"brandontoh"},"content":"To make this possible, several adjustments must be made to the save data format to allow more information to be stored inside a single file instead of scattered across multiple files. "},{"lineNumber":740,"author":{"gitId":"brandontoh"},"content":"Thus, instead of saving to a txt file, the program will write the cheat sheet data into a xml file, for easier parsing and sectioning. "},{"lineNumber":741,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":742,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":743,"author":{"gitId":"brandontoh"},"content":"Given below is an example to illustrate the mechanism."},{"lineNumber":744,"author":{"gitId":"brandontoh"},"content":"1. The user launches the application and will be prompted to enter a command"},{"lineNumber":745,"author":{"gitId":"brandontoh"},"content":"2. The user chooses the /add command, and will be prompted to fill three fields: name, programming language, and details"},{"lineNumber":746,"author":{"gitId":"brandontoh"},"content":"3. When filling the details, a text editor will pop up. The user now can add their cheat sheet inside this field and he/she can indicate the sections of the cheatsheet using tags similar to markdown"},{"lineNumber":747,"author":{"gitId":"brandontoh"},"content":"4. The DataFileParser will parse the sections and store the information inside a xml file, with a different tag for each section"},{"lineNumber":748,"author":{"gitId":"brandontoh"},"content":"5. When the user invokes the /view command, the Printer class will interpret these tags and prepend and append ANSI escape codes to the text"},{"lineNumber":749,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":750,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":751,"author":{"gitId":"brandontoh"},"content":"Design consideration:"},{"lineNumber":752,"author":{"gitId":"brandontoh"},"content":"Alternative 1 (current choice): Saves the file using a xml file, with different tags for each section"},{"lineNumber":753,"author":{"gitId":"brandontoh"},"content":"* Pros: Allows to store all data in a single file"},{"lineNumber":754,"author":{"gitId":"brandontoh"},"content":"* Cons: The parsing and saving to the xml file is quite complicated"},{"lineNumber":755,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":756,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":757,"author":{"gitId":"brandontoh"},"content":"Alternative 2: Save different sections of the cheat sheet using a different file, and store the files in a folder according to its language"},{"lineNumber":758,"author":{"gitId":"brandontoh"},"content":"* Pros: The implementation of the parser and file writer is much easier"},{"lineNumber":759,"author":{"gitId":"brandontoh"},"content":"* Cons: Sections of a single cheatsheet is scattered across multiple files"},{"lineNumber":760,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":761,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":762,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":763,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-documentation\"\u003e\u003c/a\u003e"},{"lineNumber":764,"author":{"gitId":"theopin"},"content":"# 6. Appendix: Documentation\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":765,"author":{"gitId":"theopin"},"content":""},{"lineNumber":766,"author":{"gitId":"theopin"},"content":"**Project Documentation**"},{"lineNumber":767,"author":{"gitId":"theopin"},"content":"* This project uses **Jekyll**  to manage documentation and stores it into the */docs* folder"},{"lineNumber":768,"author":{"gitId":"theopin"},"content":""},{"lineNumber":769,"author":{"gitId":"theopin"},"content":"\u003e :bulb: Not sure how to manage this project documentation? Have a look at this [guide](https://se-education.org/guides/tutorials/jekyll.html)"},{"lineNumber":770,"author":{"gitId":"theopin"},"content":"\u003e to understand how **Jekyll** is used to maintain such documents."},{"lineNumber":771,"author":{"gitId":"theopin"},"content":""},{"lineNumber":772,"author":{"gitId":"theopin"},"content":"**Converting documents to PDF**"},{"lineNumber":773,"author":{"gitId":"theopin"},"content":""},{"lineNumber":774,"author":{"gitId":"theopin"},"content":"This [guide](https://se-education.org/guides/tutorials/savingPdf.html) "},{"lineNumber":775,"author":{"gitId":"theopin"},"content":"will guide you through saving your documents in the form of PDF files."},{"lineNumber":776,"author":{"gitId":"theopin"},"content":""},{"lineNumber":777,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: Please use the recommended guide to save your files! Using other"},{"lineNumber":778,"author":{"gitId":"theopin"},"content":"\u003emethods to save your files can result in your PDF files being formatted in an undesirable"},{"lineNumber":779,"author":{"gitId":"theopin"},"content":"\u003emanner."},{"lineNumber":780,"author":{"gitId":"theopin"},"content":""},{"lineNumber":781,"author":{"gitId":"theopin"},"content":"**Style Guide**"},{"lineNumber":782,"author":{"gitId":"theopin"},"content":""},{"lineNumber":783,"author":{"gitId":"theopin"},"content":"These guides will help you adhere to the style we have used to write the"},{"lineNumber":784,"author":{"gitId":"theopin"},"content":"various documents of CheatLogs."},{"lineNumber":785,"author":{"gitId":"theopin"},"content":""},{"lineNumber":786,"author":{"gitId":"theopin"},"content":"* Google developer guide: [Guide](https://developers.google.com/style)"},{"lineNumber":787,"author":{"gitId":"theopin"},"content":"* Java markdown standard: [Guide](https://se-education.org/guides/conventions/markdown.html)"},{"lineNumber":788,"author":{"gitId":"theopin"},"content":""},{"lineNumber":789,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":790,"author":{"gitId":"theopin"},"content":""},{"lineNumber":791,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-logging\"\u003e\u003c/a\u003e"},{"lineNumber":792,"author":{"gitId":"theopin"},"content":"# 7. Appendix: Logging\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":793,"author":{"gitId":"theopin"},"content":""},{"lineNumber":794,"author":{"gitId":"theopin"},"content":"To log messages, we have utilized the [Logger](https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Logger.html)"},{"lineNumber":795,"author":{"gitId":"theopin"},"content":"object from the Java Library. This allows you to record messages "},{"lineNumber":796,"author":{"gitId":"theopin"},"content":"at certain segments of the execution of CheatLogs"},{"lineNumber":797,"author":{"gitId":"theopin"},"content":"as well as note the severity of such a message. "},{"lineNumber":798,"author":{"gitId":"theopin"},"content":"These messages are exceptionally helpful when "},{"lineNumber":799,"author":{"gitId":"theopin"},"content":"attempting to debug important features on CheatLogs."},{"lineNumber":800,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":801,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":802,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":803,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":804,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-testing\"\u003e\u003c/a\u003e"},{"lineNumber":805,"author":{"gitId":"theopin"},"content":"# 8. Appendix: Testing\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":806,"author":{"gitId":"theopin"},"content":""},{"lineNumber":807,"author":{"gitId":"theopin"},"content":"This feature allows you to develop and run tests on any feature of CheatLogs. It is"},{"lineNumber":808,"author":{"gitId":"theopin"},"content":"a valuable tool that helps you confirm that the developed features produces results"},{"lineNumber":809,"author":{"gitId":"theopin"},"content":"that match your expectations."},{"lineNumber":810,"author":{"gitId":"theopin"},"content":""},{"lineNumber":811,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-executing-tests\"\u003e\u003c/a\u003e"},{"lineNumber":812,"author":{"gitId":"theopin"},"content":"## 8.1 Executing tests\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":813,"author":{"gitId":"theopin"},"content":""},{"lineNumber":814,"author":{"gitId":"theopin"},"content":"There are two ways to run tests."},{"lineNumber":815,"author":{"gitId":"theopin"},"content":""},{"lineNumber":816,"author":{"gitId":"theopin"},"content":"1. Utilizing the test runner on IntelliJ"},{"lineNumber":817,"author":{"gitId":"theopin"},"content":"    * Run all tests"},{"lineNumber":818,"author":{"gitId":"theopin"},"content":"       1. Right-click on `src/test/java` folder"},{"lineNumber":819,"author":{"gitId":"theopin"},"content":"       2. Select this option: `Run \u0027All Tests\u0027`"},{"lineNumber":820,"author":{"gitId":"theopin"},"content":"    * Run a subset of tests"},{"lineNumber":821,"author":{"gitId":"theopin"},"content":"       1. Right-click on the relevant test class or package. This subset of tests will be referred to as TESTS."},{"lineNumber":822,"author":{"gitId":"theopin"},"content":"       2. Select this option: `Run TESTS`"},{"lineNumber":823,"author":{"gitId":"brandontoh"},"content":"        "},{"lineNumber":824,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":825,"author":{"gitId":"theopin"},"content":"2. Using Gradle"},{"lineNumber":826,"author":{"gitId":"theopin"},"content":"    * Open a terminal and run the following command based on your Operating System."},{"lineNumber":827,"author":{"gitId":"theopin"},"content":"       * Windows: `gradlew clean test`"},{"lineNumber":828,"author":{"gitId":"theopin"},"content":"       * Mac/Linux: `./gradlew clean test`"},{"lineNumber":829,"author":{"gitId":"theopin"},"content":""},{"lineNumber":830,"author":{"gitId":"theopin"},"content":"\u003e :bulb: Unfamiliar with navigating Gradle? Check out [this guide](https://se-education.org/guides/tutorials/gradle.html)"},{"lineNumber":831,"author":{"gitId":"theopin"},"content":"\u003e to understand how to use it."},{"lineNumber":832,"author":{"gitId":"theopin"},"content":""},{"lineNumber":833,"author":{"gitId":"theopin"},"content":""},{"lineNumber":834,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-types-of-tests\"\u003e\u003c/a\u003e"},{"lineNumber":835,"author":{"gitId":"theopin"},"content":"## 8.2 Types of tests\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":836,"author":{"gitId":"theopin"},"content":""},{"lineNumber":837,"author":{"gitId":"theopin"},"content":"This project provides two types of tests:"},{"lineNumber":838,"author":{"gitId":"theopin"},"content":""},{"lineNumber":839,"author":{"gitId":"theopin"},"content":"1. Unit tests "},{"lineNumber":840,"author":{"gitId":"theopin"},"content":"    * They test the lowest level methods within a class and look out for any abnormalities arising within them."},{"lineNumber":841,"author":{"gitId":"theopin"},"content":"    * e.g. `testGetSize()` in `CheatSheetListTest.java`"},{"lineNumber":842,"author":{"gitId":"theopin"},"content":"2. Integration tests "},{"lineNumber":843,"author":{"gitId":"theopin"},"content":"    * They test the integration of multiple classes."},{"lineNumber":844,"author":{"gitId":"theopin"},"content":"    * e.g. `readFile_details_success()` in `DataFileReaderTest.java`"},{"lineNumber":845,"author":{"gitId":"theopin"},"content":""},{"lineNumber":846,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":847,"author":{"gitId":"theopin"},"content":""},{"lineNumber":848,"author":{"gitId":"theopin"},"content":""},{"lineNumber":849,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-dev-ops\"\u003e\u003c/a\u003e"},{"lineNumber":850,"author":{"gitId":"theopin"},"content":"# 9. Appendix: Dev-ops\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":851,"author":{"gitId":"theopin"},"content":""},{"lineNumber":852,"author":{"gitId":"theopin"},"content":"This project uses various tools to build and maintain CheatLogs."},{"lineNumber":853,"author":{"gitId":"theopin"},"content":"Utilizing them helps you to develop CheatLogs more easily and effectively."},{"lineNumber":854,"author":{"gitId":"theopin"},"content":""},{"lineNumber":855,"author":{"gitId":"theopin"},"content":""},{"lineNumber":856,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-build-automation\"\u003e\u003c/a\u003e"},{"lineNumber":857,"author":{"gitId":"theopin"},"content":"## 9.1 Build automation\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":858,"author":{"gitId":"theopin"},"content":""},{"lineNumber":859,"author":{"gitId":"theopin"},"content":"This project uses [Gradle](https://se-education.org/guides/tutorials/gradle.html)"},{"lineNumber":860,"author":{"gitId":"theopin"},"content":"to automate builds and manage dependencies required for this project. "},{"lineNumber":861,"author":{"gitId":"theopin"},"content":""},{"lineNumber":862,"author":{"gitId":"theopin"},"content":""},{"lineNumber":863,"author":{"gitId":"theopin"},"content":"The following commands from Gradle are used to develop this project. You can"},{"lineNumber":864,"author":{"gitId":"theopin"},"content":"execute this commands by launching a terminal and typing them based on the specified"},{"lineNumber":865,"author":{"gitId":"theopin"},"content":"format."},{"lineNumber":866,"author":{"gitId":"theopin"},"content":""},{"lineNumber":867,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: If you are using Mac or Linux, add a `./` before entering any command!"},{"lineNumber":868,"author":{"gitId":"theopin"},"content":""},{"lineNumber":869,"author":{"gitId":"theopin"},"content":"1. `checkstyleMain`"},{"lineNumber":870,"author":{"gitId":"theopin"},"content":"    * Checks all code within the `src/main` directory of this project"},{"lineNumber":871,"author":{"gitId":"theopin"},"content":"      for any issues regarding syntax and code quality."},{"lineNumber":872,"author":{"gitId":"theopin"},"content":"    \u003e Format: `gradlew checkstyleMain`"},{"lineNumber":873,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":874,"author":{"gitId":"theopin"},"content":"2. `checkstyleTest`"},{"lineNumber":875,"author":{"gitId":"theopin"},"content":"    * Checks all code within the `src/test` directory of this project"},{"lineNumber":876,"author":{"gitId":"theopin"},"content":"      for any issues regarding syntax and code quality"},{"lineNumber":877,"author":{"gitId":"theopin"},"content":"    \u003e Format: `gradlew checkstyleTest`"},{"lineNumber":878,"author":{"gitId":"theopin"},"content":""},{"lineNumber":879,"author":{"gitId":"theopin"},"content":"3. `clean`"},{"lineNumber":880,"author":{"gitId":"theopin"},"content":"    * Clears all files created in the `build` directory of this project from "},{"lineNumber":881,"author":{"gitId":"theopin"},"content":"      previous build operations."},{"lineNumber":882,"author":{"gitId":"theopin"},"content":""},{"lineNumber":883,"author":{"gitId":"theopin"},"content":"    \u003e Format: `gradlew clean`"},{"lineNumber":884,"author":{"gitId":"theopin"},"content":""},{"lineNumber":885,"author":{"gitId":"theopin"},"content":"4. `run`"},{"lineNumber":886,"author":{"gitId":"theopin"},"content":"    * Builds and runs the application"},{"lineNumber":887,"author":{"gitId":"theopin"},"content":""},{"lineNumber":888,"author":{"gitId":"theopin"},"content":"    \u003e Format: `gradlew run`"},{"lineNumber":889,"author":{"gitId":"theopin"},"content":""},{"lineNumber":890,"author":{"gitId":"theopin"},"content":"5. `shadowJar`"},{"lineNumber":891,"author":{"gitId":"theopin"},"content":"    * Uses the ShadowJar plugin to create a fat JAR file in the `build/lib` "},{"lineNumber":892,"author":{"gitId":"theopin"},"content":"    directory."},{"lineNumber":893,"author":{"gitId":"theopin"},"content":""},{"lineNumber":894,"author":{"gitId":"theopin"},"content":"    \u003e Format: `gradlew shadowjar`"},{"lineNumber":895,"author":{"gitId":"theopin"},"content":"                                                                                               "},{"lineNumber":896,"author":{"gitId":"theopin"},"content":"    \u003e :exclamation: This operation only replaces the JAR file if the current file is not present or outdated."},{"lineNumber":897,"author":{"gitId":"theopin"},"content":"                                "},{"lineNumber":898,"author":{"gitId":"theopin"},"content":""},{"lineNumber":899,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-new-release\"\u003e\u003c/a\u003e"},{"lineNumber":900,"author":{"gitId":"theopin"},"content":"## 9.2 Making a Release\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":901,"author":{"gitId":"theopin"},"content":""},{"lineNumber":902,"author":{"gitId":"theopin"},"content":"This project allows you to create multiple releases of CheatLogs. Follow these steps to create a new release."},{"lineNumber":903,"author":{"gitId":"theopin"},"content":""},{"lineNumber":904,"author":{"gitId":"theopin"},"content":"1. Generate a fat JAR file using [Gradle](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":905,"author":{"gitId":"theopin"},"content":"   "},{"lineNumber":906,"author":{"gitId":"theopin"},"content":"\u003e :bulb: `gradlew shadowjar` should help you with this step."},{"lineNumber":907,"author":{"gitId":"theopin"},"content":""},{"lineNumber":908,"author":{"gitId":"theopin"},"content":"2. Create a new release on [Github](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/managing-releases-in-a-repository). "},{"lineNumber":909,"author":{"gitId":"theopin"},"content":"\u003e :memo: Upload the JAR file you just created when prompted."},{"lineNumber":910,"author":{"gitId":"theopin"},"content":""},{"lineNumber":911,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":912,"author":{"gitId":"theopin"},"content":""},{"lineNumber":913,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-requirements\"\u003e\u003c/a\u003e"},{"lineNumber":914,"author":{"gitId":"theopin"},"content":"# 10. Appendix: Requirements \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":915,"author":{"gitId":"theopin"},"content":""},{"lineNumber":916,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":917,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":918,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"product-scope-appendix\"\u003e\u003c/a\u003e"},{"lineNumber":919,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":920,"author":{"gitId":"domaxi"},"content":"## 10.1 Product scope\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":921,"author":{"gitId":"domaxi"},"content":"### Target User Profile"},{"lineNumber":922,"author":{"gitId":"domaxi"},"content":"    * has a need to manage cheatsheets"},{"lineNumber":923,"author":{"gitId":"domaxi"},"content":"    * beginner to programming"},{"lineNumber":924,"author":{"gitId":"domaxi"},"content":"    * prefers simple and easily legible version of official documentation"},{"lineNumber":925,"author":{"gitId":"domaxi"},"content":"    * preferes a small and light application"},{"lineNumber":926,"author":{"gitId":"domaxi"},"content":"    * proficient enough in navigating CLI"},{"lineNumber":927,"author":{"gitId":"domaxi"},"content":"#### Value Proposition"},{"lineNumber":928,"author":{"gitId":"domaxi"},"content":"    * Allows beginner programmer to learn faster without having to navigate through official documentation."},{"lineNumber":929,"author":{"gitId":"domaxi"},"content":"    * Manage cheatsheets in a single unified application rather than navigating a messy file system."},{"lineNumber":930,"author":{"gitId":"domaxi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":931,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":932,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"user-stories\"\u003e\u003c/a\u003e"},{"lineNumber":933,"author":{"gitId":"theopin"},"content":"## 10.2 User stories\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":934,"author":{"gitId":"theopin"},"content":"The table below describes the particular needs of relevant users that the respective"},{"lineNumber":935,"author":{"gitId":"theopin"},"content":"versions of CheatLogs was designed to solve."},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":938,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":939,"author":{"gitId":"adhy-p"},"content":"|v1.0|new user|see a short and comprehensive guide|refer to them when I forget how to use the application|"},{"lineNumber":940,"author":{"gitId":"adhy-p"},"content":"|v1.0|user|search and filter the cheat sheets by name|open them quickly and easily|"},{"lineNumber":941,"author":{"gitId":"adhy-p"},"content":"|v1.0|intermediate user|write and add my own cheat sheets|use the application to help me in matters not strictly related to programming|"},{"lineNumber":942,"author":{"gitId":"adhy-p"},"content":"|v1.0|experienced user|delete all cheat sheets|create and customize everything by myself|"},{"lineNumber":943,"author":{"gitId":"adhy-p"},"content":"|v2.0|new user|be prompted to fill the required arguments of a command|use the application without memorizing the flags for each command|"},{"lineNumber":944,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|edit the cheat sheets|update the cheat sheet and keep them relevant as the time progresses|"},{"lineNumber":945,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|add cheatsheets to favourites|easily access my frequently-used cheatsheets|"},{"lineNumber":946,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|sort cheatsheets based on name or subject|easily view and find the list of cheatsheets in my possession|"},{"lineNumber":947,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|customize the settings|adjust the behavior of the program to suit my needs|"},{"lineNumber":948,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|see the output in different colors|be more comfortable when using the application|"},{"lineNumber":949,"author":{"gitId":"adhy-p"},"content":"|v2.0|user|see the cheatsheets in table from|be more comfortable viewing the list of cheatsheets|"},{"lineNumber":950,"author":{"gitId":"adhy-p"},"content":"|v2.1|user|remove cheatsheets from favourites|remove cheatsheets which are less relevant at the time being from appearing at the top of the list|"},{"lineNumber":951,"author":{"gitId":"adhy-p"},"content":"|v2.1|user|automatically save the settings|use the program without customizing it on each time I run it|"},{"lineNumber":952,"author":{"gitId":"-"},"content":""},{"lineNumber":953,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":954,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"use-cases\"\u003e\u003c/a\u003e"},{"lineNumber":955,"author":{"gitId":"theopin"},"content":"## 10.3 Use cases\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":956,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-add\"\u003e\u003c/a\u003e"},{"lineNumber":957,"author":{"gitId":"domaxi"},"content":"### 10.3.1 Use Case: Add CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":958,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":959,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":960,"author":{"gitId":"domaxi"},"content":"1. User request to add a cheatsheet"},{"lineNumber":961,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name and subject"},{"lineNumber":962,"author":{"gitId":"domaxi"},"content":"3. User provides name and subject"},{"lineNumber":963,"author":{"gitId":"domaxi"},"content":"4. CheatLogs displays text editor"},{"lineNumber":964,"author":{"gitId":"domaxi"},"content":"5. User fills in the content of the cheatsheet"},{"lineNumber":965,"author":{"gitId":"domaxi"},"content":"6. User clicks `Save` button"},{"lineNumber":966,"author":{"gitId":"domaxi"},"content":"7. CheatLogs adds cheatsheet."},{"lineNumber":967,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":968,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":969,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":970,"author":{"gitId":"domaxi"},"content":"**3a. User doesnt provide name and index**"},{"lineNumber":971,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":972,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":973,"author":{"gitId":"domaxi"},"content":"        "},{"lineNumber":974,"author":{"gitId":"domaxi"},"content":"**3b. User provides an existing cheatsheet name**"},{"lineNumber":975,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":976,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs shows an error message."},{"lineNumber":977,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":978,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":979,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":980,"author":{"gitId":"domaxi"},"content":"**3c. User provides name / character above 250 characters**"},{"lineNumber":981,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":982,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs shows an error message."},{"lineNumber":983,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":984,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":985,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":986,"author":{"gitId":"domaxi"},"content":"**6a. User clicks cancel Button** "},{"lineNumber":987,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":988,"author":{"gitId":"domaxi"},"content":"6a.1. CheatSheet will not be created."},{"lineNumber":989,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":990,"author":{"gitId":"domaxi"},"content":"*Use case ends.*"},{"lineNumber":991,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":992,"author":{"gitId":"domaxi"},"content":"**6b.** User clicks save when text editor is empty"},{"lineNumber":993,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":994,"author":{"gitId":"domaxi"},"content":"6b.1. The footer will show warning of a blank file to the User."},{"lineNumber":995,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":996,"author":{"gitId":"domaxi"},"content":"*Use case resumes at step 5*"},{"lineNumber":997,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":998,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-edit\"\u003e\u003c/a\u003e"},{"lineNumber":999,"author":{"gitId":"domaxi"},"content":"### 10.3.2 Use Case: Edit CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1000,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1001,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1002,"author":{"gitId":"domaxi"},"content":"1. User request to edit a cheatsheet"},{"lineNumber":1003,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name and index"},{"lineNumber":1004,"author":{"gitId":"domaxi"},"content":"3. User provides name and index"},{"lineNumber":1005,"author":{"gitId":"domaxi"},"content":"4. CheatLogs displays text editor with the cheatsheet content"},{"lineNumber":1006,"author":{"gitId":"domaxi"},"content":"5. User fills in the content of the cheatsheet"},{"lineNumber":1007,"author":{"gitId":"domaxi"},"content":"6. User clicks `Save` button"},{"lineNumber":1008,"author":{"gitId":"domaxi"},"content":"7. CheatLogs edits the cheatsheet content."},{"lineNumber":1009,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1010,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1011,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1012,"author":{"gitId":"domaxi"},"content":"**3a. User doesnt provide name and index**"},{"lineNumber":1013,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1014,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":1015,"author":{"gitId":"domaxi"},"content":"       "},{"lineNumber":1016,"author":{"gitId":"domaxi"},"content":"**3b. User provides mismatching name and index**"},{"lineNumber":1017,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1018,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will display error message"},{"lineNumber":1019,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1020,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1021,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1022,"author":{"gitId":"domaxi"},"content":"**3c. User provides non-existing cheatsheet**"},{"lineNumber":1023,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1024,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs will display error message"},{"lineNumber":1025,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1026,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1027,"author":{"gitId":"domaxi"},"content":"        "},{"lineNumber":1028,"author":{"gitId":"domaxi"},"content":"**6a. User clicks cancel Button** "},{"lineNumber":1029,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1030,"author":{"gitId":"domaxi"},"content":"6a.1. CheatSheet changes will not be saved."},{"lineNumber":1031,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":1032,"author":{"gitId":"domaxi"},"content":"*Use case ends.*"},{"lineNumber":1033,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":1034,"author":{"gitId":"domaxi"},"content":"**6b.** User clicks save when text editor is empty"},{"lineNumber":1035,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1036,"author":{"gitId":"domaxi"},"content":"6b.1. The footer will show warning of a blank file to the User."},{"lineNumber":1037,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1038,"author":{"gitId":"domaxi"},"content":"*6b.2. Use case resumes at 5*"},{"lineNumber":1039,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1040,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-delete\"\u003e\u003c/a\u003e"},{"lineNumber":1041,"author":{"gitId":"domaxi"},"content":"### 10.3.3 Use Case: Delete CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1042,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1043,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1044,"author":{"gitId":"domaxi"},"content":"1. User request to delete a cheatsheet"},{"lineNumber":1045,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name and index"},{"lineNumber":1046,"author":{"gitId":"domaxi"},"content":"3. User provides name and index"},{"lineNumber":1047,"author":{"gitId":"domaxi"},"content":"4. CheatLogs requests user confirmation"},{"lineNumber":1048,"author":{"gitId":"domaxi"},"content":"5. User provides confirmation"},{"lineNumber":1049,"author":{"gitId":"domaxi"},"content":"6. Cheatsheet is deleted"},{"lineNumber":1050,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1051,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1052,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1053,"author":{"gitId":"domaxi"},"content":"**3a. User doesnt provide name and index**"},{"lineNumber":1054,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1055,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":1056,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1057,"author":{"gitId":"domaxi"},"content":"**3b. User provides mismatching name and index**"},{"lineNumber":1058,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1059,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will display error message"},{"lineNumber":1060,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1061,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1062,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1063,"author":{"gitId":"domaxi"},"content":"**3c. User provides non-existing cheatsheet**"},{"lineNumber":1064,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1065,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs will display error message"},{"lineNumber":1066,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1067,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1068,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1069,"author":{"gitId":"domaxi"},"content":"**4a. User provides wrong confirmation**"},{"lineNumber":1070,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1071,"author":{"gitId":"domaxi"},"content":"4a.1. CheatLogs will not delete the cheatsheet"},{"lineNumber":1072,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1073,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1074,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1075,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-clear\"\u003e\u003c/a\u003e"},{"lineNumber":1076,"author":{"gitId":"domaxi"},"content":"### 10.3.4 Use Case: Clear CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1077,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1078,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1079,"author":{"gitId":"domaxi"},"content":"1. User request to clear the cheatsheet list"},{"lineNumber":1080,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests user confirmation"},{"lineNumber":1081,"author":{"gitId":"domaxi"},"content":"3. User provides confirmation"},{"lineNumber":1082,"author":{"gitId":"domaxi"},"content":"4. All user-made cheatsheet is deleted"},{"lineNumber":1083,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1084,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1085,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1086,"author":{"gitId":"domaxi"},"content":"**3a. User provides wrong confirmation key**"},{"lineNumber":1087,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":1088,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case returns to step 1*"},{"lineNumber":1089,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1090,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-favourite\"\u003e\u003c/a\u003e"},{"lineNumber":1091,"author":{"gitId":"domaxi"},"content":"### 10.3.5 Use Case: Favourite CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1092,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1093,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1094,"author":{"gitId":"domaxi"},"content":"1. User request to favourite a cheatsheet"},{"lineNumber":1095,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name and index"},{"lineNumber":1096,"author":{"gitId":"domaxi"},"content":"3. User provides name or index"},{"lineNumber":1097,"author":{"gitId":"domaxi"},"content":"4. CheatLogs favourites the CheatSheet."},{"lineNumber":1098,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1099,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1100,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1101,"author":{"gitId":"domaxi"},"content":"**3a. User doesnt provide name and index**"},{"lineNumber":1102,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1103,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":1104,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1105,"author":{"gitId":"domaxi"},"content":"**3b. User provides mismatching name and index**"},{"lineNumber":1106,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1107,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will display error message"},{"lineNumber":1108,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1109,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1110,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1111,"author":{"gitId":"domaxi"},"content":"**3c. User provides non-existing cheatsheet**"},{"lineNumber":1112,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1113,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs will display error message"},{"lineNumber":1114,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1115,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1116,"author":{"gitId":"domaxi"},"content":"        "},{"lineNumber":1117,"author":{"gitId":"domaxi"},"content":"**3d. User provides already favourited cheatsheet**"},{"lineNumber":1118,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1119,"author":{"gitId":"domaxi"},"content":"3d.1. CheatLogs will display the already favourited cheatsheet"},{"lineNumber":1120,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1121,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1122,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1123,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-find\"\u003e\u003c/a\u003e"},{"lineNumber":1124,"author":{"gitId":"domaxi"},"content":"### 10.3.6 Use Case: Find CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1125,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1126,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1127,"author":{"gitId":"domaxi"},"content":"1. User request to find a cheatsheet"},{"lineNumber":1128,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name, index, or section keyword"},{"lineNumber":1129,"author":{"gitId":"domaxi"},"content":"3. User provides name and index"},{"lineNumber":1130,"author":{"gitId":"domaxi"},"content":"4. Cheatsheet is viewed"},{"lineNumber":1131,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1132,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1133,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1134,"author":{"gitId":"domaxi"},"content":"**3a. User doesnt provide name, index, or section keyword**"},{"lineNumber":1135,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1136,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":1137,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1138,"author":{"gitId":"domaxi"},"content":"**3b. User provides mismatching name and index**"},{"lineNumber":1139,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1140,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will display error message"},{"lineNumber":1141,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1142,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1143,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1144,"author":{"gitId":"domaxi"},"content":"**3c. User provides non-existing cheatsheet attributes**"},{"lineNumber":1145,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1146,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs will display error message"},{"lineNumber":1147,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1148,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1149,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1150,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-view\"\u003e\u003c/a\u003e"},{"lineNumber":1151,"author":{"gitId":"domaxi"},"content":"### 10.3.7 Use Case: View CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1152,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1153,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1154,"author":{"gitId":"domaxi"},"content":"1. User request to find a cheatsheet"},{"lineNumber":1155,"author":{"gitId":"domaxi"},"content":"2. CheatLogs requests for name or index"},{"lineNumber":1156,"author":{"gitId":"domaxi"},"content":"3. User provides name and index"},{"lineNumber":1157,"author":{"gitId":"domaxi"},"content":"4. Cheatsheet is viewed"},{"lineNumber":1158,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1159,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1160,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1161,"author":{"gitId":"domaxi"},"content":"**3a. User doesn\u0027t provide name and index**"},{"lineNumber":1162,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1163,"author":{"gitId":"domaxi"},"content":"*3a.1. Use case resumes at step 2.*"},{"lineNumber":1164,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1165,"author":{"gitId":"domaxi"},"content":"**3b. User provides mismatching name and index**"},{"lineNumber":1166,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1167,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will display error message"},{"lineNumber":1168,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1169,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1170,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1171,"author":{"gitId":"domaxi"},"content":"**3c. User provides non-existing cheatsheet attributes**"},{"lineNumber":1172,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1173,"author":{"gitId":"domaxi"},"content":"3c.1. CheatLogs will display error message."},{"lineNumber":1174,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1175,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1176,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1177,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-list\"\u003e\u003c/a\u003e"},{"lineNumber":1178,"author":{"gitId":"domaxi"},"content":"### 10.3.8 Use Case: List CheatSheet \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1179,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1180,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1181,"author":{"gitId":"domaxi"},"content":"1. User request to list the cheatsheet"},{"lineNumber":1182,"author":{"gitId":"domaxi"},"content":"2. User provides the cheat sheet list"},{"lineNumber":1183,"author":{"gitId":"domaxi"},"content":"3. Cheatsheet is listed"},{"lineNumber":1184,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1185,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1186,"author":{"gitId":"domaxi"},"content":"#### Extensions"},{"lineNumber":1187,"author":{"gitId":"domaxi"},"content":"**3a. The user request change sorting order**"},{"lineNumber":1188,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1189,"author":{"gitId":"domaxi"},"content":"3a.1. CheatLogs will change sorting order"},{"lineNumber":1190,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1191,"author":{"gitId":"domaxi"},"content":"*Use case resumes at Step 3*"},{"lineNumber":1192,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1193,"author":{"gitId":"domaxi"},"content":"**3b. The user inputs invalid argument**"},{"lineNumber":1194,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1195,"author":{"gitId":"domaxi"},"content":"3b.1. CheatLogs will exit the list command"},{"lineNumber":1196,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1197,"author":{"gitId":"domaxi"},"content":"*Use case ends*"},{"lineNumber":1198,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":1199,"author":{"gitId":"domaxi"},"content":"\u003ca id\u003d\"use-cases-exit\"\u003e\u003c/a\u003e"},{"lineNumber":1200,"author":{"gitId":"domaxi"},"content":"### 10.3.9 Use Case: Exit Program \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1201,"author":{"gitId":"domaxi"},"content":"#### MSS"},{"lineNumber":1202,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":1203,"author":{"gitId":"domaxi"},"content":"1. User request to exit the program."},{"lineNumber":1204,"author":{"gitId":"domaxi"},"content":"2. Cheatlogs terminates."},{"lineNumber":1205,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":1206,"author":{"gitId":"domaxi"},"content":"   *Use case ends.*"},{"lineNumber":1207,"author":{"gitId":"-"},"content":""},{"lineNumber":1208,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"non-functional-requirements\"\u003e\u003c/a\u003e"},{"lineNumber":1209,"author":{"gitId":"theopin"},"content":"## 10.4 Non-Functional Requirements\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1210,"author":{"gitId":"brandontoh"},"content":"* CheatLogs should be fast and responsive"},{"lineNumber":1211,"author":{"gitId":"brandontoh"},"content":"* CheatLogs should be reliable and have low rate of crashing"},{"lineNumber":1212,"author":{"gitId":"brandontoh"},"content":"* CheatLogs should be able to recover from any types of program failures"},{"lineNumber":1213,"author":{"gitId":"brandontoh"},"content":"* CheatLogs should protect the privacy of each user, a user can only access to his own data and not others"},{"lineNumber":1214,"author":{"gitId":"brandontoh"},"content":"* CheatLogs should ensure the integrity of the files. The files should not be easily accessible to every user "},{"lineNumber":1215,"author":{"gitId":"-"},"content":""},{"lineNumber":1216,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"},{"lineNumber":1217,"author":{"gitId":"theopin"},"content":""},{"lineNumber":1218,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"appendix-instructions-for-manual-testing\"\u003e\u003c/a\u003e"},{"lineNumber":1219,"author":{"gitId":"theopin"},"content":"# 11. Appendix: Instructions for manual testing\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1220,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-1\"\u003e\u003c/a\u003e"},{"lineNumber":1221,"author":{"gitId":"adhy-p"},"content":"## 11.1 Start-up with preloaded data and restart with save data \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1222,"author":{"gitId":"adhy-p"},"content":"1. Initial launch"},{"lineNumber":1223,"author":{"gitId":"adhy-p"},"content":"    1. Download the latest release of CheatLogs from [here](https://github.com/AY2021S1-CS2113T-W11-3/tp/releases)"},{"lineNumber":1224,"author":{"gitId":"adhy-p"},"content":"    1. Move the jar file to an empty folder"},{"lineNumber":1225,"author":{"gitId":"adhy-p"},"content":"    1. Open Command Prompt/Terminal"},{"lineNumber":1226,"author":{"gitId":"adhy-p"},"content":"    1. Move the directory containing the jar file"},{"lineNumber":1227,"author":{"gitId":"adhy-p"},"content":"    1. Invoke `java -jar CheatLogs.jar FIRST`"},{"lineNumber":1228,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1229,"author":{"gitId":"adhy-p"},"content":"    Expected output: "},{"lineNumber":1230,"author":{"gitId":"adhy-p"},"content":"    Shows the welcome message of CheatLogs"},{"lineNumber":1231,"author":{"gitId":"adhy-p"},"content":"    ![](https://i.ibb.co/c14qrXf/image.png)"},{"lineNumber":1232,"author":{"gitId":"adhy-p"},"content":"2. List the preloaded cheatsheets"},{"lineNumber":1233,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: Still in the same session as Step 1"},{"lineNumber":1234,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/list`"},{"lineNumber":1235,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1236,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1237,"author":{"gitId":"adhy-p"},"content":"    Prints a table containing **12** cheatsheets, prompts the user to sort the result."},{"lineNumber":1238,"author":{"gitId":"adhy-p"},"content":"    Press any characters excluding 1 - 4 to exit the sorting mode "},{"lineNumber":1239,"author":{"gitId":"adhy-p"},"content":"3. Exit and restart the application"},{"lineNumber":1240,"author":{"gitId":"adhy-p"},"content":"    3. Prerequisites: Still in the same session as Step 2"},{"lineNumber":1241,"author":{"gitId":"adhy-p"},"content":"    3. Test case: "},{"lineNumber":1242,"author":{"gitId":"adhy-p"},"content":"        - `/exit`"},{"lineNumber":1243,"author":{"gitId":"adhy-p"},"content":"        - `java -jar CheatLogs.jar`"},{"lineNumber":1244,"author":{"gitId":"adhy-p"},"content":"        - `/list`"},{"lineNumber":1245,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":1246,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1247,"author":{"gitId":"adhy-p"},"content":"    Identical to Step 2 (List the preloaded cheatsheets)"},{"lineNumber":1248,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":1249,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-2\"\u003e\u003c/a\u003e"},{"lineNumber":1250,"author":{"gitId":"adhy-p"},"content":"## 11.2 Adding cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1251,"author":{"gitId":"adhy-p"},"content":"1. Adding cheatsheets using **easy mode**"},{"lineNumber":1252,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/add` - Expected output: Prompts the user to fill `NAME` and `SUBJECT`"},{"lineNumber":1253,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `dummyName0`"},{"lineNumber":1254,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `dummySubject0` - Expected output: A text editor pops up"},{"lineNumber":1255,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `dummyDescription0`, then click `save`"},{"lineNumber":1256,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1257,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1258,"author":{"gitId":"adhy-p"},"content":"    Successfully adds the new cheatsheet, prints the current number of cheatsheets"},{"lineNumber":1259,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":1260,"author":{"gitId":"adhy-p"},"content":"2. Adding cheatsheets using **advanced mode**"},{"lineNumber":1261,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/add /n dummyName1 /s dummySubject1` - Expected output: A text editor pops up"},{"lineNumber":1262,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `dummyDescription1`, then click `save`"},{"lineNumber":1263,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1264,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1265,"author":{"gitId":"adhy-p"},"content":"    Successfully adds the new cheatsheet, prints the current number of cheatsheets"},{"lineNumber":1266,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1267,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-3\"\u003e\u003c/a\u003e"},{"lineNumber":1268,"author":{"gitId":"adhy-p"},"content":"## 11.3 Editing cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1269,"author":{"gitId":"adhy-p"},"content":"1. Editing cheatsheets by name"},{"lineNumber":1270,"author":{"gitId":"adhy-p"},"content":"    1. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1271,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/edit /n dummyName0` - Expected output: A text editor pops up"},{"lineNumber":1272,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `dummyDescription0edit`, then click `save`"},{"lineNumber":1273,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1274,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1275,"author":{"gitId":"adhy-p"},"content":"    Successfully saves the new cheatsheet. Prints the name, subject, and description of the cheatsheet"},{"lineNumber":1276,"author":{"gitId":"-"},"content":""},{"lineNumber":1277,"author":{"gitId":"adhy-p"},"content":"2. Editing cheatsheets by index"},{"lineNumber":1278,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1279,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/edit /i 1` - Expected output: A text editor pops up"},{"lineNumber":1280,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `dummyDescription1edit`, then click `save`"},{"lineNumber":1281,"author":{"gitId":"adhy-p"},"content":"     "},{"lineNumber":1282,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1283,"author":{"gitId":"adhy-p"},"content":"    Successfully saves the new cheatsheet. Prints the name, subject, and description of the cheatsheet"},{"lineNumber":1284,"author":{"gitId":"-"},"content":""},{"lineNumber":1285,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-4\"\u003e\u003c/a\u003e"},{"lineNumber":1286,"author":{"gitId":"adhy-p"},"content":"## 11.4 Viewing cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1287,"author":{"gitId":"adhy-p"},"content":"1. Viewing cheatsheets by name"},{"lineNumber":1288,"author":{"gitId":"adhy-p"},"content":"    1. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1289,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/view /n arrays` "},{"lineNumber":1290,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1291,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1292,"author":{"gitId":"adhy-p"},"content":"    Prints the name, subject, and description of the cheatsheet if a cheatsheet named `arrays` exists, else prints **\"Please enter a valid name\"**"},{"lineNumber":1293,"author":{"gitId":"-"},"content":""},{"lineNumber":1294,"author":{"gitId":"adhy-p"},"content":"2. Viewing cheatsheets by index"},{"lineNumber":1295,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1296,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/view /i 1`"},{"lineNumber":1297,"author":{"gitId":"adhy-p"},"content":"     "},{"lineNumber":1298,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1299,"author":{"gitId":"adhy-p"},"content":"    Prints the name, subject, and description of the cheatsheet"},{"lineNumber":1300,"author":{"gitId":"-"},"content":""},{"lineNumber":1301,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-5\"\u003e\u003c/a\u003e"},{"lineNumber":1302,"author":{"gitId":"adhy-p"},"content":"## 11.5 Finding cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1303,"author":{"gitId":"adhy-p"},"content":"1. Finding cheatsheets by subject"},{"lineNumber":1304,"author":{"gitId":"adhy-p"},"content":"    1. Prerequisites: Non-empty cheatsheet list."},{"lineNumber":1305,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/find /s C` "},{"lineNumber":1306,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1307,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1308,"author":{"gitId":"adhy-p"},"content":"    Prints a table containing cheatsheets with **C** as its subject, prompts the user to sort the result."},{"lineNumber":1309,"author":{"gitId":"adhy-p"},"content":"    Press any characters excluding 1 - 4 to exit the sorting mode "},{"lineNumber":1310,"author":{"gitId":"adhy-p"},"content":"2. Viewing cheatsheets by keyword"},{"lineNumber":1311,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: Non-empty cheatsheet list."},{"lineNumber":1312,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/find /k arrays`"},{"lineNumber":1313,"author":{"gitId":"adhy-p"},"content":"     "},{"lineNumber":1314,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1315,"author":{"gitId":"adhy-p"},"content":"    Prints a table containing cheatsheets which has **\"arrays\"** keyword in its description, prompts the user to sort the result."},{"lineNumber":1316,"author":{"gitId":"adhy-p"},"content":"    Press any characters excluding 1 - 4 to exit the sorting mode     "},{"lineNumber":1317,"author":{"gitId":"adhy-p"},"content":"3. Viewing cheatsheets by subject and keyword"},{"lineNumber":1318,"author":{"gitId":"adhy-p"},"content":"    3. Prerequisites: Non-empty cheatsheet list."},{"lineNumber":1319,"author":{"gitId":"adhy-p"},"content":"    3. Test case: `/find /s C /k arrays`"},{"lineNumber":1320,"author":{"gitId":"adhy-p"},"content":"     "},{"lineNumber":1321,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1322,"author":{"gitId":"adhy-p"},"content":"    Prints a table containing cheatsheets with **C** as its subject and contains **\"arrays\"** keyword in its description, prompts the user to sort the result."},{"lineNumber":1323,"author":{"gitId":"adhy-p"},"content":"    Press any characters excluding 1 - 4 to exit the sorting mode "},{"lineNumber":1324,"author":{"gitId":"-"},"content":""},{"lineNumber":1325,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-6\"\u003e\u003c/a\u003e"},{"lineNumber":1326,"author":{"gitId":"adhy-p"},"content":"## 11.6 Deleting cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1327,"author":{"gitId":"adhy-p"},"content":"1. Deleting cheatsheets by name"},{"lineNumber":1328,"author":{"gitId":"adhy-p"},"content":"    1. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1329,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/delete /n arrays` - Expected output: Asks the user for confirmation. If the cheatsheet does not exist in the first place, prints \"Please enter a valid name\"."},{"lineNumber":1330,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/list`"},{"lineNumber":1331,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1332,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1333,"author":{"gitId":"adhy-p"},"content":"    The cheatsheet with name \"arrays\" is removed from the list.  "},{"lineNumber":1334,"author":{"gitId":"adhy-p"},"content":"2. Deleting cheatsheets by index"},{"lineNumber":1335,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1336,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/delete /i 1`- Expected output: Asks the user for confirmation."},{"lineNumber":1337,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/list`"},{"lineNumber":1338,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1339,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1340,"author":{"gitId":"adhy-p"},"content":"    The cheatsheet with index 1 is removed from the list.  "},{"lineNumber":1341,"author":{"gitId":"adhy-p"},"content":" "},{"lineNumber":1342,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-7\"\u003e\u003c/a\u003e    "},{"lineNumber":1343,"author":{"gitId":"adhy-p"},"content":"## 11.7 Clearing cheatsheets \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1344,"author":{"gitId":"adhy-p"},"content":"1. Clearing all cheatsheets"},{"lineNumber":1345,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/clear` - Expected output: Asks the user for confirmation"},{"lineNumber":1346,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/list`"},{"lineNumber":1347,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1348,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1349,"author":{"gitId":"adhy-p"},"content":"    No cheatsheet on the list"},{"lineNumber":1350,"author":{"gitId":"-"},"content":""},{"lineNumber":1351,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"manual-test-8\"\u003e\u003c/a\u003e"},{"lineNumber":1352,"author":{"gitId":"adhy-p"},"content":"## 11.8 Add/remove cheatsheets to favourites \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":1353,"author":{"gitId":"adhy-p"},"content":"1. Adding cheatsheets to favourites"},{"lineNumber":1354,"author":{"gitId":"adhy-p"},"content":"    1. Prerequisites: List all cheatsheets using the `/list` command, non-empty list."},{"lineNumber":1355,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/fav /i 3` "},{"lineNumber":1356,"author":{"gitId":"adhy-p"},"content":"    1. Test case: `/list`"},{"lineNumber":1357,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1358,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1359,"author":{"gitId":"adhy-p"},"content":"    The cheatsheet with index 3 is now printed on the top of the list, with a \\[\\*\\] next to its name.  "},{"lineNumber":1360,"author":{"gitId":"adhy-p"},"content":"2. Removing cheatsheets from favourites"},{"lineNumber":1361,"author":{"gitId":"adhy-p"},"content":"    2. Prerequisites: List all cheatsheets using the `/list` command, non-empty list, at least one cheatsheet marked as favourite."},{"lineNumber":1362,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/fav /i 1 /d`"},{"lineNumber":1363,"author":{"gitId":"adhy-p"},"content":"    2. Test case: `/list`"},{"lineNumber":1364,"author":{"gitId":"adhy-p"},"content":"    "},{"lineNumber":1365,"author":{"gitId":"adhy-p"},"content":"    Expected output:"},{"lineNumber":1366,"author":{"gitId":"adhy-p"},"content":"    The cheatsheet with index 1 does not have \\[\\*\\] next to its name anymore.  "},{"lineNumber":1367,"author":{"gitId":"-"},"content":"    "},{"lineNumber":1368,"author":{"gitId":"theopin"},"content":"\u003cbr\u003e"}],"authorContributionMap":{"domaxi":341,"abnermtj":85,"theopin":400,"-":28,"brandontoh":244,"adhy-p":270}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"![Our Logo](https://i.ibb.co/VxzKbbz/a1.png)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"Welcome to **CheatLogs**. Through this application, you can organize all your"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"cheatsheets! This application aims to help"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"programming students who have difficulty understanding lengthy documentation "},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"guides."},{"lineNumber":7,"author":{"gitId":"theopin"},"content":""},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"Here are some links to the relevant guide as well as an introduction to our team!"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"theopin":7,"-":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":""},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"  "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"\u003ch1 align\u003d\"center\"\u003e  CheatLogs User Guide \u003c/h1\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"![Our Logo](https://i.ibb.co/VxzKbbz/a1.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"CheatLogs is a free and open-source cheatsheet manager with blazing fast organization, editing and searching via both a command-line interface (CLI) and a graphical user interface (GUI) ."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"This user guide serves as a reference for using the features of CheatLogs. The level of technicality within this document is tailored towards our target audience, novice programmers. If you are new, we recommend reading this from the very [start](#before-start)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"The table of contents below lets you easily access the documentation for installation, specific features, and frequently asked questions. "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"\u003e \u003cfont size \u003d \"5\" \u003e:bulb: Here are some patterns you will come across and their meanings."},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"\u003e ------"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"\u003e|Pattern|Meaning  |"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"\u003e|--|--|"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"\u003e| :bulb: |Tip on current section  |"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"\u003e|:exclamation:|Warning of potential error|"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"\u003e|:memo:|Important details to note|"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"\u003e|\u003cfont size\u003d\"3\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e| Returns to table of contents on left click|"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"\u003e|**bold**|Key terms specific to CheatLogs|"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"\u003e|*italics*|Files|"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"\u003e|`Snippets`|Typed input or output going into or out of CheatLogs|"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"\u003e :exclamation: Colour of images in this document may not be exactly the same as what you see in your terminal due to syntax highlighting of the imaging software used."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"# Table of contents"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"* [1. Before you start](#before-start)"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"* [2. Running CheatLogs](#start)"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"* [3. GUI text editor](#editor)"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"* [4. Commands](#commands)"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"   * [4.1. Storage commands (Aldo)](#storage-command-type)"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"   \t  * [4.1.1. Adding a cheatsheet: `/add`](#add-command)"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"   \t    * [4.1.1.1. Adding a cheatsheet using the easy mode](#add-command-easy)"},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"   \t    * [4.1.1.2. Adding a cheatsheet using the advanced mode](#add-command-advanced)"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"\t  * [4.1.2. Deleting a cheatsheet: `/delete`](#delete-command)"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"\t    * [4.1.2.1. Deleting a cheatsheet using the easy mode](#delete-command-easy)"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"        * [4.1.2.2. Deleting a cheatsheet using the advanced mode](#delete-command-advanced)"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"\t  * [4.1.3. Clearing all entries: `/clear`](#clear-command)"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"  * [4.2.  Manipulation commands (Abner)](#manipulation-command-type)"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"\t  * [4.2.1. Editing a cheatsheet: `/edit` ](#edit-command)"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"\t  * [4.2.2. Favouriting a cheatsheet: `/fav` ](#favourite-command)"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"  * [4.3.  Viewing commands (Brandon)](#viewing-command-type)"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"\t * [4.3.1. Locating a cheatsheet by name: `/find`](#find-command)"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"\t * [4.3.2. Viewing the cheatsheet: `/view`](#view-command)"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"\t * [4.3.3. Listing all cheatsheets: `/list`](#list-command)"},{"lineNumber":53,"author":{"gitId":"adhy-p"},"content":"  * [4.4.  General commands (Adhy)](#general-command-type)"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"\t * [4.4.1. Viewing help: `/help`](#help-command)"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"\t * [4.4.2. Change program settings: `/set`](#settings-command)"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"\t    * [4.4.2.1 Change color scheme](#settings-color)"},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"\t    * [4.4.2.2 Change behavior of help message](#settings-help-message)"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"\t * [4.4.3. Exiting the program: `/exit`](#exit-command)"},{"lineNumber":59,"author":{"gitId":"adhy-p"},"content":"* [5. Data storage (Theo)](#data-storage)"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"  * [5.1. Data file contents](#data-file-contents)"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"\t  * [5.1.1. XML file configurations](#xml-file-configurations)  "},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"\t  * [5.1.2. Main](#main) \t"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"\t  * [5.1.3. Favourite](#favourite) "},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"\t  * [5.1.4. Subject](#subject) "},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"\t  * [5.1.5. Contents](#contents) \t"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"  * [5.2. Data file organization](#data-file-organization)"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":"  * [5.3. Preloaded data files](#preloaded-data-files)  \t     \t    \t  \t    "},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"* [6. FAQ](#faq)"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"* [7. Command Cheatsheet](#command-cheatsheet)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"before-start\"\u003e\u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"brandontoh"},"content":"#  1. Before you start\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"CheatLogs requires Java 11 or above installed on your computer. You can follow the the following instructions to install Java 11:"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"\u003e \u0026nbsp;:exclamation: If you use earlier versions of Java, there may be compatibility issues. Thus, we recommend using the same one we developed on, Java 11. "},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"\u003e "},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":" 1. Download Java JDK 11 for your system from [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html)."},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":" 2. Run and follow the installation instruction in the wizard."},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":" 3. Check your Java version."},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"\t * For computers on Windows, invoke`java -version` on the command prompt."},{"lineNumber":82,"author":{"gitId":"adhy-p"},"content":"\t * For MacOS or Linux distros, invoke `java -version` on your terminal of choice."},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"4. Verify that the version installed follows the \"11.x.x\" format. Refer to the image below for what you should expect to see."},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"![Java 11 installed message](https://i.ibb.co/tzV9GX3/image.png)"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"start\"\u003e\u003c/a\u003e"},{"lineNumber":90,"author":{"gitId":"brandontoh"},"content":"#  2. Running CheatLogs\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"CheatLogs is easy to get running. You can follow the  steps below to do so."},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"1.  You can download the latest version of CheatLogs from [here](https://github.com/AY2021S1-CS2113T-W11-3/tp/releases)."},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":"2. Scroll to the latest release."},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"3. Download only the *CheatLogs.jar* file highlighted in the orange box below."},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"\t![](https://i.ibb.co/C24vhGg/image.png)"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":"4. Create a new directory anywhere on your PC, This is the home folder where CheatLogs will be creating its own subdirectories to store cheatsheets. "},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"\u003e :bulb: Unfamiliar with navigating the terminal? Click [here](https://www.digitaltrends.com/computing/how-to-use-command-prompt/) for a basic introduction for Windows cmd and [here](https://www.pluralsight.com/guides/beginner-linux-navigation-manual) for macOS/Linux bash terminal."},{"lineNumber":100,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"5. Move *CheatLogs.jar* to the new directory."},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"6. On the terminal,  navigate to the directory."},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"\u003e :memo:  If you are running CheatLogs for the first time, proceed to step 7.1. Otherwise, proceed to step 7.2."},{"lineNumber":104,"author":{"gitId":"theopin"},"content":""},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"7. "},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":"    1. Invoke `java -jar cheatlogs.jar first` to run the program. Through this command, CheatLogs will import [preloaded"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"cheatsheet files](#preloaded-data-files) for you to use."},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":109,"author":{"gitId":"abnermtj"},"content":"    2. Invoke `java -jar cheatlogs.jar` to run the program. "},{"lineNumber":110,"author":{"gitId":"theopin"},"content":""},{"lineNumber":111,"author":{"gitId":"brandontoh"},"content":"\u003e :exclamation: If a welcome message appears as shown below after running step 7.1 or 7.2, then great! CheatLogs is up and running."},{"lineNumber":112,"author":{"gitId":"theopin"},"content":""},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"![CheatLogs welcome screen]( https://i.ibb.co/L6LmYGZ/mainMenu.png)"},{"lineNumber":114,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":115,"author":{"gitId":"abnermtj"},"content":"8. Try typing some commands in the terminal and hit Enter to execute."},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"   Here are some example commands you can try, don\u0027t worry if you don\u0027t know them yet!"},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":"   "},{"lineNumber":118,"author":{"gitId":"abnermtj"},"content":"   * `/help`: Shows help info on how to use the application."},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"   * `/list`: Lists all cheatsheets."},{"lineNumber":120,"author":{"gitId":"theopin"},"content":"   * `/exit`: Exits the app."},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"abnermtj"},"content":"A bit confused? Here is a video guide on doing steps 4-9 using the terminal (not cmd). Note that CheatLogs.jar already been placed in the Desktop folder."},{"lineNumber":123,"author":{"gitId":"adhy-p"},"content":"\u003e :bulb: The commands for Windows cmd and UNIX/MacOS terminal are quite similar. You can achieve the same result with cmd using the exact same commands used in the following video."},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":125,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: This demonstration follows step 8b instead of step 8a."},{"lineNumber":126,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":127,"author":{"gitId":"abnermtj"},"content":"![ezgif-6-63beb94eab4e](https://i.ibb.co/Q9FShJt/ezgif-6-63beb94eab4e.gif)"},{"lineNumber":128,"author":{"gitId":"abnermtj"},"content":" \u003cbr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":" "},{"lineNumber":130,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"editor\"\u003e\u003c/a\u003e"},{"lineNumber":131,"author":{"gitId":"brandontoh"},"content":"#  3. GUI text editor\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":132,"author":{"gitId":"adhy-p"},"content":"CheatLogs provides a simple graphical user interface (GUI) text editor that automatically pops up on certain commands. These commands include: `/add` and `/edit`. This allows you to have an easier time manipulating data, performing simple operations such as cut, copy and paste or even using your mouse which are typically unavailable on the CLI. Below is what you can expect to see and be able to do when it pops up."},{"lineNumber":133,"author":{"gitId":"abnermtj"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":134,"author":{"gitId":"domaxi"},"content":"   \u003cimg width\u003d\"500\" height\u003d\"350\" src\u003d\"https://i.ibb.co/3kZ7Xjq/cheatlogs-editor.gif\"\u003e"},{"lineNumber":135,"author":{"gitId":"abnermtj"},"content":"\u003c/p\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"domaxi"},"content":"There are two main group of functions that can be used in out Graphical User Interface. "},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"domaxi"},"content":"Actions tab - Actions that relates to the cheatsheet files"},{"lineNumber":140,"author":{"gitId":"domaxi"},"content":" - Save : Saves the text inputted, then exits the text editor."},{"lineNumber":141,"author":{"gitId":"domaxi"},"content":" - Clear All : Removes all text in the text editor, remains in the text editor."},{"lineNumber":142,"author":{"gitId":"domaxi"},"content":" - Cancel : Removes all text and exit the text editor without saving."},{"lineNumber":143,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":144,"author":{"gitId":"domaxi"},"content":"Edit tab - Actions to manipulate the contents"},{"lineNumber":145,"author":{"gitId":"abnermtj"},"content":"  - Copy : Copies the text highlighted in the editor to the system clipboard."},{"lineNumber":146,"author":{"gitId":"abnermtj"},"content":" -  Cut : Cuts the text highlighted in the editor to the system clipboard."},{"lineNumber":147,"author":{"gitId":"abnermtj"},"content":" -  Paste : Pastes from the system clipboard to the position of the text cursor."},{"lineNumber":148,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":149,"author":{"gitId":"domaxi"},"content":"\u003e :bulb: The editor has a built-in feature to prevent blank cheatsheets from being saved."},{"lineNumber":150,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":151,"author":{"gitId":"abnermtj"},"content":"In the following sections, we will be referring to this editor as **the Editor**. "},{"lineNumber":152,"author":{"gitId":"abnermtj"},"content":" "},{"lineNumber":153,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"commands\"\u003e\u003c/a\u003e"},{"lineNumber":154,"author":{"gitId":"brandontoh"},"content":"# 4. Commands\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":155,"author":{"gitId":"abnermtj"},"content":"Commands are how you interact with Cheatlogs. To understand the terminology being used in the later sections, we would like you to understand the typical structure of a command, illustrated below."},{"lineNumber":156,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":157,"author":{"gitId":"abnermtj"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":158,"author":{"gitId":"abnermtj"},"content":"   \u003cimg width\u003d\"540\" height\u003d\"390\" src\u003d\"https://i.ibb.co/r3JjNZs/Sprite-0005.png\"\u003e"},{"lineNumber":159,"author":{"gitId":"abnermtj"},"content":"\u003c/p\u003e"},{"lineNumber":160,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":161,"author":{"gitId":"domaxi"},"content":"The anatomy of the command is broken down to color coded sections in the picture. These elements are used to execute the command and are elaborated below:"},{"lineNumber":162,"author":{"gitId":"adhy-p"},"content":" * **Command identifier**: Every command needs one. It is used to determine exactly what type of command needs to be run. In the commmand above, `/add` is the command identifier for adding cheatsheets."},{"lineNumber":163,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":164,"author":{"gitId":"abnermtj"},"content":" * **Flag**: Akin to options or parameters of the command, these are additional information passed to CheatLogs to use. Flags are sometimes optional and you don\u0027t always need to type them. In the command above, `/n`  and `/s` are used to indicate the names and subject of the cheatsheet respectively with `/s` being an optional flag."},{"lineNumber":165,"author":{"gitId":"abnermtj"},"content":"\t"},{"lineNumber":166,"author":{"gitId":"domaxi"},"content":"\tThere are several types of flags that is used in the command structure of CheatLogs, that includes:"},{"lineNumber":167,"author":{"gitId":"abnermtj"},"content":"\t * Optional: Flag does not need to be included"},{"lineNumber":168,"author":{"gitId":"abnermtj"},"content":"\t * Necessary: Flag must be included"},{"lineNumber":169,"author":{"gitId":"abnermtj"},"content":"\t * At least one: At least one of the a set of flags must be included"},{"lineNumber":170,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":171,"author":{"gitId":"abnermtj"},"content":"* **Flag description**: Used when the flag itself does not provide enough information, CheatLogs takes in additional information for each flag through that flag\u0027s description. Not all flags have flag descriptions but each flag description needs to accompany a flag. In the command above, it is the name flag `n` is described by `help` and the subject flag `s` is described by `me`."},{"lineNumber":172,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":173,"author":{"gitId":"abnermtj"},"content":"\u003e :bulb: You need not worry if you forget the exact flags for each command. CheatLogs prompts you to enter the flag description for each missing necessary flags. \u003cbr\u003e"},{"lineNumber":174,"author":{"gitId":"abnermtj"},"content":"\u003e :exclamation: CheatLogs is case-sensitive, be sure to match the case for flags about names."},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":177,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":178,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"storage-command-type\"\u003e\u003c/a\u003e"},{"lineNumber":179,"author":{"gitId":"abnermtj"},"content":"## 4.1. Storage Commands:  \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":180,"author":{"gitId":"domaxi"},"content":"This is one of the most used command type in CheatLogs."},{"lineNumber":181,"author":{"gitId":"domaxi"},"content":"They allow you to manage the input and output of cheatsheets to and from the entire list of cheatsheets. "},{"lineNumber":182,"author":{"gitId":"domaxi"},"content":"CheatLogs only has one list of cheatsheets and the following storage commands all refer to this as **the List**."},{"lineNumber":183,"author":{"gitId":"abnermtj"},"content":"___"},{"lineNumber":184,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":185,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"add-command\"\u003e\u003c/a\u003e "},{"lineNumber":186,"author":{"gitId":"abnermtj"},"content":"### 4.1.1. Adding a cheatsheet: `/add` \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":187,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":188,"author":{"gitId":"brandontoh"},"content":"\u003e :exclamation: The subject name would be automatically converted to pascal case, no matter whether the input by user is in lower or upper case."},{"lineNumber":189,"author":{"gitId":"brandontoh"},"content":"\u003e Example: "},{"lineNumber":190,"author":{"gitId":"brandontoh"},"content":"\u003e * `java` would be converted to `Java`"},{"lineNumber":191,"author":{"gitId":"brandontoh"},"content":"\u003e * `PYTHON` would be converted to `Python`"},{"lineNumber":192,"author":{"gitId":"brandontoh"},"content":"\u003e * `ruby on rails` would be converted to `RubyOnRails`"},{"lineNumber":193,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":194,"author":{"gitId":"domaxi"},"content":"You can easily use the `/add` command to add your own cheatsheets to the list."},{"lineNumber":195,"author":{"gitId":"domaxi"},"content":"You can use the two available modes for adding the cheatsheet: **easy** and **advanced** mode."},{"lineNumber":196,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":197,"author":{"gitId":"brandontoh"},"content":"\u003ca id\u003d\"add-command-easy\"\u003e\u003c/a\u003e"},{"lineNumber":198,"author":{"gitId":"brandontoh"},"content":"#### 4.1.1.1. Adding a cheatsheet using the easy mode\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":199,"author":{"gitId":"abnermtj"},"content":"\u003e Format: `/add`"},{"lineNumber":200,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":201,"author":{"gitId":"abnermtj"},"content":"The first method that you can use to add cheatsheet is the easy mode. Just type `/add` without adding any flag or description. "},{"lineNumber":202,"author":{"gitId":"domaxi"},"content":"You will be prompted to fill in the `NAME` and the `SUBJECT` of your cheatsheet."},{"lineNumber":203,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/n01kQ4Y/carbon.png)"},{"lineNumber":204,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":205,"author":{"gitId":"domaxi"},"content":"Shortly after, a window will pop up to show the editing window."},{"lineNumber":206,"author":{"gitId":"domaxi"},"content":"Enter the details of your cheatsheet in the text area shown bellow:"},{"lineNumber":207,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/hYtY1GM/Screenshot-2020-11-09-at-6-30-12-PM.png)"},{"lineNumber":208,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":209,"author":{"gitId":"domaxi"},"content":"Once you are done with entering the details, click the`Save` button to save the cheatsheet."},{"lineNumber":210,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":211,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/n01kQ4Y/carbon.png)"},{"lineNumber":212,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":213,"author":{"gitId":"domaxi"},"content":"\u003e :bulb: CheatLogs has an auto save feature. When you close the window of the text editor, the cheatsheet will automatically be saved."},{"lineNumber":214,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":215,"author":{"gitId":"domaxi"},"content":"Congratulations! You have added your first cheatsheet into CheatLogs."},{"lineNumber":216,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":217,"author":{"gitId":"brandontoh"},"content":"\u003ca id\u003d\"add-command-advanced\"\u003e\u003c/a\u003e"},{"lineNumber":218,"author":{"gitId":"brandontoh"},"content":"#### 4.1.1.2. Adding a cheatsheet using the advanced mode\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":219,"author":{"gitId":"domaxi"},"content":"\u003eFormat: `/add /n \u003cCHEATSHEET_NAME\u003e /s \u003cSUBJECT\u003e` \u003cbr\u003e"},{"lineNumber":220,"author":{"gitId":"domaxi"},"content":"\u003eFlag optionality: `/n` (required)`/s` (required)"},{"lineNumber":221,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":222,"author":{"gitId":"domaxi"},"content":"For the more experienced users, you can also add cheatsheets using the advanced mode. "},{"lineNumber":223,"author":{"gitId":"domaxi"},"content":"A cheatsheet is first constructed with the name `CHEATSHEET_NAME` and subject `SUBJECT`. "},{"lineNumber":224,"author":{"gitId":"domaxi"},"content":"The Editor will then pop up for you to enter the description of the cheatsheet."},{"lineNumber":225,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/440k5wv/Screenshot-2020-11-09-at-7-32-00-PM.png)"},{"lineNumber":226,"author":{"gitId":"domaxi"},"content":"If a valid description is saved, the cheatsheet is added to the List and stored to the */data* folder in the jar file directory. The expected outcome should be similar to below."},{"lineNumber":227,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":228,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/hV499yH/image.png)"},{"lineNumber":229,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":230,"author":{"gitId":"domaxi"},"content":"However, if the description is blank or the Editor was canceled, the error message below is shown and the cheatsheet is not saved."},{"lineNumber":231,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/j3STgFF/Screenshot-2020-11-09-at-6-30-28-PM.png)"},{"lineNumber":232,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":233,"author":{"gitId":"abnermtj"},"content":"If you try to enter a cheatsheet with a name already in the List. You will get a message to input another one, this is depicted below."},{"lineNumber":234,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":235,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/mhgrwN0/image.png)"},{"lineNumber":236,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":237,"author":{"gitId":"abnermtj"},"content":"Examples:"},{"lineNumber":238,"author":{"gitId":"domaxi"},"content":"* `/add /n classes /s Java`"},{"lineNumber":239,"author":{"gitId":"domaxi"},"content":"* `/add /n Cppthings /s JavaisAwesome`"},{"lineNumber":240,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":241,"author":{"gitId":"domaxi"},"content":"Shortly after, an editing window will pop up to show the editing window."},{"lineNumber":242,"author":{"gitId":"domaxi"},"content":"Enter the details of your cheatsheet there, then click the `Save` button."},{"lineNumber":243,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":244,"author":{"gitId":"domaxi"},"content":"If you want to clear the text editing area, click the `Clear All` button"},{"lineNumber":245,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":246,"author":{"gitId":"domaxi"},"content":"If you decide to cancel adding the cheatsheet, click the `Cancel` button."},{"lineNumber":247,"author":{"gitId":"domaxi"},"content":"CheatLogs will discard the progress you made in the text editor and the cheatsheet will not be created."},{"lineNumber":248,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":249,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"delete-command\"\u003e\u003c/a\u003e"},{"lineNumber":250,"author":{"gitId":"domaxi"},"content":" "},{"lineNumber":251,"author":{"gitId":"domaxi"},"content":"#### 4.1.2. Deleting a cheatsheet: `/delete`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":252,"author":{"gitId":"domaxi"},"content":"From the previous subsection, we learned how to add a cheatsheet into CheatLogs. "},{"lineNumber":253,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":254,"author":{"gitId":"adhy-p"},"content":"In this section, you will learn how to use the `/delete` function."},{"lineNumber":255,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":256,"author":{"gitId":"domaxi"},"content":"You can use the delete command using two modes, **easy** and **advanced** mode."},{"lineNumber":257,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"delete-command-easy\"\u003e\u003c/a\u003e"},{"lineNumber":258,"author":{"gitId":"adhy-p"},"content":"#### 4.1.2.1. Deleting a cheatsheet using the easy mode\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":259,"author":{"gitId":"domaxi"},"content":"The easy mode of the delete command lets you safely delete cheatsheets by prompting you the name and the index of the cheatsheet."},{"lineNumber":260,"author":{"gitId":"domaxi"},"content":"\u003e Format: `/delete`"},{"lineNumber":261,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":262,"author":{"gitId":"domaxi"},"content":"The prompts on the screen will request you to enter the name and the index of the cheatsheet; as shown in the picture bellow:"},{"lineNumber":263,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/12w4jCZ/delete-easy-mode.png)"},{"lineNumber":264,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":265,"author":{"gitId":"adhy-p"},"content":"\u003ca id\u003d\"delete-command-advanced\"\u003e\u003c/a\u003e"},{"lineNumber":266,"author":{"gitId":"adhy-p"},"content":"#### 4.1.2.2. Deleting a cheatsheet using the advanced mode\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":267,"author":{"gitId":"domaxi"},"content":"The advanced mode of the delete command lets you delete a cheatsheet using its index or its name. "},{"lineNumber":268,"author":{"gitId":"domaxi"},"content":"The delete command will also be delete the corresponding cheatsheet from the */data* folder."},{"lineNumber":269,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":270,"author":{"gitId":"domaxi"},"content":"To figure out the index of the cheatsheet, you can use the `/list` command."},{"lineNumber":271,"author":{"gitId":"domaxi"},"content":"The first cheatsheet has an `INDEX` of 1."},{"lineNumber":272,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":273,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/delete /n CHEATSHEET_NAME /i CHEATSHEET_INDEX` \u003cbr\u003e"},{"lineNumber":274,"author":{"gitId":"domaxi"},"content":"\u003e"},{"lineNumber":275,"author":{"gitId":"domaxi"},"content":"\u003eFlag optionality: [`/n`, `/i`] (At least one) \u003cbr\u003e"},{"lineNumber":276,"author":{"gitId":"domaxi"},"content":"\u003e"},{"lineNumber":277,"author":{"gitId":"domaxi"},"content":"\u003eFormat: `/delete /n CHEATSHEET_NAME`\u003cbr\u003e"},{"lineNumber":278,"author":{"gitId":"domaxi"},"content":"\u003eFormat: `/delete /n CHEATSHEET_INDEX` \u003cbr\u003e"},{"lineNumber":279,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":280,"author":{"gitId":"abnermtj"},"content":"This command deletes the matching cheatsheet from **the List** with name matching `CHEATSHEET_NAME` or index matching `CHEATSHEET_INDEX` whichever you included. The expected result is similar to below if a matching cheatsheet is found."},{"lineNumber":281,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":282,"author":{"gitId":"domaxi"},"content":"This example bellow uses only the `CHEATSHEET_NAME` to delete a cheatsheet."},{"lineNumber":283,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/vvwTBFb/namedelete.png)"},{"lineNumber":284,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":285,"author":{"gitId":"domaxi"},"content":"This example bellow uses only the `CHEATSHEET_INDEX` to delete a cheatsheet."},{"lineNumber":286,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/9bPBS09/delete-easy-1.png)"},{"lineNumber":287,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":288,"author":{"gitId":"domaxi"},"content":"When either the name or index does not match, CheatLogs will specify the error as shown below."},{"lineNumber":289,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/WyQMS2v/wrongnameindex.png)"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"domaxi"},"content":"\u003e :bulb: Our program currently does not have any undo functionality."},{"lineNumber":292,"author":{"gitId":"domaxi"},"content":"\u003e Once you delete a cheatsheet, it will be deleted forever, and is not recoverable."},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"theopin"},"content":"Examples:"},{"lineNumber":295,"author":{"gitId":"domaxi"},"content":"* `/delete /n computer /i 15`"},{"lineNumber":296,"author":{"gitId":"domaxi"},"content":"* `/delete /i 15` "},{"lineNumber":297,"author":{"gitId":"domaxi"},"content":"* `/delete /n computer`"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"abnermtj"},"content":"___"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"clear-command\"\u003e\u003c/a\u003e"},{"lineNumber":302,"author":{"gitId":"abnermtj"},"content":"### 4.1.3. Clearing all entries: `/clear`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":303,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/clear`"},{"lineNumber":304,"author":{"gitId":"abnermtj"},"content":"\u003e"},{"lineNumber":305,"author":{"gitId":"adhy-p"},"content":"If you want to reset everything to its original state, you can simply use the `/clear` command instead of using `/delete` multiple times."},{"lineNumber":306,"author":{"gitId":"abnermtj"},"content":"This command will delete all cheatsheets from **the List** on your CheatLogs. No need to worry, `/clear` command will not remove the preloaded cheatsheets."},{"lineNumber":307,"author":{"gitId":"abnermtj"},"content":"Here is the expected result if currently you have two cheatsheets stored in the application."},{"lineNumber":308,"author":{"gitId":"domaxi"},"content":"![image](https://i.ibb.co/ysXp9DY/clearcommand.png)"},{"lineNumber":309,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":310,"author":{"gitId":"adhy-p"},"content":"Example:"},{"lineNumber":311,"author":{"gitId":"abnermtj"},"content":"* `/clear`"},{"lineNumber":312,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":313,"author":{"gitId":"domaxi"},"content":"\u003e :exclamation: The clear function only clears for the user made cheatsheets. \u003cbr\u003e"},{"lineNumber":314,"author":{"gitId":"domaxi"},"content":"\u003e The preloaded cheatsheet will still appear inside the list."},{"lineNumber":315,"author":{"gitId":"abnermtj"},"content":"___"},{"lineNumber":316,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":317,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":318,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"manipulation-command-type\"\u003e\u003c/a\u003e"},{"lineNumber":319,"author":{"gitId":"abnermtj"},"content":"## 4.2. Manipulation Commands:  \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":320,"author":{"gitId":"adhy-p"},"content":"After adding cheatsheets, you may want to edit them after some time. Manipulation commands allow you to modify the content of a specific cheatsheet in the List."},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"abnermtj"},"content":"___"},{"lineNumber":323,"author":{"gitId":"theopin"},"content":""},{"lineNumber":324,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"edit-command\"\u003e\u003c/a\u003e"},{"lineNumber":325,"author":{"gitId":"abnermtj"},"content":"### 4.2.1. Editing a cheatsheet: `/edit` \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":326,"author":{"gitId":"theopin"},"content":""},{"lineNumber":327,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/edit /n CHEATSHEET_NAME /i CHEATSHEET_INDEX` \u003cbr\u003e"},{"lineNumber":328,"author":{"gitId":"abnermtj"},"content":"\u003eFlag optionality: [`/n`, `/i`] (At least one)"},{"lineNumber":329,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":330,"author":{"gitId":"abnermtj"},"content":"Edits the description of an existing cheatsheet. After `/edit`  is called, CheatLogs will match for a single cheatsheet in **the List** with a name matching `CHEATSHEET_NAME` or index matching `CHEATSHEET_INDEX` whichever you included (it will try to match only the name if you included both). "},{"lineNumber":331,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":332,"author":{"gitId":"abnermtj"},"content":"On a match, **the Editor** will pop up for you to edit the description of the matched cheatsheet. After you are done editing, saving or canceling **the Editor** updates the cheatsheet details and the message below will be printed on the terminal, showing the updated version of the cheatsheet."},{"lineNumber":333,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":334,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/c8xq2wY/image.png)"},{"lineNumber":335,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":336,"author":{"gitId":"abnermtj"},"content":"When either the name or index does not match, **the Editor** does not pop up and CheatLogs will specify an error as shown below."},{"lineNumber":337,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":338,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/rZ6Rhgn/image.png)"},{"lineNumber":339,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":340,"author":{"gitId":"abnermtj"},"content":"**CheatLogs** does not allow you to save empty descriptions.  **The Editor** will print the error message at the bottom pane (illustrated below) if you try to do so."},{"lineNumber":341,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":342,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/gdGnmZS/image.png)"},{"lineNumber":343,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":344,"author":{"gitId":"abnermtj"},"content":"Examples:"},{"lineNumber":345,"author":{"gitId":"abnermtj"},"content":"* `/edit /n switch /i 2`"},{"lineNumber":346,"author":{"gitId":"abnermtj"},"content":"* `/edit /i 3` "},{"lineNumber":347,"author":{"gitId":"abnermtj"},"content":"* `/edit /n commands`"},{"lineNumber":348,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":349,"author":{"gitId":"abnermtj"},"content":"____"},{"lineNumber":350,"author":{"gitId":"theopin"},"content":""},{"lineNumber":351,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"favourite-command\"\u003e\u003c/a\u003e"},{"lineNumber":352,"author":{"gitId":"abnermtj"},"content":"### 4.2.2. Favouriting a cheatsheet: `/fav` \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":353,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":354,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/fav /n CHEATSHEET_NAME /i CHEATSHEET_INDEX /d`  \u003cbr\u003e"},{"lineNumber":355,"author":{"gitId":"abnermtj"},"content":"\u003eFlag optionality: [`/n`, `/i`] (At least one), `/d`(optional)"},{"lineNumber":356,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":357,"author":{"gitId":"abnermtj"},"content":"If you have some cheatsheets which are used frequently, you can mark them as favourite so that those cheatsheets will always be displayed on the top of the table when using `/list`. The command `/fav` marks the cheatsheet with a name matching `CHEATSHEET_NAME` or index matching `CHEATSHEET_INDEX` whichever you included.  The expected result is similar to below if a matching cheatsheet is found."},{"lineNumber":358,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":359,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/VW5JZNx/image.png)"},{"lineNumber":360,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":361,"author":{"gitId":"abnermtj"},"content":"When either the name or index does not match, **Cheatlogs** will specify the error as shown below."},{"lineNumber":362,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":363,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/vPgbnbW/image.png)"},{"lineNumber":364,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":365,"author":{"gitId":"abnermtj"},"content":"Favourited cheatsheets show up a the top of the `/list` command table, with a `[*]` beside its name. This is shown below, to the right of `loops`.  This allows you to easily identify and access your favourite cheatsheets. "},{"lineNumber":366,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":367,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/XWztfyX/image.png)"},{"lineNumber":368,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":369,"author":{"gitId":"abnermtj"},"content":"To unfavourite a cheatsheet, you can use the flag   `/d`  in the command e.g. `/fav /n string /d`. It will try to match for a cheatsheet the same way as a regular `fav` (without `/d`) but unfavourites the matched cheatsheet instead. This cheatsheet is printed as shown below."},{"lineNumber":370,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/F6MpX1m/image.png)"},{"lineNumber":371,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":372,"author":{"gitId":"abnermtj"},"content":"Trying to [un]favourite an already [un]favourited cheatsheet will show an error and the matched cheatsheet. This is as shown below. "},{"lineNumber":373,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/XWgygYK/image.png)"},{"lineNumber":374,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/cNHZmc6/image.png)"},{"lineNumber":375,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":376,"author":{"gitId":"abnermtj"},"content":"Examples:"},{"lineNumber":377,"author":{"gitId":"abnermtj"},"content":"* `/fav /n Integer /i 2`"},{"lineNumber":378,"author":{"gitId":"abnermtj"},"content":"* `/fav /i 1` "},{"lineNumber":379,"author":{"gitId":"abnermtj"},"content":"* `/fav /n string`"},{"lineNumber":380,"author":{"gitId":"abnermtj"},"content":"* `/fav /n string /d`"},{"lineNumber":381,"author":{"gitId":"theopin"},"content":""},{"lineNumber":382,"author":{"gitId":"abnermtj"},"content":"___"},{"lineNumber":383,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":384,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"viewing-command-type\"\u003e\u003c/a\u003e"},{"lineNumber":385,"author":{"gitId":"abnermtj"},"content":"## 4.3. Viewing Commands: \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e"},{"lineNumber":386,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":387,"author":{"gitId":"abnermtj"},"content":"These are commands that allow you to quickly look up **the List** for the cheatsheets you want. It is recommended to use one command after another,"},{"lineNumber":388,"author":{"gitId":"adhy-p"},"content":"e.g. using `/find` to list all matching cheat lists then `/view` with corresponding name to view the cheatsheet."},{"lineNumber":389,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":390,"author":{"gitId":"abnermtj"},"content":"Some of these commands present their results in a table form and allow you to sort the results through various filters provided. We will call this ****Sorting Mode****."},{"lineNumber":391,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":392,"author":{"gitId":"abnermtj"},"content":"In **Sorting Mode**, cheatsheets are originally shown in the order they were found inside the List. You can then sort them in [lexicographical order](https://en.wikipedia.org/wiki/Lexicographic_order#:~:text\u003dIn%20mathematics%2C%20the%20lexicographic%20or,of%20a%20totally%20ordered%20set.) "},{"lineNumber":393,"author":{"gitId":"abnermtj"},"content":"according to any of the cheatsheet properties. For example , sorting by descending name means to enter`3`in this mode and an illustration of expected output is shown below. "},{"lineNumber":394,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":395,"author":{"gitId":"abnermtj"},"content":"\u003e :bulb: To exit **Sorting Mode**, enter any characters other than 1 - 4."},{"lineNumber":396,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":397,"author":{"gitId":"adhy-p"},"content":"![image](https://i.ibb.co/jJZPNdM/image.png)"},{"lineNumber":398,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":399,"author":{"gitId":"brandontoh"},"content":"\u003e :bulb:  Viewing/Deleting cheatsheets using index"},{"lineNumber":400,"author":{"gitId":"brandontoh"},"content":"\u003e * Index of cheatsheets after sorting in `/list` command can be used to delete/view corresponding cheatsheets"},{"lineNumber":401,"author":{"gitId":"brandontoh"},"content":"\u003e * However, index of cheatsheets in `/find` command cannot be used to delete/view cheatsheets. You would have to delete/view them using the name."},{"lineNumber":402,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":403,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":404,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":405,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"find-command\"\u003e\u003c/a\u003e"},{"lineNumber":406,"author":{"gitId":"abnermtj"},"content":"### 4.3.1. Locating cheatsheets with pattern : `/find`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":407,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":408,"author":{"gitId":"theopin"},"content":""},{"lineNumber":409,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/find /s \u003cSUBJECT\u003e /k \u003cKEYWORD\u003e` \u003cbr\u003e"},{"lineNumber":410,"author":{"gitId":"abnermtj"},"content":"\u003eFlag optionality: [`/s`, `/k`] (At least one)"},{"lineNumber":411,"author":{"gitId":"theopin"},"content":""},{"lineNumber":412,"author":{"gitId":"brandontoh"},"content":"`/find` command allows you to search for cheatsheets using `SUBJECT` and/or `KEYWORD`. The matching cheatsheets would be displayed in a table."},{"lineNumber":413,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":414,"author":{"gitId":"brandontoh"},"content":"After getting prompted to enter a command, you can search for cheatsheets using:"},{"lineNumber":415,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":416,"author":{"gitId":"abnermtj"},"content":"1. `/find /s \u003cSUBJECT\u003e` to search for cheatsheets with matching subject. More details on the matching algorithm at the end of this section."},{"lineNumber":417,"author":{"gitId":"brandontoh"},"content":"2. `/find /k \u003cKEYWORD\u003e` to search for cheatsheets with contents that contains `KEYWORD`."},{"lineNumber":418,"author":{"gitId":"brandontoh"},"content":"3. `/find /s \u003cSUBJECT\u003e /k \u003cKEYWORD\u003e` to search for cheatsheets with matching subject and contains `KEYWORD`."},{"lineNumber":419,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":420,"author":{"gitId":"brandontoh"},"content":"| `/find /s \u003cSUBJECT\u003e` |"},{"lineNumber":421,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":422,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/kSVw5r3/image.png) |"},{"lineNumber":423,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":424,"author":{"gitId":"brandontoh"},"content":"| ` /find /k \u003cKEYWORD\u003e` |"},{"lineNumber":425,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":426,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/TM4J8s1/image.png) |"},{"lineNumber":427,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":428,"author":{"gitId":"brandontoh"},"content":"| `/find /s \u003cSUBJECT\u003e /k \u003cKEYWORD\u003e` |"},{"lineNumber":429,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":430,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/fGdPMdC/image.png) |"},{"lineNumber":431,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":432,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":433,"author":{"gitId":"brandontoh"},"content":"Cheatsheets that meet the criteria of the command you entered would be displayed in a table as shown in the images below."},{"lineNumber":434,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":435,"author":{"gitId":"brandontoh"},"content":"| `/find /s \u003cSUBJECT\u003e` |"},{"lineNumber":436,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":437,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/HB7MNJx/image.png) |"},{"lineNumber":438,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":439,"author":{"gitId":"brandontoh"},"content":"| ` /find /k \u003cKEYWORD\u003e` |"},{"lineNumber":440,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":441,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/z7X4KF2/image.png) |"},{"lineNumber":442,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":443,"author":{"gitId":"brandontoh"},"content":"| `/find /s \u003cSUBJECT\u003e /k \u003cKEYWORD\u003e` |"},{"lineNumber":444,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":445,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/hym26SW/image.png) |"},{"lineNumber":446,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":447,"author":{"gitId":"abnermtj"},"content":"CheatLogs then enters **Sorting Mode**. In **Sorting Mode**, you can sort according to names or subjects by inputting the corresponding index (1-4)."},{"lineNumber":448,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":449,"author":{"gitId":"brandontoh"},"content":"| Name ascending |"},{"lineNumber":450,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":451,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/yPRhvH3/image.png) |"},{"lineNumber":452,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":453,"author":{"gitId":"brandontoh"},"content":"| Subject ascending | "},{"lineNumber":454,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":455,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/z2jHKSB/image.png) |"},{"lineNumber":456,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":457,"author":{"gitId":"brandontoh"},"content":"| Name descending | "},{"lineNumber":458,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":459,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/f8D0QXY/image.png) |"},{"lineNumber":460,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":461,"author":{"gitId":"brandontoh"},"content":"| Subject descending |"},{"lineNumber":462,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":463,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/ThvTVnG/image.png) |"},{"lineNumber":464,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":465,"author":{"gitId":"abnermtj"},"content":"To exit **Sorting Mode** and simply enter another character (excluding 1-4)."},{"lineNumber":466,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":467,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/x8NVsPr/image.png)"},{"lineNumber":468,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":469,"author":{"gitId":"abnermtj"},"content":"However, if none of the cheatsheets meet the criteria of your `/find` command, CheatLogs will not enter **Sorting Mode** as shown in the image below."},{"lineNumber":470,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":471,"author":{"gitId":"brandontoh"},"content":"![image](https://i.ibb.co/wcqcFxR/image.png)"},{"lineNumber":472,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":473,"author":{"gitId":"abnermtj"},"content":"\u003e :bulb:  Notes on matching algorithm"},{"lineNumber":474,"author":{"gitId":"abnermtj"},"content":"\u003e * The search is **case-sensitive** e.g. `help` matches `helpers` but not `Help`. "},{"lineNumber":475,"author":{"gitId":"abnermtj"},"content":"\u003e * A match contains the search term as a substring. e.g. `java` matches `java11` and  `Tricks for java`"},{"lineNumber":476,"author":{"gitId":"theopin"},"content":""},{"lineNumber":477,"author":{"gitId":"theopin"},"content":"Examples:"},{"lineNumber":478,"author":{"gitId":"abnermtj"},"content":"* `/find /s loop`"},{"lineNumber":479,"author":{"gitId":"abnermtj"},"content":"* `/find /s Integer /k 2`"},{"lineNumber":480,"author":{"gitId":"brandontoh"},"content":"* `/find /k hello`"},{"lineNumber":481,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":482,"author":{"gitId":"abnermtj"},"content":" ---"},{"lineNumber":483,"author":{"gitId":"theopin"},"content":" "},{"lineNumber":484,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"view-command\"\u003e\u003c/a\u003e"},{"lineNumber":485,"author":{"gitId":"abnermtj"},"content":"### 4.3.2. Viewing a specific cheatsheet: `/view`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":486,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/view /n CHEATSHEET_NAME /i CHEATSHEET_INDEX` \u003cbr\u003e"},{"lineNumber":487,"author":{"gitId":"abnermtj"},"content":"\u003eFlag optionality: [`/n`, `/i`] (At least one)"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"abnermtj"},"content":"You can view the details of a specific cheatsheet using the `/view` command."},{"lineNumber":490,"author":{"gitId":"abnermtj"},"content":"The `view` command requires you to enter either a name or index and CheatLogs will display the content of the cheatsheet that matches what you entered."},{"lineNumber":491,"author":{"gitId":"theopin"},"content":""},{"lineNumber":492,"author":{"gitId":"brandontoh"},"content":"After getting prompted to enter a command, you can view a specific cheatsheet using:"},{"lineNumber":493,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":494,"author":{"gitId":"adhy-p"},"content":"1. `/view /n \u003cCHEATSHEET_NAME\u003e` to view the cheatsheet with name `CHEATSHEET_NAME`"},{"lineNumber":495,"author":{"gitId":"adhy-p"},"content":"2. `/view /i \u003cCHEATSHEET_INDEX\u003e` to view the cheatsheet with index `CHEATSHEET_INDEX`"},{"lineNumber":496,"author":{"gitId":"adhy-p"},"content":"3. `/view /n \u003cCHEATSHEET_NAME\u003e /i \u003cCHEATSHEET_INDEX\u003e` to view the cheatsheet with name and index corresponding to `CHEATSHEET_NAME` and `CHEATSHEET_INDEX`. "},{"lineNumber":497,"author":{"gitId":"abnermtj"},"content":"\u003e:exclamation: If `CHEATSHEET_NAME` and `CHEATSHEET_INDEX` are pointing at two different cheatsheet, no cheatsheet content will be displayed."},{"lineNumber":498,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":499,"author":{"gitId":"brandontoh"},"content":"| `/view /n \u003cCHEATSHEET_NAME\u003e`|"},{"lineNumber":500,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":501,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/ypPympz/image.png) |"},{"lineNumber":502,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":503,"author":{"gitId":"brandontoh"},"content":"| `/view /i \u003cCHEATSHEET_INDEX\u003e` |"},{"lineNumber":504,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":505,"author":{"gitId":"brandontoh"},"content":"|  ![image](https://i.ibb.co/k58qGf6/image.png) |"},{"lineNumber":506,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":507,"author":{"gitId":"brandontoh"},"content":"| `/view /n \u003cCHEATSHEET_NAME\u003e /i \u003cCHEATSHEET_INDEX\u003e` |"},{"lineNumber":508,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":509,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/h7qS4x8/image.png) |"},{"lineNumber":510,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":511,"author":{"gitId":"theopin"},"content":"Examples:"},{"lineNumber":512,"author":{"gitId":"abnermtj"},"content":"* `/view /n Read /i 2`"},{"lineNumber":513,"author":{"gitId":"abnermtj"},"content":"* `/view /i 1` "},{"lineNumber":514,"author":{"gitId":"abnermtj"},"content":"* `/view /n documentation`"},{"lineNumber":515,"author":{"gitId":"theopin"},"content":""},{"lineNumber":516,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":517,"author":{"gitId":"theopin"},"content":""},{"lineNumber":518,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"list-command\"\u003e\u003c/a\u003e"},{"lineNumber":519,"author":{"gitId":"abnermtj"},"content":"### 4.3.3. Listing all cheatsheets: `/list`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":520,"author":{"gitId":"theopin"},"content":""},{"lineNumber":521,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/list`"},{"lineNumber":522,"author":{"gitId":"theopin"},"content":""},{"lineNumber":523,"author":{"gitId":"abnermtj"},"content":"You can use the `/list` command with no additional flags to list all the cheatsheets in **the List** in a table."},{"lineNumber":524,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":525,"author":{"gitId":"brandontoh"},"content":"After getting prompted to enter a command, you can view a specific cheatsheet using:"},{"lineNumber":526,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":527,"author":{"gitId":"brandontoh"},"content":"* `/list` to list all cheatsheets available."},{"lineNumber":528,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":529,"author":{"gitId":"brandontoh"},"content":"![image](https://i.ibb.co/zF8F4PM/image.png)"},{"lineNumber":530,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":531,"author":{"gitId":"abnermtj"},"content":"CheatLogs then enters **Sorting Mode**. In **Sorting Mode**, you can sort according to names or subjects by inputting the corresponding index (1-4)."},{"lineNumber":532,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":533,"author":{"gitId":"brandontoh"},"content":"| Name ascending |"},{"lineNumber":534,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":535,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/yPRhvH3/image.png) |"},{"lineNumber":536,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":537,"author":{"gitId":"brandontoh"},"content":"| Subject ascending | "},{"lineNumber":538,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: |"},{"lineNumber":539,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/z2jHKSB/image.png) |"},{"lineNumber":540,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":541,"author":{"gitId":"brandontoh"},"content":"| Name descending | "},{"lineNumber":542,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":543,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/f8D0QXY/image.png) |"},{"lineNumber":544,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":545,"author":{"gitId":"brandontoh"},"content":"| Subject descending |"},{"lineNumber":546,"author":{"gitId":"brandontoh"},"content":"| :-------------------------: | "},{"lineNumber":547,"author":{"gitId":"brandontoh"},"content":"| ![image](https://i.ibb.co/ThvTVnG/image.png) |"},{"lineNumber":548,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":549,"author":{"gitId":"abnermtj"},"content":"To exit **Sorting Mode**, simply enter any other characters."},{"lineNumber":550,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":551,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/x8NVsPr/image.png)"},{"lineNumber":552,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":553,"author":{"gitId":"adhy-p"},"content":"Example:"},{"lineNumber":554,"author":{"gitId":"abnermtj"},"content":" *  `/list`"},{"lineNumber":555,"author":{"gitId":"theopin"},"content":""},{"lineNumber":556,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"general-command-type\"\u003e\u003c/a\u003e"},{"lineNumber":557,"author":{"gitId":"abnermtj"},"content":"## 4.4. General Commands: \u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":558,"author":{"gitId":"abnermtj"},"content":"These are useful general purpose commands that don\u0027t fit into the other categories but are still very useful for you to know."},{"lineNumber":559,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":560,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":561,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":562,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"help-command\"\u003e\u003c/a\u003e"},{"lineNumber":563,"author":{"gitId":"brandontoh"},"content":"### 4.4.1. Viewing help: `/help`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":564,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/help`"},{"lineNumber":565,"author":{"gitId":"abnermtj"},"content":"\u003e"},{"lineNumber":566,"author":{"gitId":"abnermtj"},"content":"If you forgot the syntax of a certain command, you can simply type `/help`. It lists all the possible commands that can be executed in the application together with its format and example. Below is what you should expect to see."},{"lineNumber":567,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":568,"author":{"gitId":"adhy-p"},"content":"![image](https://i.ibb.co/n7gWdpQ/image.png)"},{"lineNumber":569,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":570,"author":{"gitId":"adhy-p"},"content":"Example:"},{"lineNumber":571,"author":{"gitId":"abnermtj"},"content":"* `/help`"},{"lineNumber":572,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":573,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":574,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"settings-command\"\u003e\u003c/a\u003e"},{"lineNumber":575,"author":{"gitId":"brandontoh"},"content":"### 4.4.2. Change program settings: `/set`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":576,"author":{"gitId":"adhy-p"},"content":"CheatLogs is highly customizable. By using the `/set` command, you can choose to enable/disable the help messages on each command and change the color scheme of the output text. "},{"lineNumber":577,"author":{"gitId":"abnermtj"},"content":"The settings will be saved automatically and the next time you launch CheatLogs, it will be exactly the same as the last time you opened it!"},{"lineNumber":578,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":579,"author":{"gitId":"brandontoh"},"content":"\u003ca id\u003d\"settings-color\"\u003e\u003c/a\u003e"},{"lineNumber":580,"author":{"gitId":"brandontoh"},"content":"#### 4.4.2.1. Change color scheme\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":581,"author":{"gitId":"adhy-p"},"content":"\u003eFormat: `/set /c COLORSCHEME`\u003cbr\u003e "},{"lineNumber":582,"author":{"gitId":"abnermtj"},"content":"\u003eFlag optionality: `/c` (required) "},{"lineNumber":583,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":584,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":585,"author":{"gitId":"adhy-p"},"content":"CheatLogs provides 3 additional color scheme options numbered from 1 to 3. Upon command invocation, CheatLogs will change the settings to the one matching `COLORSCHEME`. The image below shows the result of `/set /c` command."},{"lineNumber":586,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":587,"author":{"gitId":"adhy-p"},"content":"![image](https://i.ibb.co/0JM5gBd/image.png)"},{"lineNumber":588,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":589,"author":{"gitId":"adhy-p"},"content":"If your flag description `COLORSCHEME` does not fall in the range mentioned above, it will change the color scheme to the default setting (option 0)."},{"lineNumber":590,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":591,"author":{"gitId":"abnermtj"},"content":"\u003e :bulb: The colors will likely vary depending on the terminal that you use and differ from the one shown. We suggest simply picking the most readable one."},{"lineNumber":592,"author":{"gitId":"abnermtj"},"content":" "},{"lineNumber":593,"author":{"gitId":"adhy-p"},"content":"  Example:   "},{"lineNumber":594,"author":{"gitId":"abnermtj"},"content":" * `/set /c 2`"},{"lineNumber":595,"author":{"gitId":"abnermtj"},"content":" "},{"lineNumber":596,"author":{"gitId":"brandontoh"},"content":"\u003ca id\u003d\"settings-help-message\"\u003e\u003c/a\u003e"},{"lineNumber":597,"author":{"gitId":"brandontoh"},"content":"#### 4.4.2.2. Change behavior of help message\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":598,"author":{"gitId":"adhy-p"},"content":"\u003eFormat: `/set /m [on/off]` \u003cbr\u003e"},{"lineNumber":599,"author":{"gitId":"adhy-p"},"content":"\u003eFlag optionality: `/m` (required) "},{"lineNumber":600,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":601,"author":{"gitId":"adhy-p"},"content":"CheatLogs provides help messages for each command. Here is an example from `/add` command."},{"lineNumber":602,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":603,"author":{"gitId":"adhy-p"},"content":"![image](https://i.ibb.co/6wPMRvF/image.png)"},{"lineNumber":604,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":605,"author":{"gitId":"adhy-p"},"content":"You can disable these help messages by using the `/set /m off` and later when you want to re-enable them again, you can type `/set /m on`."},{"lineNumber":606,"author":{"gitId":"adhy-p"},"content":"\u003e :bulb: We recommend you to turn on the help messages until you are reasonably comfortable with each command."},{"lineNumber":607,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":608,"author":{"gitId":"adhy-p"},"content":"  Example:   "},{"lineNumber":609,"author":{"gitId":"adhy-p"},"content":" * `/set /m on`"},{"lineNumber":610,"author":{"gitId":"adhy-p"},"content":" * `/set /m off`"},{"lineNumber":611,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":612,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":613,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"exit-command\"\u003e\u003c/a\u003e"},{"lineNumber":614,"author":{"gitId":"brandontoh"},"content":"### 4.4.3. Exiting the program: `/exit`\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":615,"author":{"gitId":"abnermtj"},"content":"\u003eFormat: `/exit`"},{"lineNumber":616,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":617,"author":{"gitId":"adhy-p"},"content":"If you are done using CheatLogs, simple type `/exit` to close the application. CheatLogs hopes you will open it again."},{"lineNumber":618,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":619,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/J2RWkRx/image.png)"},{"lineNumber":620,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":621,"author":{"gitId":"adhy-p"},"content":" Example:   "},{"lineNumber":622,"author":{"gitId":"abnermtj"},"content":" * `/exit`"},{"lineNumber":623,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":624,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":625,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"data-storage\"\u003e\u003c/a\u003e"},{"lineNumber":626,"author":{"gitId":"brandontoh"},"content":"# 5. Data storage\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":627,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":628,"author":{"gitId":"theopin"},"content":"CheatLogs provides a robust storage system that works together with certain"},{"lineNumber":629,"author":{"gitId":"theopin"},"content":"commands to store your cheatsheets for future reference. This ensures that you"},{"lineNumber":630,"author":{"gitId":"theopin"},"content":"have a directory of cheatsheet files which are organized and can be utilized"},{"lineNumber":631,"author":{"gitId":"theopin"},"content":"by CheatLogs anytime. Refer to the image below for an example of a cheatsheet"},{"lineNumber":632,"author":{"gitId":"theopin"},"content":"file."},{"lineNumber":633,"author":{"gitId":"theopin"},"content":""},{"lineNumber":634,"author":{"gitId":"theopin"},"content":"![image](https://i.ibb.co/RDjGFYZ/xml-File-Example.png)"},{"lineNumber":635,"author":{"gitId":"theopin"},"content":""},{"lineNumber":636,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":637,"author":{"gitId":"theopin"},"content":""},{"lineNumber":638,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"data-file-contents\"\u003e\u003c/a\u003e"},{"lineNumber":639,"author":{"gitId":"brandontoh"},"content":"## 5.1. Data file contents\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":640,"author":{"gitId":"theopin"},"content":""},{"lineNumber":641,"author":{"gitId":"theopin"},"content":"Each cheatsheet file uses an XML file format. This file format organizes the contents"},{"lineNumber":642,"author":{"gitId":"theopin"},"content":"of the file into different sections based on certain attributes of the cheatsheet. The code"},{"lineNumber":643,"author":{"gitId":"theopin"},"content":"snippet below illustrates the structure of the entire cheatsheet file."},{"lineNumber":644,"author":{"gitId":"theopin"},"content":""},{"lineNumber":645,"author":{"gitId":"theopin"},"content":"![image](https://i.ibb.co/mFJ1nDy/xml-Format.png)"},{"lineNumber":646,"author":{"gitId":"theopin"},"content":""},{"lineNumber":647,"author":{"gitId":"abnermtj"},"content":"\u003e :exclamation: Editing XML files can render CheatLogs incapable of reading your cheatsheets. You should only change"},{"lineNumber":648,"author":{"gitId":"abnermtj"},"content":"\u003eor add such files if you an advanced user of CheatLogs."},{"lineNumber":649,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":650,"author":{"gitId":"theopin"},"content":"By following this format, you can manually insert cheatsheet files that are recognized by CheatLogs. The following sections"},{"lineNumber":651,"author":{"gitId":"theopin"},"content":"explore each segment of this format."},{"lineNumber":652,"author":{"gitId":"theopin"},"content":""},{"lineNumber":653,"author":{"gitId":"theopin"},"content":"\u003e :bulb:  If you are unsure where to place your new files, simply place it in the /data directory. CheatLogs will organize them when you execute a command to add, edit or delete any file."},{"lineNumber":654,"author":{"gitId":"theopin"},"content":""},{"lineNumber":655,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":656,"author":{"gitId":"theopin"},"content":""},{"lineNumber":657,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"xml-file-configurations\"\u003e\u003c/a\u003e"},{"lineNumber":658,"author":{"gitId":"brandontoh"},"content":"### 5.1.1. XML file configurations\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":659,"author":{"gitId":"theopin"},"content":""},{"lineNumber":660,"author":{"gitId":"theopin"},"content":"This section configures the settings of the XML file. By default, CheatLogs writes this line into"},{"lineNumber":661,"author":{"gitId":"theopin"},"content":"XML files that it creates or modifies."},{"lineNumber":662,"author":{"gitId":"theopin"},"content":""},{"lineNumber":663,"author":{"gitId":"theopin"},"content":"\u003eFormat: `\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e` "},{"lineNumber":664,"author":{"gitId":"theopin"},"content":""},{"lineNumber":665,"author":{"gitId":"theopin"},"content":"\u003e :bulb: If you are creating a new XML file, you can choose to omit this line entirely. CheatLogs will still convert such XML files into cheatsheets."},{"lineNumber":666,"author":{"gitId":"theopin"},"content":""},{"lineNumber":667,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: If you are including this section, you should use the exact settings defined by the format above. Any change to this format can result in CheatLogs not converting such files into cheatsheets."},{"lineNumber":668,"author":{"gitId":"theopin"},"content":""},{"lineNumber":669,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":670,"author":{"gitId":"theopin"},"content":""},{"lineNumber":671,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"main\"\u003e\u003c/a\u003e"},{"lineNumber":672,"author":{"gitId":"brandontoh"},"content":"### 5.1.2. Main\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":673,"author":{"gitId":"theopin"},"content":""},{"lineNumber":674,"author":{"gitId":"theopin"},"content":"This section acts as the root element of the document. CheatLogs analyses the relevant"},{"lineNumber":675,"author":{"gitId":"theopin"},"content":"sections you place inside `main` and creates a cheatsheet based on the input given by them."},{"lineNumber":676,"author":{"gitId":"theopin"},"content":""},{"lineNumber":677,"author":{"gitId":"theopin"},"content":"\u003eFormat: `\u003cmain\u003eCONTENTS\u003c/main\u003e` "},{"lineNumber":678,"author":{"gitId":"theopin"},"content":""},{"lineNumber":679,"author":{"gitId":"theopin"},"content":"\u003e :bulb:  You can rearrange the order of sections within CONTENTS. CheatLogs does not take the ordering of such sections into account when parsing XML files."},{"lineNumber":680,"author":{"gitId":"theopin"},"content":""},{"lineNumber":681,"author":{"gitId":"abnermtj"},"content":"\u003e :exclamation: Any section that you do not insert into CONTENTS will not be included in the cheatsheet."},{"lineNumber":682,"author":{"gitId":"theopin"},"content":""},{"lineNumber":683,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":684,"author":{"gitId":"theopin"},"content":""},{"lineNumber":685,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"favourite\"\u003e\u003c/a\u003e"},{"lineNumber":686,"author":{"gitId":"brandontoh"},"content":"### 5.1.3. Favourite\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":687,"author":{"gitId":"theopin"},"content":""},{"lineNumber":688,"author":{"gitId":"abnermtj"},"content":"This section indicates if the cheatsheet should be marked as [favourite](#favourite-command). You can use"},{"lineNumber":689,"author":{"gitId":"abnermtj"},"content":"this to mark cheatsheets which you want to view in the list of your favourite cheatsheets."},{"lineNumber":690,"author":{"gitId":"theopin"},"content":""},{"lineNumber":691,"author":{"gitId":"theopin"},"content":"\u003eFormat: `\u003cfavourite\u003eSTATUS\u003c/favourite\u003e`"},{"lineNumber":692,"author":{"gitId":"theopin"},"content":""},{"lineNumber":693,"author":{"gitId":"abnermtj"},"content":"\u003e :memo:  STATUS is not case-sensitive. For example, `YES` and `yes` are considered the same."},{"lineNumber":694,"author":{"gitId":"theopin"},"content":""},{"lineNumber":695,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: If STATUS contains another word than `YES`, the cheatsheet will not be marked as a favourite. "},{"lineNumber":696,"author":{"gitId":"theopin"},"content":""},{"lineNumber":697,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":698,"author":{"gitId":"theopin"},"content":""},{"lineNumber":699,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"subject\"\u003e\u003c/a\u003e"},{"lineNumber":700,"author":{"gitId":"brandontoh"},"content":"### 5.1.4. Subject\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":701,"author":{"gitId":"theopin"},"content":""},{"lineNumber":702,"author":{"gitId":"theopin"},"content":"This section includes the subject of the cheatsheet. It allows CheatLogs to organize your cheat"},{"lineNumber":703,"author":{"gitId":"theopin"},"content":"sheet files by assigning cheatsheets of the same subject to the same folder."},{"lineNumber":704,"author":{"gitId":"theopin"},"content":""},{"lineNumber":705,"author":{"gitId":"theopin"},"content":"\u003eFormat: `\u003csubject\u003eSUBJECT\u003c/subject\u003e`"},{"lineNumber":706,"author":{"gitId":"theopin"},"content":""},{"lineNumber":707,"author":{"gitId":"abnermtj"},"content":"\u003e :exclamation: SUBJECT cannot take in special characters. You will"},{"lineNumber":708,"author":{"gitId":"abnermtj"},"content":"\u003e  **not** be able to insert XML files with such subjects into CheatLogs."},{"lineNumber":709,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":710,"author":{"gitId":"theopin"},"content":"---"},{"lineNumber":711,"author":{"gitId":"theopin"},"content":""},{"lineNumber":712,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"contents\"\u003e\u003c/a\u003e"},{"lineNumber":713,"author":{"gitId":"brandontoh"},"content":"### 5.1.5. Contents\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":714,"author":{"gitId":"theopin"},"content":""},{"lineNumber":715,"author":{"gitId":"abnermtj"},"content":"This section includes the contents of the cheatsheet. You can type the notes that you want to see in your cheatsheet"},{"lineNumber":716,"author":{"gitId":"abnermtj"},"content":"here."},{"lineNumber":717,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":718,"author":{"gitId":"theopin"},"content":"\u003eFormat: `\u003ccontents\u003eCONTENTS\u003c/contents\u003e`"},{"lineNumber":719,"author":{"gitId":"theopin"},"content":""},{"lineNumber":720,"author":{"gitId":"theopin"},"content":"\u003e :bulb:  You can append the contents on a separate line."},{"lineNumber":721,"author":{"gitId":"theopin"},"content":""},{"lineNumber":722,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"data-file-organization\"\u003e\u003c/a\u003e"},{"lineNumber":723,"author":{"gitId":"brandontoh"},"content":"## 5.2. Data organization\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":724,"author":{"gitId":"theopin"},"content":""},{"lineNumber":725,"author":{"gitId":"theopin"},"content":"All the data files can be found in the */data* directory, which is located in the same directory as"},{"lineNumber":726,"author":{"gitId":"adhy-p"},"content":"CheatLogs.jar. Within */data*, CheatLogs stores data files in subdirectories whose name matches its subject name. This gives you a directory of cheatsheets organized by subject, which you can use"},{"lineNumber":727,"author":{"gitId":"theopin"},"content":"to retrieve any external cheatsheet file. "},{"lineNumber":728,"author":{"gitId":"theopin"},"content":""},{"lineNumber":729,"author":{"gitId":"theopin"},"content":"The figure below shows a sample organization of the cheatsheet files in a user\u0027s directory."},{"lineNumber":730,"author":{"gitId":"theopin"},"content":""},{"lineNumber":731,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":732,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/zbppwZZ/sample-User-Data.png)"},{"lineNumber":733,"author":{"gitId":"theopin"},"content":""},{"lineNumber":734,"author":{"gitId":"theopin"},"content":"In the example illustrated above, the user currently has cheatsheets which are of"},{"lineNumber":735,"author":{"gitId":"theopin"},"content":"3 different subjects. Even though some cheatsheets have the same name such as"},{"lineNumber":736,"author":{"gitId":"theopin"},"content":"arrays.xml, they are categorized into different folders as they do not share the same"},{"lineNumber":737,"author":{"gitId":"theopin"},"content":"subject name. This allows you to create cheatsheets for common concepts which may differ"},{"lineNumber":738,"author":{"gitId":"theopin"},"content":"based on the subject you are taking."},{"lineNumber":739,"author":{"gitId":"theopin"},"content":""},{"lineNumber":740,"author":{"gitId":"theopin"},"content":"\u003ca id\u003d\"preloaded-data-files\"\u003e\u003c/a\u003e"},{"lineNumber":741,"author":{"gitId":"brandontoh"},"content":"## 5.3. Preloaded data files\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":742,"author":{"gitId":"theopin"},"content":""},{"lineNumber":743,"author":{"gitId":"adhy-p"},"content":"CheatLogs.jar contains some example cheatsheet files. These files will be moved over to the */data* directory when you run the application for the first time. To differentiate these files from your "},{"lineNumber":744,"author":{"gitId":"theopin"},"content":"personally created cheatsheets, they are placed under the */preloaded* subdirectory. By viewing and"},{"lineNumber":745,"author":{"gitId":"theopin"},"content":"editing these cheatsheets through CheatLogs, you will understand how to operate this program."},{"lineNumber":746,"author":{"gitId":"theopin"},"content":""},{"lineNumber":747,"author":{"gitId":"theopin"},"content":"The figure below shows a sample organization of the cheatsheet files in a user\u0027s directory with"},{"lineNumber":748,"author":{"gitId":"abnermtj"},"content":"two preloaded cheat cheatsheets included."},{"lineNumber":749,"author":{"gitId":"theopin"},"content":""},{"lineNumber":750,"author":{"gitId":"abnermtj"},"content":"![image](https://i.ibb.co/bzp4yJ2/preloaded-Illustration.png)"},{"lineNumber":751,"author":{"gitId":"theopin"},"content":""},{"lineNumber":752,"author":{"gitId":"abnermtj"},"content":"In the example above, you can see that CheatLogs keeps the organization of such preloaded cheatsheets separate"},{"lineNumber":753,"author":{"gitId":"abnermtj"},"content":"from the other cheatsheet files. This is to help you to better identify files marked as"},{"lineNumber":754,"author":{"gitId":"abnermtj"},"content":"preloaded within the */data* directory."},{"lineNumber":755,"author":{"gitId":"theopin"},"content":""},{"lineNumber":756,"author":{"gitId":"theopin"},"content":"\u003e :exclamation: If you create a new file within any subdirectory of */preloaded*, CheatLogs will assume that these files have been preloaded and will treat them as such."},{"lineNumber":757,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":758,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":759,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":760,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"faq\"\u003e\u003c/a\u003e"},{"lineNumber":761,"author":{"gitId":"brandontoh"},"content":"# 6. FAQ\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":762,"author":{"gitId":"abnermtj"},"content":"**Q**: How do I transfer my data to another computer? \u003cbr\u003e"},{"lineNumber":763,"author":{"gitId":"abnermtj"},"content":"**A**: You can simply drag and drop the `cheatlogs.jar`  and the `/data` directory in that same folder into the other computer."},{"lineNumber":764,"author":{"gitId":"theopin"},"content":""},{"lineNumber":765,"author":{"gitId":"abnermtj"},"content":"**Q**: Why is CheatLogs so strict on formatting!?\u003cbr\u003e"},{"lineNumber":766,"author":{"gitId":"abnermtj"},"content":"**A**: CheatLogs is still under development but we plan to provide better ways for you to input ways in the future."},{"lineNumber":767,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":768,"author":{"gitId":"abnermtj"},"content":"**Q**: Will future updates break my current cheatsheets?\u003cbr\u003e"},{"lineNumber":769,"author":{"gitId":"abnermtj"},"content":"**A**: The current structure of cheatsheets may change in the future, but we plan to provide you ways to convert so that you can enjoy the new features. "},{"lineNumber":770,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":771,"author":{"gitId":"abnermtj"},"content":"\u003cbr\u003e"},{"lineNumber":772,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":773,"author":{"gitId":"abnermtj"},"content":"\u003ca id\u003d\"command-cheatsheet\"\u003e\u003c/a\u003e"},{"lineNumber":774,"author":{"gitId":"brandontoh"},"content":"# 7. Command Cheatsheet\u003cfont size\u003d\"5\"\u003e [:arrow_up_small:](#table-of-contents)\u003c/font\u003e "},{"lineNumber":775,"author":{"gitId":"abnermtj"},"content":"The table below is for quick and easy reference to the CheatLogs commands with examples of use."},{"lineNumber":776,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":777,"author":{"gitId":"theopin"},"content":"Action | Format | Examples"},{"lineNumber":778,"author":{"gitId":"theopin"},"content":"-------- | ---------- | ------------"},{"lineNumber":779,"author":{"gitId":"adhy-p"},"content":"Add | /add /n \u003cCHEATSHEET_NAME\u003e /s \\\u003cSUBJECT\u003e | /add /n List /s Java"},{"lineNumber":780,"author":{"gitId":"adhy-p"},"content":"Delete | /delete /i \u003cCHEATSHEET_INDEX\u003e \u003cbr\u003e /delete /n \u003cCHEATSHEET_NAME\u003e | /delete /n List \u003cbr\u003e /delete /i 1"},{"lineNumber":781,"author":{"gitId":"adhy-p"},"content":"Clear | /clear | /clear"},{"lineNumber":782,"author":{"gitId":"adhy-p"},"content":"Edit | /edit /i \u003cCHEATSHEET_INDEX\u003e \u003cbr\u003e /edit /n \u003cCHEATSHEET_NAME\u003e | /edit /i 1 \u003cbr\u003e /edit /n List"},{"lineNumber":783,"author":{"gitId":"abnermtj"},"content":"Favourite | /fav /i \u003cCHEATSHEET_INDEX\u003e \\[/d\\] \u003cbr\u003e /fav /n \u003cCHEATSHEET_NAME\u003e \\[/d\\]| /fav /i 2 \u003cbr\u003e /fav /i 3 /d \u003cbr\u003e /fav /n Cheat \u003cbr\u003e /fav /n arrays /d "},{"lineNumber":784,"author":{"gitId":"adhy-p"},"content":"Find | /find /s \\\u003cSUBJECT\u003e /k \\\u003cKEYWORD\u003e | /find /s Java \u003cbr\u003e /find /s Java /k cheater"},{"lineNumber":785,"author":{"gitId":"abnermtj"},"content":"View | /view /i \u003cCHEATSHEET_INDEX\u003e \u003cbr\u003e/view /n \u003cCHEATSHEET_NAME\u003e | /view /i 3 \u003cbr\u003e /view /n List"},{"lineNumber":786,"author":{"gitId":"adhy-p"},"content":"List | /list | /list"},{"lineNumber":787,"author":{"gitId":"adhy-p"},"content":"Help | /help | /help"},{"lineNumber":788,"author":{"gitId":"adhy-p"},"content":"Settings | /set /c \u003cOPTION_NUMBER\u003e \u003cbr\u003e /set /m \\\u003cOPTION\u003e | /set /c 1 \u003cbr\u003e /set /m on \u003cbr\u003e /set /m off"},{"lineNumber":789,"author":{"gitId":"adhy-p"},"content":"Exit | /exit | /exit"},{"lineNumber":790,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"domaxi":86,"abnermtj":336,"theopin":134,"-":30,"brandontoh":143,"adhy-p":61}},{"path":"docs/team/abnermtj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"# Tolentino Abner Jr Morales Project Portfolio Page "},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"CheatLogs is a free and open-source cheatsheet manager with blazing fast organization, editing, and searching via a command-line interface (CLI) and graphical user interface (GUI). "},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"Written in Java and has about 5000 Lines of Code (LoC)."},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"#### Code Contributed"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"[Reference for code ](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dabnermtj\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dabnermtj\u0026tabRepo\u003dAY2021S1-CS2113T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"#### Features/Enhancements Implemented"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"I was in charge of the classes: **Command** , **Parser**, **UserSesssion**, **UI** , **ConsoleColors**, **ClearCommand**, **DeleteCommand**, **EditCommand**, **ExitCommand**, **HelpCommand**"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"I will go through mainly the **Parser**, **Command**, and **UserSession** and **ConsoleColors** classes to make this not too long."},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"##### Parser class"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"This class parses the user input to construct a Command object that can be executed at a later time. It performs input validation to prevent exceptions. This class also was improved to prompt for the user input in the case that he missed some of the required flags.\tThis was particularly tricky because there are so many possible ways input can go wrong and had to be constantly adjusted throughout the project."},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"##### Command class"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"Acts as the base class for all commands, which follow the command pattern and encapsulate and the necessary information it needs to execute. After many iterations, it now uses dependency injections given by the parser class to make the code less coupled and the gave the ability to use stubs when testing."},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"I made it such that each command specifies the flags that it wants. Before, the flags required by a command was written in the parser. Now instead of that, the parser is able to retrieve the required flags from a specific command which further decreases the coupling of code."},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"##### UserSession class "},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"This class is where the initialization, termination, and main loop of the program runs. Because we used dependency injection as mentioned before, we at one point no longer had to use statics and singletons. All common objects shared by the different commands are now singly instanced in the constructor of this class. This was great to further reduce coupling and ease of testing."},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"##### ConsoleColors class"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"To improve the visuals of our program, the use of color-coding our output was suggested and I looked intro creating basic coloring using ANSI escape characters. This significantly boosted the legibility of the program."},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"#### Contributions to Documentation"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"I contributed to the document by creating the general formatting as well as most of the images throughout the entire document, later was assigned **section 4.2** which covers `/edit` and `/fav`  commands."},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"#### Contributions to the DG"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"I contributed to **section 4.1** **section 4.2.1** **section 5.1** and **section 7.3** which covers the `Architecture`, `UserInterface`.  `Parsing of Data to Construct Commands` and the `Use cases`"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"#### Contribution to team-based tasks"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"- Created issues on the [Github issue tracker](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues?q\u003dis%3Aissue+author%3Aabnermtj) and assigned them to various people on GitHub to highlight potential issues to my colleagues."},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"- Did a lot of the major formatting of the user guide as well as many of the images in most of the sections. "},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"- Suggesting potential improvements to my teammates\u0027 parts."},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"---"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"#### Review/Mentoring Contributions"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"I reviewed some PRs both to my colleagues and the other groups in the Dry Run Practical Exam. I gave both suggestions to improve their code both via GitHub PR review and as well as acknowledging their effort when I see great code."},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"Here are some examples of PRs I reviewed:"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"- [#36](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36#discussion_r503042388)"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"- [#84](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/84#discussion_r511032897)"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"- [#21](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/21)"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"---"}],"authorContributionMap":{"abnermtj":56}},{"path":"docs/team/adhy-p.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"# Hubertus Adhy Pratama Setiawan - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"CheatLogs is a free and open-source cheatsheet manager with blazing fast organization, editing and searching via a command-line interface (CLI) and graphical user interface (GUI) . "},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":"Written in Java (~5000 Lines of Code)."},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"## Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"### Code Contributed"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"The link to the code I wrote can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dadhy-p\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dadhy-p\u0026tabRepo\u003dAY2021S1-CS2113T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)."},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"---"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"### Features/Enhancements Implemented"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"I was in charge of the **CheatSheetList** class, **color-coding** of output, and **SettingsCommand** class."},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"#### 1. CheatSheetList class"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"CheatSheetList class maintains all the cheatsheets during runtime. The `getCheatSheet` method can be invoked both using `index` and `name` to give the user the liberty to choose the one they are more comfortable with. "},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"*Highlights*"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"Most of the time spent on CheatSheetList was on refactoring and changing the design aspect of this class. At first, the team decided to make this class non-static and pass it around to every other class. Then, we realized that there can only be one instance of this class and therefore it is reasonable to change it to static class. However, we decided to change it back to non-static to make this class easier to test and manage."},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"#### 2. Color-coding of output"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"I utilized ANSI escape codes to add colors to the output text. In addition, I utilized the JANSI library to allow these escape codes to be recognized by Windows cmd."},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"*Highlights*"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"To add a certain color to the text, I simply wrap the text with the appropriate escape codes. All the color coding are done inside the `printer` class, except for the `/list`, `/view` and `/find` commands. These command prints the cheatsheets in a table form for a more pleasant viewing using *String Formatter*. Unfortunately, the formatter is not compatible with the ANSI escape codes and it ended up breaking the table. Thus, I had to tweak the string formatter itself and integrate the color there instead of on the actual text."},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"#### 3. SettingsCommand class "},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"The `/set` command allows the user to modify the default behavior of the application. The user can change the default color scheme of the output and also choose to enable/disable the help messages found on each command. These settings are saved in a `txt` file. "},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"*Highlights*"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"The save data for settings is integrated to the storage class in a way such that it does not interfere with the storage of the cheatsheets. Settings and cheatsheets has their own parsers and file writers. "},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"---"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"### Contributions to Documentation"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"I contributed to **section 4.4**: "},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"- `/help` command"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"- `/set` command"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"- `/exit` command"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"---"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"### Contributions to the DG"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"I contributed to **section 4.2.3.1** and **section 4.2.3.10 - 4.2.3.12**:"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"- FinderCommand"},{"lineNumber":47,"author":{"gitId":"adhy-p"},"content":"- DeleteCommand"},{"lineNumber":48,"author":{"gitId":"adhy-p"},"content":"- ClearCommand"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"- FavouriteCommand"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"- HelpCommand"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"I also contributed to **section 5.5 - 5.6**, **section 10.2**, and **section 11**:"},{"lineNumber":53,"author":{"gitId":"adhy-p"},"content":"- Changing default settings"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"- Proposed color coding implementation"},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"- User stories"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"- Instructions for manual testing"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"---"},{"lineNumber":59,"author":{"gitId":"adhy-p"},"content":"### Contribution to team-based tasks"},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":"- Created milestones on GitHub to make the planning and management of the project easier."},{"lineNumber":61,"author":{"gitId":"adhy-p"},"content":"- Helped the team to maintain the [issue tracker](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues?q\u003dis%3Aissue+author%3Aadhy-p+)."},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"- Helped the team to release the [product](https://github.com/AY2021S1-CS2113T-W11-3/tp/releases/tag/v2.0)."},{"lineNumber":63,"author":{"gitId":"adhy-p"},"content":"- Proofread the User Guide \u0026 Developer Guide and made necessary amendments."},{"lineNumber":64,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":65,"author":{"gitId":"adhy-p"},"content":"---"},{"lineNumber":66,"author":{"gitId":"adhy-p"},"content":"### Review/Mentoring Contributions"},{"lineNumber":67,"author":{"gitId":"adhy-p"},"content":"I reviewed some PRs and gave suggestions to my colleagues on how to improve their code both via GitHub PR review and privately via personal chat."},{"lineNumber":68,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":69,"author":{"gitId":"adhy-p"},"content":"Here are some examples of PRs I reviewed:"},{"lineNumber":70,"author":{"gitId":"adhy-p"},"content":"- [#36](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/36)"},{"lineNumber":71,"author":{"gitId":"adhy-p"},"content":"- [#42](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/42)"},{"lineNumber":72,"author":{"gitId":"adhy-p"},"content":"- [#91](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/91)"},{"lineNumber":73,"author":{"gitId":"adhy-p"},"content":"- [#192](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/192)"},{"lineNumber":74,"author":{"gitId":"adhy-p"},"content":"---"}],"authorContributionMap":{"adhy-p":74}},{"path":"docs/team/aldomax.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"# Aldo Maximillian Sugito - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":"CheatLogs is a cheatsheet management application that revolutionizes the world of programming."},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"CheatLogs uses a hybrid of Command Line (CLI) and Graphical User Interface (GUI) to interact with the user. "},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"We believe that the command line interface provides a fast user interaction."},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"While the graphical user interface, provides extra convenience to type long contents with a simple and a familiar interface for the user."},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"### Summary of Contributions"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":"#### Code Contributed"},{"lineNumber":11,"author":{"gitId":"domaxi"},"content":"You can see the codes that I contributed using the link bellow:"},{"lineNumber":12,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":13,"author":{"gitId":"domaxi"},"content":"[Aldo\u0027s Contribution](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003daldo\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddomaxi\u0026tabRepo\u003dAY2021S1-CS2113T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":14,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":15,"author":{"gitId":"domaxi"},"content":"### Features Implemented"},{"lineNumber":16,"author":{"gitId":"domaxi"},"content":"#### Added Graphical User Interface for Adding and Editing Cheatsheet"},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"The text editor is used to provide a graphical user interface for the user to add and edit the content of the cheatsheet."},{"lineNumber":18,"author":{"gitId":"domaxi"},"content":"The Java Swing library is used in the implementation of the text editor."},{"lineNumber":19,"author":{"gitId":"domaxi"},"content":"Inside the text editor, therer are buttons that can assist the user in inputting their cheatsheet content."},{"lineNumber":20,"author":{"gitId":"domaxi"},"content":"* Action buttons to control the editor (`Save`, `Clear All`, `Cancel`)"},{"lineNumber":21,"author":{"gitId":"domaxi"},"content":"* Editing buttons to help with editing (`Copy`, `Paste`, `Cut`)"},{"lineNumber":22,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":23,"author":{"gitId":"domaxi"},"content":"*Highlights*"},{"lineNumber":24,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":25,"author":{"gitId":"domaxi"},"content":"Implementing the text editor was one of the most important chunk of the user interface."},{"lineNumber":26,"author":{"gitId":"domaxi"},"content":"At first, we opted to use the Java Desktop class for the text editor, and use the system text editor."},{"lineNumber":27,"author":{"gitId":"domaxi"},"content":"However, we believe that it would potentially create a dependency problem from using different systems."},{"lineNumber":28,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":29,"author":{"gitId":"domaxi"},"content":"Therefore, we opted to use the JavaSwing library."},{"lineNumber":30,"author":{"gitId":"domaxi"},"content":"* The JTextEditor class is used to implement the text editor. "},{"lineNumber":31,"author":{"gitId":"domaxi"},"content":"* The layout of the text editor by using JPanel in each of the elements."},{"lineNumber":32,"author":{"gitId":"domaxi"},"content":"* The buttons as an action event to trigger commands, such as Copy, Cut, Paste, Clear All, Cancel, and Save."},{"lineNumber":33,"author":{"gitId":"domaxi"},"content":"* The waitForCommand() needed to be implemented to halt the program execution while the text editor is open."},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":"#### The CheatSheet Class"},{"lineNumber":36,"author":{"gitId":"domaxi"},"content":"The cheatsheet class is used to contain the attributes of the cheatsheets. "},{"lineNumber":37,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":38,"author":{"gitId":"domaxi"},"content":"*Hightlights* "},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":40,"author":{"gitId":"domaxi"},"content":"The cheatsheet class is the basis of the features implemented in our program. It dictates how the DataStorage class is implemented and also the functionality of almost all of the program."},{"lineNumber":41,"author":{"gitId":"domaxi"},"content":"The main challenge is to determine what are the member attributes that needs to be added in the class."},{"lineNumber":42,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":43,"author":{"gitId":"domaxi"},"content":"#### The Preloaded CheatSheets"},{"lineNumber":44,"author":{"gitId":"domaxi"},"content":"Preloaded cheatsheets is a built-in feature of CheatLogs, that is automatically loaded into the CheatLogs."},{"lineNumber":45,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":46,"author":{"gitId":"domaxi"},"content":"*Highlights*"},{"lineNumber":47,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":48,"author":{"gitId":"domaxi"},"content":"The preloaded cheatsheets is quite difficult to implement. I helped my colleague to implement the initial version of the preloaded cheatsheets."},{"lineNumber":49,"author":{"gitId":"domaxi"},"content":"Moving on our development timeline, we used XML files instead of the usual .txt file to store the cheatsheets, as it already have a built in tags to separate the contents of the cheatsheet."},{"lineNumber":50,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":51,"author":{"gitId":"domaxi"},"content":"#### Footer Display on Text Editor"},{"lineNumber":52,"author":{"gitId":"domaxi"},"content":"THe footer of the text editor can be used to display not the information. "},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":"The footer panel can also be used to display error to the user."},{"lineNumber":54,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":55,"author":{"gitId":"domaxi"},"content":"*Highlights*"},{"lineNumber":56,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":57,"author":{"gitId":"domaxi"},"content":"The footer is implemented using a JPanel that is inserted insiede the BoxLayout of the Editor."},{"lineNumber":58,"author":{"gitId":"domaxi"},"content":"The footer is displayed using the JLabel class, and using its methods, the content can be customized."},{"lineNumber":59,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":60,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":61,"author":{"gitId":"domaxi"},"content":"### Project Management"},{"lineNumber":62,"author":{"gitId":"domaxi"},"content":"* Perform manual testing and bug catching for the application"},{"lineNumber":63,"author":{"gitId":"domaxi"},"content":"* Administer and maintain the team repository."},{"lineNumber":64,"author":{"gitId":"domaxi"},"content":"* Review and comment on team\u0027s Pull Requests."},{"lineNumber":65,"author":{"gitId":"domaxi"},"content":"* Perform merge conflict resolution for Pull Requests."},{"lineNumber":66,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":67,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":68,"author":{"gitId":"domaxi"},"content":"#### Contribution to team-based tasks"},{"lineNumber":69,"author":{"gitId":"domaxi"},"content":"- Created team\u0027s Repository on Github including ths team\u0027s access permissions."},{"lineNumber":70,"author":{"gitId":"domaxi"},"content":"- Helped the team to maintain the [issue tracker](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues?q\u003dis%3Aissue+author%3Aadhy-p+)."},{"lineNumber":71,"author":{"gitId":"domaxi"},"content":"- Proofread the User Guide and make necessary amendments."},{"lineNumber":72,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":73,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":74,"author":{"gitId":"domaxi"},"content":"#### Documentation"},{"lineNumber":75,"author":{"gitId":"domaxi"},"content":"* User Guide"},{"lineNumber":76,"author":{"gitId":"domaxi"},"content":"    For the user guide, I am responsible for the following sections:"},{"lineNumber":77,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":78,"author":{"gitId":"domaxi"},"content":"    * **Section 3** which covers the Graphical User Interface (GUI) and the commands associated with the text editor"},{"lineNumber":79,"author":{"gitId":"domaxi"},"content":"    * **Section 4.1** which covers all the storage commands of CheatLogs."},{"lineNumber":80,"author":{"gitId":"domaxi"},"content":"* Developer Guide"},{"lineNumber":81,"author":{"gitId":"domaxi"},"content":"    For the developer guide, I am responsible for the following sections:"},{"lineNumber":82,"author":{"gitId":"domaxi"},"content":"    "},{"lineNumber":83,"author":{"gitId":"domaxi"},"content":"    * **Section 4.2.3.2** which covers the AddCommand description and the sequence diagram"},{"lineNumber":84,"author":{"gitId":"domaxi"},"content":"    * **Section 4.2.3.3** which covers the EditCommand description and the sequence diagram"},{"lineNumber":85,"author":{"gitId":"domaxi"},"content":"    * **Section 4.2.3.4** which covers the ViewCommand description and the sequence diagram"},{"lineNumber":86,"author":{"gitId":"domaxi"},"content":"    * **Section 4.2.3.5** which covers the ExitCommand description and the sequence diagram"},{"lineNumber":87,"author":{"gitId":"domaxi"},"content":"    * **Section 5.2** which covers the content editor"},{"lineNumber":88,"author":{"gitId":"domaxi"},"content":"    * **Section 10.3** which covers the use cases"},{"lineNumber":89,"author":{"gitId":"domaxi"},"content":"___"},{"lineNumber":90,"author":{"gitId":"domaxi"},"content":"#### Review/Mentoring Contributions"},{"lineNumber":91,"author":{"gitId":"domaxi"},"content":"* I helped the team with repository maintenance, mostly about git (Pull Requests, Branches, Merge Conflicts, Rebasing, etc)."},{"lineNumber":92,"author":{"gitId":"domaxi"},"content":"* I helped determine the format for the storage (using XML file)."},{"lineNumber":93,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":94,"author":{"gitId":"domaxi"},"content":"Here are the pull requests I helped review and merged:"},{"lineNumber":95,"author":{"gitId":"domaxi"},"content":"- [#93](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/93)"},{"lineNumber":96,"author":{"gitId":"domaxi"},"content":"- [#22](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/22/)"},{"lineNumber":97,"author":{"gitId":"domaxi"},"content":"- [#19](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/19)"},{"lineNumber":98,"author":{"gitId":"domaxi"},"content":"- [#109](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/108)"},{"lineNumber":99,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":100,"author":{"gitId":"domaxi"},"content":"Here are the issues that I raised"},{"lineNumber":101,"author":{"gitId":"domaxi"},"content":"-[220](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/220)"},{"lineNumber":102,"author":{"gitId":"domaxi"},"content":"-[218](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/218)"},{"lineNumber":103,"author":{"gitId":"domaxi"},"content":"-[149](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/149)"},{"lineNumber":104,"author":{"gitId":"domaxi"},"content":"-[147](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues/147)"},{"lineNumber":105,"author":{"gitId":"domaxi"},"content":"___"}],"authorContributionMap":{"domaxi":105}},{"path":"docs/team/brandontoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"# Toh Yong Xiang Brandon - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"CheatLogs is a free and open-source cheatsheet manager with blazing fast organization, editing and searching via a command-line interface (CLI) and graphical user interface (GUI) . "},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"Written in Java (~5000 Lines of Code)."},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"## Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"### Code Contributed"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"The link to the code I wrote can be found [here](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dw11-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbrandontoh\u0026tabRepo\u003dAY2021S1-CS2113T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"---"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"### Features/Enhancements Implemented"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"I was in charge of the **SortFilter** class, **add** command, **view** command, **find** command, **list** command and **TablePrinter**class."},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"#### 1. Sorting feature"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"The `SortFilter` class first prompt the user to input a number to choose the type of sort (ascending name, descending name, ascending subject, descending subject). "},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"After the user have entered a number, `SortFilter` uses `java.util.Collections` and `comparator` to sorts the cheatsheets."},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"*Highlights*"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"We considered use of loops at first, but we felt that there will too many duplicated codes and will not be flexible. Thus, we ended up with `sort()` from `Collections` and `comparator` which is more flexible."},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"#### 2. add, view, find, list commands"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"The `add` command allows the user to add cheatsheet with name, subject and content. The content will be inputted via an editor which Aldo is in-charge of."},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"The `view` command allows the user to either enter a name or index, then CheatLogs will find the matching cheatsheet in cheatSheetList and print the content of the cheatsheet."},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"The `find` command allows the user to find cheatsheets by name, subject or keyword from the contents. `find` command also make use of `SortFilter` to allow user to sort the matched cheatsheets."},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"The `list` command lists all the cheatsheets in cheatSheetList. `list` command also make use of `SortFilter` to allow user to sort all the cheatsheets."},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"*Highlights*"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"`find` and `list` commands used to be very basic as it just prints out name, subject and content of the cheatsheets. However, by incorporating classes like `SortFilter` and `TablePrinter` into the commands, we managed to make it more interactive the user to use. The user now can sort their cheatsheets and view their cheatsheets in more pleasing manner."},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"#### 3. TablePrinter class "},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"The `TablePrinter` class formats the name, subject and content and prints them out in a table format."},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"*Highlights*"},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"Formatting of the table took alot of time. The `TablePrinter` class is made of many `for` loops and are mostly just hard coding. Most of the time, it was a try and error to see whether the output is what we wanted as single change in the `for` loop could cause a drastic change in the output."},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"---"},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"### Contributions to Documentation"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"I contributed to **section 4.3** of UG: "},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"- `/find` command"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"- `/view` command"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"- `/list` command"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"I contributed to **section 4.2** and **section 4.2.6.6 - 4.2.3.8** of DG: "},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"- Command parser"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"- `/list` command"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"- `/find` command"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"- `/setting` command"},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"I also contributed to **section 5.3** and **section 10.4** of DG:"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"- Sorting feature"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"- Non-Functional Requirements"},{"lineNumber":61,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":62,"author":{"gitId":"brandontoh"},"content":"---"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"### Contribution to team-based tasks"},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"- Created milestones on GitHub to make the planning and management of the project easier."},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"- Helped the team to maintain the [issue tracker](https://github.com/AY2021S1-CS2113T-W11-3/tp/issues?q\u003dis%3Aissue+author%3Abrandontoh)."},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"- Proofread the User Guide \u0026 Developer Guide and made necessary amendments."},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"---"}],"authorContributionMap":{"brandontoh":68}},{"path":"docs/team/theopin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"# Theodore Pinto\u0027s Project Portfolio Page "},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"CheatLogs is a desktop application used for managing a user\u0027s cheatsheets. "},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"The user interacts with it using a command line interface (CLI), "},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"and it has a graphical user interface (GUI) created with JavaSwing. "},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"It is written in Java and has about 5000 Lines of Code (LoC)."},{"lineNumber":8,"author":{"gitId":"theopin"},"content":""},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"## Summary of Contributions"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"### Code Contributed"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":""},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"* [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dw11-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtheopin\u0026tabRepo\u003dAY2021S1-CS2113T-W11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":""},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"### New Features"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":""},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"* Read cheatsheets from `.xml` files"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"  * Allows the user to load cheatsheets that were previously created."},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"  * This feature enhances the product as it prevents the user from having"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"    to type his cheatsheets everytime CheatLogs is loaded."},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"  * This implementation was difficult as it involved creating strong links"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"    to the main features of CheatLogs."},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"  * It was also a tough feature to implement as it involved creating various"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"    levels of checks to defend areas that users could exploit to crash"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"    the program."},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"* Write cheatsheets to `.xml` files"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":"  * Allows the user to store cheatsheets that were created in a session of"},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"    CheatLogs."},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"  * This feature enhances the product as it allows the user to store his"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"    cheatsheets in a file, which can be read by the application in a "},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"    subsequent run."},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"  * This implementation involved creating a proper structure for the `.xml` "},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"    file so that it can be properly parsed when the application loads "},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"    subsequently."},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"  * This feature was difficult as it involved constantly identifying whether"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"    the cheatsheet was preloaded or not. Such identification is essential to "},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"    ensuring that it is sorted into the correct directory. "},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"      "},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"* Delete `.xml` files from storage"},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"  * Allows the user to remove any cheat sheet."},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"  * This feature enhances the product as it allows the user to better "},{"lineNumber":43,"author":{"gitId":"theopin"},"content":"    organize his present cheat sheets by removing cheatsheets he does not"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":"    want to reference anymore. Moreover, it provides an option for the user"},{"lineNumber":45,"author":{"gitId":"theopin"},"content":"    to clean all his stored cheatsheets if he feels that they are "},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    unnecessary."},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"  * This implementation was difficult as it involved deleting both the file"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"    and its parent directory if it was empty. A systematic system had to be "},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"    implemented that looks out for any empty directories to reduce clutter"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"    in the user directory.  "},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"      "},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"* Preloaded cheatsheets"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"  * Allows `.xml` files containing example cheatsheets to be packaged within"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":"    the `.jar` file."},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"  * This feature enhances the product as it prevents the user from having"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"    to type his cheatsheets everytime CheatLogs is loaded."},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"  * This implementation was difficult as it involved parsing the required files"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"    from within the packaged `.jar` file. To locate these files, the method "},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"    used to locate files within the user directory was not effective, and I had"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"    to look up relevant Java libraries for features that could solve this "},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"    problem."},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"  * [Credits](https://stackoverflow.com/questions/1529611/how-to-write-a-java-program-which-can-extract-a-jar-file-and-store-its-data-in-s"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":")"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":""},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"### Project Management"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":""},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"* Maintained the issue tracker"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"* Documented the backend features used in the development of CheatLogs"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"  in the DG."},{"lineNumber":70,"author":{"gitId":"theopin"},"content":""},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"### Enhancements"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":""},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"* Edited the configurations of the documentation guides to ensure"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"  proper formatting of tables and emoji icons on github-pages."},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"  * [#180](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/180/commits/3ab720ee6bca43e3bf91bea46d83d7c30daaca71), "},{"lineNumber":76,"author":{"gitId":"adhy-p"},"content":"  * [#181](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/181/commits/2fb6dc102f9a6c6f676d2315918e728fab10848e)"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":""},{"lineNumber":78,"author":{"gitId":"theopin"},"content":""},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"### Documentation"},{"lineNumber":80,"author":{"gitId":"theopin"},"content":""},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"* User Guide"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"    * Added a section explaining the implementation of the storage system."},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"    * Added steps for advanced users to write XML files that can be parsed by"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"      CheatLogs."},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"    * [PR #208](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/208/commits/bea000ff8c12f87d049c70731ee888b59d5b7f4d)"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":""},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"* Developer Guide"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"    * Added the design of the storage system."},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"    * Added a class UML diagram to illustrate the storage"},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"      system"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"    * Added the implementation of the storage system."},{"lineNumber":93,"author":{"gitId":"theopin"},"content":"    * Added sequence diagrams to illustrate the functionality"},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"      of each class within the storage system."},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"    * Added the appendix detailing the configuration and"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"      automated testing fo CheatLogs."},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"    * [PR #268](https://github.com/AY2021S1-CS2113T-W11-3/tp/pull/268/commits/84512697501b0c01f2002a54360a657481c24310)"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":""},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"### Community"},{"lineNumber":100,"author":{"gitId":"theopin"},"content":""},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"* PRs reviewed (with non-trivial review comments):"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"    * [Comment 1](https://github.com/nus-cs2113-AY2021S1/tp/pull/2#pullrequestreview-518301475)"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"    * [Comment 2](https://github.com/nus-cs2113-AY2021S1/tp/pull/2#discussion_r513160385)"},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"    * [Comment 3](https://github.com/nus-cs2113-AY2021S1/tp/pull/2#discussion_r513160725)"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":""},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"* Reported bugs and suggestions for other teams taking CS2113T:"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"    * Issue [#5](https://github.com/theopin/ped/issues/5)"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"    * Issue [#7](https://github.com/theopin/ped/issues/7)"},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"    * Issue [#9](https://github.com/theopin/ped/issues/9)"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":""},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"* Shared a link to the Java DOM Parser library to parse .xml files"},{"lineNumber":112,"author":{"gitId":"adhy-p"},"content":"  * Issue [#101](https://github.com/nus-cs2113-AY2021S1/forum/issues/101)"}],"authorContributionMap":{"theopin":110,"adhy-p":2}},{"path":"src/main/java/cheatlogs/CheatLogs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package cheatlogs;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"import ui.UserSession;"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"// Starting class of CheatLogs"},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"public class CheatLogs {"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":""},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"    private static final String FIRST \u003d \"FIRST\";"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"    private static final String EMPTY \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"     * Starting method of the program. Uses terminal inputs to know if it is"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"     * the first time running a session of CheatLogs."},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"     * @param args Arguments provided by the user when first starting the program"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"domaxi"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"        assert true;"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":""},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"        String argsCommand \u003d args.length \u003e 0"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"                ? args[0].toUpperCase()"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"                : EMPTY;"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":""},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"        UserSession session \u003d new UserSession();"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"        if (argsCommand.equals(FIRST)) {"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"            session.isFirstRun \u003d true;"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":""},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"        session.start();"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        session.runProgramSequence();"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        session.exit();"},{"lineNumber":31,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":9,"abnermtj":9,"theopin":13,"brandontoh":1}},{"path":"src/main/java/cheatsheet/CheatSheet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package cheatsheet;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"public class CheatSheet {"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"    private String name;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"    private String subject;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    private String details;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"    private boolean isFavourite;"},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    public CheatSheet(String name, String subject, String details) {"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"        this.name \u003d name;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        this.subject \u003d subject;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        this.details \u003d details;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"        this.isFavourite \u003d false;"},{"lineNumber":14,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    public String getName() {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        return name;"},{"lineNumber":18,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    public String getSubject() {"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"        return subject;"},{"lineNumber":22,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"    public boolean getIsFavourite() {"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"        return isFavourite;"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":""},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"    public String getDetails() {"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        return details;"},{"lineNumber":30,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    public void setName(String name) {"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        this.name \u003d name;"},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    public void setSubject(String subject) {"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"        this.subject \u003d subject;"},{"lineNumber":38,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"    public void setDetails(String details) {"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"        this.details \u003d details;"},{"lineNumber":42,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"    public void setFavourite(boolean isFavourite) {"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"        this.isFavourite \u003d isFavourite;"},{"lineNumber":46,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":48,"author":{"gitId":"domaxi"},"content":"    public String getWrappedDetails() {"},{"lineNumber":49,"author":{"gitId":"domaxi"},"content":"        String[] parsedDescription \u003d this.getDetails().split(\"\\n\");"},{"lineNumber":50,"author":{"gitId":"domaxi"},"content":"        StringBuilder wrappedDescription \u003d new StringBuilder();"},{"lineNumber":51,"author":{"gitId":"domaxi"},"content":"        for (String s : parsedDescription) {"},{"lineNumber":52,"author":{"gitId":"domaxi"},"content":"            wrappedDescription.append(s);"},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":"            wrappedDescription.append(\"\\n\\t\\t\\t \");"},{"lineNumber":54,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"domaxi"},"content":"        return wrappedDescription.toString();"},{"lineNumber":56,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":58,"author":{"gitId":"domaxi"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"domaxi"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"domaxi"},"content":"        return \"CheatSheet{\""},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"                + \"Name\u003d\u0027\" + name + \u0027\\\u0027\u0027"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"                + \", Subject \u003d\u0027\" + subject + \u0027\\\u0027\u0027"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"                + \", Details\u003d\u0027\" + details + \u0027\\\u0027\u0027"},{"lineNumber":64,"author":{"gitId":"domaxi"},"content":"                + \u0027}\u0027;"},{"lineNumber":65,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"domaxi"},"content":"}"},{"lineNumber":67,"author":{"gitId":"domaxi"},"content":""}],"authorContributionMap":{"domaxi":37,"abnermtj":24,"theopin":6}},{"path":"src/main/java/cheatsheet/CheatSheetList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"package cheatsheet;"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"public class CheatSheetList {"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"    private ArrayList\u003cCheatSheet\u003e cheatSheets \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"    public CheatSheetList() {"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"     * Gets the number of cheat sheet currently in the CheatSheetList."},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"     * @return size of cheatSheets"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":"    public int getSize() {"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"        return cheatSheets.size();"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"     * Gets all the cheat sheets in the cheatSheetList."},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"     * @return cheatSheets The current list of cheat sheets"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"    public ArrayList\u003cCheatSheet\u003e getList() {"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"        return cheatSheets;"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"     * Adds a new cheat sheet to the list."},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"    public void add(CheatSheet cheatSheet) {"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"        cheatSheets.add(cheatSheet);"},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"     * Deletes a cheat sheet from the list."},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"     * Prints an error message if name is not found."},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"     * @param name The name attribute of the desired cheat sheet"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException when index \u003c 0 or index \u003e\u003d cheatSheets.size()"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"    public void remove(String name) throws CommandException {"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"        int index \u003d 0;"},{"lineNumber":47,"author":{"gitId":"adhy-p"},"content":"        for (CheatSheet cs : cheatSheets) {"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"            if (cs.getName().equals(name)) {"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":"            index++;"},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"            remove(index);"},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"adhy-p"},"content":"     * Deletes a cheat sheet from the list."},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"     * Prints an error message if index is out of bound."},{"lineNumber":63,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"adhy-p"},"content":"     * @param index The index of the desired cheat sheet"},{"lineNumber":65,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException when index \u003c 0 or index \u003e\u003d cheatSheets.size()"},{"lineNumber":66,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"adhy-p"},"content":"    public void remove(int index) throws CommandException {"},{"lineNumber":68,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"adhy-p"},"content":"            cheatSheets.remove(index);"},{"lineNumber":70,"author":{"gitId":"adhy-p"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":72,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":75,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"adhy-p"},"content":"     * Removes all cheat sheet in the list."},{"lineNumber":77,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"adhy-p"},"content":"    public void clear() {"},{"lineNumber":79,"author":{"gitId":"adhy-p"},"content":"        cheatSheets.clear();"},{"lineNumber":80,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":82,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"adhy-p"},"content":"     * Retrieves a cheat sheet from the list using its index."},{"lineNumber":84,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"adhy-p"},"content":"     * @param index The index of desired cheat sheet"},{"lineNumber":86,"author":{"gitId":"adhy-p"},"content":"     * @return size of cheatSheets"},{"lineNumber":87,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException when index \u003c 0 or index \u003e\u003d cheatSheets.size()"},{"lineNumber":88,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"adhy-p"},"content":"    public CheatSheet get(int index) throws CommandException {"},{"lineNumber":90,"author":{"gitId":"adhy-p"},"content":"        CheatSheet cheatSheet;"},{"lineNumber":91,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"adhy-p"},"content":"            cheatSheet \u003d cheatSheets.get(index - 1);"},{"lineNumber":93,"author":{"gitId":"adhy-p"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":94,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"adhy-p"},"content":"        assert cheatSheet !\u003d null;"},{"lineNumber":97,"author":{"gitId":"adhy-p"},"content":"        return cheatSheet;"},{"lineNumber":98,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":100,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"adhy-p"},"content":"     * Retrieves a cheat sheet from the list using its name."},{"lineNumber":102,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"     * @param name The name attribute of desired cheat sheet"},{"lineNumber":104,"author":{"gitId":"adhy-p"},"content":"     * @return size of cheatSheets"},{"lineNumber":105,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException when name cannot be found inside the list"},{"lineNumber":106,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"adhy-p"},"content":"    public CheatSheet get(String name) throws CommandException {"},{"lineNumber":108,"author":{"gitId":"adhy-p"},"content":"        int index \u003d 0;"},{"lineNumber":109,"author":{"gitId":"adhy-p"},"content":"        for (CheatSheet cs : cheatSheets) {"},{"lineNumber":110,"author":{"gitId":"abnermtj"},"content":"            if (cs.getName().equals(name)) {"},{"lineNumber":111,"author":{"gitId":"adhy-p"},"content":"                break;"},{"lineNumber":112,"author":{"gitId":"adhy-p"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"adhy-p"},"content":"            index++;"},{"lineNumber":114,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"adhy-p"},"content":"        CheatSheet cheatSheet;"},{"lineNumber":116,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":"            cheatSheet \u003d get(index + 1);"},{"lineNumber":118,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":119,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Please enter a valid name\");"},{"lineNumber":120,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"adhy-p"},"content":"        assert cheatSheet !\u003d null;"},{"lineNumber":122,"author":{"gitId":"adhy-p"},"content":"        return cheatSheet;"},{"lineNumber":123,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":125,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"adhy-p"},"content":"     * Checks if a cheat sheet exists or not."},{"lineNumber":127,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"adhy-p"},"content":"     * @param name The name attribute of desired cheat sheet"},{"lineNumber":129,"author":{"gitId":"adhy-p"},"content":"     * @return true if the cheat sheet exists, false otherwise"},{"lineNumber":130,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"adhy-p"},"content":"    public boolean exists(String name) {"},{"lineNumber":132,"author":{"gitId":"adhy-p"},"content":"        for (CheatSheet cs : cheatSheets) {"},{"lineNumber":133,"author":{"gitId":"abnermtj"},"content":"            if (cs.getName().equals(name)) {"},{"lineNumber":134,"author":{"gitId":"abnermtj"},"content":"                return true;"},{"lineNumber":135,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"abnermtj"},"content":"        return false;"},{"lineNumber":138,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"adhy-p"},"content":"}"}],"authorContributionMap":{"abnermtj":10,"adhy-p":129}},{"path":"src/main/java/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"import editor.Editor;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"import exception.EditorException;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":" * Command to add user-defined cheat sheet to CheatSheetList."},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    private final Editor editor;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    private static final String ALPHA_NUMERIC \u003d \"[A-Za-z0-9 \\t\\n\\r]+\";"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/add\";"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"     * Constructor for the AddCommand."},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"     * Required flag: NAME."},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"     * Optional flag: SUBJECT."},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"     * @param printer        The printer object to handle user interaction"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"     * @param cheatSheetList The current list of cheat sheets"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"     * @param editor         The editor object to open the text editor"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"    public AddCommand(Printer printer, CheatSheetList cheatSheetList, Editor editor) {"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        this.editor \u003d editor;"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.SUBJECT, null);"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"        necessaryFlags.add(CommandFlag.NAME);"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"        necessaryFlags.add(CommandFlag.SUBJECT);"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"     * Adds the cheat sheet to the list."},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"     * Name cannot be empty, must be unique, and can only contain alphanumeric characters."},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"     * If the subject is not specified, it will be put under \"Unsorted\"."},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"    public void execute() throws CommandException {"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"        String name \u003d flagsToDescriptions.get(CommandFlag.NAME);"},{"lineNumber":47,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":48,"author":{"gitId":"adhy-p"},"content":"        if (name \u003d\u003d null || name.isEmpty() || name.isBlank()) {"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Name cannot be blank\");"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":52,"author":{"gitId":"domaxi"},"content":"        if (name.length() \u003e 250) {"},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":"            throw new CommandException(\"The name exceeds the maximum character limit\");"},{"lineNumber":54,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"        name \u003d name.trim();"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"        if (cheatSheetList.exists(name)) {"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"Name already existed, please enter another name\");"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":61,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"        if (!name.matches(ALPHA_NUMERIC)) {"},{"lineNumber":63,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Name can only contain alphanumeric characters\");"},{"lineNumber":64,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        String subject \u003d flagsToDescriptions.get(CommandFlag.SUBJECT);"},{"lineNumber":67,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"        if (subject !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"            if (!subject.matches(ALPHA_NUMERIC)) {"},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"                throw new CommandException(\"Subject can only contain alphanumeric characters\");"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"domaxi"},"content":"            if (subject.length() \u003e 250) {"},{"lineNumber":73,"author":{"gitId":"domaxi"},"content":"                throw new CommandException(\"Subject cannot be more than 250 characters\");"},{"lineNumber":74,"author":{"gitId":"domaxi"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"            subject \u003d convertToPascalCaseNoSpace(subject);"},{"lineNumber":76,"author":{"gitId":"brandontoh"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"brandontoh"},"content":"            subject \u003d \"Unsorted\";"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":80,"author":{"gitId":"domaxi"},"content":"        callContentEditor(name,subject);"},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":82,"author":{"gitId":"domaxi"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"            String description \u003d editor.getContent();"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"            CheatSheet cheatSheet \u003d new CheatSheet(name, subject, description);"},{"lineNumber":85,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(cheatSheet);"},{"lineNumber":86,"author":{"gitId":"adhy-p"},"content":"            printer.printAddNewCheatSheetMessage(cheatSheet, cheatSheetList);"},{"lineNumber":87,"author":{"gitId":"domaxi"},"content":"        } catch (EditorException | NullPointerException e) {"},{"lineNumber":88,"author":{"gitId":"domaxi"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":89,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":92,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"adhy-p"},"content":"     * Opens the GUI-based text editor."},{"lineNumber":94,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":96,"author":{"gitId":"domaxi"},"content":"    private void callContentEditor(String name, String subject) {"},{"lineNumber":97,"author":{"gitId":"domaxi"},"content":"        editor.setEditingContentAttributes(name, subject);"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"        editor.open();"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"        editor.waitForClose();"},{"lineNumber":100,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":102,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"     * Removes spaces from the SUBJECT field and converts it to PascalCase without spaces between words."},{"lineNumber":104,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"adhy-p"},"content":"     * @param input The current subject to be converted"},{"lineNumber":106,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"abnermtj"},"content":"    private String convertToPascalCaseNoSpace(String input) {"},{"lineNumber":108,"author":{"gitId":"domaxi"},"content":"        if (input.length() \u003d\u003d 0) {"},{"lineNumber":109,"author":{"gitId":"domaxi"},"content":"            return \"Unsorted\";"},{"lineNumber":110,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"brandontoh"},"content":"        String[] splitInput \u003d input.trim().split(\"\\\\p{IsWhite_Space}+\");"},{"lineNumber":112,"author":{"gitId":"abnermtj"},"content":"        for (int i \u003d 0; i \u003c splitInput.length; i++) {"},{"lineNumber":113,"author":{"gitId":"abnermtj"},"content":"            splitInput[i] \u003d splitInput[i].substring(0, 1).toUpperCase() + splitInput[i].substring(1).toLowerCase();"},{"lineNumber":114,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"abnermtj"},"content":"        return String.join(\"\", splitInput);"},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"domaxi":20,"abnermtj":36,"brandontoh":22,"adhy-p":39}},{"path":"src/main/java/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"import storage.DataFileReader;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import ui.Ui;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":" * Command to remove all cheatsheets from CheatSheetList."},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"public class ClearCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    protected DataFileDestroyer fileDestroyer;"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"    protected DataFileReader fileReader;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    protected Ui ui;"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/clear\";"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"     * Constructor for the ClearCommand."},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"     * No command flag is required."},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"     * @param printer        The printer object to handle user interaction"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The current list of cheat sheets"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"     * @param fileDestroyer  The fileDestroyer object removes cheat sheet file from the /data folder"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"    public ClearCommand(Printer printer, CheatSheetList cheatSheetList, DataFileDestroyer fileDestroyer,"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"                       DataFileReader fileReader, Ui ui) {"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        this.fileDestroyer \u003d fileDestroyer;"},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"        this.fileReader \u003d fileReader;"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        this.ui \u003d ui;"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"     * Asks the user to confirm the clearing of cheatsheets, then"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"     * Removes all cheatsheets from cheatSheetList object."},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"     * Removes all cheatsheet files from /data folder."},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"     * Prints a confirmation that cheatsheets have been deleted."},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"    public void execute() {"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"        printer.printClearConfirmation();"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"        if (isClearConfirmed()) {"},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"            final int originalCheatSheets \u003d cheatSheetList.getSize();"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":""},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"            fileDestroyer.executeFunction();"},{"lineNumber":49,"author":{"gitId":"domaxi"},"content":"            cheatSheetList.clear();"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":""},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"            fileReader.executeFunction();"},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"            printer.printClearCheatSheetMessage(originalCheatSheets"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"                    - cheatSheetList.getSize());"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"     * Asks for user confirmation of operation. Then verifies that the user correctly"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"     * confirmed that cheatsheet should be deleted"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"     * @return      true if the user has confirmed correctly else false"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"    private boolean isClearConfirmed() {"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"        String userAnswer \u003d ui.getUserInput();"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"        userAnswer \u003d userAnswer.toLowerCase();"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"        return userAnswer.equals(\"yes\") || userAnswer.equals(\"y\");"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"domaxi":1,"abnermtj":26,"theopin":10,"brandontoh":29,"adhy-p":2}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":" * The base class for all Commands."},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":" */"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"public abstract class Command {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    protected Printer printer;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    protected CheatSheetList cheatSheetList;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"    protected ArrayList\u003cCommandFlag\u003e alternativeFlags; // At least one of these must be filled"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    protected ArrayList\u003cCommandFlag\u003e necessaryFlags; // All of these must be filled"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    protected LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions;"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"    public boolean isExitCommand;"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"    public Command() {"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"     * Constructor for Command."},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    public Command(Printer printer) {"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"        this.printer \u003d printer;"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"        this.alternativeFlags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"        this.necessaryFlags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"        this.flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"        isExitCommand \u003d false;"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"    public LinkedHashMap\u003cCommandFlag, String\u003e getFlagsToDescriptionsMap() {"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"        return flagsToDescriptions;"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    public void setFlagsToDescriptionsMap(HashMap\u003cCommandFlag, String\u003e flagsToDescriptions) {"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"        this.flagsToDescriptions.putAll(flagsToDescriptions);"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"    public ArrayList\u003cCommandFlag\u003e getAlternativeFlags() {"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"        return alternativeFlags;"},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    public ArrayList\u003cCommandFlag\u003e getNecessaryFlags() {"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"        return necessaryFlags;"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"    public boolean hasRequiredFlags() {"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"        return hasNecessaryFlags() \u0026\u0026 hasAlternativeFlags();"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"     * Checks if the command has all of the necessary flags."},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"     * @return A boolean of whether the command contains all the necessary flags"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"    public boolean hasNecessaryFlags() {"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"        for (CommandFlag arg : necessaryFlags) {"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"            if (flagsToDescriptions.get(arg) \u003d\u003d null) {"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"                return false;"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"        return true;"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"     * Checks if the command has at least one of the alternative flags."},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"     * @return A boolean of whether the command has at least one of the alternative flags"},{"lineNumber":83,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"    public boolean hasAlternativeFlags() {"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"        if (alternativeFlags.size() \u003d\u003d 0) {"},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"            return true;"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"        for (CommandFlag arg : alternativeFlags) {"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"            if (flagsToDescriptions.get(arg) !\u003d null) {"},{"lineNumber":91,"author":{"gitId":"brandontoh"},"content":"                return true;"},{"lineNumber":92,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"        return false;"},{"lineNumber":95,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"    "},{"lineNumber":97,"author":{"gitId":"brandontoh"},"content":"    public abstract void execute() throws CommandException, InterruptedException, IOException;"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":75,"brandontoh":23}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"import ui.Ui;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":" * Command to delete a cheat sheet in the list of cheatsheets."},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"public class DeleteCommand extends FinderCommand {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    protected DataFileDestroyer fileDestroyer;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    protected Ui ui;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/delete\";"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"     * Constructor for the DeleteCommand."},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"     * Required flag: either NAME or INDEX."},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"     * @param printer        The printer object to handle user interaction"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"     * @param cheatSheetList The current list of cheatsheets"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"     * @param fileDestroyer  The DataFileDestroyer object to remove the cheat sheet from the /data folder"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"    public DeleteCommand(Printer printer, CheatSheetList cheatSheetList, DataFileDestroyer fileDestroyer, Ui ui) {"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"        super(printer, cheatSheetList);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        this.fileDestroyer \u003d fileDestroyer;"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        this.ui \u003d ui;"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, null);"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.NAME);"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.INDEX);"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"     * Asks the user to confirm the clearing of cheatsheets, then"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"     * Deletes the cheat sheet from the list and delete the corresponding"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"     * file from the /data folder."},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"    public void execute() throws CommandException {"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"            CheatSheet cheatSheetToDelete \u003d getCheatSheetFromNameOrIndex();"},{"lineNumber":48,"author":{"gitId":"domaxi"},"content":"            printer.printDeleteConfirmation(cheatSheetToDelete);"},{"lineNumber":49,"author":{"gitId":"domaxi"},"content":"            if (isDeleteConfirmed()) {"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"                fileDestroyer.executeFunction(cheatSheetToDelete.getName());"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"                cheatSheetList.remove(cheatSheetToDelete.getName());"},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"                printer.printDeleteCheatSheetMessage(cheatSheetToDelete, cheatSheetList);"},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"Please enter a valid name or/and index\");"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"     * Asks for user confirmation of operation. Then verifies"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"     * that the user correctly confirmed that all cheatsheets should be cleared"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"     * @return      true if the user has confirmed correctly else false"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"domaxi"},"content":"    private boolean isDeleteConfirmed() {"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        String userAnswer \u003d ui.getUserInput();"},{"lineNumber":67,"author":{"gitId":"domaxi"},"content":"        userAnswer \u003d userAnswer.toLowerCase();"},{"lineNumber":68,"author":{"gitId":"domaxi"},"content":"        return userAnswer.equals(\"yes\") || userAnswer.equals(\"y\");"},{"lineNumber":69,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"domaxi":10,"abnermtj":45,"brandontoh":3,"adhy-p":13}},{"path":"src/main/java/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"import editor.Editor;"},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"import exception.CommandException;"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"import exception.EditorException;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"import ui.Printer;"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":" * Command to edit an existing cheatsheet in the list of cheatsheets."},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"public class EditCommand extends FinderCommand {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    private final Editor editor;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/edit\";"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"     * Constructor for EditCommand."},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"     * Required argument: either NAME or INDEX."},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"     * @param printer        The printer object handles user interaction"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The cheatSheetList object holds the current list of cheatsheets"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"     * @param editor         The editor object opens the text editor"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"    public EditCommand(Printer printer, CheatSheetList cheatSheetList, Editor editor) {"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"        super(printer, cheatSheetList);"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        this.editor \u003d editor;"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, null);"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.NAME);"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.INDEX);"},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"     * Checks whether the EditCommand contains required flags as stated in constructor."},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"     * @return A boolean on whether the EditCommand contains the required flag"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"domaxi"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"    public boolean hasRequiredFlags() {"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        return flagsToDescriptions.get(CommandFlag.NAME) !\u003d null"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"                || flagsToDescriptions.get(CommandFlag.INDEX) !\u003d null;"},{"lineNumber":45,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"     * Gets a cheatsheet from cheatSheetList according to name or index, whichever the user entered."},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"     * Opens the cheatsheet via the editor object for user to edit."},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"     * Outputs the updated cheatsheet for verification"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if for index, user enters non-numerical characters or is out of bound."},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    public void execute() throws CommandException {"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"            CheatSheet desiredCheatSheet \u003d getCheatSheetFromNameOrIndex();"},{"lineNumber":58,"author":{"gitId":"domaxi"},"content":"            callContentEditor(desiredCheatSheet);"},{"lineNumber":59,"author":{"gitId":"domaxi"},"content":"            printer.printViewCheatSheetMessage(desiredCheatSheet);"},{"lineNumber":60,"author":{"gitId":"domaxi"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":61,"author":{"gitId":"domaxi"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":62,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"     * Resets the editor, then opens it."},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"     * @param desiredCheatSheet The cheatsheet specified by the user"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"domaxi"},"content":"    private void callContentEditor(CheatSheet desiredCheatSheet) {"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"        editor.open();"},{"lineNumber":72,"author":{"gitId":"domaxi"},"content":"        editor.setContent(desiredCheatSheet);"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"        editor.waitForClose();"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":75,"author":{"gitId":"domaxi"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"            desiredCheatSheet.setDetails(editor.getContent());"},{"lineNumber":77,"author":{"gitId":"domaxi"},"content":"        } catch (EditorException e) {"},{"lineNumber":78,"author":{"gitId":"domaxi"},"content":"            printer.print(e.getMessage());"},{"lineNumber":79,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":27,"abnermtj":28,"brandontoh":23,"adhy-p":3}},{"path":"src/main/java/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":" * Command to exit the program."},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/exit\";"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"     * Constructor for ExitCommand."},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction."},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    public ExitCommand(Printer printer) {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"     * Sets the exit flag to true so that in main, the program would escape the while loop."},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    public void execute() {"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        isExitCommand \u003d true;"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":14,"brandontoh":13}},{"path":"src/main/java/command/FavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":" * Command to set a cheat sheet as favourite."},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"public class FavouriteCommand extends FinderCommand {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"    public static final String invoker \u003d \"/fav\";"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"     * Constructor for the FavouriteCommand."},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"     * Required flag: either NAME or INDEX"},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"     * @param printer        The printer object to handle user interaction"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"     * @param cheatSheetList The current list of cheat sheets"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"    public FavouriteCommand(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"        super(printer, cheatSheetList);"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, null);"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"        flagsToDescriptions.put(CommandFlag.DELETE, null);"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.NAME);"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.INDEX);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"     * Add/remove a cheat sheet to/from favourites."},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"     * getCheatSheetFromNameOrIndex() from FinderCommand will retrieve the desired cheat sheet"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"     * and the isFavourite attribute will be set to true."},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"     * If the user specified the /d flag, the isFavourite attribute will be set to false."},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException if the input is not valid"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"    public void execute() throws CommandException {"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"            CheatSheet cheatSheetToFavourite \u003d getCheatSheetFromNameOrIndex();"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"            boolean isAddFav \u003d (flagsToDescriptions.get(CommandFlag.DELETE) \u003d\u003d null);"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"            if (isAddFav \u003d\u003d cheatSheetToFavourite.getIsFavourite()) {"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"                printer.printFavouriteStatusAlreadySet(cheatSheetToFavourite, isAddFav);"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"                return;"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"            cheatSheetToFavourite.setFavourite(isAddFav);"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":"            printer.printFavouritedCheatSheetMessage(cheatSheetToFavourite, isAddFav);"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException i) {"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid name or an index\");"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        } catch (NumberFormatException n) {"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"}"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":""}],"authorContributionMap":{"abnermtj":34,"adhy-p":25}},{"path":"src/main/java/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import ui.TablePrinter;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":" * Command to find a specific cheatsheet in CheatSheetList via name or index."},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"public class FindCommand extends FinderCommand {"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    private CheatSheetList cheatSheetList;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/find\";"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"     * Constructor for FindCommand."},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"     * Required Argument: NAME, SUBJECT, SECTIONKEYWORD (at LEAST one of these three)"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The cheatSheetList object holds the current list of cheatsheets."},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"    public FindCommand(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"        super(printer, cheatSheetList);"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.SUBJECT, null);"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        flagsToDescriptions.put(CommandFlag.SECTIONKEYWORD, null);"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.NAME);"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.SUBJECT);"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.SECTIONKEYWORD);"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"     * Searches through every cheatsheet in CheatSheetList to find for cheatsheets that matched"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"     * the name or subject or keyword of what the user entered."},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"     * Prints a table with all cheatsheets that met the criteria of the user input."},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"     * Header of each column in table: Index, Name, Subject, Preview"},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":"     * If there is cheatsheet in the list, the program enters sorting mode that allows user to sort by name or subject."},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if no cheatsheet in CheatSheetList matched the name or subject or keyword"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"     *                          that the user entered."},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"    public void execute() throws CommandException {"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"        ArrayList\u003cCheatSheet\u003e matchedContents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"        String name \u003d flagsToDescriptions.get(CommandFlag.NAME);"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"        String subject \u003d flagsToDescriptions.get(CommandFlag.SUBJECT);"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"        String keyword \u003d flagsToDescriptions.get(CommandFlag.SECTIONKEYWORD);"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"        for (CheatSheet cs : cheatSheetList.getList()) {"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"            if (checkCheatSheetMatchesWithFields(cs, name, subject, keyword)) {"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"                matchedContents.add(cs);"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"        if (matchedContents.isEmpty()) {"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"No matching content found\");"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":68,"author":{"gitId":"adhy-p"},"content":"        TablePrinter tp \u003d new TablePrinter(printer, matchedContents);"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"        tp.execute();"},{"lineNumber":70,"author":{"gitId":"adhy-p"},"content":"        SortFilter sortFilter \u003d new SortFilter(matchedContents, printer);"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"        sortFilter.execute();"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":21,"brandontoh":44,"adhy-p":8}},{"path":"src/main/java/command/FinderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":" * Base class for commands that searches through cheatSheetList for matching content."},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"public abstract class FinderCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"     * Constructor of FinderCommand."},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction."},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The cheatSheetList object holds the current list of cheatsheets"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"    public FinderCommand(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"     * Searches through cheatSheetList for cheatsheets with name or index that matched what the user inputs."},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"     * @return Cheatsheet that matched what the user inputs."},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if no matching cheatsheet is found"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"    protected CheatSheet getCheatSheetFromNameOrIndex() throws CommandException {"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"        CheatSheet desiredCheatSheet \u003d null;"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        String name \u003d flagsToDescriptions.get(CommandFlag.NAME);"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"        String index \u003d flagsToDescriptions.get(CommandFlag.INDEX);"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"        if (name !\u003d null \u0026\u0026 index \u003d\u003d null) {"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"            desiredCheatSheet \u003d cheatSheetList.get(name.trim());"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"        } else if (index !\u003d null \u0026\u0026 name \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"            desiredCheatSheet \u003d cheatSheetList.get(Integer.parseInt(index));"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"        } else if (index !\u003d null) {"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"            if (cheatSheetList.get(name).equals(cheatSheetList.get(Integer.parseInt(index)))) {"},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"                desiredCheatSheet \u003d cheatSheetList.get(name.trim());"},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"        if (desiredCheatSheet \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"            if (name !\u003d null \u0026\u0026 index \u003d\u003d null) {"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"                throw new CommandException(\"Please enter a valid name\");"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"            } else if (name \u003d\u003d null \u0026\u0026 index !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"                throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"            } else if (name !\u003d null) {"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"                throw new CommandException(\"No cheat sheet matches the name and index entered\");"},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        return desiredCheatSheet;"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"     * Checks if a cheatsheet matches with the name, subject or keyword the user inputs."},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"     * @param cs The target cheatsheet"},{"lineNumber":61,"author":{"gitId":"brandontoh"},"content":"     * @param name The name of cheatsheet entered by user"},{"lineNumber":62,"author":{"gitId":"brandontoh"},"content":"     * @param subject The subject of cheatsheet entered by user"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"     * @param keyword The keyword of cheatsheet entered by user"},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"     * @return A boolean on whether the cheatsheet matched what the user inputs"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if name, subject and keyword are null"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":"    public boolean checkCheatSheetMatchesWithFields(CheatSheet cs, String name, String subject,"},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"                                                    String keyword) throws CommandException {"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"        if (subject !\u003d null \u0026\u0026 keyword \u003d\u003d null \u0026\u0026 name \u003d\u003d null) {"},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"            return cs.getSubject().contains(subject);"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"        } else if (subject \u003d\u003d null \u0026\u0026 keyword !\u003d null \u0026\u0026 name \u003d\u003d null) {"},{"lineNumber":72,"author":{"gitId":"brandontoh"},"content":"            return cs.getDetails().contains(keyword);"},{"lineNumber":73,"author":{"gitId":"brandontoh"},"content":"        } else if (subject !\u003d null \u0026\u0026 keyword !\u003d null \u0026\u0026 name \u003d\u003d null) {"},{"lineNumber":74,"author":{"gitId":"brandontoh"},"content":"            return cs.getSubject().contains(subject) \u0026\u0026 cs.getDetails().contains(keyword);"},{"lineNumber":75,"author":{"gitId":"brandontoh"},"content":"        } else if (subject \u003d\u003d null \u0026\u0026 keyword \u003d\u003d null \u0026\u0026 name !\u003d null) {"},{"lineNumber":76,"author":{"gitId":"brandontoh"},"content":"            return cs.getName().contains(name);"},{"lineNumber":77,"author":{"gitId":"brandontoh"},"content":"        } else if (subject !\u003d null \u0026\u0026 keyword \u003d\u003d null) {"},{"lineNumber":78,"author":{"gitId":"brandontoh"},"content":"            return cs.getSubject().contains(subject) \u0026\u0026 cs.getName().contains(name);"},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"        } else if (subject \u003d\u003d null \u0026\u0026 keyword !\u003d null) {"},{"lineNumber":80,"author":{"gitId":"brandontoh"},"content":"            return cs.getDetails().contains(keyword) \u0026\u0026 cs.getName().contains(name);"},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"        } else if (subject !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"brandontoh"},"content":"            return cs.getSubject().contains(subject) \u0026\u0026 cs.getDetails().contains(keyword)"},{"lineNumber":83,"author":{"gitId":"brandontoh"},"content":"                \u0026\u0026 cs.getName().contains(name);"},{"lineNumber":84,"author":{"gitId":"brandontoh"},"content":"        } else {"},{"lineNumber":85,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"Please enter at least an argument\");"},{"lineNumber":86,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"}"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":""}],"authorContributionMap":{"abnermtj":23,"brandontoh":63,"adhy-p":3}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":" * Command to display the help page."},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"public class HelpCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/help\";"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"     * Constructor for the HelpCommand."},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"     * @param printer The printer object to handle user interaction"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    public HelpCommand(Printer printer) {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"     * Prints the help page."},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    public void execute() {"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        printer.printHelpSheet();"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":16,"adhy-p":11}},{"path":"src/main/java/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import sort.SortByName;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import ui.TablePrinter;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":" * Command to list all cheatsheets in CheatSheetList in a table format (Index, Name, Subject, Preview)."},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"public class ListCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/list\";"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"    private CheatSheetList cheatSheetList;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"     * Constructor for ListCommand."},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The cheatSheetList object holds the current list of cheatsheets"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"    public ListCommand(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        super(printer);"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"     * Prints a table with all cheatsheets in cheatSheetList"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"     * Header of each column in table: Index, Name, Subject, Preview"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"     * If there is cheatsheet in the list, the program enters sorting mode that allows user to sort by name or subject."},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if no cheatsheets are found in cheatSheetList"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"    public void execute() throws CommandException {"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"        cheatSheetList.getList().sort(new SortByName());"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"        if (cheatSheetList.getSize() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"You don\u0027t have any cheat sheet. Use the /add command to create a new one\");"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"        TablePrinter tp \u003d new TablePrinter(printer, cheatSheetList);"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"        tp.execute();"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"        SortFilter sortFilter \u003d new SortFilter(cheatSheetList.getList(), printer);"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"        sortFilter.execute();"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":8,"brandontoh":31,"adhy-p":11}},{"path":"src/main/java/command/SettingsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import parser.CommandFlag;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import settings.Settings;"},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":"import ui.Printer;"},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":" * Command to change the behavior of the application."},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":" * Currently only supports changing default color scheme and behavior of welcome message."},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"public class SettingsCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    private Settings settings;"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"    public static final String invoker \u003d \"/set\";"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":"     * Constructor for the SettingsCommand."},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"     * Required argument: either COLORSCHEME or HELPMESSAGE."},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"     * @param printer The printer object to handle user interaction"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"    public SettingsCommand(Printer printer, Settings settings) {"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"        super(printer);"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"        this.settings \u003d settings;"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"        flagsToDescriptions.put(CommandFlag.COLORSCHEME, null);"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"        flagsToDescriptions.put(CommandFlag.HELPMESSAGE, null);"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.COLORSCHEME);"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.HELPMESSAGE);"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"     * Changes the color scheme by calling setColor method."},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"     * @throws CommandException if the input cannot be parsed as integer"},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"    public void execute() throws CommandException {"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"        if (flagsToDescriptions.get(CommandFlag.COLORSCHEME) !\u003d null) {"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"                int option \u003d Integer.parseInt(flagsToDescriptions.get(CommandFlag.COLORSCHEME));"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"                settings.setColor(option, false);"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"                throw new CommandException(\"Please enter a valid option\");"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"        if (flagsToDescriptions.get(CommandFlag.HELPMESSAGE) !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"            String option \u003d flagsToDescriptions.get(CommandFlag.HELPMESSAGE);"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"            if (option.toLowerCase().equals(\"off\")) {"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"                settings.setDisplayingHelpMessages(false, false);"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"            } else if (option.toLowerCase().equals(\"on\")) {"},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"                settings.setDisplayingHelpMessages(true, false);"},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"                throw new CommandException(\"Please enter a valid option (\\\"on\\\" or \\\"off\\\")\");"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"}"}],"authorContributionMap":{"abnermtj":2,"brandontoh":16,"adhy-p":40}},{"path":"src/main/java/command/SortFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import sort.SortBySubject;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import sort.SortBySubjectRev;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import sort.SortByName;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import sort.SortByNameRev;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import ui.ConsoleColorsEnum;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import ui.TablePrinter;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":" * Complementary command for findCommand and ListCommand to sort cheatsheets in CheatSheetList."},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"public class SortFilter {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"    final String promptSortConfig \u003d ConsoleColorsEnum.RED_TEXT"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"        + \"Sort filter (1: name ascending, 2: subject ascending, 3: name descending\" + \", 4: \""},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        + \"subject descending, ANY OTHER CHAR: EXIT)\" + ConsoleColorsEnum.RESET_TEXT;"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"    Printer printer;"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    ArrayList\u003cCheatSheet\u003e cheatSheetArrayList;"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"     * Constructor for SortFilter."},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetArrayList The cheatSheetArrayList object holds the current list of cheatsheets in an"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"     *                            ArrayList type instead of CheatSheetList type"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"    public SortFilter(ArrayList\u003cCheatSheet\u003e cheatSheetArrayList, Printer printer) {"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"        this.cheatSheetArrayList \u003d cheatSheetArrayList;"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"        this.printer \u003d printer;"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"     * Asks for user input on the mode of sorting then sorts accordingly."},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"     * The sorted cheatsheets would be printed in a table."},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"     * Format of the printed table is reused from a previous table has already been created."},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"     * @param tp The tp object contains the structure and format of the printed table in ListCommand and FindCommand"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if user enters any characters which is not [1-4]"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"    public void execute(TablePrinter tp) throws CommandException {"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"        do {"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"            askForInput();"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"            tp.execute();"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"        } while (true);"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"     * Asks for user input on the mode of sorting then sorts accordingly."},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"     * The sorted cheatsheets would be printed in a table."},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"     * Format of the printed table re-created every time the method is called."},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if user enters any characters which is not [1-4]"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"    public void execute() throws CommandException {"},{"lineNumber":61,"author":{"gitId":"brandontoh"},"content":"        do {"},{"lineNumber":62,"author":{"gitId":"brandontoh"},"content":"            askForInput();"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"            TablePrinter tp \u003d new TablePrinter(printer, cheatSheetArrayList);"},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"            tp.execute();"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"        } while (true);"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"     * Asks for user input and sorts the table accordingly."},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if user enters any characters which is not [1-4]"},{"lineNumber":72,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"brandontoh"},"content":"    private void askForInput() throws CommandException {"},{"lineNumber":74,"author":{"gitId":"brandontoh"},"content":"        printer.print(promptSortConfig);"},{"lineNumber":75,"author":{"gitId":"brandontoh"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":76,"author":{"gitId":"brandontoh"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":77,"author":{"gitId":"brandontoh"},"content":"        switch (input) {"},{"lineNumber":78,"author":{"gitId":"brandontoh"},"content":"        case \"1\":"},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"            cheatSheetArrayList.sort(new SortByName());"},{"lineNumber":80,"author":{"gitId":"brandontoh"},"content":"            printer.print(\"Sorted name in ascending order\");"},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"brandontoh"},"content":"        case \"2\":"},{"lineNumber":83,"author":{"gitId":"brandontoh"},"content":"            cheatSheetArrayList.sort(new SortBySubject());"},{"lineNumber":84,"author":{"gitId":"adhy-p"},"content":"            printer.print(\"Sorted subject in ascending order\");"},{"lineNumber":85,"author":{"gitId":"brandontoh"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"brandontoh"},"content":"        case \"3\":"},{"lineNumber":87,"author":{"gitId":"brandontoh"},"content":"            cheatSheetArrayList.sort(new SortByNameRev());"},{"lineNumber":88,"author":{"gitId":"brandontoh"},"content":"            printer.print(\"Sorted name in descending order\");"},{"lineNumber":89,"author":{"gitId":"brandontoh"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"brandontoh"},"content":"        case \"4\":"},{"lineNumber":91,"author":{"gitId":"brandontoh"},"content":"            cheatSheetArrayList.sort(new SortBySubjectRev());"},{"lineNumber":92,"author":{"gitId":"adhy-p"},"content":"            printer.print(\"Sorted subject in descending order\");"},{"lineNumber":93,"author":{"gitId":"brandontoh"},"content":"            break;"},{"lineNumber":94,"author":{"gitId":"brandontoh"},"content":"        default:"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":"            throw new CommandException(\"Exited list command\");"},{"lineNumber":96,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":92,"adhy-p":6}},{"path":"src/main/java/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":" * Views the content of a specific cheatsheet."},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":" */"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"public class ViewCommand extends FinderCommand {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    public static final String invoker \u003d \"/view\";"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"     * Constructor for ViewCommand."},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"     * Required flag: Either NAME or INDEX."},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"     * @param printer The printer object handles the user interaction"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"     * @param cheatSheetList The cheatSheetList object holds the current list of cheatsheets"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"    public ViewCommand(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"        super(printer, cheatSheetList);"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, null);"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, null);"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.NAME);"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        alternativeFlags.add(CommandFlag.INDEX);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"     * Gets a cheatsheet from cheatSheetList according to name or index, whichever the user entered."},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"     * Content of the cheatsheet would be printed out on the terminal."},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"     * @throws CommandException Thrown if the name or index entered is invalid"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"    public void execute() throws CommandException {"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"            CheatSheet desiredCheatSheet \u003d getCheatSheetFromNameOrIndex();"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"            printer.printViewCheatSheetMessage(desiredCheatSheet);"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"Please enter a valid name or/and index\");"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":23,"brandontoh":21,"adhy-p":3}},{"path":"src/main/java/editor/Editor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package editor;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":"import exception.EditorException;"},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"import javax.imageio.ImageIO;"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"import javax.swing.JButton;"},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":"import javax.swing.JMenu;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"import javax.swing.JTextArea;"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":"import javax.swing.JFrame;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"import javax.swing.JMenuBar;"},{"lineNumber":12,"author":{"gitId":"domaxi"},"content":"import javax.swing.JPanel;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"import javax.swing.JMenuItem;"},{"lineNumber":14,"author":{"gitId":"domaxi"},"content":"import javax.swing.BorderFactory;"},{"lineNumber":15,"author":{"gitId":"domaxi"},"content":"import javax.swing.border.Border;"},{"lineNumber":16,"author":{"gitId":"domaxi"},"content":"import javax.swing.BoxLayout;"},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"import javax.swing.JLabel;"},{"lineNumber":18,"author":{"gitId":"domaxi"},"content":"import javax.swing.ImageIcon;"},{"lineNumber":19,"author":{"gitId":"domaxi"},"content":"import javax.swing.JScrollPane;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":21,"author":{"gitId":"domaxi"},"content":"import java.awt.event.ActionEvent;"},{"lineNumber":22,"author":{"gitId":"domaxi"},"content":"import java.awt.event.ActionListener;"},{"lineNumber":23,"author":{"gitId":"domaxi"},"content":"import java.awt.image.BufferedImage;"},{"lineNumber":24,"author":{"gitId":"domaxi"},"content":"import java.awt.Color;"},{"lineNumber":25,"author":{"gitId":"domaxi"},"content":"import java.awt.BorderLayout;"},{"lineNumber":26,"author":{"gitId":"domaxi"},"content":"import java.awt.Component;"},{"lineNumber":27,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":28,"author":{"gitId":"domaxi"},"content":"import java.io.IOException;"},{"lineNumber":29,"author":{"gitId":"domaxi"},"content":"import java.net.URL;"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"import java.util.concurrent.TimeUnit;"},{"lineNumber":31,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":32,"author":{"gitId":"domaxi"},"content":"public class Editor extends JFrame implements ActionListener {"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    private JTextArea textArea;"},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":"    private JLabel footerLabel;"},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":"    private String cheatSheetName;"},{"lineNumber":36,"author":{"gitId":"domaxi"},"content":"    private String cheatSheetSubject;"},{"lineNumber":37,"author":{"gitId":"domaxi"},"content":"    private String originalContent;"},{"lineNumber":38,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":"    public Editor() {"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"    public void init() {"},{"lineNumber":43,"author":{"gitId":"domaxi"},"content":"        generateEditorUI();"},{"lineNumber":44,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":46,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"domaxi"},"content":"     * Initializes the editor with the necessary elements."},{"lineNumber":48,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"domaxi"},"content":"    private void generateEditorUI() {"},{"lineNumber":50,"author":{"gitId":"domaxi"},"content":"        setEditorLayout();"},{"lineNumber":51,"author":{"gitId":"domaxi"},"content":"        generateTextArea();"},{"lineNumber":52,"author":{"gitId":"domaxi"},"content":"        generateRightPane();"},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":"        generateEditorFooter();"},{"lineNumber":54,"author":{"gitId":"domaxi"},"content":"        generateEditorHeader();"},{"lineNumber":55,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":57,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"domaxi"},"content":"     * this method generates the right panel that is used for actions and editing."},{"lineNumber":59,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"domaxi"},"content":"    private void generateRightPane() {"},{"lineNumber":61,"author":{"gitId":"domaxi"},"content":"        JPanel rightPanel \u003d new JPanel();"},{"lineNumber":62,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":63,"author":{"gitId":"domaxi"},"content":"        // customizes the buttons panel"},{"lineNumber":64,"author":{"gitId":"domaxi"},"content":"        rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));"},{"lineNumber":65,"author":{"gitId":"domaxi"},"content":"        rightPanel.setBounds(700,50,100,800);"},{"lineNumber":66,"author":{"gitId":"domaxi"},"content":"        rightPanel.setBackground(Color.LIGHT_GRAY);"},{"lineNumber":67,"author":{"gitId":"domaxi"},"content":"        addBlackBorder(rightPanel);"},{"lineNumber":68,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":69,"author":{"gitId":"domaxi"},"content":"        // generates the buttons for the right panel"},{"lineNumber":70,"author":{"gitId":"domaxi"},"content":"        generateEditingButtons(rightPanel);"},{"lineNumber":71,"author":{"gitId":"domaxi"},"content":"        generateActionsButtons(rightPanel);"},{"lineNumber":72,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":73,"author":{"gitId":"domaxi"},"content":"        add(rightPanel,BorderLayout.EAST);"},{"lineNumber":74,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":76,"author":{"gitId":"domaxi"},"content":"    private void generateActionsButtons(JPanel rightPanel) {"},{"lineNumber":77,"author":{"gitId":"domaxi"},"content":"        JLabel actionsLabel \u003d new JLabel(\"  Actions \\n\",JLabel.CENTER);"},{"lineNumber":78,"author":{"gitId":"domaxi"},"content":"        actionsLabel.setBounds(700,800,100,50);"},{"lineNumber":79,"author":{"gitId":"domaxi"},"content":"        actionsLabel.setHorizontalAlignment(JLabel.CENTER);"},{"lineNumber":80,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":81,"author":{"gitId":"domaxi"},"content":"        JButton clearButton \u003d new JButton(\"Clear All\");"},{"lineNumber":82,"author":{"gitId":"domaxi"},"content":"        JButton saveButton \u003d new JButton(\"Save\");"},{"lineNumber":83,"author":{"gitId":"domaxi"},"content":"        JButton cancelButton \u003d new JButton(\"Cancel\");"},{"lineNumber":84,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":85,"author":{"gitId":"domaxi"},"content":"        clearButton.setForeground(Color.blue);"},{"lineNumber":86,"author":{"gitId":"domaxi"},"content":"        saveButton.setForeground(Color.green);"},{"lineNumber":87,"author":{"gitId":"domaxi"},"content":"        cancelButton.setForeground(Color.red);"},{"lineNumber":88,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":89,"author":{"gitId":"domaxi"},"content":"        clearButton.addActionListener(this);"},{"lineNumber":90,"author":{"gitId":"domaxi"},"content":"        saveButton.addActionListener(this);"},{"lineNumber":91,"author":{"gitId":"domaxi"},"content":"        cancelButton.addActionListener(this);"},{"lineNumber":92,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":93,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(actionsLabel);"},{"lineNumber":94,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(clearButton);"},{"lineNumber":95,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(saveButton);"},{"lineNumber":96,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(cancelButton);"},{"lineNumber":97,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":99,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"domaxi"},"content":"     * generates the editing buttons for the editor."},{"lineNumber":101,"author":{"gitId":"domaxi"},"content":"     * @param rightPanel creates the button into the right panel."},{"lineNumber":102,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"domaxi"},"content":"    private void generateEditingButtons(JPanel rightPanel) {"},{"lineNumber":104,"author":{"gitId":"domaxi"},"content":"        JLabel editingLabel \u003d new JLabel(\"  Edit \\n\",JLabel.CENTER);"},{"lineNumber":105,"author":{"gitId":"domaxi"},"content":"        editingLabel.setHorizontalAlignment(JLabel.CENTER);"},{"lineNumber":106,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":107,"author":{"gitId":"domaxi"},"content":"        JButton copyButton \u003d new JButton(\"Copy\");"},{"lineNumber":108,"author":{"gitId":"domaxi"},"content":"        JButton cutButton \u003d new JButton(\"Cut\");"},{"lineNumber":109,"author":{"gitId":"domaxi"},"content":"        JButton pasteButton \u003d new JButton(\"Paste\");"},{"lineNumber":110,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":111,"author":{"gitId":"domaxi"},"content":"        copyButton.addActionListener(this);"},{"lineNumber":112,"author":{"gitId":"domaxi"},"content":"        cutButton.addActionListener(this);"},{"lineNumber":113,"author":{"gitId":"domaxi"},"content":"        pasteButton.addActionListener(this);"},{"lineNumber":114,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":115,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(editingLabel);"},{"lineNumber":116,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(copyButton);"},{"lineNumber":117,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(cutButton);"},{"lineNumber":118,"author":{"gitId":"domaxi"},"content":"        rightPanel.add(pasteButton);"},{"lineNumber":119,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":121,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"domaxi"},"content":"     * adds black line border to the selected panel."},{"lineNumber":123,"author":{"gitId":"domaxi"},"content":"     * @param panel any panel to be added with a black border."},{"lineNumber":124,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"domaxi"},"content":"    private void addBlackBorder(JPanel panel) {"},{"lineNumber":126,"author":{"gitId":"domaxi"},"content":"        final Border blackBorder \u003d BorderFactory.createLineBorder(Color.BLACK);"},{"lineNumber":127,"author":{"gitId":"domaxi"},"content":"        panel.setBorder(blackBorder);"},{"lineNumber":128,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":130,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"domaxi"},"content":"     * generates the icon on top of the editor."},{"lineNumber":132,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"domaxi"},"content":"    private void generateEditorHeader() {"},{"lineNumber":134,"author":{"gitId":"domaxi"},"content":"        JPanel topPanel \u003d new JPanel();"},{"lineNumber":135,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":136,"author":{"gitId":"domaxi"},"content":"        topPanel.setLayout(new BoxLayout(topPanel,BoxLayout.Y_AXIS));"},{"lineNumber":137,"author":{"gitId":"domaxi"},"content":"        topPanel.setBounds(0,0,800,0);"},{"lineNumber":138,"author":{"gitId":"domaxi"},"content":"        topPanel.setSize(800,200);"},{"lineNumber":139,"author":{"gitId":"domaxi"},"content":"        topPanel.setBackground(Color.white);"},{"lineNumber":140,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":141,"author":{"gitId":"domaxi"},"content":"        BufferedImage logoPicture \u003d null;"},{"lineNumber":142,"author":{"gitId":"domaxi"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"domaxi"},"content":"            logoPicture \u003d ImageIO.read(new URL(\"https://i.ibb.co/QCjG7v7/cheatlogs-copy.png\"));"},{"lineNumber":144,"author":{"gitId":"domaxi"},"content":"            JLabel pictureIcon \u003d new JLabel(new ImageIcon(logoPicture));"},{"lineNumber":145,"author":{"gitId":"domaxi"},"content":"            pictureIcon.setAlignmentX(Component.CENTER_ALIGNMENT);"},{"lineNumber":146,"author":{"gitId":"domaxi"},"content":"            pictureIcon.setBounds(0,0,800,0);"},{"lineNumber":147,"author":{"gitId":"domaxi"},"content":"            topPanel.add(pictureIcon);"},{"lineNumber":148,"author":{"gitId":"domaxi"},"content":"        } catch (IOException e) {"},{"lineNumber":149,"author":{"gitId":"domaxi"},"content":"            System.out.println(\"The image cannot be retrieved\");"},{"lineNumber":150,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":152,"author":{"gitId":"domaxi"},"content":"        addBlackBorder(topPanel);"},{"lineNumber":153,"author":{"gitId":"domaxi"},"content":"        add(topPanel,BorderLayout.PAGE_START);"},{"lineNumber":154,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":156,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"domaxi"},"content":"     * method to change the settings of the editor window."},{"lineNumber":158,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"domaxi"},"content":"    private void setEditorLayout() {"},{"lineNumber":160,"author":{"gitId":"domaxi"},"content":"        setSize(800,600); // sets the editor window size"},{"lineNumber":161,"author":{"gitId":"domaxi"},"content":"        setTitle(\"CheatLogs Editor\"); // sets the editor name"},{"lineNumber":162,"author":{"gitId":"domaxi"},"content":"        setLayout(new BorderLayout()); // determines the layout of the editor"},{"lineNumber":163,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":165,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"domaxi"},"content":"     * Generates the editor\u0027s text are where the user can input the details of the cheatsheet."},{"lineNumber":167,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"domaxi"},"content":"    private void generateTextArea() {"},{"lineNumber":169,"author":{"gitId":"domaxi"},"content":"        JPanel textAreaPanel \u003d new JPanel();"},{"lineNumber":170,"author":{"gitId":"domaxi"},"content":"        textAreaPanel.setLayout(new BorderLayout());"},{"lineNumber":171,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":172,"author":{"gitId":"domaxi"},"content":"        textArea \u003d new JTextArea();"},{"lineNumber":173,"author":{"gitId":"domaxi"},"content":"        textArea.setSelectionColor(Color.GRAY); // sets the color of the text Area"},{"lineNumber":174,"author":{"gitId":"domaxi"},"content":"        textArea.setSize(800,600); // sets the size of the text Area"},{"lineNumber":175,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":176,"author":{"gitId":"domaxi"},"content":"        JScrollPane textAreaScroll \u003d new JScrollPane(textArea);"},{"lineNumber":177,"author":{"gitId":"domaxi"},"content":"        textAreaScroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);"},{"lineNumber":178,"author":{"gitId":"domaxi"},"content":"        textAreaScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);"},{"lineNumber":179,"author":{"gitId":"domaxi"},"content":"        textAreaScroll.setViewportView(textArea);"},{"lineNumber":180,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":181,"author":{"gitId":"domaxi"},"content":"        textAreaPanel.add(textAreaScroll, BorderLayout.CENTER);"},{"lineNumber":182,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":183,"author":{"gitId":"domaxi"},"content":"        add(textAreaPanel, BorderLayout.CENTER); // adds the text area into the center of the frame"},{"lineNumber":184,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":186,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"domaxi"},"content":"     * Generates the editor footer to tell the cheatsheet name and subject that is being edited."},{"lineNumber":188,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"domaxi"},"content":"    private void generateEditorFooter() {"},{"lineNumber":190,"author":{"gitId":"domaxi"},"content":"        JPanel editorFooter \u003d new JPanel();"},{"lineNumber":191,"author":{"gitId":"domaxi"},"content":"        editorFooter.setBounds(0,500,800,50);"},{"lineNumber":192,"author":{"gitId":"domaxi"},"content":"        footerLabel \u003d new JLabel();"},{"lineNumber":193,"author":{"gitId":"domaxi"},"content":"        footerLabel.setText(\" \");"},{"lineNumber":194,"author":{"gitId":"domaxi"},"content":"        footerLabel.setForeground(Color.white);"},{"lineNumber":195,"author":{"gitId":"domaxi"},"content":"        editorFooter.add(footerLabel);"},{"lineNumber":196,"author":{"gitId":"domaxi"},"content":"        editorFooter.setBackground(Color.darkGray);"},{"lineNumber":197,"author":{"gitId":"domaxi"},"content":"        add(editorFooter,BorderLayout.PAGE_END);"},{"lineNumber":198,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":200,"author":{"gitId":"domaxi"},"content":"    private String generateEditingInformation() {"},{"lineNumber":201,"author":{"gitId":"domaxi"},"content":"        return \"You are editing the \" + cheatSheetName + \" cheatsheet [Subject: \" + cheatSheetSubject + \"]\";"},{"lineNumber":202,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":204,"author":{"gitId":"domaxi"},"content":"    private void showSaveWarning() {"},{"lineNumber":205,"author":{"gitId":"domaxi"},"content":"        footerLabel.setText(\"You are trying to save a blank file\");"},{"lineNumber":206,"author":{"gitId":"domaxi"},"content":"        footerLabel.setForeground(Color.red);"},{"lineNumber":207,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":209,"author":{"gitId":"domaxi"},"content":"    private void showCheatsheetInfo() {"},{"lineNumber":210,"author":{"gitId":"domaxi"},"content":"        footerLabel.setText(generateEditingInformation());"},{"lineNumber":211,"author":{"gitId":"domaxi"},"content":"        footerLabel.setForeground(Color.white);"},{"lineNumber":212,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":214,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"domaxi"},"content":"     * generates the editing bar for editing commands of the UI."},{"lineNumber":216,"author":{"gitId":"domaxi"},"content":"     * @param menuBar takes in the menuBar and appends an editingMenu object into the menuBar."},{"lineNumber":217,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"domaxi"},"content":"    private void generateEditingBar(JMenuBar menuBar) {"},{"lineNumber":219,"author":{"gitId":"domaxi"},"content":"        final JMenu editingMenu \u003d new JMenu(\"Edit\");"},{"lineNumber":220,"author":{"gitId":"domaxi"},"content":"        final JMenuItem editItem1 \u003d new JMenuItem(\"Copy\");"},{"lineNumber":221,"author":{"gitId":"domaxi"},"content":"        final JMenuItem editItem2 \u003d new JMenuItem(\"Cut\");"},{"lineNumber":222,"author":{"gitId":"domaxi"},"content":"        final JMenuItem editItem3 \u003d new JMenuItem(\"Paste\");"},{"lineNumber":223,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":224,"author":{"gitId":"domaxi"},"content":"        editItem1.addActionListener(this);"},{"lineNumber":225,"author":{"gitId":"domaxi"},"content":"        editItem2.addActionListener(this);"},{"lineNumber":226,"author":{"gitId":"domaxi"},"content":"        editItem3.addActionListener(this);"},{"lineNumber":227,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":228,"author":{"gitId":"domaxi"},"content":"        editingMenu.add(editItem1);"},{"lineNumber":229,"author":{"gitId":"domaxi"},"content":"        editingMenu.add(editItem2);"},{"lineNumber":230,"author":{"gitId":"domaxi"},"content":"        editingMenu.add(editItem3);"},{"lineNumber":231,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":232,"author":{"gitId":"domaxi"},"content":"        menuBar.add(editingMenu);"},{"lineNumber":233,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":235,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"domaxi"},"content":"     * generates the actions command options for the UI."},{"lineNumber":237,"author":{"gitId":"domaxi"},"content":"     * @param menuBar takes in the menuBar and appends it with the actionsMenu object."},{"lineNumber":238,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":239,"author":{"gitId":"domaxi"},"content":"    private void generateActionsBar(JMenuBar menuBar) {"},{"lineNumber":240,"author":{"gitId":"domaxi"},"content":"        final JMenu actionsMenu \u003d new JMenu(\"Actions\");"},{"lineNumber":241,"author":{"gitId":"abnermtj"},"content":"        final JMenuItem menuItem1 \u003d new JMenuItem(\"Save\");"},{"lineNumber":242,"author":{"gitId":"abnermtj"},"content":"        final JMenuItem menuItem2 \u003d new JMenuItem(\"Clear All\");"},{"lineNumber":243,"author":{"gitId":"abnermtj"},"content":"        final JMenuItem menuItem3 \u003d new JMenuItem(\"Cancel\");"},{"lineNumber":244,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":245,"author":{"gitId":"domaxi"},"content":"        menuItem1.addActionListener(this);"},{"lineNumber":246,"author":{"gitId":"domaxi"},"content":"        menuItem2.addActionListener(this);"},{"lineNumber":247,"author":{"gitId":"domaxi"},"content":"        menuItem3.addActionListener(this);"},{"lineNumber":248,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":249,"author":{"gitId":"domaxi"},"content":"        actionsMenu.add(menuItem1);"},{"lineNumber":250,"author":{"gitId":"domaxi"},"content":"        actionsMenu.add(menuItem2);"},{"lineNumber":251,"author":{"gitId":"domaxi"},"content":"        actionsMenu.add(menuItem3);"},{"lineNumber":252,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":253,"author":{"gitId":"domaxi"},"content":"        menuBar.add(actionsMenu);"},{"lineNumber":254,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":256,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":257,"author":{"gitId":"domaxi"},"content":"     * this method checks if the text area of the editor is empty."},{"lineNumber":258,"author":{"gitId":"domaxi"},"content":"     * @return returns true if it is empty."},{"lineNumber":259,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"domaxi"},"content":"    private boolean checkIsEditorEmpty() {"},{"lineNumber":261,"author":{"gitId":"domaxi"},"content":"        return textArea.getText().isBlank();"},{"lineNumber":262,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":264,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"domaxi"},"content":"     * this method determines the action when a button is pushed."},{"lineNumber":266,"author":{"gitId":"domaxi"},"content":"     * @param a an action event - invoked by pressing the button."},{"lineNumber":267,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"domaxi"},"content":"    public void actionPerformed(ActionEvent a) {"},{"lineNumber":269,"author":{"gitId":"domaxi"},"content":"        String action \u003d a.getActionCommand();"},{"lineNumber":270,"author":{"gitId":"domaxi"},"content":"        switch (action) {"},{"lineNumber":271,"author":{"gitId":"domaxi"},"content":"        case \"Save\":"},{"lineNumber":272,"author":{"gitId":"domaxi"},"content":"            if (checkIsEditorEmpty()) {"},{"lineNumber":273,"author":{"gitId":"domaxi"},"content":"                open();"},{"lineNumber":274,"author":{"gitId":"domaxi"},"content":"                showSaveWarning();"},{"lineNumber":275,"author":{"gitId":"domaxi"},"content":"            } else {"},{"lineNumber":276,"author":{"gitId":"abnermtj"},"content":"                close();"},{"lineNumber":277,"author":{"gitId":"domaxi"},"content":"            }"},{"lineNumber":278,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":279,"author":{"gitId":"domaxi"},"content":"        case \"Clear All\":"},{"lineNumber":280,"author":{"gitId":"domaxi"},"content":"            textArea.setText(\"\");"},{"lineNumber":281,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":282,"author":{"gitId":"domaxi"},"content":"        case \"Cancel\":"},{"lineNumber":283,"author":{"gitId":"domaxi"},"content":"            revertToOriginal();"},{"lineNumber":284,"author":{"gitId":"abnermtj"},"content":"            close();"},{"lineNumber":285,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":286,"author":{"gitId":"domaxi"},"content":"        case \"Copy\":"},{"lineNumber":287,"author":{"gitId":"domaxi"},"content":"            textArea.copy();"},{"lineNumber":288,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":289,"author":{"gitId":"domaxi"},"content":"        case \"Cut\":"},{"lineNumber":290,"author":{"gitId":"domaxi"},"content":"            textArea.cut();"},{"lineNumber":291,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":292,"author":{"gitId":"domaxi"},"content":"        case \"Paste\":"},{"lineNumber":293,"author":{"gitId":"domaxi"},"content":"            textArea.paste();"},{"lineNumber":294,"author":{"gitId":"domaxi"},"content":"            break;"},{"lineNumber":295,"author":{"gitId":"abnermtj"},"content":"        default:"},{"lineNumber":296,"author":{"gitId":"abnermtj"},"content":"            break;"},{"lineNumber":297,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":300,"author":{"gitId":"domaxi"},"content":"    private void revertToOriginal() {"},{"lineNumber":301,"author":{"gitId":"domaxi"},"content":"        textArea.setText(originalContent);"},{"lineNumber":302,"author":{"gitId":"domaxi"},"content":"        originalContent \u003d \"\";"},{"lineNumber":303,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":304,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":305,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":306,"author":{"gitId":"domaxi"},"content":"     * The method sets the content of the textArea and the footer."},{"lineNumber":307,"author":{"gitId":"domaxi"},"content":"     * @param cheatSheet this method extracts the content of the cheatsheet into the editor."},{"lineNumber":308,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":309,"author":{"gitId":"domaxi"},"content":"    public void setContent(CheatSheet cheatSheet) {"},{"lineNumber":310,"author":{"gitId":"domaxi"},"content":"        cheatSheetName \u003d cheatSheet.getName();"},{"lineNumber":311,"author":{"gitId":"domaxi"},"content":"        cheatSheetSubject \u003d cheatSheet.getSubject();"},{"lineNumber":312,"author":{"gitId":"domaxi"},"content":"        textArea.setText(cheatSheet.getDetails());"},{"lineNumber":313,"author":{"gitId":"domaxi"},"content":"        originalContent \u003d cheatSheet.getDetails();"},{"lineNumber":314,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":316,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"domaxi"},"content":"     * this method extracts the content of the textArea."},{"lineNumber":318,"author":{"gitId":"domaxi"},"content":"     * @return returns a string that is the content of the text area."},{"lineNumber":319,"author":{"gitId":"domaxi"},"content":"     * @throws EditorException throws an exception if the text editor is empty."},{"lineNumber":320,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"domaxi"},"content":"    public String getContent() throws EditorException {"},{"lineNumber":322,"author":{"gitId":"domaxi"},"content":"        if (textArea.getText().equals(\"\")) {"},{"lineNumber":323,"author":{"gitId":"domaxi"},"content":"            throw new EditorException();"},{"lineNumber":324,"author":{"gitId":"domaxi"},"content":"        } else {"},{"lineNumber":325,"author":{"gitId":"abnermtj"},"content":"            return textArea.getText();"},{"lineNumber":326,"author":{"gitId":"domaxi"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":329,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":330,"author":{"gitId":"domaxi"},"content":"     * Sets the cheatsheet attributes for the editor footer."},{"lineNumber":331,"author":{"gitId":"domaxi"},"content":"     * @param name takes in the name to be placed in the footer"},{"lineNumber":332,"author":{"gitId":"domaxi"},"content":"     * @param subject takes in the cheatsheet subject to be placed in the footer."},{"lineNumber":333,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":334,"author":{"gitId":"domaxi"},"content":"    public void setEditingContentAttributes(String name, String subject) {"},{"lineNumber":335,"author":{"gitId":"domaxi"},"content":"        cheatSheetName \u003d name;"},{"lineNumber":336,"author":{"gitId":"domaxi"},"content":"        cheatSheetSubject \u003d subject;"},{"lineNumber":337,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":339,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":340,"author":{"gitId":"domaxi"},"content":"     * Opens the text editor, and initializes the textArea."},{"lineNumber":341,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":342,"author":{"gitId":"abnermtj"},"content":"    public void open() {"},{"lineNumber":343,"author":{"gitId":"abnermtj"},"content":"        textArea.setText(\"\");"},{"lineNumber":344,"author":{"gitId":"domaxi"},"content":"        showCheatsheetInfo();"},{"lineNumber":345,"author":{"gitId":"abnermtj"},"content":"        setVisible(true);"},{"lineNumber":346,"author":{"gitId":"domaxi"},"content":"        setAlwaysOnTop(true);"},{"lineNumber":347,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":349,"author":{"gitId":"domaxi"},"content":"    /**"},{"lineNumber":350,"author":{"gitId":"domaxi"},"content":"     * Waits for the editor to close to terminate the program and return the controls to the editor."},{"lineNumber":351,"author":{"gitId":"domaxi"},"content":"     */"},{"lineNumber":352,"author":{"gitId":"abnermtj"},"content":"    public void waitForClose() {"},{"lineNumber":353,"author":{"gitId":"abnermtj"},"content":"        while (isVisible()) {"},{"lineNumber":354,"author":{"gitId":"abnermtj"},"content":"            try {"},{"lineNumber":355,"author":{"gitId":"abnermtj"},"content":"                TimeUnit.MICROSECONDS.sleep(1000);"},{"lineNumber":356,"author":{"gitId":"abnermtj"},"content":"            } catch (Exception e) {"},{"lineNumber":357,"author":{"gitId":"abnermtj"},"content":"                assert false;"},{"lineNumber":358,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":359,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"abnermtj"},"content":"    "},{"lineNumber":362,"author":{"gitId":"abnermtj"},"content":"    public void close() {"},{"lineNumber":363,"author":{"gitId":"abnermtj"},"content":"        setVisible(false);"},{"lineNumber":364,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":366,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":332,"abnermtj":34}},{"path":"src/main/java/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"public class CommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"    public CommandException(String message) {"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":7}},{"path":"src/main/java/exception/DirectoryIsEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"public class DirectoryIsEmptyException extends Exception {"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":""},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"    String folderName;"},{"lineNumber":6,"author":{"gitId":"theopin"},"content":""},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"    public DirectoryIsEmptyException(String folderName) {"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"        this.folderName \u003d folderName;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"theopin"},"content":""},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"        return folderName + \" is empty.\";"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"theopin":16}},{"path":"src/main/java/exception/EditorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"public class EditorException extends Exception {"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"    @Override"},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"    public String getMessage() {"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"        return \"The text editor is blank please add a valid cheatsheet description\";"},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":9}},{"path":"src/main/java/exception/InvalidParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"public class InvalidParamException extends Exception {"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":""},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"    private final String contentSection;"},{"lineNumber":6,"author":{"gitId":"theopin"},"content":""},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"    public InvalidParamException(String contentSection) {"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"        this.contentSection \u003d contentSection;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"    public String getMessage() {"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"        return \"This section of the XML file cannot be parsed due to invalid characters: \""},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"                + contentSection;"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"theopin":16}},{"path":"src/main/java/parser/CommandFlag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"public enum CommandFlag {"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"    NAME(\"/n\"),"},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"    DELETE(\"/d\"),"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    INDEX(\"/i\"),"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"    SUBJECT(\"/s\"),"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"    SECTIONKEYWORD(\"/k\"),"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    COLORSCHEME(\"/c\"),"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    HELPMESSAGE(\"/m\");"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    private final String flag;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    CommandFlag(String flag) {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        this.flag \u003d flag;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public String getFlag() {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"        return this.flag;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":16,"brandontoh":2,"adhy-p":2}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import command.Command;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import command.ClearCommand;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import command.EditCommand;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"import command.ExitCommand;"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"import command.FavouriteCommand;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"import command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"import command.HelpCommand;"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"import command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"import command.SettingsCommand;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"import command.ViewCommand;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"import editor.Editor;"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"import settings.Settings;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"import storage.DataFileReader;"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"import ui.Ui;"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":" * Parser for user input to create Command objects that can be executed at a later time."},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":" */"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"public class Parser {"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"    private final CheatSheetList cheatSheetList;"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    private final DataFileDestroyer fileDestroyer;"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    private final DataFileReader fileReader;"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"    private final Editor editor;"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    private final Printer printer;"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    private final Ui ui;"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    private final Settings settings;"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"    private static final String FLAG_REGEX \u003d \"(?\u003d(/[a-z]))\";"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"     * Constructor for the Parser. Specific objects are passed to the commands"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"     * that need them to execute."},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"     * @param cheatSheetList The current list of cheat sheets"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"     * @param editor         The editor object to open the text editor"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"     * @param fileDestroyer  Destroys existing files"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"     * @param fileReader     Reads existing files"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"     * @param printer        The printer object to handle user interaction"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"     * @param ui             Takes input, used to get missing command flags"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"     * @param settings       Settings of CheatLogs affect, change the way that the same"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"     *                       commands will execute"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"    public Parser(CheatSheetList cheatSheetList, Editor editor,"},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"                  DataFileDestroyer fileDestroyer, Printer printer,"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"                  Ui ui, Settings settings, DataFileReader fileReader) {"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"        this.editor \u003d editor;"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"        this.fileReader \u003d fileReader;"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"        this.fileDestroyer \u003d fileDestroyer;"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"        this.printer \u003d printer;"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"        this.ui \u003d ui;"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"        this.settings \u003d settings;"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"     * Parses the user input to return an executable command."},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"     * @param userInput      Input that is used to construct a command"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"     * @return               The constructed command"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"    public Command parse(String userInput) throws CommandException {"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"        Command commandToBeExecuted \u003d parseCommandType(userInput);"},{"lineNumber":75,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d parseFlagDescriptions(commandToBeExecuted, userInput);"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"        commandToBeExecuted.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"        setMissingDescriptions(commandToBeExecuted);"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"        return commandToBeExecuted;"},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"     * Parses the user input to return a command injected with all the objects"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"     * it needs to execute."},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"     * @param userInput            Input that is used to construct a command"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"     * @return                     The constructed command"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"     * @throws CommandException    When the command keyword is not recognized"},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":"    private Command parseCommandType(String userInput) throws CommandException {"},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"        String parsedInput \u003d userInput.split(\" \")[0];"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"        switch (parsedInput) {"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"        case AddCommand.invoker:"},{"lineNumber":97,"author":{"gitId":"adhy-p"},"content":"            return new AddCommand(printer, cheatSheetList, editor);"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"        case ClearCommand.invoker:"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"            return new ClearCommand(printer, cheatSheetList, fileDestroyer, fileReader, ui);"},{"lineNumber":100,"author":{"gitId":"abnermtj"},"content":"        case DeleteCommand.invoker:"},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"            return new DeleteCommand(printer, cheatSheetList, fileDestroyer, ui);"},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"        case EditCommand.invoker:"},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"            return new EditCommand(printer, cheatSheetList, editor);"},{"lineNumber":104,"author":{"gitId":"abnermtj"},"content":"        case ExitCommand.invoker:"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"            return new ExitCommand(printer);"},{"lineNumber":106,"author":{"gitId":"adhy-p"},"content":"        case FavouriteCommand.invoker:"},{"lineNumber":107,"author":{"gitId":"adhy-p"},"content":"            return new FavouriteCommand(printer, cheatSheetList);"},{"lineNumber":108,"author":{"gitId":"abnermtj"},"content":"        case FindCommand.invoker:"},{"lineNumber":109,"author":{"gitId":"adhy-p"},"content":"            return new FindCommand(printer, cheatSheetList);"},{"lineNumber":110,"author":{"gitId":"abnermtj"},"content":"        case HelpCommand.invoker:"},{"lineNumber":111,"author":{"gitId":"abnermtj"},"content":"            return new HelpCommand(printer);"},{"lineNumber":112,"author":{"gitId":"abnermtj"},"content":"        case ListCommand.invoker:"},{"lineNumber":113,"author":{"gitId":"adhy-p"},"content":"            return new ListCommand(printer, cheatSheetList);"},{"lineNumber":114,"author":{"gitId":"adhy-p"},"content":"        case SettingsCommand.invoker:"},{"lineNumber":115,"author":{"gitId":"brandontoh"},"content":"            return new SettingsCommand(printer, settings);"},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"        case ViewCommand.invoker:"},{"lineNumber":117,"author":{"gitId":"adhy-p"},"content":"            return new ViewCommand(printer, cheatSheetList);"},{"lineNumber":118,"author":{"gitId":"abnermtj"},"content":"        default:"},{"lineNumber":119,"author":{"gitId":"brandontoh"},"content":"            throw new CommandException(\"Please enter a valid command\");"},{"lineNumber":120,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":123,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":"     * Parses the user input for flags with their accompanying descriptions"},{"lineNumber":125,"author":{"gitId":"abnermtj"},"content":"     * such as \"/n NAME\". These flag and description pairs will be placed in a"},{"lineNumber":126,"author":{"gitId":"abnermtj"},"content":"     * hash map where:"},{"lineNumber":127,"author":{"gitId":"abnermtj"},"content":"     * key : the flag represented as a CommandFlag object. (e.g. /n is represented as"},{"lineNumber":128,"author":{"gitId":"abnermtj"},"content":"     *                                                      a CommandFlag.NAME object)"},{"lineNumber":129,"author":{"gitId":"abnermtj"},"content":"     * value : the description of the flag (e.g. \"if else\" in \"/n if else\")"},{"lineNumber":130,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"abnermtj"},"content":"     * @param commandToBeExecuted       The command to get the flag and descriptions for."},{"lineNumber":132,"author":{"gitId":"abnermtj"},"content":"     * @param userInput                 The input used to create the flag and description hash map"},{"lineNumber":133,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"abnermtj"},"content":"     * @return                          The flag and description hash map"},{"lineNumber":135,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"abnermtj"},"content":"     * @throws CommandException         One of the flags inputted isn\u0027t required by the command"},{"lineNumber":137,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"abnermtj"},"content":"    private LinkedHashMap\u003cCommandFlag, String\u003e parseFlagDescriptions(Command commandToBeExecuted, String userInput)"},{"lineNumber":139,"author":{"gitId":"abnermtj"},"content":"            throws CommandException {"},{"lineNumber":140,"author":{"gitId":"brandontoh"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"brandontoh"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"abnermtj"},"content":"            // This split causes each element in details to follow \"/flag description\""},{"lineNumber":143,"author":{"gitId":"abnermtj"},"content":"            String[] details \u003d userInput.split(FLAG_REGEX);"},{"lineNumber":144,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":145,"author":{"gitId":"abnermtj"},"content":"            /* The first element at index 0 is the command itself, not the flags"},{"lineNumber":146,"author":{"gitId":"abnermtj"},"content":"                so we skip it */"},{"lineNumber":147,"author":{"gitId":"brandontoh"},"content":"            for (int i \u003d 1; i \u003c details.length; i++) {"},{"lineNumber":148,"author":{"gitId":"abnermtj"},"content":"                int descriptionStartIdx \u003d getDescriptionStartIdx(details[i]);"},{"lineNumber":149,"author":{"gitId":"abnermtj"},"content":"                String flag \u003d getFlag(details[i], descriptionStartIdx);"},{"lineNumber":150,"author":{"gitId":"abnermtj"},"content":"                String flagDescription \u003d getFlagDescription(details[i], descriptionStartIdx);"},{"lineNumber":151,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":152,"author":{"gitId":"abnermtj"},"content":"                CommandFlag validatedCommandFlag \u003d validateCommandFlag(commandToBeExecuted, flag);"},{"lineNumber":153,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":154,"author":{"gitId":"abnermtj"},"content":"                // One of the flags inputted isn\u0027t needed by the command"},{"lineNumber":155,"author":{"gitId":"abnermtj"},"content":"                if (validatedCommandFlag \u003d\u003d null) {"},{"lineNumber":156,"author":{"gitId":"abnermtj"},"content":"                    throw new CommandException(\"Please input the correct flags\");"},{"lineNumber":157,"author":{"gitId":"abnermtj"},"content":"                // Duplicate flag"},{"lineNumber":158,"author":{"gitId":"abnermtj"},"content":"                } else if (flagsToDescriptions.get(validatedCommandFlag) !\u003d null) {"},{"lineNumber":159,"author":{"gitId":"abnermtj"},"content":"                    throw new CommandException(\"Duplicated flags are not allowed\");"},{"lineNumber":160,"author":{"gitId":"abnermtj"},"content":"                }"},{"lineNumber":161,"author":{"gitId":"abnermtj"},"content":"                flagsToDescriptions.put(validatedCommandFlag, flagDescription);"},{"lineNumber":162,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"brandontoh"},"content":"        } catch (IndexOutOfBoundsException i) {"},{"lineNumber":164,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Flag indexing error\");"},{"lineNumber":165,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":167,"author":{"gitId":"brandontoh"},"content":"        return flagsToDescriptions;"},{"lineNumber":168,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":170,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"abnermtj"},"content":"     * Validate if the command actually needs the inputted flag, or if it is irrelevant to execution."},{"lineNumber":172,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"abnermtj"},"content":"     * @param commandToBeExecuted       The command who is accepting the flag"},{"lineNumber":174,"author":{"gitId":"abnermtj"},"content":"     * @param flag                      The flag we are validating if we need."},{"lineNumber":175,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"abnermtj"},"content":"     * @return                          The CommandFlag Enum that matches the valid flag"},{"lineNumber":177,"author":{"gitId":"abnermtj"},"content":"     *                                  null if the command doesn\u0027t need the flag"},{"lineNumber":178,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"abnermtj"},"content":"    private CommandFlag validateCommandFlag(Command commandToBeExecuted, String flag) {"},{"lineNumber":180,"author":{"gitId":"abnermtj"},"content":"        for (CommandFlag c : commandToBeExecuted.getFlagsToDescriptionsMap().keySet()) {"},{"lineNumber":181,"author":{"gitId":"abnermtj"},"content":"            if (c.getFlag().equals(flag)) {"},{"lineNumber":182,"author":{"gitId":"abnermtj"},"content":"                return c;"},{"lineNumber":183,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"abnermtj"},"content":"        return null;"},{"lineNumber":186,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":188,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"abnermtj"},"content":"     * The user input may have missed certain required flags needed for"},{"lineNumber":190,"author":{"gitId":"abnermtj"},"content":"     * command execution, this method requests the user to input those missing flags."},{"lineNumber":191,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"abnermtj"},"content":"     * @param commandToBeExecuted       The command to get the missing flag and descriptions for."},{"lineNumber":193,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"brandontoh"},"content":"    private void setMissingDescriptions(Command commandToBeExecuted) {"},{"lineNumber":195,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e map \u003d commandToBeExecuted.getFlagsToDescriptionsMap();"},{"lineNumber":196,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":197,"author":{"gitId":"abnermtj"},"content":"        /* If the user has set the help message ON, help message for the"},{"lineNumber":198,"author":{"gitId":"abnermtj"},"content":"           current command are printed as a reference */"},{"lineNumber":199,"author":{"gitId":"abnermtj"},"content":"        if (settings.getDisplayingHelpMessages()"},{"lineNumber":200,"author":{"gitId":"abnermtj"},"content":"                \u0026\u0026 (!commandToBeExecuted.hasRequiredFlags()"},{"lineNumber":201,"author":{"gitId":"abnermtj"},"content":"                || commandToBeExecuted instanceof ListCommand"},{"lineNumber":202,"author":{"gitId":"abnermtj"},"content":"                || commandToBeExecuted instanceof ClearCommand)) {"},{"lineNumber":203,"author":{"gitId":"brandontoh"},"content":"            printer.printCommandHelpMessage(commandToBeExecuted.getClass());"},{"lineNumber":204,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":206,"author":{"gitId":"abnermtj"},"content":"        // Ask the user for the missing flags until the command can execute"},{"lineNumber":207,"author":{"gitId":"abnermtj"},"content":"        while (!commandToBeExecuted.hasRequiredFlags()) {"},{"lineNumber":208,"author":{"gitId":"abnermtj"},"content":"            if (!commandToBeExecuted.hasAlternativeFlags()) {"},{"lineNumber":209,"author":{"gitId":"abnermtj"},"content":"                printer.printAlternativeArgumentPrompt(commandToBeExecuted);"},{"lineNumber":210,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":211,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":212,"author":{"gitId":"abnermtj"},"content":"            /* commands initialize the required keys they need with value null. We"},{"lineNumber":213,"author":{"gitId":"abnermtj"},"content":"               thus look for keys with a null value as they haven\u0027t been filled yet*/"},{"lineNumber":214,"author":{"gitId":"abnermtj"},"content":"            for (CommandFlag key : map.keySet()) {"},{"lineNumber":215,"author":{"gitId":"abnermtj"},"content":"                /* If one of the alternative flags have already been filled,"},{"lineNumber":216,"author":{"gitId":"abnermtj"},"content":"                   skip this repeated alternative argument*/"},{"lineNumber":217,"author":{"gitId":"abnermtj"},"content":"                if (commandToBeExecuted.getAlternativeFlags().contains(key)"},{"lineNumber":218,"author":{"gitId":"abnermtj"},"content":"                    \u0026\u0026 commandToBeExecuted.hasAlternativeFlags()) {"},{"lineNumber":219,"author":{"gitId":"abnermtj"},"content":"                    continue;"},{"lineNumber":220,"author":{"gitId":"abnermtj"},"content":"                } else if ((map.get(key) \u003d\u003d null || map.get(key).isBlank()) \u0026\u0026 key !\u003d CommandFlag.DELETE) {"},{"lineNumber":221,"author":{"gitId":"brandontoh"},"content":"                    printer.printMissingArgument(key);"},{"lineNumber":222,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":223,"author":{"gitId":"abnermtj"},"content":"                    String newArgVal \u003d ui.getUserInput().trim();"},{"lineNumber":224,"author":{"gitId":"brandontoh"},"content":"                    if (newArgVal.isBlank()) {"},{"lineNumber":225,"author":{"gitId":"brandontoh"},"content":"                        newArgVal \u003d null;"},{"lineNumber":226,"author":{"gitId":"brandontoh"},"content":"                    }"},{"lineNumber":227,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":228,"author":{"gitId":"abnermtj"},"content":"                    map.replace(key, newArgVal);"},{"lineNumber":229,"author":{"gitId":"abnermtj"},"content":"                }"},{"lineNumber":230,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":231,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":234,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":235,"author":{"gitId":"abnermtj"},"content":"     * Looks for the first white space in the input which marks the start"},{"lineNumber":236,"author":{"gitId":"abnermtj"},"content":"     * of the description for a flag. (e.g. index 2 in \"/n NAME\")"},{"lineNumber":237,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":238,"author":{"gitId":"abnermtj"},"content":"     * @param input     input from the user"},{"lineNumber":239,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"abnermtj"},"content":"     * @return          the index where the first whitespace is at"},{"lineNumber":241,"author":{"gitId":"abnermtj"},"content":"     *                  or null if no whitespace is found"},{"lineNumber":242,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"abnermtj"},"content":"    private int getDescriptionStartIdx(String input) {"},{"lineNumber":244,"author":{"gitId":"abnermtj"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {"},{"lineNumber":245,"author":{"gitId":"abnermtj"},"content":"            if (Character.isWhitespace(input.charAt(i))) {"},{"lineNumber":246,"author":{"gitId":"abnermtj"},"content":"                return i;"},{"lineNumber":247,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":248,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":249,"author":{"gitId":"abnermtj"},"content":"        return -1;"},{"lineNumber":250,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":252,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"abnermtj"},"content":"     * Gets the flag from a flag and description pair using the splitIdx"},{"lineNumber":254,"author":{"gitId":"abnermtj"},"content":"     * to decide where to split. (e.g.\"/n\" in \"/n NAME\")"},{"lineNumber":255,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":256,"author":{"gitId":"abnermtj"},"content":"     * @param details     parsed input from the user taking the form of \"/flag description\""},{"lineNumber":257,"author":{"gitId":"abnermtj"},"content":"     * @param splitIdx    Where to split the details to get the flag"},{"lineNumber":258,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":259,"author":{"gitId":"abnermtj"},"content":"     * @return            the flag from the details"},{"lineNumber":260,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"abnermtj"},"content":"    private String getFlag(String details, int splitIdx) {"},{"lineNumber":262,"author":{"gitId":"abnermtj"},"content":"        if (splitIdx \u003d\u003d -1) {"},{"lineNumber":263,"author":{"gitId":"abnermtj"},"content":"            return details;"},{"lineNumber":264,"author":{"gitId":"abnermtj"},"content":"        } else {"},{"lineNumber":265,"author":{"gitId":"abnermtj"},"content":"            return details.substring(0, splitIdx).trim();"},{"lineNumber":266,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":269,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"abnermtj"},"content":"     * Gets the description from a flag and description pair using the splitIdx"},{"lineNumber":271,"author":{"gitId":"abnermtj"},"content":"     * to decide where to split. (e.g.\"/n\" in \"/n NAME\")"},{"lineNumber":272,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":273,"author":{"gitId":"abnermtj"},"content":"     * @param details     parsed input from the user taking the form of \"/flag description\""},{"lineNumber":274,"author":{"gitId":"abnermtj"},"content":"     * @param splitIdx    Where to split the details to get the flag"},{"lineNumber":275,"author":{"gitId":"abnermtj"},"content":"     *"},{"lineNumber":276,"author":{"gitId":"abnermtj"},"content":"     * @return            the description from the details"},{"lineNumber":277,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"abnermtj"},"content":"    private String getFlagDescription(String details, int splitIdx) {"},{"lineNumber":279,"author":{"gitId":"abnermtj"},"content":"        if (splitIdx \u003d\u003d -1) {"},{"lineNumber":280,"author":{"gitId":"abnermtj"},"content":"            return \"\";"},{"lineNumber":281,"author":{"gitId":"abnermtj"},"content":"        } else {"},{"lineNumber":282,"author":{"gitId":"abnermtj"},"content":"            return details.substring(splitIdx).trim();"},{"lineNumber":283,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":284,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":237,"theopin":4,"brandontoh":29,"adhy-p":15}},{"path":"src/main/java/settings/Settings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package settings;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import ui.Printer;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"public class Settings {"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"    private boolean isDisplayingHelpMessages;"},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"    private int colorOption;"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"    private Printer printer;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"    public Settings(Printer printer) {"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"        this.printer \u003d printer;"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"        colorOption \u003d 0;"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"        isDisplayingHelpMessages \u003d true;"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    public Settings() {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"    public void setDisplayingHelpMessages(boolean isDisplayingHelpMessages, boolean isInit) {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        this.isDisplayingHelpMessages \u003d isDisplayingHelpMessages;"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"        if (!isInit) {"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"            printer.printSetDisplayingHelpMessages(isDisplayingHelpMessages);"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"    public int getColorOption() {"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"        return colorOption;"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"    public boolean getDisplayingHelpMessages() {"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        return this.isDisplayingHelpMessages;"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"    public void setColor(int option, boolean isInit) {"},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"        if (option \u003e\u003d 0 \u0026\u0026 option \u003c\u003d 3) {"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"            colorOption \u003d option;"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"            colorOption \u003d 0;"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"        printer.setColor(option, isInit);"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":3,"brandontoh":15,"adhy-p":25}},{"path":"src/main/java/sort/SortByName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"public class SortByName implements Comparator\u003cCheatSheet\u003e {"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"    public int compare(CheatSheet a, CheatSheet b) {"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"        Boolean isAFavourited \u003d a.getIsFavourite();"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"        Boolean isBFavourited \u003d b.getIsFavourite();"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"        int favComparator \u003d isBFavourited.compareTo(isAFavourited);"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"        if (favComparator !\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"            return favComparator;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        return a.getName().compareTo(b.getName());"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":1,"brandontoh":10,"adhy-p":6}},{"path":"src/main/java/sort/SortByNameRev.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"public class SortByNameRev implements Comparator\u003cCheatSheet\u003e {"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"    public int compare(CheatSheet a, CheatSheet b) {"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"        Boolean isAFavourited \u003d a.getIsFavourite();"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"        Boolean isBFavourited \u003d b.getIsFavourite();"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"        int favComparator \u003d isBFavourited.compareTo(isAFavourited);"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"        if (favComparator !\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"            return favComparator;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        return b.getName().compareTo(a.getName());"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"}"}],"authorContributionMap":{"abnermtj":1,"adhy-p":16}},{"path":"src/main/java/sort/SortBySubject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"public class SortBySubject implements Comparator\u003cCheatSheet\u003e {"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"    public int compare(CheatSheet a, CheatSheet b) {"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"        Boolean isAFavourited \u003d a.getIsFavourite();"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"        Boolean isBFavourited \u003d b.getIsFavourite();"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"        int favComparator \u003d isBFavourited.compareTo(isAFavourited);"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"        if (favComparator !\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"            return favComparator;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        return a.getSubject().compareTo(b.getSubject());"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":1,"brandontoh":9,"adhy-p":7}},{"path":"src/main/java/sort/SortBySubjectRev.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"public class SortBySubjectRev implements Comparator\u003cCheatSheet\u003e {"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":"    public int compare(CheatSheet a, CheatSheet b) {"},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"        Boolean isAFavourited \u003d a.getIsFavourite();"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"        Boolean isBFavourited \u003d b.getIsFavourite();"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":"        int favComparator \u003d isBFavourited.compareTo(isAFavourited);"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"        if (favComparator !\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"            return favComparator;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        return b.getSubject().compareTo(a.getSubject());"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"}"}],"authorContributionMap":{"abnermtj":1,"adhy-p":16}},{"path":"src/main/java/storage/DataFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.DocumentBuilder;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.DocumentBuilderFactory;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.ParserConfigurationException;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":""},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":""},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":" * A general class that stores certain constants regarding the"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":" * file location of the /data directory, as well as methods that can be"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":" * utilised by its sub-classes."},{"lineNumber":21,"author":{"gitId":"theopin"},"content":" */"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"public abstract class DataFile {"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":""},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"    protected static final String YES \u003d \"YES\";"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"    protected static final String NO \u003d \"NO\";"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"    protected static final String EMPTY \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"    protected static final String SLASH \u003d \"/\";"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":""},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"    protected static final String USER_DIR \u003d System.getProperty(\"user.dir\");"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"    protected static final String JAR_DIR \u003d \"CheatLogs.jar\";"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":""},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"    protected static final String DATA \u003d \"data\";"},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"    protected static final String PRELOADED \u003d \"preloaded\";"},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"    protected static final String XML_EXTENSION \u003d \".xml\";"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":""},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"    protected static final String MAIN_ELEMENT \u003d \"main\";"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"    protected static final String FAVOURITE_ELEMENT \u003d \"favourite\";"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"    protected static final String SUBJECT_ELEMENT \u003d \"subject\";"},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"    protected static final String CONTENTS_ELEMENT \u003d \"contents\";"},{"lineNumber":40,"author":{"gitId":"theopin"},"content":""},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"    protected static final Path PRELOADED_DIR \u003d Paths.get(USER_DIR, DATA, PRELOADED);"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"    protected static final Path DATA_DIR \u003d Paths.get(USER_DIR, DATA);"},{"lineNumber":43,"author":{"gitId":"theopin"},"content":""},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"    protected static final String SETTINGS_FILENAME \u003d \"/settings.txt\";"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    protected Printer printer;"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"    protected CheatSheetList cheatSheetList;"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"    public static ArrayList\u003cPath\u003e preloadedCheatSheets \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":""},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"     * A method that is to be run based on its subclass."},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"    public abstract void executeFunction();"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":""},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"     * Creates a new directory and file at the specified location"},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"     * if it currently does not exist."},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"    protected void createNewDirectory() {"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"        if (!Files.exists(DATA_DIR)) {"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"                Files.createDirectories(DATA_DIR);"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"            } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"                printer.print(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":""},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"     * Creates a new document builder to be used for the particular instance of"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"     * reading or writing a file."},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"     * @return                                A new document builder."},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"     * @throws ParserConfigurationException   Throws when a serious"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"     *                                        configuration error has been caught."},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"    protected DocumentBuilder getDocumentBuilder() throws ParserConfigurationException {"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"        return DocumentBuilderFactory"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"                .newInstance()"},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"                .newDocumentBuilder();"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":""},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"     * Checks if the /data and /subjectName directories exist and creates them if they"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"     * are currently non-existent."},{"lineNumber":86,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"     * @param subjectDirectory          The directory to store a non-preloaded cheatSheet."},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"     * @param preloadedSubjectDirectory The directory to store a preloaded cheatSheet"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"     * @param isPreloadedFile           Boolean indicating if the file is preloaded or not."},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"     * @throws IOException              Thrown if errors occur when attempting to create the"},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"     *                                  respective directories."},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"theopin"},"content":"    protected void verifyDirectoryExistence(Path subjectDirectory,"},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"                                          Path preloadedSubjectDirectory,"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"                                          boolean isPreloadedFile) throws IOException {"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"        if (!Files.exists(DATA_DIR)) {"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"            Files.createDirectory(DATA_DIR);"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":""},{"lineNumber":100,"author":{"gitId":"theopin"},"content":"        if (isPreloadedFile) {"},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"            if (!Files.exists(PRELOADED_DIR)) {"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"                Files.createDirectory(PRELOADED_DIR);"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"            if (!Files.exists(preloadedSubjectDirectory)) {"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"                Files.createDirectory(preloadedSubjectDirectory);"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":""},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"        if (subjectDirectory !\u003d null \u0026\u0026 !Files.exists(subjectDirectory)) {"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"            Files.createDirectory(subjectDirectory);"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"theopin"},"content":""},{"lineNumber":114,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"     * Deletes the input directory if it is found to be empty as well as"},{"lineNumber":116,"author":{"gitId":"theopin"},"content":"     * XML files that are present in /data directory."},{"lineNumber":117,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"     * @param queriedDirFile Directory file that the method is looking at."},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":"    protected void updateDirectory(File queriedDirFile) {"},{"lineNumber":121,"author":{"gitId":"theopin"},"content":"        if (!queriedDirFile.isDirectory()) {"},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"            if (queriedDirFile.getParentFile().equals(DATA_DIR.toFile())) {"},{"lineNumber":123,"author":{"gitId":"theopin"},"content":"                queriedDirFile.delete();"},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":"            return;"},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"theopin"},"content":"        File[] queriedDirSubFiles \u003d queriedDirFile.listFiles();"},{"lineNumber":128,"author":{"gitId":"theopin"},"content":"        assert queriedDirSubFiles !\u003d null;"},{"lineNumber":129,"author":{"gitId":"theopin"},"content":""},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"        if (queriedDirSubFiles.length \u003d\u003d 0 \u0026\u0026 queriedDirFile !\u003d DATA_DIR.toFile()) {"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"            queriedDirFile.delete();"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":"        } else {"},{"lineNumber":133,"author":{"gitId":"theopin"},"content":"            for (File queriedDirSubFile : queriedDirSubFiles) {"},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"                if (queriedDirFile.isDirectory()) {"},{"lineNumber":135,"author":{"gitId":"theopin"},"content":"                    updateDirectory(queriedDirSubFile);"},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"abnermtj":3,"theopin":135,"adhy-p":2}},{"path":"src/main/java/storage/DataFileDestroyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"import exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"import exception.DirectoryIsEmptyException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"import java.util.logging.Level;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"import java.util.logging.Logger;"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":""},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":" * Allows the user to delete stored files as well as empty directories"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":" * when required."},{"lineNumber":18,"author":{"gitId":"theopin"},"content":" */"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"public class DataFileDestroyer extends DataFile {"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":""},{"lineNumber":21,"author":{"gitId":"theopin"},"content":""},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"    private final Logger destroyLogger \u003d Logger.getLogger(\"FileDestroyer\");"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":""},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"    public DataFileDestroyer(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"        this.printer \u003d printer;"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"     * Constructor that executes the operation to delete all cheatsheet files."},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"    public void executeFunction() {"},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"            clearDataDirectory();"},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"        } catch (DirectoryIsEmptyException e) {"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"            destroyLogger.log(Level.WARNING, \"Empty Directory Present\");"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"            printer.print(\"The following directory is empty: \""},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"        } finally {"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"            updateDirectory(DATA_DIR.toFile());"},{"lineNumber":43,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"theopin"},"content":""},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"     * Constructor that executes the operation to delete a"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"     * specific cheatsheet file."},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"     * @param unwantedFile Name of the cheatsheet to be deleted."},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"    public void executeFunction(String unwantedFile) {"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":"            deleteFile(unwantedFile);"},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"            destroyLogger.log(Level.WARNING, \"IO File Error\");"},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"            printer.print(\"CheatLogs could not clear a particular file! Is this file deleted?\""},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"                    + \"Here is the location of the file that had issues: \""},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"        } catch (CommandException s) {"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"            destroyLogger.log(Level.WARNING, \"Nonexistent File Error\");"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"            printer.print(\"This file does not exist:\""},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"                    + unwantedFile"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"                    + s.getMessage());"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"        } finally {"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"            updateDirectory(DATA_DIR.toFile());"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":""},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"     * Deletes a specified cheatsheet file from the /data directory."},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"     * @param unwantedFile      Name of the cheatsheet to be deleted."},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"     * @throws IOException      Thrown if the path of the unwanted file specified"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"     *                          is not existent."},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"     * @throws CommandException Thrown if unwanted file name is not existent."},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"    private void deleteFile(String unwantedFile) throws IOException, CommandException {"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"        Path unwantedFilePath;"},{"lineNumber":83,"author":{"gitId":"theopin"},"content":""},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"        String subjectDirectory \u003d cheatSheetList"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"                .get(unwantedFile)"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":"                .getSubject();"},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"        Path possiblePreloadedPath \u003d Paths.get(USER_DIR,"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"                DATA,"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"                PRELOADED,"},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"                subjectDirectory,"},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"                unwantedFile + XML_EXTENSION);"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":""},{"lineNumber":93,"author":{"gitId":"theopin"},"content":"        if (preloadedCheatSheets.contains(possiblePreloadedPath)) {"},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"            unwantedFilePath \u003d possiblePreloadedPath;"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"            preloadedCheatSheets.remove(possiblePreloadedPath);"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"            unwantedFilePath \u003d Paths.get(USER_DIR,"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"                    DATA,"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"                    subjectDirectory,"},{"lineNumber":100,"author":{"gitId":"theopin"},"content":"                    unwantedFile + XML_EXTENSION);"},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"        Files.delete(unwantedFilePath);"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"theopin"},"content":""},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"     * Deletes all cheatsheet files from the /data directory in a recursive manner."},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"     * @throws DirectoryIsEmptyException Thrown if the /data directory is missing or empty."},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"    private void clearDataDirectory() throws DirectoryIsEmptyException {"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"        clearDirectory(DATA_DIR);"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":"        "},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"theopin"},"content":""},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"theopin"},"content":"     * Deletes all cheatsheet files from the given directory."},{"lineNumber":117,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"     * @throws DirectoryIsEmptyException Thrown if the /data directory is missing or empty."},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":"    private void clearDirectory(Path directoryPath) throws DirectoryIsEmptyException {"},{"lineNumber":121,"author":{"gitId":"theopin"},"content":"        String[] dataDirectoryFiles \u003d directoryPath.toFile().list();"},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"        if (dataDirectoryFiles \u003d\u003d null) {"},{"lineNumber":123,"author":{"gitId":"theopin"},"content":"            throw new DirectoryIsEmptyException(directoryPath.toString());"},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":""},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"        for (String dataDirectoryFile : dataDirectoryFiles) {"},{"lineNumber":127,"author":{"gitId":"theopin"},"content":"            Path filePath \u003d Paths.get(directoryPath.toString(), dataDirectoryFile);"},{"lineNumber":128,"author":{"gitId":"theopin"},"content":""},{"lineNumber":129,"author":{"gitId":"theopin"},"content":"            if (Files.isDirectory(filePath)) {"},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"                clearDirectory(filePath);"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"                continue;"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"theopin"},"content":""},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"            try {"},{"lineNumber":135,"author":{"gitId":"adhy-p"},"content":"                if (!dataDirectoryFile.equals(\"settings.txt\")) {"},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"                    deleteFile(dataDirectoryFile.replace(XML_EXTENSION, EMPTY));"},{"lineNumber":137,"author":{"gitId":"adhy-p"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"theopin"},"content":"            } catch (IOException e) {"},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"                destroyLogger.log(Level.WARNING, \"IO Directory Error\");"},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"                printer.print(\"CheatLogs could not clear a particular file!\""},{"lineNumber":141,"author":{"gitId":"theopin"},"content":"                        + \"Here is the location of the file that had issues: \""},{"lineNumber":142,"author":{"gitId":"theopin"},"content":"                        + System.lineSeparator()"},{"lineNumber":143,"author":{"gitId":"theopin"},"content":"                        + e.getMessage());"},{"lineNumber":144,"author":{"gitId":"theopin"},"content":""},{"lineNumber":145,"author":{"gitId":"theopin"},"content":"            } catch (CommandException s) {"},{"lineNumber":146,"author":{"gitId":"theopin"},"content":"                destroyLogger.log(Level.WARNING, \"Nonexistent File Error\");"},{"lineNumber":147,"author":{"gitId":"theopin"},"content":"                printer.print(\"This file does not exist: \""},{"lineNumber":148,"author":{"gitId":"theopin"},"content":"                        + dataDirectoryFile"},{"lineNumber":149,"author":{"gitId":"theopin"},"content":"                        .replace(XML_EXTENSION, EMPTY)"},{"lineNumber":150,"author":{"gitId":"theopin"},"content":"                        + System.lineSeparator()"},{"lineNumber":151,"author":{"gitId":"theopin"},"content":"                        + s.getMessage());"},{"lineNumber":152,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"adhy-p"},"content":"        directoryPath.toFile().delete();"},{"lineNumber":155,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"theopin"},"content":""},{"lineNumber":157,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"abnermtj":2,"theopin":147,"adhy-p":8}},{"path":"src/main/java/storage/DataFileReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":""},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import exception.DirectoryIsEmptyException;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import exception.InvalidParamException;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":""},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.Document;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.Node;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.NodeList;"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"import org.xml.sax.SAXException;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":""},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"import settings.Settings;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":""},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.DocumentBuilder;"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.ParserConfigurationException;"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":""},{"lineNumber":20,"author":{"gitId":"theopin"},"content":""},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"import java.io.File;"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"import java.io.InputStream;"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"import java.io.FileOutputStream;"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":""},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"import java.util.ArrayList;"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"import java.util.Enumeration;"},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"import java.util.Scanner;"},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"import java.util.jar.JarEntry;"},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"import java.util.jar.JarFile;"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"import java.util.logging.Level;"},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"import java.util.logging.Logger;"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":""},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":" * Allows the user to read data from the data directory."},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":" * The data are used to update the system settings"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":" * and insert the cheatsheets present in the folder to the application."},{"lineNumber":42,"author":{"gitId":"theopin"},"content":" */"},{"lineNumber":43,"author":{"gitId":"theopin"},"content":"public class DataFileReader extends DataFile {"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":""},{"lineNumber":45,"author":{"gitId":"theopin"},"content":"    public static final int MAX_PATH_LENGTH \u003d 250;"},{"lineNumber":46,"author":{"gitId":"theopin"},"content":""},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"    private final Logger readLogger \u003d Logger.getLogger(\"FileReader\");"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"    private final Settings settings;"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":""},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"    protected String jarDirectory \u003d JAR_DIR;"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"    public static final String ALPHA_NUMERIC_REGEX \u003d \"^[a-zA-Z0-9]+$\";"},{"lineNumber":52,"author":{"gitId":"theopin"},"content":""},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"    private static final ArrayList\u003cString\u003e convertedCheatSheets \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":""},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"    public DataFileReader(Settings settings, Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"        this.settings \u003d settings;"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"        this.printer \u003d printer;"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":""},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"     * Loads the file contents from the data folder. If the file is a settings file,"},{"lineNumber":63,"author":{"gitId":"adhy-p"},"content":"     * this method will parse and apply the saved settings."},{"lineNumber":64,"author":{"gitId":"adhy-p"},"content":"     * Otherwise, it converts the file contents into cheatsheets that can be added into"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"     * the list of cheatsheets. Handles exceptions arising from issues when"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"     * loading files or relevant directories."},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"    public void executeFunction() {"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"            convertedCheatSheets.clear();"},{"lineNumber":72,"author":{"gitId":"adhy-p"},"content":"            loadCheatSheetsAndSettings();"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"            readLogger.log(Level.WARNING, \"Missing Data Directory\");"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"            printer.print(\"The following file is not found: \""},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"            createNewDirectory();"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":""},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"        } catch (DirectoryIsEmptyException d) {"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"            readLogger.log(Level.INFO, \"Empty Directory Present\");"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"            printer.print(\"The following directory is empty!\""},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"                    + d.getMessage());"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":""},{"lineNumber":86,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":""},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"     * Attempts to transfer preloaded cheatsheets from CheatLogs.jar."},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"     * Handles exceptions arising from issues when"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"     * transferring these preloaded cheatsheets into the /data directory."},{"lineNumber":93,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"    public void extractPreloadedCheatSheets() {"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"            extractXmlFilesFromJar();"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"            readLogger.log(Level.WARNING, \"IO File Error\");"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"            printer.print(\"The following file could not be written: \""},{"lineNumber":100,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"theopin"},"content":""},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"     * Extracts the preloaded cheatsheet .xml files from CheatLogs.jar"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"     * and transfers them to the /data dir before executing the reader"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"     * operation."},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"     * @throws IOException Thrown if there are issues with reading and"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"     *                     writing the transferred .xml file as well as"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":"     *                     the files inside CheatLogs.jar."},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"theopin"},"content":"    private void extractXmlFilesFromJar() throws IOException {"},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"        JarFile jarFile \u003d new JarFile(jarDirectory);"},{"lineNumber":116,"author":{"gitId":"theopin"},"content":""},{"lineNumber":117,"author":{"gitId":"theopin"},"content":"        Enumeration\u003cJarEntry\u003e enumEntries \u003d jarFile.entries();"},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"        while (enumEntries.hasMoreElements()) {"},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"            JarEntry currentFile \u003d enumEntries.nextElement();"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":"            String currentFilePath \u003d currentFile.getName();"},{"lineNumber":121,"author":{"gitId":"theopin"},"content":"            if (!currentFilePath.contains(PRELOADED)"},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"                    || !currentFilePath.contains(XML_EXTENSION)) {"},{"lineNumber":123,"author":{"gitId":"theopin"},"content":"                continue;"},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":""},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"            String currentFileDir \u003d filterDir(currentFilePath);"},{"lineNumber":127,"author":{"gitId":"theopin"},"content":""},{"lineNumber":128,"author":{"gitId":"theopin"},"content":"            createNewFile(jarFile, currentFile, currentFilePath, currentFileDir);"},{"lineNumber":129,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"        jarFile.close();"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":""},{"lineNumber":133,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"     * Extracts a string containing the path to the directory in"},{"lineNumber":135,"author":{"gitId":"theopin"},"content":"     * CheatLogs.jar containing the .xml file."},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"theopin"},"content":"     * @param currentFilePath   A string that denotes the path of the file."},{"lineNumber":138,"author":{"gitId":"theopin"},"content":"     * @return                  A string that denotes the path of the file"},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"     *                          directory."},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"theopin"},"content":"    private String filterDir(String currentFilePath) {"},{"lineNumber":142,"author":{"gitId":"theopin"},"content":"        String[] splitPathNames \u003d currentFilePath.split(SLASH);"},{"lineNumber":143,"author":{"gitId":"theopin"},"content":"        String xmlPathName \u003d EMPTY;"},{"lineNumber":144,"author":{"gitId":"theopin"},"content":""},{"lineNumber":145,"author":{"gitId":"theopin"},"content":"        for (String splitPathName : splitPathNames) {"},{"lineNumber":146,"author":{"gitId":"theopin"},"content":"            if (splitPathName.contains(XML_EXTENSION)) {"},{"lineNumber":147,"author":{"gitId":"theopin"},"content":"                xmlPathName \u003d splitPathName;"},{"lineNumber":148,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"theopin"},"content":"        return currentFilePath.replace(xmlPathName, EMPTY);"},{"lineNumber":151,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"theopin"},"content":""},{"lineNumber":153,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"theopin"},"content":"     * Creates a new file within the specified path in the"},{"lineNumber":155,"author":{"gitId":"theopin"},"content":"     * /data directory."},{"lineNumber":156,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"theopin"},"content":"     * @param jarFile            Jarfile which is loading CheatLogs.jar."},{"lineNumber":158,"author":{"gitId":"theopin"},"content":"     * @param currentFile        JarEntry of the file being process."},{"lineNumber":159,"author":{"gitId":"theopin"},"content":"     * @param currentFilePath    String denoting the path to which the"},{"lineNumber":160,"author":{"gitId":"theopin"},"content":"     *                           file should be written to"},{"lineNumber":161,"author":{"gitId":"theopin"},"content":"     * @param currentFileDirPath String denoting the path to the directory"},{"lineNumber":162,"author":{"gitId":"theopin"},"content":"     *                           the relevant file should be stored in."},{"lineNumber":163,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"theopin"},"content":"    private void createNewFile(JarFile jarFile,"},{"lineNumber":165,"author":{"gitId":"theopin"},"content":"                               JarEntry currentFile,"},{"lineNumber":166,"author":{"gitId":"theopin"},"content":"                               String currentFilePath,"},{"lineNumber":167,"author":{"gitId":"theopin"},"content":"                               String currentFileDirPath) throws IOException {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        //@@author theopin-reused"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/1529611 with minor modifications"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path preloadedSubjectDirectory \u003d Paths.get(USER_DIR, DATA, currentFileDirPath);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Path preloadedFileDirectory \u003d Paths.get(USER_DIR, DATA, currentFilePath);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        verifyDirectoryExistence(null, preloadedSubjectDirectory, true);"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        File newFileLocation \u003d new File(preloadedFileDirectory.toString());"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        InputStream inputStream \u003d jarFile.getInputStream(currentFile);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        FileOutputStream outputStream \u003d new FileOutputStream(newFileLocation);"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        while (inputStream.available() \u003e 0) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            outputStream.write(inputStream.read());"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        outputStream.close();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        inputStream.close();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Loads the data obtained from the /data folder."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses and applies the settings to the system if the data is a settings save file,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Converts the data into cheatsheets and adds them to the application otherwise."},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws FileNotFoundException     Thrown if the /data folder is not found"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @throws DirectoryIsEmptyException Thrown if the /data folder is empty"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    protected void loadCheatSheetsAndSettings() throws FileNotFoundException,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            DirectoryIsEmptyException {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!Files.exists(DATA_DIR)) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw new FileNotFoundException();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        File dataDirectory \u003d new File(DATA_DIR.toString());"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String[] directoryItems \u003d dataDirectory.list();"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assert directoryItems !\u003d null;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (directoryItems.length \u003d\u003d 0) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new DirectoryIsEmptyException(DATA);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        extractFromDirectory(DATA_DIR);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Extracts all cheatsheet and settings files from the given directory."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private void extractFromDirectory(Path directoryPath) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        File[] dataDirectoryFiles \u003d directoryPath.toFile().listFiles();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        if (dataDirectoryFiles \u003d\u003d null) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        for (File dataDirectoryFile : dataDirectoryFiles) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            Path filePath \u003d dataDirectoryFile.toPath();"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (Files.isDirectory(filePath)) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                extractFromDirectory(filePath);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            String preloadedFileName \u003d dataDirectoryFile"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .getParentFile()"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .getParentFile()"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .getName();"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"            boolean isPreloadedFile \u003d preloadedFileName.equals(PRELOADED);"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (isPreloadedFile) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                Path cheatSheetPath \u003d dataDirectoryFile.toPath();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                if (preloadedCheatSheets.contains(cheatSheetPath)) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                preloadedCheatSheets.add(cheatSheetPath);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                if (dataDirectoryFile.getName().equals(\"settings.txt\")) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    loadUserSettings(dataDirectoryFile);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    if (!convertedCheatSheets.contains(dataDirectoryFile.getName())) {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                        extractCheatSheet(dataDirectoryFile);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                        convertedCheatSheets.add(dataDirectoryFile.getName());"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            } catch (IOException e) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                readLogger.log(Level.WARNING, \"IO File Error\");"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                printer.print(\"There were issues reading this file: \""},{"lineNumber":256,"author":{"gitId":"-"},"content":"                        + System.lineSeparator()"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                        + e.getMessage());"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"            } catch (ParserConfigurationException f) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                readLogger.log(Level.WARNING, \"XML Parser Error\");"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                printer.print(\"There were issues with building the XML parser: \""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                        + System.lineSeparator()"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                        + f.getMessage());"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"            } catch (SAXException g) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                readLogger.log(Level.WARNING, \"SAX Read File Error\");"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                printer.print(\"There were issues with the usage of the XML parser: \""},{"lineNumber":268,"author":{"gitId":"-"},"content":"                        + System.lineSeparator()"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                        + g.getMessage());"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"            } catch (InvalidParamException h) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                readLogger.log(Level.WARNING, \"XML File Param Error\");"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                printer.print(\"There were issues with the particular segment of the XML file!\""},{"lineNumber":274,"author":{"gitId":"-"},"content":"                        + System.lineSeparator()"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                        + h.getMessage());"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Extracts the contents of the cheatsheet from the specified file."},{"lineNumber":282,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     * @param cheatSheetDocument File of the cheatSheet"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * @throws IOException                       Thrown if an I/O error prevents the file from"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     *                                           being fully parsed."},{"lineNumber":286,"author":{"gitId":"-"},"content":"     * @throws ParserConfigurationException      Thrown if a serious configuration error is caught."},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * @throws SAXException                      Thrown if a basic error or warning information"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     *                                           from either the XML parser or the application is caught."},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * @throws InvalidParamException   Thrown if the xml file content section"},{"lineNumber":290,"author":{"gitId":"-"},"content":"     *                                           is not alphanumeric."},{"lineNumber":291,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    private void extractCheatSheet(File cheatSheetDocument) throws IOException,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            ParserConfigurationException,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            SAXException,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            InvalidParamException {"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Node favouriteElement \u003d null;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Node subjectElement \u003d null;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        Node contentElement \u003d null;"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        DocumentBuilder documentBuilder \u003d getDocumentBuilder();"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        Document cheatSheetXml \u003d documentBuilder.parse(cheatSheetDocument);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        cheatSheetXml.getDocumentElement().normalize();"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"        NodeList sectionNodes \u003d cheatSheetXml.getDocumentElement().getChildNodes();"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        int numSections \u003d sectionNodes.getLength();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSections; i++) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            switch (sectionNodes.item(i).getNodeName()) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            case FAVOURITE_ELEMENT:"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                favouriteElement \u003d sectionNodes.item(i);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            case SUBJECT_ELEMENT:"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                subjectElement \u003d sectionNodes.item(i);"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            case CONTENTS_ELEMENT:"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                contentElement \u003d sectionNodes.item(i);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        bundleCheatSheetComponents(cheatSheetDocument,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                favouriteElement,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                subjectElement,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                contentElement);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * Extracts and bundles components together to create a new cheatSheet."},{"lineNumber":331,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * @param cheatSheetDocument                 File of the cheatSheet"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * @param favouriteElement                   Node containing the favourite status"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     *                                           of the cheatsheet."},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * @param subjectElement                     Node containing the subject of the"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     *                                           cheatsheet."},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * @param contentElement                     Node containing the details of the"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *                                           cheatsheet."},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @throws InvalidParamException             Thrown if the xml file content section"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     *                                           is not alphanumeric."},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    private void bundleCheatSheetComponents(File cheatSheetDocument,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                                            Node favouriteElement,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                                            Node subjectElement,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                                            Node contentElement)"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            throws InvalidParamException {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        String cheatSheetName \u003d cheatSheetDocument"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                .getName()"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                .replace(XML_EXTENSION, EMPTY);"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"        boolean isMarkedFavourite \u003d extractFavouriteStatus(favouriteElement);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        String cheatSheetSubject \u003d extractCheatSheetSection(subjectElement);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        String cheatSheetContent \u003d extractCheatSheetSection(contentElement);"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        if (!cheatSheetSubject.matches(ALPHA_NUMERIC_REGEX)) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            throw new InvalidParamException(\"subject\");"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        } else if (!cheatSheetName.matches(ALPHA_NUMERIC_REGEX)) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            throw new InvalidParamException(\"name\");"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        createNewCheatSheet(isMarkedFavourite,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                cheatSheetName.substring(0, Math.min(cheatSheetName.length(),"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                        MAX_PATH_LENGTH)),"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                cheatSheetSubject.substring(0, Math.min(cheatSheetSubject.length(),"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                        MAX_PATH_LENGTH)),"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                cheatSheetContent);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * Extracts the favourite status of the referenced cheatSheet."},{"lineNumber":372,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * @param favouriteElement      Node containing the favourite status of the cheatSheet."},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * @return isMarkedFavourite    Boolean indicating if the cheatSheet should be marked as"},{"lineNumber":375,"author":{"gitId":"-"},"content":"     *                              a favourite."},{"lineNumber":376,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private boolean extractFavouriteStatus(Node favouriteElement) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        boolean isMarkedFavourite;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            isMarkedFavourite \u003d favouriteElement"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                    .getFirstChild()"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                    .getTextContent()"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                    .toUpperCase()"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                    .equals(YES);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            isMarkedFavourite \u003d false;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        return isMarkedFavourite;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":392,"author":{"gitId":"-"},"content":"     * Extracts the section of the referenced cheatSheet."},{"lineNumber":393,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":394,"author":{"gitId":"-"},"content":"     * @param relevantElement Node containing the contents of the cheatSheet."},{"lineNumber":395,"author":{"gitId":"-"},"content":"     * @return cheatsheetContent String containing the contents of the cheatSheet."},{"lineNumber":396,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    private String extractCheatSheetSection(Node relevantElement) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String cheatSheetSection;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            cheatSheetSection \u003d relevantElement"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                    .getFirstChild()"},{"lineNumber":402,"author":{"gitId":"-"},"content":"                    .getTextContent();"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            cheatSheetSection \u003d EMPTY;"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        return cheatSheetSection;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":410,"author":{"gitId":"-"},"content":"     * Creates a new cheatsheet based on the parameters provided"},{"lineNumber":411,"author":{"gitId":"-"},"content":"     * and adds it to CheatSheetList."},{"lineNumber":412,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":413,"author":{"gitId":"-"},"content":"     * @param isMarkedFavourite Indicator of the favourite status of the cheatSheet."},{"lineNumber":414,"author":{"gitId":"-"},"content":"     * @param cheatSheetName    Name of the cheatSheet."},{"lineNumber":415,"author":{"gitId":"-"},"content":"     * @param cheatSheetContent Contents of the cheatSheet."},{"lineNumber":416,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    private void createNewCheatSheet(boolean isMarkedFavourite,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                                     String cheatSheetName,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                                     String cheatSheetSubject,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                                     String cheatSheetContent) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        CheatSheet newCheatSheet \u003d new CheatSheet(cheatSheetName,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                cheatSheetSubject,"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                cheatSheetContent);"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"        newCheatSheet.setFavourite(isMarkedFavourite);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        cheatSheetList.add(newCheatSheet);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":430,"author":{"gitId":"-"},"content":"     * Reads the save file line by line and passes each line to applySettings method."},{"lineNumber":431,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    private void loadUserSettings(File settingsFile) throws IOException {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        Scanner scanner \u003d new Scanner(settingsFile);"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            applySettings(scanner.nextLine());"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":440,"author":{"gitId":"-"},"content":"     * Applies the settings retrieved from the settings.txt save file."},{"lineNumber":441,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    private void applySettings(String serializedSettings) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        String[] components \u003d serializedSettings.split(\" \");"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            assert components.length \u003d\u003d 2;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            String settingType \u003d components[0];"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            String settingValue \u003d components[1];"},{"lineNumber":448,"author":{"gitId":"-"},"content":"            if (settingType.equals(\"COLOR\")) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                settings.setColor(Integer.parseInt(settingValue), true);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            } else if (settingType.equals(\"HELPMESSAGE\")) {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                settings.setDisplayingHelpMessages(Boolean.parseBoolean(settingValue), true);"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            readLogger.log(Level.WARNING, \"The settings.txt file may be corrupted. \""},{"lineNumber":455,"author":{"gitId":"-"},"content":"                    + \"Running program using default settings\\n\");"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":458,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"abnermtj":3,"theopin":152,"-":291,"adhy-p":12}},{"path":"src/main/java/storage/DataFileWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":""},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.DocumentBuilder;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import javax.xml.parsers.ParserConfigurationException;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":""},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.OutputKeys;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.Transformer;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.TransformerException;"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.TransformerFactory;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.dom.DOMSource;"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"import javax.xml.transform.stream.StreamResult;"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":""},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"import java.io.FileWriter;"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":""},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"import java.util.ArrayList;"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"import java.util.logging.Level;"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"import java.util.logging.Logger;"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":""},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.Document;"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.Element;"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":"import org.w3c.dom.Text;"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"import settings.Settings;"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"import ui.Printer;"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":""},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":" * Allows the user to save the current settings into a file"},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":" * and write data based on the cheatSheets currently present"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":" * in the list of cheatSheets into individual files."},{"lineNumber":36,"author":{"gitId":"theopin"},"content":" */"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"public class DataFileWriter extends DataFile {"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"    private ArrayList\u003cCheatSheet\u003e cheatSheets;"},{"lineNumber":39,"author":{"gitId":"theopin"},"content":""},{"lineNumber":40,"author":{"gitId":"theopin"},"content":""},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"    private final Logger writeLogger \u003d Logger.getLogger(\"FileWriter\");"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":""},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"    private Settings settings;"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":""},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"    public DataFileWriter(Settings settings, Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"        this.settings \u003d settings;"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"        this.printer \u003d printer;"},{"lineNumber":48,"author":{"gitId":"adhy-p"},"content":"        this.cheatSheetList \u003d cheatSheetList;"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"     * Converts the cheatSheets present in the list of cheatSheet into"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"     * a string. This string is then saved in an xml file, 1 file"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"     * for each cheatSheet. Subsequently, it retrieves the current settings"},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"     * and parses them into a string. This strings is then saved"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"     * in a txt file called settings.txt."},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"    public void executeFunction() {"},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":"        cheatSheets \u003d cheatSheetList.getList();"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"        storeCheatSheet();"},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"        saveSettings();"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":""},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"     * Converts each cheatSheet present in the list of cheatSheets into"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"     * a file, provided it its modifiable."},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"    private void storeCheatSheet() {"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        int cheatSheetsSize \u003d cheatSheets.size();"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"        if (cheatSheetsSize \u003e 0) {"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"            for (CheatSheet cheatSheet : cheatSheets) {"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"                convertCheatSheetToFile(cheatSheet);"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":""},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"     * Converts the cheatSheet into a file format."},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet The cheatSheet that is currently being converted into a file."},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"    public void convertCheatSheetToFile(CheatSheet cheatSheet) {"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"        String subjectName \u003d cheatSheet.getSubject();"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"        String fileName \u003d cheatSheet.getName() + XML_EXTENSION;"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":""},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"        Path subjectDirectory \u003d Paths.get(USER_DIR, DATA, subjectName);"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"        Path possiblePreloadedFile \u003d Paths.get(USER_DIR, DATA,"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"                PRELOADED, subjectName, fileName);"},{"lineNumber":90,"author":{"gitId":"theopin"},"content":""},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"        Path preloadedSubjectDirectory \u003d Paths.get(USER_DIR, DATA, PRELOADED, subjectName);"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"        Path textFile \u003d Paths.get(USER_DIR, DATA, subjectName, fileName);"},{"lineNumber":93,"author":{"gitId":"theopin"},"content":""},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"            initiateWriteProcess(cheatSheet,"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"                    subjectDirectory,"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"                    possiblePreloadedFile,"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"                    preloadedSubjectDirectory,"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"                    textFile);"},{"lineNumber":100,"author":{"gitId":"theopin"},"content":""},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"            writeLogger.log(Level.WARNING, \"IO File Error\");"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"            printer.print(\"The following file could not be written: \""},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":""},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"        } catch (ParserConfigurationException e) {"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"            writeLogger.log(Level.WARNING, \"XML Parser Error\");"},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"            printer.print(\"There were issues with building the XML parser: \""},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":""},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"        } catch (TransformerException e) {"},{"lineNumber":114,"author":{"gitId":"theopin"},"content":"            writeLogger.log(Level.WARNING, \"XML File Transformer Error\");"},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"            printer.print(\"This file could not be converted into an XML file: \""},{"lineNumber":116,"author":{"gitId":"theopin"},"content":"                    + System.lineSeparator()"},{"lineNumber":117,"author":{"gitId":"theopin"},"content":"                    + e.getMessage());"},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":""},{"lineNumber":121,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"     * Attempts to write the indicated cheatsheet into an .xml file."},{"lineNumber":123,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet                    The cheatSheet that is currently being converted"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":"     *                                      into a file."},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"     * @param possiblePreloadedFile         Path of the file assuming that it was preloaded."},{"lineNumber":127,"author":{"gitId":"theopin"},"content":"     * @param preloadedSubjectDirectory     Path of the directory containing the file"},{"lineNumber":128,"author":{"gitId":"theopin"},"content":"     *                                      assuming that it was preloaded."},{"lineNumber":129,"author":{"gitId":"theopin"},"content":"     * @param textFile                      The default path of the file."},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"     * @throws IOException                  Thrown if there are issues with reading and"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":"     *                                      writing the transferred .xml file"},{"lineNumber":133,"author":{"gitId":"theopin"},"content":"     * @throws ParserConfigurationException Thrown if a serious configuration error is"},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"     *                                      detected."},{"lineNumber":135,"author":{"gitId":"theopin"},"content":"     * @throws TransformerException         Thrown if there an exceptional condition occurs"},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"     *                                      during the transformation process."},{"lineNumber":137,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"    private void initiateWriteProcess(CheatSheet cheatSheet,"},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"                                      Path subjectDirectory,"},{"lineNumber":141,"author":{"gitId":"theopin"},"content":"                                      Path possiblePreloadedFile,"},{"lineNumber":142,"author":{"gitId":"theopin"},"content":"                                      Path preloadedSubjectDirectory,"},{"lineNumber":143,"author":{"gitId":"theopin"},"content":"                                      Path textFile) throws IOException,"},{"lineNumber":144,"author":{"gitId":"theopin"},"content":"            ParserConfigurationException,"},{"lineNumber":145,"author":{"gitId":"theopin"},"content":"            TransformerException {"},{"lineNumber":146,"author":{"gitId":"theopin"},"content":"        boolean isPreloadedFile \u003d preloadedCheatSheets.contains(possiblePreloadedFile);"},{"lineNumber":147,"author":{"gitId":"theopin"},"content":"        if (isPreloadedFile) {"},{"lineNumber":148,"author":{"gitId":"theopin"},"content":"            textFile \u003d possiblePreloadedFile;"},{"lineNumber":149,"author":{"gitId":"theopin"},"content":"            subjectDirectory \u003d null;"},{"lineNumber":150,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"theopin"},"content":""},{"lineNumber":152,"author":{"gitId":"theopin"},"content":"        verifyDirectoryExistence(subjectDirectory,"},{"lineNumber":153,"author":{"gitId":"theopin"},"content":"                preloadedSubjectDirectory,"},{"lineNumber":154,"author":{"gitId":"theopin"},"content":"                isPreloadedFile);"},{"lineNumber":155,"author":{"gitId":"theopin"},"content":""},{"lineNumber":156,"author":{"gitId":"theopin"},"content":"        if (!Files.exists(textFile)) {"},{"lineNumber":157,"author":{"gitId":"theopin"},"content":"            Files.createFile(textFile);"},{"lineNumber":158,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"theopin"},"content":""},{"lineNumber":160,"author":{"gitId":"theopin"},"content":"        Document cheatSheetFile \u003d buildFileContents(cheatSheet);"},{"lineNumber":161,"author":{"gitId":"theopin"},"content":""},{"lineNumber":162,"author":{"gitId":"theopin"},"content":"        writeToFile(textFile, cheatSheetFile);"},{"lineNumber":163,"author":{"gitId":"theopin"},"content":"        updateDirectory(DATA_DIR.toFile());"},{"lineNumber":164,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"theopin"},"content":""},{"lineNumber":166,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"theopin"},"content":"     * Sets the contents for the respective cheatSheet file."},{"lineNumber":168,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet                     The cheatSheet that is currently being converted into a file."},{"lineNumber":170,"author":{"gitId":"theopin"},"content":"     * @return xmlFileStructure              A document containing relevant data of the cheatsheet"},{"lineNumber":171,"author":{"gitId":"theopin"},"content":"     *                                       in a .xml file format."},{"lineNumber":172,"author":{"gitId":"theopin"},"content":"     * @throws ParserConfigurationException Thrown if a serious configuration error is detected."},{"lineNumber":173,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"theopin"},"content":"    private Document buildFileContents(CheatSheet cheatSheet) throws ParserConfigurationException {"},{"lineNumber":175,"author":{"gitId":"theopin"},"content":"        DocumentBuilder documentBuilder \u003d getDocumentBuilder();"},{"lineNumber":176,"author":{"gitId":"theopin"},"content":"        Document xmlFileStructure \u003d documentBuilder.newDocument();"},{"lineNumber":177,"author":{"gitId":"theopin"},"content":""},{"lineNumber":178,"author":{"gitId":"theopin"},"content":"        Element mainRoot \u003d xmlFileStructure.createElement(MAIN_ELEMENT);"},{"lineNumber":179,"author":{"gitId":"theopin"},"content":"        xmlFileStructure.appendChild(mainRoot);"},{"lineNumber":180,"author":{"gitId":"theopin"},"content":""},{"lineNumber":181,"author":{"gitId":"theopin"},"content":"        insertFavouriteStatus(cheatSheet, xmlFileStructure, mainRoot);"},{"lineNumber":182,"author":{"gitId":"theopin"},"content":"        insertFileSubject(cheatSheet, xmlFileStructure, mainRoot);"},{"lineNumber":183,"author":{"gitId":"theopin"},"content":"        insertFileContents(cheatSheet, xmlFileStructure, mainRoot);"},{"lineNumber":184,"author":{"gitId":"theopin"},"content":""},{"lineNumber":185,"author":{"gitId":"theopin"},"content":"        return xmlFileStructure;"},{"lineNumber":186,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"theopin"},"content":""},{"lineNumber":188,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":189,"author":{"gitId":"theopin"},"content":"     * Sets the favourite status for the respective cheatSheet file."},{"lineNumber":190,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":191,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet                    The cheatSheet that is currently being converted into a file."},{"lineNumber":192,"author":{"gitId":"theopin"},"content":"     * @param xmlFileStructure              A document containing relevant data of the cheatsheet"},{"lineNumber":193,"author":{"gitId":"theopin"},"content":"     *                                      in a .xml file format."},{"lineNumber":194,"author":{"gitId":"theopin"},"content":"     * @param mainRoot                      The root that the created element needs to be joined to."},{"lineNumber":195,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"theopin"},"content":"    private void insertFavouriteStatus(CheatSheet cheatSheet,"},{"lineNumber":197,"author":{"gitId":"theopin"},"content":"                                       Document xmlFileStructure,"},{"lineNumber":198,"author":{"gitId":"theopin"},"content":"                                       Element mainRoot) {"},{"lineNumber":199,"author":{"gitId":"theopin"},"content":"        String favouriteStatus \u003d cheatSheet.getIsFavourite()"},{"lineNumber":200,"author":{"gitId":"theopin"},"content":"                ? YES"},{"lineNumber":201,"author":{"gitId":"theopin"},"content":"                : NO;"},{"lineNumber":202,"author":{"gitId":"theopin"},"content":"        Element favouriteElement \u003d xmlFileStructure.createElement(FAVOURITE_ELEMENT);"},{"lineNumber":203,"author":{"gitId":"theopin"},"content":"        appendToFileStructure(xmlFileStructure,"},{"lineNumber":204,"author":{"gitId":"theopin"},"content":"                mainRoot,"},{"lineNumber":205,"author":{"gitId":"theopin"},"content":"                favouriteStatus,"},{"lineNumber":206,"author":{"gitId":"theopin"},"content":"                favouriteElement);"},{"lineNumber":207,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"theopin"},"content":""},{"lineNumber":209,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"theopin"},"content":"     * Sets the subject for the respective cheatSheet file."},{"lineNumber":211,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet                    The cheatSheet that is currently being converted into a file."},{"lineNumber":213,"author":{"gitId":"theopin"},"content":"     * @param xmlFileStructure              A document containing relevant data of the cheatsheet"},{"lineNumber":214,"author":{"gitId":"theopin"},"content":"     *                                      in a .xml file format."},{"lineNumber":215,"author":{"gitId":"theopin"},"content":"     * @param mainRoot                      The root that the created element needs to be joined to."},{"lineNumber":216,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":217,"author":{"gitId":"theopin"},"content":"    private void insertFileSubject(CheatSheet cheatSheet,"},{"lineNumber":218,"author":{"gitId":"theopin"},"content":"                                   Document xmlFileStructure,"},{"lineNumber":219,"author":{"gitId":"theopin"},"content":"                                   Element mainRoot) {"},{"lineNumber":220,"author":{"gitId":"theopin"},"content":"        String fileContent \u003d cheatSheet.getSubject();"},{"lineNumber":221,"author":{"gitId":"theopin"},"content":"        Element fileContentElement \u003d xmlFileStructure.createElement(SUBJECT_ELEMENT);"},{"lineNumber":222,"author":{"gitId":"theopin"},"content":"        appendToFileStructure(xmlFileStructure,"},{"lineNumber":223,"author":{"gitId":"theopin"},"content":"                mainRoot,"},{"lineNumber":224,"author":{"gitId":"theopin"},"content":"                fileContent,"},{"lineNumber":225,"author":{"gitId":"theopin"},"content":"                fileContentElement);"},{"lineNumber":226,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"theopin"},"content":""},{"lineNumber":228,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"theopin"},"content":"     * Sets the contents for the respective cheatSheet file."},{"lineNumber":230,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":231,"author":{"gitId":"theopin"},"content":"     * @param cheatSheet                    The cheatSheet that is currently being converted into a file."},{"lineNumber":232,"author":{"gitId":"theopin"},"content":"     * @param xmlFileStructure              A document containing relevant data of the cheatsheet"},{"lineNumber":233,"author":{"gitId":"theopin"},"content":"     *                                      in a .xml file format."},{"lineNumber":234,"author":{"gitId":"theopin"},"content":"     * @param mainRoot                      The root that the created element needs to be joined to."},{"lineNumber":235,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"theopin"},"content":"    private void insertFileContents(CheatSheet cheatSheet,"},{"lineNumber":237,"author":{"gitId":"theopin"},"content":"                                    Document xmlFileStructure,"},{"lineNumber":238,"author":{"gitId":"theopin"},"content":"                                    Element mainRoot) {"},{"lineNumber":239,"author":{"gitId":"theopin"},"content":"        String fileContent \u003d cheatSheet.getDetails();"},{"lineNumber":240,"author":{"gitId":"theopin"},"content":"        Element fileContentElement \u003d xmlFileStructure.createElement(CONTENTS_ELEMENT);"},{"lineNumber":241,"author":{"gitId":"theopin"},"content":"        appendToFileStructure(xmlFileStructure,"},{"lineNumber":242,"author":{"gitId":"theopin"},"content":"                mainRoot,"},{"lineNumber":243,"author":{"gitId":"theopin"},"content":"                fileContent,"},{"lineNumber":244,"author":{"gitId":"theopin"},"content":"                fileContentElement);"},{"lineNumber":245,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"theopin"},"content":""},{"lineNumber":247,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"theopin"},"content":"     * Sets the contents for the respective cheatSheet file."},{"lineNumber":249,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":250,"author":{"gitId":"theopin"},"content":"     * @param xmlFileStructure   A document containing relevant data of the cheatsheet"},{"lineNumber":251,"author":{"gitId":"theopin"},"content":"     *                           in a .xml file format."},{"lineNumber":252,"author":{"gitId":"theopin"},"content":"     * @param mainRoot           The root that the created element needs to be joined to."},{"lineNumber":253,"author":{"gitId":"theopin"},"content":"     * @param fileContent        Section of the file that needs to be converted to a text node."},{"lineNumber":254,"author":{"gitId":"theopin"},"content":"     * @param fileContentElement Element that needs to be appended to the main root."},{"lineNumber":255,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":256,"author":{"gitId":"theopin"},"content":"    private void appendToFileStructure(Document xmlFileStructure,"},{"lineNumber":257,"author":{"gitId":"theopin"},"content":"                                       Element mainRoot,"},{"lineNumber":258,"author":{"gitId":"theopin"},"content":"                                       String fileContent,"},{"lineNumber":259,"author":{"gitId":"theopin"},"content":"                                       Element fileContentElement) {"},{"lineNumber":260,"author":{"gitId":"theopin"},"content":"        Text fileContentTextNode \u003d xmlFileStructure.createTextNode(fileContent);"},{"lineNumber":261,"author":{"gitId":"theopin"},"content":"        fileContentElement.appendChild(fileContentTextNode);"},{"lineNumber":262,"author":{"gitId":"theopin"},"content":"        mainRoot.appendChild(fileContentElement);"},{"lineNumber":263,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"theopin"},"content":""},{"lineNumber":265,"author":{"gitId":"theopin"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"theopin"},"content":"     * Writes formatted attributes of the cheatsheet into an xml file."},{"lineNumber":267,"author":{"gitId":"theopin"},"content":"     *"},{"lineNumber":268,"author":{"gitId":"theopin"},"content":"     * @param fileDirectory             Name of the file."},{"lineNumber":269,"author":{"gitId":"theopin"},"content":"     * @param xmlFileContents           Contents of the file in xml format."},{"lineNumber":270,"author":{"gitId":"theopin"},"content":"     * @throws TransformerException     Thrown if there an exceptional condition occurs"},{"lineNumber":271,"author":{"gitId":"theopin"},"content":"     *                                  during the transformation process."},{"lineNumber":272,"author":{"gitId":"theopin"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"theopin"},"content":"    private void writeToFile(Path fileDirectory, Document xmlFileContents)"},{"lineNumber":274,"author":{"gitId":"theopin"},"content":"            throws TransformerException {"},{"lineNumber":275,"author":{"gitId":"theopin"},"content":"        Transformer transformer \u003d TransformerFactory"},{"lineNumber":276,"author":{"gitId":"theopin"},"content":"                .newInstance()"},{"lineNumber":277,"author":{"gitId":"theopin"},"content":"                .newTransformer();"},{"lineNumber":278,"author":{"gitId":"theopin"},"content":""},{"lineNumber":279,"author":{"gitId":"theopin"},"content":"        transformer.setOutputProperty(OutputKeys.INDENT, YES);"},{"lineNumber":280,"author":{"gitId":"theopin"},"content":"        DOMSource fileSource \u003d new DOMSource(xmlFileContents);"},{"lineNumber":281,"author":{"gitId":"theopin"},"content":"        StreamResult fileResult \u003d new StreamResult(fileDirectory.toFile());"},{"lineNumber":282,"author":{"gitId":"theopin"},"content":""},{"lineNumber":283,"author":{"gitId":"theopin"},"content":"        transformer.transform(fileSource, fileResult);"},{"lineNumber":284,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"theopin"},"content":""},{"lineNumber":286,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":287,"author":{"gitId":"adhy-p"},"content":"     * Gets the current settings and parses them into strings."},{"lineNumber":288,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":289,"author":{"gitId":"adhy-p"},"content":"    private void saveSettings() {"},{"lineNumber":290,"author":{"gitId":"adhy-p"},"content":"        boolean isDisplayingHelpMessages \u003d settings.getDisplayingHelpMessages();"},{"lineNumber":291,"author":{"gitId":"adhy-p"},"content":"        int colorOption \u003d settings.getColorOption();"},{"lineNumber":292,"author":{"gitId":"adhy-p"},"content":"        StringBuilder saveData \u003d new StringBuilder();"},{"lineNumber":293,"author":{"gitId":"adhy-p"},"content":"        saveData.append(\"COLOR \").append(colorOption).append(\"\\n\");"},{"lineNumber":294,"author":{"gitId":"adhy-p"},"content":"        saveData.append(\"HELPMESSAGE \").append(isDisplayingHelpMessages).append(\"\\n\");"},{"lineNumber":295,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":296,"author":{"gitId":"adhy-p"},"content":"            writeToTxtFile(saveData.toString());"},{"lineNumber":297,"author":{"gitId":"adhy-p"},"content":"        } catch (IOException e) {"},{"lineNumber":298,"author":{"gitId":"adhy-p"},"content":"            printer.print(e.getMessage());"},{"lineNumber":299,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":302,"author":{"gitId":"adhy-p"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"adhy-p"},"content":"     * Writes the save data to data/settings.txt"},{"lineNumber":304,"author":{"gitId":"adhy-p"},"content":"     */"},{"lineNumber":305,"author":{"gitId":"adhy-p"},"content":"    private void writeToTxtFile(String saveData) throws IOException {"},{"lineNumber":306,"author":{"gitId":"adhy-p"},"content":"        FileWriter fileWriter \u003d new FileWriter(DATA_DIR + SETTINGS_FILENAME);"},{"lineNumber":307,"author":{"gitId":"adhy-p"},"content":"        fileWriter.write(saveData);"},{"lineNumber":308,"author":{"gitId":"adhy-p"},"content":"        fileWriter.close();"},{"lineNumber":309,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"domaxi":1,"abnermtj":4,"theopin":268,"adhy-p":37}},{"path":"src/main/java/ui/ConsoleColorsEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"// This class holds the ANSI escape codes used to format console output."},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"public enum ConsoleColorsEnum {"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"    BLACK_TEXT(\"\\u001B[30m\"),"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    RED_TEXT(\"\\u001B[31m\"),"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"    GREEN_TEXT(\"\\u001B[32m\"),"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    YELLOW_TEXT(\"\\u001B[33m\"),"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    BLUE_TEXT(\"\\u001B[34m\"),"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    MAGENTA_TEXT(\"\\u001B[35m\"),"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    CYAN_TEXT(\"\\u001B[36m\"),"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    WHITE_TEXT(\"\\u001B[37m\"),"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"    BOLD_BLACK_TEXT(\"\\u001B[30;1m\"),"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"    BOLD_RED_TEXT(\"\\u001B[31;1m\"),"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"    BOLD_GREEN_TEXT(\"\\u001B[32;1m\"),"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"    BOLD_YELLOW_TEXT(\"\\u001B[33;1m\"),"},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":"    BOLD_BLUE_TEXT(\"\\u001B[34;1m\"),"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"    BOLD_MAGENTA_TEXT(\"\\u001B[35;1m\"),"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"    BOLD_CYAN_TEXT(\"\\u001B[36;1m\"),"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"    BOLD_WHITE_TEXT(\"\\u001B[37;1m\"),"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_BLACK_TEXT(\"\\u001B[90m\"),"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_RED_TEXT(\"\\u001B[91m\"),"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_GREEN_TEXT(\"\\u001B[92m\"),"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_YELLOW_TEXT(\"\\u001B[93m\"),"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_BLUE_TEXT(\"\\u001B[94m\"),"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_MAGENTA_TEXT(\"\\u001B[95m\"),"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_CYAN_TEXT(\"\\u001B[96m\"),"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"    BRIGHT_WHITE_TEXT(\"\\u001B[97m\"),"},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    BLACK_TEXT_BG(\"\\u001B[40m\"),"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    RED_TEXT_BG(\"\\u001B[41m\"),"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"    GREEN_TEXT_BG(\"\\u001B[42m\"),"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    YELLOW_TEXT_BG(\"\\u001B[43m\"),"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    BLUE_TEXT_BG(\"\\u001B[44m\"),"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    MAGENTA_TEXT_BG(\"\\u001B[45m\"),"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"    CYAN_TEXT_BG(\"\\u001B[46m\"),"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"    WHITE_TEXT_BG(\"\\u001B[47m\"),"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"    BOLD(\"\\u001B[1m\"),"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"    RESET_TEXT(\"\\u001b[37m\");"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"    private String ansiCode;"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"     * Constructor for ConsoleColorsEnum object which sets the exact ANSI code it holds."},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"    ConsoleColorsEnum(String ansiCode) {"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"        this.ansiCode \u003d ansiCode;"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"     * Returns a string representation of the object."},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"        return ansiCode;"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":41,"adhy-p":20}},{"path":"src/main/java/ui/Printer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import command.ClearCommand;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import command.Command;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import command.EditCommand;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"import command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":" * This class manages the output of text."},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":" */"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"public class Printer {"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":20,"author":{"gitId":"domaxi"},"content":"    private static final String LINE \u003d \"----------------------------------------------------------------\""},{"lineNumber":21,"author":{"gitId":"domaxi"},"content":"            + \"----------------------------------------\";"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum textColor;"},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum favColor;"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum logoColor;"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum nameColor;"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum subjectColor;"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum detailsColor;"},{"lineNumber":30,"author":{"gitId":"domaxi"},"content":"    public ConsoleColorsEnum alertColor;"},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":"    public ConsoleColorsEnum reset;"},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    public Printer() {"},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"        textColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"        favColor \u003d ConsoleColorsEnum.BRIGHT_YELLOW_TEXT;"},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"        logoColor \u003d ConsoleColorsEnum.BRIGHT_CYAN_TEXT;"},{"lineNumber":37,"author":{"gitId":"adhy-p"},"content":"        nameColor \u003d ConsoleColorsEnum.BRIGHT_CYAN_TEXT;"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"        subjectColor \u003d ConsoleColorsEnum.BRIGHT_BLUE_TEXT;"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"        detailsColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":40,"author":{"gitId":"domaxi"},"content":"        alertColor \u003d ConsoleColorsEnum.BOLD_RED_TEXT;"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"        reset \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"    public void print(Object obj) {"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"        System.out.println(obj);"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"    public void printWelcomeScreen() {"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"        print(logoColor"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"                + \" ________  ___  ___  _______   ________  _________  ________  \""},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"                + \"___  ___  _______   _______  _________\" + NEWLINE"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"                + \"|\\\\   ____\\\\|\\\\  \\\\|\\\\  \\\\|\\\\  ___ \\\\ |\\\\   __  \\\\|\\\\___   ___\\\\\""},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\   ____\\\\|\\\\  \\\\|\\\\  \\\\|\\\\  ___ \\\\ |\\\\  ___ \\\\|\\\\___   ___\\\\\" + NEWLINE"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\ \\\\  \\\\___|\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __/|\\\\ \\\\  \\\\|\\\\  \\\\|___ \\\\  \""},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\_\\\\ \\\\  \\\\___|\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __/|\\\\ \\\\   __/\\\\|___ \\\\  \\\\_|\" + NEWLINE"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"                + \" \\\\ \\\\  \\\\    \\\\ \\\\   __  \\\\ \\\\  \\\\_|/_\\\\ \\\\   __  \\\\   \\\\ \\\\  \\\\ \""},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\ \\\\_____  \\\\ \\\\   __  \\\\ \\\\  \\\\_|/_\\\\ \\\\  \\\\_|/__  \\\\ \\\\  \\\\\" + NEWLINE"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"                + \"  \\\\ \\\\  \\\\____\\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\ \\\\  \\\\   \\\\ \\\\  \""},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\ \\\\|____|\\\\  \\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\_|\\\\ \\\\  \\\\ \\\\  \\\\\" + NEWLINE"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"                + \"   \\\\ \\\\_______\\\\ \\\\__\\\\ \\\\__\\\\ \\\\_______\\\\ \\\\__\\\\ \\\\__\\\\   \\\\ \\\\__\""},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\  ____\\\\_\\\\  \\\\ \\\\__\\\\ \\\\__\\\\ \\\\_______\\\\ \\\\_______\\\\  \\\\ \\\\__\\\\\" + NEWLINE"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"                + \"    \\\\|_______|\\\\|__|\\\\|__|\\\\|_______|\\\\|__|\\\\|__|    \\\\|__| |\\\\____\""},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"                + \"_____\\\\|__|\\\\|__|\\\\|_______|\\\\|_______|   \\\\|__|\" + NEWLINE"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"                + \"                                      ___       ________  ________\" + NEWLINE"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"                + \"                                     |\\\\  \\\\     |\\\\   __  \\\\|\\\\   ____\\\\\" + NEWLINE"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"                + \"                                     \\\\ \\\\  \\\\    \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\___|\" + NEWLINE"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"                + \"                                      \\\\ \\\\  \\\\    \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\  ___\" + NEWLINE"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"                + \"                                       \\\\ \\\\  \\\\____\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\\" + NEWLINE"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"                + \"                                        \\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\\" + NEWLINE"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"                + \"                                         \\\\|_______|\\\\|_______|\\\\|_______|\" + NEWLINE"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"                + LINE + NEWLINE"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"                + \"Welcome to CheatLogs, the one stop cheat sheet management systems\" + NEWLINE"},{"lineNumber":73,"author":{"gitId":"domaxi"},"content":"                + \"Your CAP is our upmost priority\""},{"lineNumber":74,"author":{"gitId":"adhy-p"},"content":"                + reset"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"        );"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"    public void printExitLogo() {"},{"lineNumber":79,"author":{"gitId":"adhy-p"},"content":"        print(logoColor"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"                + \" ________  ________  ________  ________  ________      ___    ___ _______\" + NEWLINE"},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"                + \"|\\\\   ____\\\\|\\\\   __  \\\\|\\\\   __  \\\\|\\\\   ___ \\\\|\\\\   __  \""},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\    |\\\\  \\\\  /  /|\\\\  ___ \\\\\" + NEWLINE"},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\ \\\\  \\\\___|\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \""},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\|\\\\ /_   \\\\ \\\\  \\\\/  / | \\\\   __/|\" + NEWLINE"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"                + \" \\\\ \\\\  \\\\  __\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\ \\\\\\\\ \\\\ \""},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"                + \"\\\\   __  \\\\   \\\\ \\\\    / / \\\\ \\\\  \\\\_|/__\" + NEWLINE"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"                + \"  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\_\\\\\\\\ \\\\\""},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"                + \" \\\\  \\\\|\\\\  \\\\   \\\\/  /  /   \\\\ \\\\  \\\\_|\\\\ \\\\\" + NEWLINE"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"                + \"   \\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\\""},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"                + \"__/  / /      \\\\ \\\\_______\\\\\" + NEWLINE"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"                + \"    \\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______|\\\\___\""},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"                + \"/ /        \\\\|_______|\" + NEWLINE"},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":"                + \"                                                     \\\\|___|/\" + NEWLINE"},{"lineNumber":94,"author":{"gitId":"adhy-p"},"content":"                + reset"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"        );"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"    public void printUserInputPrompt() {"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"        print(LINE + \"\" + NEWLINE + NEWLINE + \"Please enter a Command:\");"},{"lineNumber":100,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"    public void printHelpSheet() {"},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"        print(ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/add /n \u003cCHEAT_SHEET_NAME\u003e /s \u003cSUBJECT\u003e\""},{"lineNumber":104,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"                + \"\\tAdds a new cheat sheet to the application and prompts user to include data\" + NEWLINE"},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":"                + \"\\tinto the cheat sheet.\" + NEWLINE"},{"lineNumber":107,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":108,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/clear\""},{"lineNumber":109,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":110,"author":{"gitId":"adhy-p"},"content":"                + \"\\tClears all entries from the cheat sheet.\" + NEWLINE"},{"lineNumber":111,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":112,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/delete /i \u003cCHEAT_SHEET_INDEX\u003e\""},{"lineNumber":113,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":114,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/delete /n \u003cCHEAT_SHEET_NAME\u003e\""},{"lineNumber":115,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"                + \"\\tTo be used after using /list, Deletes the cheat sheet at INDEX items down the list.\" + NEWLINE"},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":"                + \"\\tThe first cheat sheet has an index of 1.\" + NEWLINE"},{"lineNumber":118,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":119,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/edit /i \u003cCHEAT_SHEET_INDEX\u003e\""},{"lineNumber":120,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":121,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/edit /n \u003cCHEAT_SHEET_NAME\u003e\""},{"lineNumber":122,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":123,"author":{"gitId":"adhy-p"},"content":"                + \"\\tEdits the details/content of the cheat sheet.\" + NEWLINE"},{"lineNumber":124,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":125,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/exit\""},{"lineNumber":126,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":127,"author":{"gitId":"adhy-p"},"content":"                + \"\\tExits the application.\" + NEWLINE"},{"lineNumber":128,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":129,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/fav /i \u003cCHEAT_SHEET_INDEX\u003e\""},{"lineNumber":130,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":131,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/fav /n \u003cCHEAT_SHEET_NAME\u003e\""},{"lineNumber":132,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":133,"author":{"gitId":"adhy-p"},"content":"                + \"\\tAdds the cheat sheet to favourites.\" + NEWLINE"},{"lineNumber":134,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":135,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/fav /i \u003cCHEAT_SHEET_INDEX\u003e /d\""},{"lineNumber":136,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":137,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/fav /n \u003cCHEAT_SHEET_NAME\u003e /d\""},{"lineNumber":138,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":139,"author":{"gitId":"adhy-p"},"content":"                + \"\\tRemoves the cheat sheet from favourites.\" + NEWLINE"},{"lineNumber":140,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":141,"author":{"gitId":"abnermtj"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/find /s \u003cSUBJECT\u003e /k \u003cKEYWORD\u003e\""},{"lineNumber":142,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":143,"author":{"gitId":"abnermtj"},"content":"                + \"\\tFinds a cheat sheet whose names contain any of the given keywords.\" + NEWLINE"},{"lineNumber":144,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":145,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/help\""},{"lineNumber":146,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":147,"author":{"gitId":"adhy-p"},"content":"                + \"\\tDisplays this help message.\" + NEWLINE"},{"lineNumber":148,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":149,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/list\""},{"lineNumber":150,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":151,"author":{"gitId":"abnermtj"},"content":"                + \"\\tLists all the possible commands that can be executed in the application.\" + NEWLINE"},{"lineNumber":152,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":153,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/set /c \u003cOPTION_NUMBER\u003e\""},{"lineNumber":154,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":155,"author":{"gitId":"adhy-p"},"content":"                + \"\\tChanges the color scheme of the application. Available options: 0 - 3.\" + NEWLINE"},{"lineNumber":156,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":157,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/set /m on\""},{"lineNumber":158,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":159,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/set /m off\""},{"lineNumber":160,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":161,"author":{"gitId":"brandontoh"},"content":"                + \"\\tEnables/disables the help message for commands.\" + NEWLINE"},{"lineNumber":162,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":163,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + logoColor + \"/view /i \u003cCHEAT_SHEET_INDEX\u003e\""},{"lineNumber":164,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":165,"author":{"gitId":"adhy-p"},"content":"                + ConsoleColorsEnum.BOLD + \"\" + favColor + \"/view /n \u003cCHEAT_SHEET_NAME\u003e\""},{"lineNumber":166,"author":{"gitId":"adhy-p"},"content":"                + reset + NEWLINE"},{"lineNumber":167,"author":{"gitId":"adhy-p"},"content":"                + \"\\tView the contents of a cheat sheet either by the name or index.\" + NEWLINE);"},{"lineNumber":168,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":170,"author":{"gitId":"abnermtj"},"content":"    public void printCheatSheet(CheatSheet cheatSheet) {"},{"lineNumber":171,"author":{"gitId":"adhy-p"},"content":"        print(nameColor + \"\\tName: \" + cheatSheet.getName() + NEWLINE"},{"lineNumber":172,"author":{"gitId":"adhy-p"},"content":"                + subjectColor + \"\\tSubject: \" + cheatSheet.getSubject() + NEWLINE"},{"lineNumber":173,"author":{"gitId":"domaxi"},"content":"                + detailsColor + \"\\tDetails: \" + cheatSheet.getWrappedDetails()"},{"lineNumber":174,"author":{"gitId":"adhy-p"},"content":"                + reset);"},{"lineNumber":175,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":177,"author":{"gitId":"adhy-p"},"content":"    public void printCheatSheetSize(CheatSheetList cheatSheetList) {"},{"lineNumber":178,"author":{"gitId":"adhy-p"},"content":"        print(textColor + \"Now you have \" + cheatSheetList.getSize() + \" cheatsheet(s)\" + reset);"},{"lineNumber":179,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":181,"author":{"gitId":"adhy-p"},"content":"    public void printAddNewCheatSheetMessage(CheatSheet cheatSheet, CheatSheetList cheatSheetList) {"},{"lineNumber":182,"author":{"gitId":"adhy-p"},"content":"        print(textColor + \"Added new cheat sheet:\" + reset);"},{"lineNumber":183,"author":{"gitId":"domaxi"},"content":"        printCheatSheet(cheatSheet);"},{"lineNumber":184,"author":{"gitId":"adhy-p"},"content":"        print(textColor + LINE + reset);"},{"lineNumber":185,"author":{"gitId":"adhy-p"},"content":"        printCheatSheetSize(cheatSheetList);"},{"lineNumber":186,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":188,"author":{"gitId":"abnermtj"},"content":"    public void printClearCheatSheetMessage(int number) {"},{"lineNumber":189,"author":{"gitId":"adhy-p"},"content":"        print(textColor + \"Cleared total of \" + number + \" cheat sheets\");"},{"lineNumber":190,"author":{"gitId":"abnermtj"},"content":"        print(LINE);"},{"lineNumber":191,"author":{"gitId":"abnermtj"},"content":"        print(\"Now you have no user-defined cheatsheets\" + reset);"},{"lineNumber":192,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":194,"author":{"gitId":"domaxi"},"content":"    public void printDeleteConfirmation(CheatSheet cheatSheet) {"},{"lineNumber":195,"author":{"gitId":"domaxi"},"content":"        print(alertColor + \"Are you sure to delete the \" + cheatSheet.getName() + \" cheatsheet?\" + NEWLINE"},{"lineNumber":196,"author":{"gitId":"domaxi"},"content":"                + \"Type Y or Yes to confirm, or any other character to cancel\" + reset);"},{"lineNumber":197,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":199,"author":{"gitId":"adhy-p"},"content":"    public void printDeleteCheatSheetMessage(CheatSheet cheatSheet, CheatSheetList cheatSheetList) {"},{"lineNumber":200,"author":{"gitId":"adhy-p"},"content":"        print(textColor + \"This cheat sheet has been deleted: \" + reset);"},{"lineNumber":201,"author":{"gitId":"domaxi"},"content":"        printCheatSheet(cheatSheet);"},{"lineNumber":202,"author":{"gitId":"adhy-p"},"content":"        print(textColor + LINE + reset);"},{"lineNumber":203,"author":{"gitId":"adhy-p"},"content":"        printCheatSheetSize(cheatSheetList);"},{"lineNumber":204,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":206,"author":{"gitId":"abnermtj"},"content":"    public void printViewCheatSheetMessage(CheatSheet cheatSheet) {"},{"lineNumber":207,"author":{"gitId":"adhy-p"},"content":"        print(textColor + \"This is your content for \" + cheatSheet.getName() + \": \" + reset);"},{"lineNumber":208,"author":{"gitId":"abnermtj"},"content":"        printCheatSheet(cheatSheet);"},{"lineNumber":209,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":211,"author":{"gitId":"adhy-p"},"content":"    public void printFavouritedCheatSheetMessage(CheatSheet cheatSheet, boolean isAddFav) {"},{"lineNumber":212,"author":{"gitId":"adhy-p"},"content":"        if (isAddFav) {"},{"lineNumber":213,"author":{"gitId":"adhy-p"},"content":"            print(textColor + \"This cheat sheet has been added to favourites: \" + reset);"},{"lineNumber":214,"author":{"gitId":"adhy-p"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"adhy-p"},"content":"            print(textColor + \"This cheat sheet has been removed from favourites: \" + reset);"},{"lineNumber":216,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"domaxi"},"content":"        printCheatSheet(cheatSheet);"},{"lineNumber":218,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":220,"author":{"gitId":"abnermtj"},"content":"    public void printFavouriteStatusAlreadySet(CheatSheet cheatSheet, boolean isAddFav) {"},{"lineNumber":221,"author":{"gitId":"abnermtj"},"content":"        if (isAddFav) {"},{"lineNumber":222,"author":{"gitId":"abnermtj"},"content":"            print(textColor + \"This cheat sheet already been favourited: \" + reset);"},{"lineNumber":223,"author":{"gitId":"abnermtj"},"content":"        } else {"},{"lineNumber":224,"author":{"gitId":"abnermtj"},"content":"            print(textColor + \"This cheat sheet already been unfavourited: \" + reset);"},{"lineNumber":225,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"abnermtj"},"content":"        printCheatSheet(cheatSheet);"},{"lineNumber":227,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":229,"author":{"gitId":"abnermtj"},"content":"    public void printAlternativeArgumentPrompt(Command command) {"},{"lineNumber":230,"author":{"gitId":"abnermtj"},"content":"        print(NEWLINE);"},{"lineNumber":231,"author":{"gitId":"brandontoh"},"content":"        System.out.print(ConsoleColorsEnum.RED_TEXT + \"Please enter at least ONE of these: \");"},{"lineNumber":232,"author":{"gitId":"abnermtj"},"content":"        for (CommandFlag arg : command.getAlternativeFlags()) {"},{"lineNumber":233,"author":{"gitId":"abnermtj"},"content":"            System.out.print(arg + \" \");"},{"lineNumber":234,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"adhy-p"},"content":"        print(reset);"},{"lineNumber":236,"author":{"gitId":"abnermtj"},"content":"        print(NEWLINE);"},{"lineNumber":237,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":239,"author":{"gitId":"abnermtj"},"content":"    public void printMissingArgument(CommandFlag curArg) {"},{"lineNumber":240,"author":{"gitId":"abnermtj"},"content":"        System.out.print(textColor + \"Please input \" + curArg.name() + \": \" + reset);"},{"lineNumber":241,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":243,"author":{"gitId":"adhy-p"},"content":"    public void setColor(int option, boolean isInit) {"},{"lineNumber":244,"author":{"gitId":"adhy-p"},"content":"        switch (option) {"},{"lineNumber":245,"author":{"gitId":"adhy-p"},"content":"        case 1:"},{"lineNumber":246,"author":{"gitId":"adhy-p"},"content":"            textColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":247,"author":{"gitId":"adhy-p"},"content":"            favColor \u003d ConsoleColorsEnum.BRIGHT_GREEN_TEXT;"},{"lineNumber":248,"author":{"gitId":"adhy-p"},"content":"            logoColor \u003d ConsoleColorsEnum.BRIGHT_GREEN_TEXT;"},{"lineNumber":249,"author":{"gitId":"adhy-p"},"content":"            nameColor \u003d ConsoleColorsEnum.BRIGHT_MAGENTA_TEXT;"},{"lineNumber":250,"author":{"gitId":"adhy-p"},"content":"            subjectColor \u003d ConsoleColorsEnum.BOLD_MAGENTA_TEXT;"},{"lineNumber":251,"author":{"gitId":"adhy-p"},"content":"            detailsColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":252,"author":{"gitId":"domaxi"},"content":"            alertColor \u003d ConsoleColorsEnum.BOLD_RED_TEXT;"},{"lineNumber":253,"author":{"gitId":"adhy-p"},"content":"            reset \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":254,"author":{"gitId":"adhy-p"},"content":"            break;"},{"lineNumber":255,"author":{"gitId":"adhy-p"},"content":"        case 2:"},{"lineNumber":256,"author":{"gitId":"adhy-p"},"content":"            textColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":257,"author":{"gitId":"adhy-p"},"content":"            favColor \u003d ConsoleColorsEnum.BRIGHT_BLUE_TEXT;"},{"lineNumber":258,"author":{"gitId":"adhy-p"},"content":"            logoColor \u003d ConsoleColorsEnum.BRIGHT_BLUE_TEXT;"},{"lineNumber":259,"author":{"gitId":"adhy-p"},"content":"            nameColor \u003d ConsoleColorsEnum.BRIGHT_RED_TEXT;"},{"lineNumber":260,"author":{"gitId":"adhy-p"},"content":"            subjectColor \u003d ConsoleColorsEnum.BOLD_YELLOW_TEXT;"},{"lineNumber":261,"author":{"gitId":"adhy-p"},"content":"            detailsColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":262,"author":{"gitId":"domaxi"},"content":"            alertColor \u003d ConsoleColorsEnum.BOLD_RED_TEXT;"},{"lineNumber":263,"author":{"gitId":"adhy-p"},"content":"            reset \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":264,"author":{"gitId":"adhy-p"},"content":"            break;"},{"lineNumber":265,"author":{"gitId":"adhy-p"},"content":"        case 3:"},{"lineNumber":266,"author":{"gitId":"adhy-p"},"content":"            textColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":267,"author":{"gitId":"adhy-p"},"content":"            favColor \u003d ConsoleColorsEnum.BOLD_WHITE_TEXT;"},{"lineNumber":268,"author":{"gitId":"adhy-p"},"content":"            logoColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":269,"author":{"gitId":"adhy-p"},"content":"            nameColor \u003d ConsoleColorsEnum.BOLD_WHITE_TEXT;"},{"lineNumber":270,"author":{"gitId":"adhy-p"},"content":"            subjectColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":271,"author":{"gitId":"adhy-p"},"content":"            detailsColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":272,"author":{"gitId":"domaxi"},"content":"            alertColor \u003d ConsoleColorsEnum.BOLD_RED_TEXT;"},{"lineNumber":273,"author":{"gitId":"adhy-p"},"content":"            reset \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":274,"author":{"gitId":"adhy-p"},"content":"            break;"},{"lineNumber":275,"author":{"gitId":"adhy-p"},"content":"        default:"},{"lineNumber":276,"author":{"gitId":"adhy-p"},"content":"            textColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":277,"author":{"gitId":"adhy-p"},"content":"            favColor \u003d ConsoleColorsEnum.BRIGHT_YELLOW_TEXT;"},{"lineNumber":278,"author":{"gitId":"adhy-p"},"content":"            logoColor \u003d ConsoleColorsEnum.BRIGHT_CYAN_TEXT;"},{"lineNumber":279,"author":{"gitId":"adhy-p"},"content":"            nameColor \u003d ConsoleColorsEnum.BRIGHT_CYAN_TEXT;"},{"lineNumber":280,"author":{"gitId":"adhy-p"},"content":"            subjectColor \u003d ConsoleColorsEnum.BRIGHT_BLUE_TEXT;"},{"lineNumber":281,"author":{"gitId":"adhy-p"},"content":"            detailsColor \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":282,"author":{"gitId":"domaxi"},"content":"            alertColor \u003d ConsoleColorsEnum.BOLD_RED_TEXT;"},{"lineNumber":283,"author":{"gitId":"adhy-p"},"content":"            reset \u003d ConsoleColorsEnum.WHITE_TEXT;"},{"lineNumber":284,"author":{"gitId":"adhy-p"},"content":"            break;"},{"lineNumber":285,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":286,"author":{"gitId":"adhy-p"},"content":"        if (!isInit) {"},{"lineNumber":287,"author":{"gitId":"adhy-p"},"content":"            printSetColorMessage(option);"},{"lineNumber":288,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":289,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":291,"author":{"gitId":"adhy-p"},"content":"    public void printSetColorMessage(int option) {"},{"lineNumber":292,"author":{"gitId":"adhy-p"},"content":"        if (option \u003c 0 || option \u003e 3) {"},{"lineNumber":293,"author":{"gitId":"adhy-p"},"content":"            print(\"Invalid option \" + option + \". Changed color scheme to default colors:\\n\""},{"lineNumber":294,"author":{"gitId":"adhy-p"},"content":"                    + favColor + \"\\tColor 1\\n\""},{"lineNumber":295,"author":{"gitId":"adhy-p"},"content":"                    + nameColor + \"\\tColor 2\\n\""},{"lineNumber":296,"author":{"gitId":"adhy-p"},"content":"                    + subjectColor + \"\\tColor 3\\n\""},{"lineNumber":297,"author":{"gitId":"adhy-p"},"content":"                    + reset);"},{"lineNumber":298,"author":{"gitId":"adhy-p"},"content":"        } else {"},{"lineNumber":299,"author":{"gitId":"adhy-p"},"content":"            print(\"Changed color scheme to option \" + option + \":\\n\""},{"lineNumber":300,"author":{"gitId":"adhy-p"},"content":"                    + favColor + \"\\tColor 1\\n\""},{"lineNumber":301,"author":{"gitId":"adhy-p"},"content":"                    + nameColor + \"\\tColor 2\\n\""},{"lineNumber":302,"author":{"gitId":"adhy-p"},"content":"                    + subjectColor + \"\\tColor 3\\n\""},{"lineNumber":303,"author":{"gitId":"adhy-p"},"content":"                    + reset);"},{"lineNumber":304,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":307,"author":{"gitId":"brandontoh"},"content":"    public void printStartHelpMessage() {"},{"lineNumber":308,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":309,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"Here are some basics commands to get you started: \""},{"lineNumber":310,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"\\t\\\"/add\\\": Add your own cheat sheet\""},{"lineNumber":311,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"\\t\\\"/list\\\": List all cheat sheet you currently own, including those we preloaded for you\""},{"lineNumber":312,"author":{"gitId":"adhy-p"},"content":"                + NEWLINE + \"\\t\\\"/view\\\": View the contents of a specific cheat sheet,\""},{"lineNumber":313,"author":{"gitId":"adhy-p"},"content":"                + \" we recommend you to use the list command before this. \""},{"lineNumber":314,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"\\t\\t\\t You can view the contents using cheat sheet index or name.\""},{"lineNumber":315,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"Enter \\\"/help\\\" to see the details of all commands\""},{"lineNumber":316,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":317,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":319,"author":{"gitId":"brandontoh"},"content":"    private void printRepeatedHelpMessagePartOne(String commandType) {"},{"lineNumber":320,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":321,"author":{"gitId":"brandontoh"},"content":"                + \"The \" + commandType + \" does not work alone.\""},{"lineNumber":322,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"We need some necessary information from you before we could add your cheat sheet.\""},{"lineNumber":323,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"Don\u0027t worry, you do not have to enter the command again.\""},{"lineNumber":324,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"We would prompt you to enter the necessary information, one by one.\""},{"lineNumber":325,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":326,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":328,"author":{"gitId":"brandontoh"},"content":"    private void printRepeatedHelpMessagePartTwo() {"},{"lineNumber":329,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":330,"author":{"gitId":"brandontoh"},"content":"                + \"You also could enter the full command next time if you do not wish to be prompted to enter fields \""},{"lineNumber":331,"author":{"gitId":"brandontoh"},"content":"                + \"one by one\""},{"lineNumber":332,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"\\\"/help\\\" to see more details on the structure of full command.\""},{"lineNumber":333,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"To stop messages like this from appearing again, input this command: \\\"/set /m off\\\"\""},{"lineNumber":334,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":335,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":336,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":337,"author":{"gitId":"brandontoh"},"content":"    public void printCommandHelpMessage(Class commandClass) {"},{"lineNumber":338,"author":{"gitId":"brandontoh"},"content":"        if (commandClass.equals(AddCommand.class)) {"},{"lineNumber":339,"author":{"gitId":"brandontoh"},"content":"            printAddCommandHelpMessage();"},{"lineNumber":340,"author":{"gitId":"brandontoh"},"content":"        } else if (commandClass.equals(ClearCommand.class)) {"},{"lineNumber":341,"author":{"gitId":"brandontoh"},"content":"            printClearCommandHelpMessage();"},{"lineNumber":342,"author":{"gitId":"brandontoh"},"content":"        } else if (commandClass.equals(DeleteCommand.class)) {"},{"lineNumber":343,"author":{"gitId":"brandontoh"},"content":"            printDeleteCommandHelpMessage();"},{"lineNumber":344,"author":{"gitId":"brandontoh"},"content":"        } else if (commandClass.equals(EditCommand.class)) {"},{"lineNumber":345,"author":{"gitId":"brandontoh"},"content":"            printEditCommandHelpMessage();"},{"lineNumber":346,"author":{"gitId":"brandontoh"},"content":"        } else if (commandClass.equals(FindCommand.class)) {"},{"lineNumber":347,"author":{"gitId":"brandontoh"},"content":"            printFindCommandHelpMessage();"},{"lineNumber":348,"author":{"gitId":"brandontoh"},"content":"        } else if (commandClass.equals(ListCommand.class)) {"},{"lineNumber":349,"author":{"gitId":"brandontoh"},"content":"            printListCommandHelpMessage();"},{"lineNumber":350,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":351,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":352,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":353,"author":{"gitId":"brandontoh"},"content":"    private void printAddCommandHelpMessage() {"},{"lineNumber":354,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartOne(\"ADD\");"},{"lineNumber":355,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":356,"author":{"gitId":"brandontoh"},"content":"                + \"NAME is necessary while SUBJECT isn\u0027t. \u003c\u003center\u003e\u003e to skip field.\""},{"lineNumber":357,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"We will automatically assign \\\"Unsorted\\\" as subject if no subject is provided.\""},{"lineNumber":358,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE"},{"lineNumber":359,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":360,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartTwo();"},{"lineNumber":361,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":362,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":363,"author":{"gitId":"brandontoh"},"content":"    private void printClearCommandHelpMessage() {"},{"lineNumber":364,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":365,"author":{"gitId":"brandontoh"},"content":"                + \"The CLEAR command clears ALL cheat sheets except for those that are preloaded.\""},{"lineNumber":366,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":367,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":368,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":369,"author":{"gitId":"brandontoh"},"content":"    private void printDeleteCommandHelpMessage() {"},{"lineNumber":370,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":371,"author":{"gitId":"brandontoh"},"content":"                + \"The DELETE command deletes a cheatsheet you specifies.\""},{"lineNumber":372,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":373,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartOne(\"DELETE\");"},{"lineNumber":374,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":375,"author":{"gitId":"brandontoh"},"content":"                + \"We need you to either input NAME or INDEX. \u003c\u003center\u003e\u003e to skip field.\""},{"lineNumber":376,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE"},{"lineNumber":377,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":378,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartTwo();"},{"lineNumber":379,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":381,"author":{"gitId":"brandontoh"},"content":"    private void printEditCommandHelpMessage() {"},{"lineNumber":382,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":383,"author":{"gitId":"brandontoh"},"content":"                + \"The EDIT command edits an existing cheat sheet.\""},{"lineNumber":384,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":385,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartOne(\"EDIT\");"},{"lineNumber":386,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":387,"author":{"gitId":"brandontoh"},"content":"                + \"We need you to input either NAME or INDEX. \u003c\u003center\u003e\u003e to skip field.\""},{"lineNumber":388,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE"},{"lineNumber":389,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":390,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartTwo();"},{"lineNumber":391,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":392,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":393,"author":{"gitId":"brandontoh"},"content":"    private void printFindCommandHelpMessage() {"},{"lineNumber":394,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":395,"author":{"gitId":"brandontoh"},"content":"                + \"The EDIT command finds an existing cheat sheet based on information provided.\""},{"lineNumber":396,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":397,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartOne(\"FIND\");"},{"lineNumber":398,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":399,"author":{"gitId":"brandontoh"},"content":"                + \"We need you to input NAME, SUBJECT, or KEYWORD in cheatsheet or any combinations of these fields.\""},{"lineNumber":400,"author":{"gitId":"brandontoh"},"content":"                + \"\u003c\u003center\u003e\u003e to skip field.\""},{"lineNumber":401,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE"},{"lineNumber":402,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":403,"author":{"gitId":"brandontoh"},"content":"        printRepeatedHelpMessagePartTwo();"},{"lineNumber":404,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":406,"author":{"gitId":"brandontoh"},"content":"    private void printListCommandHelpMessage() {"},{"lineNumber":407,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":408,"author":{"gitId":"brandontoh"},"content":"                + \"The LIST command lists all current existing cheat sheets.\""},{"lineNumber":409,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"You could also sort the cheat sheets according to name or subject\""},{"lineNumber":410,"author":{"gitId":"adhy-p"},"content":"                + NEWLINE + \"To stop messages like from appearing again, input this command: \\\"/set /m off\\\"\""},{"lineNumber":411,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":412,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":414,"author":{"gitId":"brandontoh"},"content":"    public void printClearConfirmation() {"},{"lineNumber":415,"author":{"gitId":"brandontoh"},"content":"        print(ConsoleColorsEnum.BRIGHT_YELLOW_TEXT"},{"lineNumber":416,"author":{"gitId":"brandontoh"},"content":"                + \"Are you sure you want to delete all your cheat sheets\""},{"lineNumber":417,"author":{"gitId":"brandontoh"},"content":"                + NEWLINE + \"Type Y or Yes to confirm, or any other character to cancel\""},{"lineNumber":418,"author":{"gitId":"brandontoh"},"content":"                + ConsoleColorsEnum.RESET_TEXT);"},{"lineNumber":419,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":421,"author":{"gitId":"adhy-p"},"content":"    public void printSetDisplayingHelpMessages(boolean isDisplayingHelpMessages) {"},{"lineNumber":422,"author":{"gitId":"adhy-p"},"content":"        if (isDisplayingHelpMessages) {"},{"lineNumber":423,"author":{"gitId":"adhy-p"},"content":"            print(\"You have enabled the help messages.\""},{"lineNumber":424,"author":{"gitId":"adhy-p"},"content":"                    + NEWLINE + \"You can disable the help messages using \\\"/set /m off\\\"\\n\");"},{"lineNumber":425,"author":{"gitId":"adhy-p"},"content":"        } else {"},{"lineNumber":426,"author":{"gitId":"adhy-p"},"content":"            print(\"You have disabled the help messages.\""},{"lineNumber":427,"author":{"gitId":"adhy-p"},"content":"                    + NEWLINE + \"You can re-enable it again using \\\"/set /m on\\\"\\n\");"},{"lineNumber":428,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":429,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"domaxi":23,"abnermtj":99,"brandontoh":133,"adhy-p":175}},{"path":"src/main/java/ui/TablePrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"public class TablePrinter {"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"    String[][] rawTable;"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    ArrayList\u003cString[]\u003e finalTable;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"    int maxWidth \u003d 30;"},{"lineNumber":16,"author":{"gitId":"adhy-p"},"content":"    Printer printer;"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    public TablePrinter(Printer printer, CheatSheetList cheatSheetList) {"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"        this.printer \u003d printer;"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        makeRawTable(cheatSheetList.getList());"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"    public TablePrinter(Printer printer, ArrayList\u003cCheatSheet\u003e cheatSheetToBePrinted) {"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":"        this.printer \u003d printer;"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"        makeRawTable(cheatSheetToBePrinted);"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"    private void makeRawTable(ArrayList\u003cCheatSheet\u003e cheatSheetsToBePrinted) {"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        rawTable \u003d new String[cheatSheetsToBePrinted.size() + 1][4];"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"        rawTable[0][0] \u003d \"INDEX\";"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        rawTable[0][1] \u003d \"NAME\";"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"        rawTable[0][2] \u003d \"SUBJECT\";"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"        rawTable[0][3] \u003d \"PREVIEW\";"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"        for (int i \u003d 1; i \u003c\u003d cheatSheetsToBePrinted.size(); i++) {"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"            CheatSheet cs \u003d cheatSheetsToBePrinted.get(i - 1);"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"            assert cs !\u003d null;"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"            rawTable[i][0] \u003d String.valueOf(i);"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"            rawTable[i][1] \u003d cs.getName().trim() + (cs.getIsFavourite() ? \" [*]\" : \"\");"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"                rawTable[i][2] \u003d cs.getSubject().trim();"},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"            } catch (NullPointerException n) {"},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":"                rawTable[i][2] \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"                rawTable[i][3] \u003d cs.getDetails().split(\"\\n\")[0].trim();"},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"                if (rawTable[i][3].isEmpty()) {"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"                    rawTable[i][3] \u003d cs.getDetails().split(\"\\n\")[1].trim();"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"            } catch (ArrayIndexOutOfBoundsException a) {"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"                rawTable[i][3] \u003d cs.getDetails().trim();"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"    private int calculateNoOfNewRowsNeededByCell(String cell) {"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"        int rowsNeeded \u003d 0;"},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"        if (cell.contains(\"\\n\")) {"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"            String[] splittedCell \u003d cell.split(\"\\n\");"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"            for (String s : splittedCell) {"},{"lineNumber":60,"author":{"gitId":"brandontoh"},"content":"                rowsNeeded +\u003d (s.length() / maxWidth) + 1;"},{"lineNumber":61,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"brandontoh"},"content":"            return rowsNeeded;"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"            return (cell.length() / maxWidth) + 1;"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"    private int calculateNoOfNewRowsNeededByRow(String[] row) {"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"        int rowsNeeded \u003d 0;"},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"        for (String cell : row) {"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"            if (rowsNeeded \u003c calculateNoOfNewRowsNeededByCell(cell)) {"},{"lineNumber":72,"author":{"gitId":"brandontoh"},"content":"                rowsNeeded \u003d calculateNoOfNewRowsNeededByCell(cell);"},{"lineNumber":73,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"brandontoh"},"content":"        return rowsNeeded;"},{"lineNumber":76,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":78,"author":{"gitId":"brandontoh"},"content":"    private String[] contentsByColAfterWrapping(String cell) {"},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"        if (cell.contains(\"\\n\")) {"},{"lineNumber":80,"author":{"gitId":"brandontoh"},"content":"            return cell.split(\"\\n\");"},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"brandontoh"},"content":"            return cell.split(\"(?\u003c\u003d\\\\G.{30})\");"},{"lineNumber":83,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":86,"author":{"gitId":"brandontoh"},"content":"    private void makeFinalTable() {"},{"lineNumber":87,"author":{"gitId":"brandontoh"},"content":"        finalTable \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"brandontoh"},"content":"        int rowsNeeded \u003d 0;"},{"lineNumber":89,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":90,"author":{"gitId":"brandontoh"},"content":"        for (String[] rows : rawTable) {"},{"lineNumber":91,"author":{"gitId":"brandontoh"},"content":"            rowsNeeded \u003d calculateNoOfNewRowsNeededByRow(rows);"},{"lineNumber":92,"author":{"gitId":"brandontoh"},"content":"            for (int k \u003d 0; k \u003c rowsNeeded; k++) {"},{"lineNumber":93,"author":{"gitId":"brandontoh"},"content":"                String[] newRow \u003d new String[rows.length];"},{"lineNumber":94,"author":{"gitId":"brandontoh"},"content":"                for (int i \u003d 0; i \u003c rows.length; i++) {"},{"lineNumber":95,"author":{"gitId":"brandontoh"},"content":"                    String[] cellArray \u003d contentsByColAfterWrapping(rows[i]);"},{"lineNumber":96,"author":{"gitId":"brandontoh"},"content":"                    if (k \u003c cellArray.length) {"},{"lineNumber":97,"author":{"gitId":"brandontoh"},"content":"                        newRow[i] \u003d cellArray[k];"},{"lineNumber":98,"author":{"gitId":"brandontoh"},"content":"                    } else {"},{"lineNumber":99,"author":{"gitId":"brandontoh"},"content":"                        newRow[i] \u003d \"\";"},{"lineNumber":100,"author":{"gitId":"brandontoh"},"content":"                    }"},{"lineNumber":101,"author":{"gitId":"brandontoh"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"brandontoh"},"content":"                finalTable.add(newRow);"},{"lineNumber":103,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":107,"author":{"gitId":"brandontoh"},"content":"    public HashMap\u003cInteger, Integer\u003e calculateLengthOfIndividualCol() {"},{"lineNumber":108,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cInteger, Integer\u003e columnLengths \u003d new HashMap\u003c\u003e();"},{"lineNumber":109,"author":{"gitId":"brandontoh"},"content":"        for (String[] row : finalTable) {"},{"lineNumber":110,"author":{"gitId":"brandontoh"},"content":"            for (int i \u003d 0; i \u003c row.length; i++) {"},{"lineNumber":111,"author":{"gitId":"brandontoh"},"content":"                columnLengths.putIfAbsent(i, 0);"},{"lineNumber":112,"author":{"gitId":"brandontoh"},"content":"                if (columnLengths.get(i) \u003c row[i].length()) {"},{"lineNumber":113,"author":{"gitId":"brandontoh"},"content":"                    columnLengths.put(i, row[i].length());"},{"lineNumber":114,"author":{"gitId":"brandontoh"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"brandontoh"},"content":"        return columnLengths;"},{"lineNumber":118,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":120,"author":{"gitId":"brandontoh"},"content":"    public StringBuilder prepareStringFormatForEachRow(HashMap\u003cInteger, Integer\u003e columnLengths) {"},{"lineNumber":121,"author":{"gitId":"brandontoh"},"content":"        final StringBuilder stringFormat \u003d new StringBuilder(\"\");"},{"lineNumber":122,"author":{"gitId":"brandontoh"},"content":"        String flag \u003d \"-\";"},{"lineNumber":123,"author":{"gitId":"adhy-p"},"content":"        int col \u003d 0;"},{"lineNumber":124,"author":{"gitId":"adhy-p"},"content":"        String color \u003d \"\";"},{"lineNumber":125,"author":{"gitId":"brandontoh"},"content":"        for (HashMap.Entry\u003cInteger, Integer\u003e e : columnLengths.entrySet()) {"},{"lineNumber":126,"author":{"gitId":"adhy-p"},"content":"            if (col % 4 \u003d\u003d 0) {"},{"lineNumber":127,"author":{"gitId":"adhy-p"},"content":"                color \u003d printer.favColor.toString();"},{"lineNumber":128,"author":{"gitId":"adhy-p"},"content":"            } else if (col % 4 \u003d\u003d 1) {"},{"lineNumber":129,"author":{"gitId":"adhy-p"},"content":"                color \u003d printer.nameColor.toString();"},{"lineNumber":130,"author":{"gitId":"adhy-p"},"content":"            } else if (col % 4 \u003d\u003d 2) {"},{"lineNumber":131,"author":{"gitId":"adhy-p"},"content":"                color \u003d printer.subjectColor.toString();"},{"lineNumber":132,"author":{"gitId":"adhy-p"},"content":"            } else {"},{"lineNumber":133,"author":{"gitId":"adhy-p"},"content":"                color \u003d printer.detailsColor.toString();"},{"lineNumber":134,"author":{"gitId":"adhy-p"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"adhy-p"},"content":"            stringFormat"},{"lineNumber":136,"author":{"gitId":"adhy-p"},"content":"                    .append(\"| \")"},{"lineNumber":137,"author":{"gitId":"adhy-p"},"content":"                    .append(color)"},{"lineNumber":138,"author":{"gitId":"adhy-p"},"content":"                    .append(\"%\")"},{"lineNumber":139,"author":{"gitId":"adhy-p"},"content":"                    .append(flag)"},{"lineNumber":140,"author":{"gitId":"adhy-p"},"content":"                    .append(e.getValue())"},{"lineNumber":141,"author":{"gitId":"adhy-p"},"content":"                    .append(\"s \")"},{"lineNumber":142,"author":{"gitId":"adhy-p"},"content":"                    .append(printer.reset.toString());"},{"lineNumber":143,"author":{"gitId":"adhy-p"},"content":"            col++;"},{"lineNumber":144,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"brandontoh"},"content":"        stringFormat.append(\"|\\n\");"},{"lineNumber":146,"author":{"gitId":"brandontoh"},"content":"        return stringFormat;"},{"lineNumber":147,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":149,"author":{"gitId":"brandontoh"},"content":"    public StringBuilder prepareLine(HashMap\u003cInteger, Integer\u003e columnLengths) {"},{"lineNumber":150,"author":{"gitId":"brandontoh"},"content":"        StringBuilder line \u003d new StringBuilder();"},{"lineNumber":151,"author":{"gitId":"brandontoh"},"content":"        for (Integer value : columnLengths.values()) {"},{"lineNumber":152,"author":{"gitId":"brandontoh"},"content":"            line.append(\"+\");"},{"lineNumber":153,"author":{"gitId":"brandontoh"},"content":"            line.append(\"-\".repeat(value + 2));"},{"lineNumber":154,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":156,"author":{"gitId":"brandontoh"},"content":"        line.append(\"+\\n\");"},{"lineNumber":157,"author":{"gitId":"brandontoh"},"content":"        return line;"},{"lineNumber":158,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":160,"author":{"gitId":"brandontoh"},"content":"    public void printFinalTable(StringBuilder stringFormat, StringBuilder line) {"},{"lineNumber":161,"author":{"gitId":"brandontoh"},"content":"        System.out.print(line);"},{"lineNumber":162,"author":{"gitId":"brandontoh"},"content":"        System.out.printf(stringFormat.toString(), rawTable[0][0], rawTable[0][1], rawTable[0][2], rawTable[0][3]);"},{"lineNumber":163,"author":{"gitId":"brandontoh"},"content":"        for (int i \u003d 1; i \u003c finalTable.size(); i++) {"},{"lineNumber":164,"author":{"gitId":"brandontoh"},"content":"            Pattern regex \u003d Pattern.compile(\"[0-9]{1,2}\");"},{"lineNumber":165,"author":{"gitId":"brandontoh"},"content":"            Matcher regexMatcher \u003d regex.matcher(finalTable.get(i)[0]);"},{"lineNumber":166,"author":{"gitId":"brandontoh"},"content":"            if (regexMatcher.find()) {"},{"lineNumber":167,"author":{"gitId":"brandontoh"},"content":"                System.out.print(line);"},{"lineNumber":168,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"brandontoh"},"content":"            System.out.printf(stringFormat.toString(), finalTable.get(i)[0], finalTable.get(i)[1],"},{"lineNumber":170,"author":{"gitId":"brandontoh"},"content":"                    finalTable.get(i)[2], finalTable.get(i)[3]);"},{"lineNumber":171,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"brandontoh"},"content":"        System.out.print(line);"},{"lineNumber":173,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":175,"author":{"gitId":"brandontoh"},"content":"    public void execute() {"},{"lineNumber":176,"author":{"gitId":"brandontoh"},"content":"        makeFinalTable();"},{"lineNumber":177,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cInteger, Integer\u003e columnLengths \u003d calculateLengthOfIndividualCol();"},{"lineNumber":178,"author":{"gitId":"brandontoh"},"content":"        StringBuilder stringFormat \u003d prepareStringFormatForEachRow(columnLengths);"},{"lineNumber":179,"author":{"gitId":"brandontoh"},"content":"        StringBuilder line \u003d prepareLine(columnLengths);"},{"lineNumber":180,"author":{"gitId":"brandontoh"},"content":"        printFinalTable(stringFormat, line);"},{"lineNumber":181,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":158,"adhy-p":24}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"// This class manages the input of CheatLogs."},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"    Scanner in \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"     * Gets the input in the terminal after the user hits Enter."},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"    public String getUserInput() {"},{"lineNumber":13,"author":{"gitId":"domaxi"},"content":"        return in.nextLine();"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"     * Closes the scanner."},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"    public void closeScanner() {"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"        in.close();"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"domaxi":1,"abnermtj":8,"brandontoh":8,"adhy-p":5}},{"path":"src/main/java/ui/UserSession.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import command.Command;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import editor.Editor;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"import parser.Parser;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import settings.Settings;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import storage.DataFileReader;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileWriter;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"import org.fusesource.jansi.AnsiConsole;"},{"lineNumber":13,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"import java.io.IOException;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"// This class manages the overall program flow of CheatLogs."},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"public class UserSession {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    /*"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"     * These are objects that will be injected to command subclasses"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"     * that allow them to execute."},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"    CheatSheetList cheatSheetList;"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    DataFileReader fileReader;"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    DataFileWriter fileWriter;"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"    DataFileDestroyer fileDestroyer;"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"    Editor editor;"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"    Parser userCommandParser;"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"    Printer printer;"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"    Ui ui;"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"    Settings settings;"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    public boolean isEditorEnabled;"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    public boolean isFirstRun;"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"     * Constructor for the UserSession. Creates a single instance of all"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"     * common objects that are passed to the commands."},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":"    public UserSession() {"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"        cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"        editor \u003d new Editor();"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        ui \u003d new Ui();"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"        printer \u003d new Printer();"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"        settings \u003d new Settings(printer);"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":"        fileReader \u003d new DataFileReader(settings, printer, cheatSheetList);"},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"        fileWriter \u003d new DataFileWriter(settings, printer, cheatSheetList);"},{"lineNumber":47,"author":{"gitId":"adhy-p"},"content":"        fileDestroyer \u003d new DataFileDestroyer(printer, cheatSheetList);"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"        userCommandParser \u003d new Parser(cheatSheetList, editor, fileDestroyer, printer, ui, settings, fileReader);"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"        isEditorEnabled \u003d true;"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":"        isFirstRun \u003d false;"},{"lineNumber":52,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"     * Initializes CheatLogs and greets the user."},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    public void start() {"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"adhy-p"},"content":"            AnsiConsole.systemInstall();"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"        } catch (Exception e) {"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"            printer.print(e.getMessage());"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"        if (isEditorEnabled) {"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"            editor.init();"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"        if (isFirstRun) {"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"            fileReader.extractPreloadedCheatSheets();"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        fileReader.executeFunction();"},{"lineNumber":71,"author":{"gitId":"adhy-p"},"content":"        printer.printWelcomeScreen();"},{"lineNumber":72,"author":{"gitId":"adhy-p"},"content":"        if (settings.getDisplayingHelpMessages()) {"},{"lineNumber":73,"author":{"gitId":"adhy-p"},"content":"            printer.printStartHelpMessage();"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"     * A continuous loop that runs as long as this session is running."},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":"     * Asks for user input which is parsed to generate a command object."},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"     * These command objects are then executed."},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"     * Any exceptions throw are handled."},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"     * This process loops till the command specifies to exit."},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"    public void runProgramSequence() {"},{"lineNumber":85,"author":{"gitId":"domaxi"},"content":"        do {"},{"lineNumber":86,"author":{"gitId":"brandontoh"},"content":"            printer.printUserInputPrompt();"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"            String userInput \u003d ui.getUserInput();"},{"lineNumber":89,"author":{"gitId":"brandontoh"},"content":"            try {"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"                Command parsedUserCommand \u003d userCommandParser.parse(userInput);"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"                parsedUserCommand.execute();"},{"lineNumber":92,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":"                if (parsedUserCommand.isExitCommand) {"},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"                    return;"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"brandontoh"},"content":"            } catch (CommandException | InterruptedException | IOException c) {"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":"                printer.print(c.getMessage());"},{"lineNumber":98,"author":{"gitId":"brandontoh"},"content":"                continue;"},{"lineNumber":99,"author":{"gitId":"brandontoh"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"domaxi"},"content":"            fileWriter.executeFunction();"},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"        } while (true);"},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":104,"author":{"gitId":"abnermtj"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"     * Exits CheatLogs by closing certain objects and printing the exit logo."},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"abnermtj"},"content":"    public void exit() {"},{"lineNumber":108,"author":{"gitId":"adhy-p"},"content":"        ui.closeScanner();"},{"lineNumber":109,"author":{"gitId":"adhy-p"},"content":"        editor.dispose();"},{"lineNumber":110,"author":{"gitId":"abnermtj"},"content":"        printer.printExitLogo();"},{"lineNumber":111,"author":{"gitId":"adhy-p"},"content":"        AnsiConsole.systemUninstall();"},{"lineNumber":112,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":12,"abnermtj":63,"theopin":7,"brandontoh":13,"adhy-p":18}},{"path":"src/test/java/cheatlogs/CheatLogsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package cheatlogs;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"class CheatLogsTest {"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"domaxi":2,"-":10,"adhy-p":1}},{"path":"src/test/java/cheatsheet/CheatSheetListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"adhy-p"},"content":"package cheatsheet;"},{"lineNumber":2,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":6,"author":{"gitId":"adhy-p"},"content":"import java.util.logging.Level;"},{"lineNumber":7,"author":{"gitId":"adhy-p"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":9,"author":{"gitId":"adhy-p"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"adhy-p"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":11,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":12,"author":{"gitId":"adhy-p"},"content":"class CheatSheetListTest {"},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Tester\");"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    void testGetSize() {"},{"lineNumber":17,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":18,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":19,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":20,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"adhy-p"},"content":"        assertEquals(10, cheatSheetList.getSize());"},{"lineNumber":22,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished GetSize test\");"},{"lineNumber":23,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":25,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"adhy-p"},"content":"    void testClear() {"},{"lineNumber":27,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":28,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":30,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":"        cheatSheetList.clear();"},{"lineNumber":32,"author":{"gitId":"adhy-p"},"content":"        assertEquals(0, cheatSheetList.getSize());"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished Clear test\");"},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":36,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"    void testAdd() {"},{"lineNumber":38,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":39,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":40,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":41,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"adhy-p"},"content":"        assertEquals(10, cheatSheetList.getSize());"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished Add test\");"},{"lineNumber":44,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":46,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    void testRemove() {"},{"lineNumber":48,"author":{"gitId":"adhy-p"},"content":"        // remove(String name);"},{"lineNumber":49,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":51,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":52,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(\"Name1\");"},{"lineNumber":56,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(\"Name3\");"},{"lineNumber":57,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(\"Name5\");"},{"lineNumber":58,"author":{"gitId":"adhy-p"},"content":"            assertEquals(7, cheatSheetList.getSize());"},{"lineNumber":59,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":61,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished Remove (by name) test\");"},{"lineNumber":63,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":64,"author":{"gitId":"adhy-p"},"content":"        // remove(int index);"},{"lineNumber":65,"author":{"gitId":"adhy-p"},"content":"        cheatSheetList.clear();"},{"lineNumber":66,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":67,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":68,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":70,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(1);"},{"lineNumber":72,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(3);"},{"lineNumber":73,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(5);"},{"lineNumber":74,"author":{"gitId":"adhy-p"},"content":"            assertEquals(7, cheatSheetList.getSize());"},{"lineNumber":75,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":76,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":77,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished Remove (by index) test\");"},{"lineNumber":79,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":80,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":82,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"adhy-p"},"content":"    void remove_negativeIndex_exceptionThrown() {"},{"lineNumber":84,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":85,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":86,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":87,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(-1);"},{"lineNumber":90,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":91,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":92,"author":{"gitId":"adhy-p"},"content":"            assertEquals(\"Please enter a valid index\", e.getMessage());"},{"lineNumber":93,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished remove (negative index) test\");"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":97,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"adhy-p"},"content":"    void remove_nonExistentName_exceptionThrown() {"},{"lineNumber":99,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":100,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":101,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":102,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.remove(\"dummy\");"},{"lineNumber":105,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":106,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":107,"author":{"gitId":"adhy-p"},"content":"            assertEquals(\"Please enter a valid index\", e.getMessage());"},{"lineNumber":108,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished remove (non-existent name) test\");"},{"lineNumber":110,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":112,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":113,"author":{"gitId":"abnermtj"},"content":"    void testGetCheatSheet() {"},{"lineNumber":114,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":115,"author":{"gitId":"adhy-p"},"content":"        CheatSheet test \u003d new CheatSheet(\"Name1\", \"Language1\", \"Details1\");"},{"lineNumber":116,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":117,"author":{"gitId":"adhy-p"},"content":"            if (i \u003d\u003d 1) {"},{"lineNumber":118,"author":{"gitId":"adhy-p"},"content":"                cheatSheetList.add(test);"},{"lineNumber":119,"author":{"gitId":"adhy-p"},"content":"            } else {"},{"lineNumber":120,"author":{"gitId":"adhy-p"},"content":"                cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":121,"author":{"gitId":"adhy-p"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":124,"author":{"gitId":"adhy-p"},"content":"        // test to get cheatsheet by index and by name"},{"lineNumber":125,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"adhy-p"},"content":"            assertEquals(test, cheatSheetList.get(2));"},{"lineNumber":127,"author":{"gitId":"adhy-p"},"content":"            assertEquals(test, cheatSheetList.get(\"Name1\"));"},{"lineNumber":128,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":129,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":130,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished GetCheatSheet test\");"},{"lineNumber":132,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":134,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":135,"author":{"gitId":"adhy-p"},"content":"    void getCheatSheet_negativeIndex_exceptionThrown() {"},{"lineNumber":136,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":137,"author":{"gitId":"adhy-p"},"content":"        CheatSheet test;"},{"lineNumber":138,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":139,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":140,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"adhy-p"},"content":"            test \u003d cheatSheetList.get(-1);"},{"lineNumber":143,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":144,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":145,"author":{"gitId":"adhy-p"},"content":"            assertEquals(\"Please enter a valid index\", e.getMessage());"},{"lineNumber":146,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished GetCheatSheet (negative index) test\");"},{"lineNumber":148,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":150,"author":{"gitId":"adhy-p"},"content":"    @Test"},{"lineNumber":151,"author":{"gitId":"adhy-p"},"content":"    void getCheatSheet_nonExistentName_exceptionThrown() {"},{"lineNumber":152,"author":{"gitId":"adhy-p"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":153,"author":{"gitId":"adhy-p"},"content":"        CheatSheet test;"},{"lineNumber":154,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":155,"author":{"gitId":"adhy-p"},"content":"            cheatSheetList.add(new CheatSheet(\"Name\" + i, \"Language\" + i, \"Details\" + i));"},{"lineNumber":156,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"adhy-p"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"adhy-p"},"content":"            test \u003d cheatSheetList.get(\"cheatlogs\");"},{"lineNumber":159,"author":{"gitId":"adhy-p"},"content":"            fail();"},{"lineNumber":160,"author":{"gitId":"adhy-p"},"content":"        } catch (CommandException e) {"},{"lineNumber":161,"author":{"gitId":"adhy-p"},"content":"            assertEquals(\"Please enter a valid name\", e.getMessage());"},{"lineNumber":162,"author":{"gitId":"adhy-p"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"adhy-p"},"content":"        logger.log(Level.INFO, \"Finished GetCheatSheet (non-existent index) test\");"},{"lineNumber":164,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"adhy-p"},"content":"}"}],"authorContributionMap":{"abnermtj":4,"adhy-p":161}},{"path":"src/test/java/cheatsheet/CheatSheetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package cheatsheet;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"class CheatSheetTest {"},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":"    void getCheatSheetName() {"},{"lineNumber":11,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"Test1\", cheatSheet1.getName());"},{"lineNumber":13,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":15,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"domaxi"},"content":"    void setCheatSheetName() {"},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"        cheatSheet1.setName(\"Java 11 cheatsheet\");"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"Java 11 cheatsheet\", cheatSheet1.getName());"},{"lineNumber":20,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":22,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    void getSubject() {"},{"lineNumber":24,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"Java 11\", cheatSheet1.getSubject());"},{"lineNumber":26,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":28,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"    void setCheatSheetSubject() {"},{"lineNumber":30,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        cheatSheet1.setSubject(\"C++ 11\");"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"C++ 11\", cheatSheet1.getSubject());"},{"lineNumber":33,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"domaxi"},"content":"    void getCheatSheetDetails() {"},{"lineNumber":37,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"Java 11 is a Java programming language.\", cheatSheet1.getDetails());"},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":41,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"domaxi"},"content":"    void setCheatSheetDetails() {"},{"lineNumber":43,"author":{"gitId":"domaxi"},"content":"        CheatSheet cheatSheet1 \u003d new CheatSheet(\"Test1\", \"Java 11\", \"Java 11 is a Java programming language.\");"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"        cheatSheet1.setDetails(\"Java 11 is an awesome language\");"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"        assertEquals(\"Java 11 is an awesome language\", cheatSheet1.getDetails());"},{"lineNumber":46,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":36,"abnermtj":11}},{"path":"src/test/java/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import stubs.EditorStub;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"class AddCommandTest {"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    void execute_nameAndSubject_success() throws CommandException {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        EditorStub editorStub \u003d new EditorStub();"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        AddCommand addCommand \u003d new AddCommand(new Printer(), cheatSheetList, editorStub);"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, \"Test1\");"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.SUBJECT, \"Java1\");"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"        addCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"        editorStub.writeContent(\"Content1\");"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"        addCommand.execute();"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        assertEquals(cheatSheetList.getSize(), 1);"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"    void execute_nameOnly_success() throws CommandException {"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"        EditorStub editorStub \u003d new EditorStub();"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"        AddCommand addCommand \u003d new AddCommand(new Printer(), cheatSheetList, editorStub);"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, \"Test1\");"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.SUBJECT, null);"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"        addCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"        editorStub.writeContent(\"Content1\");"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        addCommand.execute();"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"        assertEquals(cheatSheetList.getSize(), 1);"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"    void execute_SubjectOnly_exceptionThrown() throws CommandException {"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"        EditorStub editorStub \u003d new EditorStub();"},{"lineNumber":50,"author":{"gitId":"brandontoh"},"content":"        AddCommand addCommand \u003d new AddCommand(new Printer(), cheatSheetList, editorStub);"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, null);"},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.SUBJECT, \"Java1\");"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"        addCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"        editorStub.writeContent(\"Content1\");"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"        assertThrows(CommandException.class, addCommand::execute);"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"}"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"*/"}],"authorContributionMap":{"abnermtj":9,"brandontoh":47,"adhy-p":3}},{"path":"src/test/java/command/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import command.stuba.CheatSheetListStub;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import command.stuba.DataFileDestroyerStub;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import command.stuba.DataFileReaderStub;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import command.stuba.UiStub;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"class ClearCommandTest {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    Printer printer;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    CheatSheetListStub cheatSheetList;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    DataFileDestroyerStub fileDestroyer;"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    DataFileReaderStub fileReader;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    ClearCommand command;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    UiStub ui;"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    public ClearCommandTest() {"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"        printer \u003d new Printer();"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList \u003d new CheatSheetListStub();"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        fileDestroyer \u003d new DataFileDestroyerStub(cheatSheetList);"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        fileReader \u003d new DataFileReaderStub();"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"        ui \u003d new UiStub();"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        command \u003d new ClearCommand(printer, cheatSheetList, fileDestroyer, fileReader, ui);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    public void clear_confirmFilledList_empty() {"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"C\", \"3\", \"6\"));"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"YES\");"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        command.execute();"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"        assertEquals(0, cheatSheetList.getSize());"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"    public void clear_noConfirmFilledList_filled() {"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"Abn\", \"Java\", \"While\"));"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"er\", \"C\", \"If else\"));"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"        assertEquals(2, cheatSheetList.getSize());"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"No\");"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"        command.execute();"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"        assertEquals(2, cheatSheetList.getSize());"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"    public void clear_confirmEmptyList_empty() {"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"        assertEquals(0, cheatSheetList.getSize());"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"Yes\");"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"        command.execute();"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"        assertEquals(0, cheatSheetList.getSize());"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":60,"brandontoh":10}},{"path":"src/test/java/command/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"class CommandTest {"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    void execute() {"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    void testExecute() {"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public void testCommand() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        // todo : implement this"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"        assertTrue(true);"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":6,"brandontoh":16}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import command.stuba.CheatSheetListStub;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import command.stuba.DataFileDestroyerStub;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import command.stuba.UiStub;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"public class DeleteCommandTest {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    Printer printer;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    CheatSheetListStub cheatSheetList;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    DataFileDestroyerStub fileDestroyer;"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"    DeleteCommand command;"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    UiStub ui;"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    public DeleteCommandTest() {"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        printer \u003d new Printer();"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList \u003d new CheatSheetListStub();"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"        fileDestroyer \u003d new DataFileDestroyerStub(cheatSheetList);"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"        ui \u003d new UiStub();"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        command \u003d new DeleteCommand(printer, cheatSheetList, fileDestroyer, ui);"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"    public void delete_matchedConfirm_deleted() {"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"C\", \"3\", \"6\"));"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"YES\");"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, \"A\");"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"            command.execute();"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        assertEquals(3, cheatSheetList.getSize());"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"    public void delete_matchedNotConfirmed_notDeleted() {"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"C\", \"3\", \"6\"));"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"ssasasas\");"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, \"A\");"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"            command.execute();"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"    public void delete_outOfBoundIndexConfirm_error() {"},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"YES\");"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, \"3\");"},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"            command.execute();"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"Please enter a valid index\", e.getMessage());"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"            return;"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"abnermtj"},"content":"        fail(\"Did not throw error when deleting out of bounds\");"},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":103,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"abnermtj"},"content":"    public void delete_twoMatchedConfirm_continue() {"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.clear();"},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":107,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":108,"author":{"gitId":"abnermtj"},"content":"        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":109,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":110,"author":{"gitId":"abnermtj"},"content":"        ui.clearUserInput();"},{"lineNumber":111,"author":{"gitId":"abnermtj"},"content":"        ui.pushUserInput(\"YES\");"},{"lineNumber":112,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":113,"author":{"gitId":"abnermtj"},"content":"        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":114,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.NAME, \"A\");"},{"lineNumber":115,"author":{"gitId":"abnermtj"},"content":"        flagsToDescriptions.put(CommandFlag.INDEX, \"2\");"},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":118,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"abnermtj"},"content":"            command.execute();"},{"lineNumber":120,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":121,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"No cheat sheet matches the name and index entered\", e.getMessage());"},{"lineNumber":122,"author":{"gitId":"abnermtj"},"content":"            return;"},{"lineNumber":123,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":125}},{"path":"src/test/java/command/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"//package command;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"//import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"//import command.stuba.CheatSheetListStub;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"//import command.stuba.DataFileDestroyerStub;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"//import command.stuba.EditorStub;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"//import exception.CommandException;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"//import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"//import ui.Printer;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"//import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"//import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"//import java.util.LinkedHashMap;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"//public class EditCommandTest {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"//    Printer printer;"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"//    CheatSheetListStub cheatSheetList;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"//    DataFileDestroyerStub fileDestroyer;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"//    EditCommand command;"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"//    EditorStub editor;"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"//    public EditCommandTest() {"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"//        printer \u003d new Printer();"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList \u003d new CheatSheetListStub();"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"//        fileDestroyer \u003d new DataFileDestroyerStub(cheatSheetList);"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"//        editor \u003d new EditorStub();"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"//        command \u003d new EditCommand(printer, cheatSheetList, editor);"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"//    public void edited_matched_edited() {"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.clear();"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"C\", \"3\", \"6\"));"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"//        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"//        flagsToDescriptions.put(CommandFlag.NAME, \"A\");"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"//        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"//        try {"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"//            command.execute();"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"//        } catch (CommandException e) {"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"//            fail(e.getMessage());"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"//        }"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(4, cheatSheetList.getSize());"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"//    public void edited_outOfBoundIndex_error() {"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.clear();"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"//        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"//        flagsToDescriptions.put(CommandFlag.INDEX, \"3\");"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"//        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"//        try {"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"//            command.execute();"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"//        } catch (CommandException e) {"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"//            assertEquals(\"Please enter a valid index\", e.getMessage());"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"//            return;"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"//        }"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"//        fail(\"Did not throw error when editing out of bounds\");"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"//    public void edited_twoMatchedConfirm_continue() {"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.clear();"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"A\", \"1\", \"2\"));"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"B\", \"2\", \"4\"));"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"//        cheatSheetList.add(new CheatSheet(\"D\", \"4\", \"8\"));"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":"//        LinkedHashMap\u003cCommandFlag, String\u003e flagsToDescriptions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"//        flagsToDescriptions.put(CommandFlag.NAME, \"A\");"},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"//        flagsToDescriptions.put(CommandFlag.INDEX, \"2\");"},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"//        command.setFlagsToDescriptionsMap(flagsToDescriptions);"},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"//        try {"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"//            command.execute();"},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"//        } catch (CommandException e) {"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"//            assertEquals(\"No cheat sheet matches the name and index entered\", e.getMessage());"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"//        }"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"//}"}],"authorContributionMap":{"abnermtj":90}},{"path":"src/test/java/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"class ExitCommandTest {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    Printer printer;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    ExitCommand command;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    public ExitCommandTest() {"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"        printer \u003d new Printer();"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        command \u003d new ExitCommand(printer);"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    void help_extraChars_pass() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        command.execute();"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"        assertEquals(true, command.isExitCommand);"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":13,"brandontoh":9}},{"path":"src/test/java/command/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import parser.CommandFlag;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import stubs.EditorStub;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import java.io.ByteArrayInputStream;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"adhy-p"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"adhy-p"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"class FindCommandTest {"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"/*"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    void execute_validName_success() throws CommandException {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        CheatSheetList cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        EditorStub editorStub \u003d new EditorStub();"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"        AddCommand addCommand \u003d new AddCommand(new Printer(), cheatSheetList, editorStub);"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e addCommandMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"        addCommandMap.put(CommandFlag.NAME, \"Test1\");"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"        addCommandMap.put(CommandFlag.SUBJECT, \"Java1\");"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"        addCommand.setFlagsToDescriptionsMap(addCommandMap);"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"        editorStub.writeContent(\"Content1\");"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        addCommand.execute();"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        FindCommand findCommand \u003d new FindCommand(new Printer(), cheatSheetList);"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e findCommandMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"        findCommandMap.put(CommandFlag.NAME, \"Test1\");"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"        findCommand.setFlagsToDescriptionsMap(findCommandMap);"},{"lineNumber":35,"author":{"gitId":"adhy-p"},"content":"        findCommand.execute();"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"        String data \u003d \"Hello, World!\\r\\n\";"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"        System.setIn(new ByteArrayInputStream(data.getBytes()));"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":"    }*/"},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":1,"brandontoh":34,"adhy-p":5}},{"path":"src/test/java/command/HelpTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"class HelpTest {"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"    Printer printer;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    HelpCommand command;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    public HelpTest() {"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        printer \u003d new Printer();"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        command \u003d new HelpCommand(printer);"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    void help_extraChars_pass() {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        command.execute();"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"abnermtj":10,"brandontoh":9}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"class ListCommandTest {"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    void execute() {"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":12}},{"path":"src/test/java/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":"package command;"},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"adhy-p"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import parser.CommandFlag;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import stubs.EditorStub;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import stubs.PrinterStub;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"import java.util.HashMap;"},{"lineNumber":15,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"class ViewCommandTest {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"    private static CheatSheetList cheatSheetList;"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"    private static EditorStub editorStub;"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    @BeforeAll"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"    public static void setUp() throws CommandException {"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"        cheatSheetList \u003d new CheatSheetList();"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"        editorStub \u003d new EditorStub();"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"            AddCommand addCommand \u003d new AddCommand(new Printer(), cheatSheetList, editorStub);"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"            HashMap\u003cCommandFlag, String\u003e addMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"            addMap.put(CommandFlag.NAME, \"Test\" + i);"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"            addMap.put(CommandFlag.SUBJECT, \"Java\" + i);"},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"            addCommand.setFlagsToDescriptionsMap(addMap);"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"            editorStub.writeContent(\"Content\" + i);"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"            addCommand.execute();"},{"lineNumber":37,"author":{"gitId":"brandontoh"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":40,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"brandontoh"},"content":"    void execute_validName_success() throws CommandException {"},{"lineNumber":42,"author":{"gitId":"brandontoh"},"content":"        PrinterStub printerStub \u003d new PrinterStub();"},{"lineNumber":43,"author":{"gitId":"brandontoh"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(printerStub, cheatSheetList);"},{"lineNumber":44,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, \"Test1\");"},{"lineNumber":46,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.INDEX, null);"},{"lineNumber":47,"author":{"gitId":"brandontoh"},"content":"        viewCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":48,"author":{"gitId":"brandontoh"},"content":"        viewCommand.execute();"},{"lineNumber":49,"author":{"gitId":"brandontoh"},"content":"        assertEquals(printerStub.getCheatSheetName(), \"Test1\");"},{"lineNumber":50,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":52,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"brandontoh"},"content":"    void execute_validIndex_success() throws CommandException {"},{"lineNumber":54,"author":{"gitId":"brandontoh"},"content":"        PrinterStub printerStub \u003d new PrinterStub();"},{"lineNumber":55,"author":{"gitId":"brandontoh"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(printerStub, cheatSheetList);"},{"lineNumber":56,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, null);"},{"lineNumber":58,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.INDEX, \"3\");"},{"lineNumber":59,"author":{"gitId":"brandontoh"},"content":"        viewCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":60,"author":{"gitId":"adhy-p"},"content":"        viewCommand.execute();"},{"lineNumber":61,"author":{"gitId":"brandontoh"},"content":"        assertEquals(printerStub.getCheatSheetName(), \"Test2\");"},{"lineNumber":62,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":64,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":65,"author":{"gitId":"brandontoh"},"content":"    void execute_inValidNumberedIndex_exceptionThrown() {"},{"lineNumber":66,"author":{"gitId":"brandontoh"},"content":"        PrinterStub printerStub \u003d new PrinterStub();"},{"lineNumber":67,"author":{"gitId":"brandontoh"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(printerStub, cheatSheetList);"},{"lineNumber":68,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, null);"},{"lineNumber":70,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.INDEX, \"11\");"},{"lineNumber":71,"author":{"gitId":"brandontoh"},"content":"        viewCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":72,"author":{"gitId":"brandontoh"},"content":"        assertThrows(CommandException.class, viewCommand::execute);"},{"lineNumber":73,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":75,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"brandontoh"},"content":"    void execute_inValidLetterIndex_exceptionThrown() {"},{"lineNumber":77,"author":{"gitId":"brandontoh"},"content":"        PrinterStub printerStub \u003d new PrinterStub();"},{"lineNumber":78,"author":{"gitId":"brandontoh"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(printerStub, cheatSheetList);"},{"lineNumber":79,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, null);"},{"lineNumber":81,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.INDEX, \"asd\");"},{"lineNumber":82,"author":{"gitId":"brandontoh"},"content":"        viewCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":83,"author":{"gitId":"brandontoh"},"content":"        assertThrows(CommandException.class, viewCommand::execute);"},{"lineNumber":84,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":86,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"brandontoh"},"content":"    void execute_inValidName_exceptionThrown() {"},{"lineNumber":88,"author":{"gitId":"brandontoh"},"content":"        PrinterStub printerStub \u003d new PrinterStub();"},{"lineNumber":89,"author":{"gitId":"brandontoh"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(printerStub, cheatSheetList);"},{"lineNumber":90,"author":{"gitId":"brandontoh"},"content":"        HashMap\u003cCommandFlag, String\u003e map \u003d new HashMap\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.NAME, \"Test11\");"},{"lineNumber":92,"author":{"gitId":"brandontoh"},"content":"        map.put(CommandFlag.INDEX, null);"},{"lineNumber":93,"author":{"gitId":"brandontoh"},"content":"        viewCommand.setFlagsToDescriptionsMap(map);"},{"lineNumber":94,"author":{"gitId":"brandontoh"},"content":"        assertThrows(CommandException.class, viewCommand::execute);"},{"lineNumber":95,"author":{"gitId":"adhy-p"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"brandontoh"},"content":"}"},{"lineNumber":97,"author":{"gitId":"brandontoh"},"content":"*/"}],"authorContributionMap":{"brandontoh":89,"adhy-p":8}},{"path":"src/test/java/command/stuba/CheatSheetListStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command.stuba;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"public class CheatSheetListStub extends CheatSheetList {"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    private ArrayList\u003cCheatSheet\u003e cheatSheets \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    public void add(CheatSheet cheatSheet) {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        cheatSheets.add(cheatSheet);"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public void clear() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        cheatSheets.clear();"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    public void remove(String name) throws CommandException {"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"        int index \u003d 0;"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"        for (CheatSheet cs : cheatSheets) {"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"            if (cs.getName().equals(name)) {"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"            index++;"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"            remove(index);"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"    public void remove(int index) throws CommandException {"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"            cheatSheets.remove(index);"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    public CheatSheet get(int index) throws CommandException {"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"        CheatSheet cheatSheet;"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"            cheatSheet \u003d cheatSheets.get(index - 1);"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid index\");"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        return cheatSheet;"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"    public CheatSheet get(String name) throws CommandException {"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"        int index \u003d 0;"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"        for (CheatSheet cs : cheatSheets) {"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"            if (cs.getName().equals(name)) {"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"            index++;"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"        CheatSheet cheatSheet;"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"            cheatSheet \u003d get(index + 1);"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid name\");"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"        return cheatSheet;"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"    public int getSize() {"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"        return cheatSheets.size();"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":78}},{"path":"src/test/java/command/stuba/DataFileDestroyerStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command.stuba;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"public class DataFileDestroyerStub extends DataFileDestroyer {"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    boolean isDataDestroyed;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    public DataFileDestroyerStub(CheatSheetList list) {"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        super(null, list);"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        isDataDestroyed \u003d false;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"        isDataDestroyed \u003d false;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    public void executeFunction(String name) {"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"        isDataDestroyed \u003d true;"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"    public void executeFunction() {"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        isDataDestroyed \u003d true;"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":28}},{"path":"src/test/java/command/stuba/DataFileReaderStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command.stuba;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileReader;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"public class DataFileReaderStub extends DataFileReader {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    boolean isDataRead;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public DataFileReaderStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"        super(null,null, null);"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"        isDataRead \u003d false;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        isDataRead \u003d false;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public void executeFunction() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        isDataRead \u003d true;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":21}},{"path":"src/test/java/command/stuba/EditorStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command.stuba;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import editor.Editor;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import exception.EditorException;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"public class EditorStub extends Editor {"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    CheatSheet content \u003d null;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    public void open(){"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    public void setContent(CheatSheet cheatSheet) {"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"        content \u003d cheatSheet;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    public String getContent() throws EditorException {"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"        return content.getDetails();"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"    public void waitForClose() {"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":27}},{"path":"src/test/java/command/stuba/UiStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package command.stuba;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import ui.Ui;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"public class UiStub extends Ui {"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    private LinkedList\u003cString\u003e userInput;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    public UiStub() {"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        userInput \u003d new LinkedList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    public void pushUserInput(String userInput) {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        this.userInput.push(userInput);"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public String getUserInput() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        return userInput.removeLast();"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    public void clearUserInput() {"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"        userInput.clear();"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":25}},{"path":"src/test/java/editor/EditorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domaxi"},"content":"package editor;"},{"lineNumber":2,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":3,"author":{"gitId":"domaxi"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"domaxi"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":5,"author":{"gitId":"domaxi"},"content":"import command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"domaxi"},"content":"import command.Command;"},{"lineNumber":7,"author":{"gitId":"domaxi"},"content":"import exception.CommandException;"},{"lineNumber":8,"author":{"gitId":"domaxi"},"content":"import exception.EditorException;"},{"lineNumber":9,"author":{"gitId":"domaxi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"domaxi"},"content":"import parser.CommandFlag;"},{"lineNumber":11,"author":{"gitId":"domaxi"},"content":"import parser.Parser;"},{"lineNumber":12,"author":{"gitId":"domaxi"},"content":"import settings.Settings;"},{"lineNumber":13,"author":{"gitId":"domaxi"},"content":"import storage.DataFileDestroyer;"},{"lineNumber":14,"author":{"gitId":"domaxi"},"content":"import ui.Printer;"},{"lineNumber":15,"author":{"gitId":"domaxi"},"content":"import ui.Ui;"},{"lineNumber":16,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":17,"author":{"gitId":"domaxi"},"content":"import java.awt.event.ActionEvent;"},{"lineNumber":18,"author":{"gitId":"domaxi"},"content":"import java.io.IOException;"},{"lineNumber":19,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":20,"author":{"gitId":"domaxi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":21,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":22,"author":{"gitId":"domaxi"},"content":"class EditorTest {"},{"lineNumber":23,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":24,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"domaxi"},"content":"    void setting_normal_content_test() throws EditorException {"},{"lineNumber":26,"author":{"gitId":"domaxi"},"content":"        /* Editor testEditor \u003d new Editor();"},{"lineNumber":27,"author":{"gitId":"domaxi"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(\"Test1\", \"Testing\", \"Testing the editor\");"},{"lineNumber":28,"author":{"gitId":"domaxi"},"content":"        testEditor.setContent(testCheatSheet);"},{"lineNumber":29,"author":{"gitId":"domaxi"},"content":"        assertEquals(testEditor.getContent(),\"Testing the editor\");*/"},{"lineNumber":30,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"domaxi"},"content":""},{"lineNumber":32,"author":{"gitId":"domaxi"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"domaxi"},"content":"    void getting_normal_content_test() throws EditorException {"},{"lineNumber":34,"author":{"gitId":"domaxi"},"content":"        /* Editor testEditor \u003d new Editor();"},{"lineNumber":35,"author":{"gitId":"domaxi"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(\"Test1\", \"Testing\", \"Testing the editor\");"},{"lineNumber":36,"author":{"gitId":"domaxi"},"content":"        testEditor.setContent(testCheatSheet);"},{"lineNumber":37,"author":{"gitId":"domaxi"},"content":"        String editorContent \u003d testEditor.getContent();"},{"lineNumber":38,"author":{"gitId":"domaxi"},"content":"        assertEquals(editorContent,\"Testing the editor\"); */"},{"lineNumber":39,"author":{"gitId":"domaxi"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"domaxi"},"content":"}"}],"authorContributionMap":{"domaxi":40}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import command.AddCommand;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import command.ClearCommand;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"import command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"import command.EditCommand;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"import command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"import command.FavouriteCommand;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"import command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"import command.HelpCommand;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"import command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"import command.SettingsCommand;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"import command.ViewCommand;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"class ParserTest {"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    Parser parser;"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"    UiStub ui;"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"    SettingsStub settings;"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"    public ParserTest() {"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"        Printer printer \u003d new Printer();"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"        settings \u003d new SettingsStub();"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        ui \u003d new UiStub();"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"        parser \u003d new Parser(null, null, null, printer, ui, settings, null);"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"    void parse_addCommand_pass() {"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/add /n if /s Java\";"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof AddCommand);"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"    void parse_addCommandFlagNotRequired_exception() {"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/add /k name /s subject\";"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"            parser.parse(userInput);"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"            assertEquals(e.getMessage(), \"Please input the correct flags\");"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"            return;"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"        fail(\"Exception not thrown\");"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"    void parse_deleteCommandFlagsRepeated_exception() {"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/delete /n name /n name\";"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"            parser.parse(userInput);"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"            assertEquals(e.getMessage(), \"Duplicated flags are not allowed\");"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"            return;"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"        fail(\"Exception not thrown\");"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"    void parse_deleteCommandWhiteSpaces_pass() {"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/delete /n     na 1me       \";"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.NAME);"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof DeleteCommand);"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"na 1me\", description);"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"    void parse_clearCommandExtraCharacters_pass() {"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/clear asdasdasd1231 / a\";"},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof ClearCommand);"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"    void parse_editCommandLargeInputIndex_pass() {"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/edit /i \" + String.valueOf(Integer.MAX_VALUE);"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.INDEX);"},{"lineNumber":100,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof EditCommand);"},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"            assertEquals(String.valueOf(Integer.MAX_VALUE), description);"},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":103,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":104,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":107,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":108,"author":{"gitId":"abnermtj"},"content":"    void parse_editCommandSpecialChar_pass() {"},{"lineNumber":109,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/edit /n @@ASD\u0027\u0027s.\u0026*()(*\u0026^%+P{AS\";"},{"lineNumber":110,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":112,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.NAME);"},{"lineNumber":113,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof EditCommand);"},{"lineNumber":114,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"@@ASD\u0027\u0027s.\u0026*()(*\u0026^%+P{AS\", description);"},{"lineNumber":115,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":116,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":117,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":120,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"abnermtj"},"content":"    void parse_findCommandCharAfterCommand_pass() {"},{"lineNumber":122,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/find  s /s 123 \";"},{"lineNumber":123,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":125,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.SUBJECT);"},{"lineNumber":126,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof FindCommand);"},{"lineNumber":127,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"123\", description);"},{"lineNumber":128,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":129,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":130,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":133,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":134,"author":{"gitId":"abnermtj"},"content":"    void parse_favouriteCommandFillMissingFlag_pass() {"},{"lineNumber":135,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/fav\";"},{"lineNumber":136,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"abnermtj"},"content":"            ui.clearUserInput();"},{"lineNumber":138,"author":{"gitId":"abnermtj"},"content":"            ui.pushUserInput(\"\\r\");"},{"lineNumber":139,"author":{"gitId":"abnermtj"},"content":"            ui.pushUserInput(\"\\r\");"},{"lineNumber":140,"author":{"gitId":"abnermtj"},"content":"            ui.pushUserInput(\"Noobs\");"},{"lineNumber":141,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":142,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":143,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":144,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.NAME);"},{"lineNumber":145,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof FavouriteCommand);"},{"lineNumber":146,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"Noobs\", description);"},{"lineNumber":147,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":148,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":149,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":152,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":153,"author":{"gitId":"abnermtj"},"content":"    void parse_listCommandExtraLetterWithHelp_pass() {"},{"lineNumber":154,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/list asd\";"},{"lineNumber":155,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"abnermtj"},"content":"            settings.setDisplayingHelpMessages(true);"},{"lineNumber":157,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":158,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":159,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof ListCommand);"},{"lineNumber":160,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":161,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":162,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":165,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":166,"author":{"gitId":"abnermtj"},"content":"    void parse_viewCommandSpacesInMissingFlagInput_pass() {"},{"lineNumber":167,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/view\";"},{"lineNumber":168,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"abnermtj"},"content":"            ui.clearUserInput();"},{"lineNumber":170,"author":{"gitId":"abnermtj"},"content":"            ui.pushUserInput(\"    Noo  bs    \");"},{"lineNumber":171,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":172,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":173,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.NAME);"},{"lineNumber":174,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof ViewCommand);"},{"lineNumber":175,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"Noo  bs\", description);"},{"lineNumber":176,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":177,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":178,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":181,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":182,"author":{"gitId":"abnermtj"},"content":"    void parse_settingCommandEmptyFlagDescription_pass() {"},{"lineNumber":183,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/set /m\";"},{"lineNumber":184,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":185,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":186,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":187,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.HELPMESSAGE);"},{"lineNumber":188,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof SettingsCommand);"},{"lineNumber":189,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"\", description);"},{"lineNumber":190,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":191,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":192,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":195,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":196,"author":{"gitId":"abnermtj"},"content":"    void parse_settingsCommandSpecialCharsInMissingFlagInput_pass() {"},{"lineNumber":197,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/set\";"},{"lineNumber":198,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":199,"author":{"gitId":"abnermtj"},"content":"            ui.clearUserInput();"},{"lineNumber":200,"author":{"gitId":"abnermtj"},"content":"            ui.pushUserInput(\"123@1!!\\t! \");"},{"lineNumber":201,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":202,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":203,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":204,"author":{"gitId":"abnermtj"},"content":"            String description \u003d result.getFlagsToDescriptionsMap().get(CommandFlag.COLORSCHEME);"},{"lineNumber":205,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof SettingsCommand);"},{"lineNumber":206,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"123@1!!\\t!\", description);"},{"lineNumber":207,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":208,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":209,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":212,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":213,"author":{"gitId":"abnermtj"},"content":"    void parse_helpCommandExtraChars_pass() {"},{"lineNumber":214,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/help as\";"},{"lineNumber":215,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":216,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":217,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof HelpCommand);"},{"lineNumber":218,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":219,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":220,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":223,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":224,"author":{"gitId":"abnermtj"},"content":"    void parse_exitCommandExtraChars_pass() {"},{"lineNumber":225,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/exit as\";"},{"lineNumber":226,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":227,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":228,"author":{"gitId":"abnermtj"},"content":"            assertEquals(true, result instanceof ExitCommand);"},{"lineNumber":229,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":230,"author":{"gitId":"abnermtj"},"content":"            fail(e.getMessage());"},{"lineNumber":231,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":234,"author":{"gitId":"abnermtj"},"content":"    @Test"},{"lineNumber":235,"author":{"gitId":"abnermtj"},"content":"    void parse_nonExistentCommandExtraChars_pass() {"},{"lineNumber":236,"author":{"gitId":"abnermtj"},"content":"        final String userInput \u003d \"/exASDASDASasda1it as\";"},{"lineNumber":237,"author":{"gitId":"abnermtj"},"content":"        try {"},{"lineNumber":238,"author":{"gitId":"abnermtj"},"content":"            Command result \u003d parser.parse(userInput);"},{"lineNumber":239,"author":{"gitId":"abnermtj"},"content":"            fail(\"Created an non existent command\");"},{"lineNumber":240,"author":{"gitId":"abnermtj"},"content":"        } catch (CommandException e) {"},{"lineNumber":241,"author":{"gitId":"abnermtj"},"content":"            assertEquals(\"Please enter a valid command\", e.getMessage());"},{"lineNumber":242,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":244}},{"path":"src/test/java/parser/SettingsStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import settings.Settings;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"class SettingsStub extends Settings {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    private boolean isDisplayingHelpMessages \u003d true;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public SettingsStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    public boolean getDisplayingHelpMessages() {"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        return isDisplayingHelpMessages;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    public void setDisplayingHelpMessages(boolean isDisplayingHelpMessages) {"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"        this.isDisplayingHelpMessages \u003d isDisplayingHelpMessages;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":18}},{"path":"src/test/java/parser/UiStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import ui.Ui;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"class UiStub extends Ui {"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    private LinkedList\u003cString\u003e userInput;"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    protected UiStub() {"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        userInput \u003d new LinkedList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    protected void pushUserInput(String userInput) {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        this.userInput.push(userInput);"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public String getUserInput() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        return userInput.removeLast();"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    protected void clearUserInput() {"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"        userInput.clear();"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":25}},{"path":"src/test/java/sort/SortByNameRevTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"class SortByNameRevTest {"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    void compare_firstCheatSheetIsSmaller_success() {"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"        SortByNameRev sortByNameRev \u003d new SortByNameRev();"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"apple\", \"C\", \"hello1\");"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Cpp\", \"hello2\");"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortByNameRev.compare(smallerCheatSheet, biggerCheatSheet) \u003e 0);"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    void compare_secondCheatSheetIsSmaller_success() {"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"        SortByNameRev sortByNameRev \u003d new SortByNameRev();"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"apple\", \"C\", \"hello1\");"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Cpp\", \"hello2\");"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortByNameRev.compare(biggerCheatSheet, smallerCheatSheet) \u003c 0);"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":24}},{"path":"src/test/java/sort/SortByNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"class SortByNameTest {"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    void compare_firstCheatSheetIsSmaller_success() {"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"        SortByName sortByName \u003d new SortByName();"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"apple\", \"C\", \"hello1\");"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Cpp\", \"hello2\");"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortByName.compare(smallerCheatSheet, biggerCheatSheet) \u003c 0);"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    void compare_secondCheatSheetIsSmaller_success() {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        SortByName sortByName \u003d new SortByName();"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"apple\", \"C\", \"hello1\");"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Cpp\", \"hello2\");"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortByName.compare(biggerCheatSheet, smallerCheatSheet) \u003e 0);"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":25}},{"path":"src/test/java/sort/SortBySubjectRevTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"class SortBySubjectRevTest {"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    void compare_firstCheatSheetIsSmaller_success() {"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"        SortBySubjectRev sortBySubjectRev \u003d new SortBySubjectRev();"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Java\", \"hello2\");"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortBySubjectRev.compare(smallerCheatSheet, biggerCheatSheet) \u003e 0);"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    void compare_secondCheatSheetIsSmaller_success() {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        SortBySubjectRev sortBySubjectRev \u003d new SortBySubjectRev();"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Java\", \"hello2\");"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortBySubjectRev.compare(biggerCheatSheet, smallerCheatSheet) \u003c 0);"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"    void compare_bothCheatSheetsEqual_success() {"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"        SortBySubjectRev sortBySubjectRev \u003d new SortBySubjectRev();"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"C\", \"hello2\");"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        assertEquals(sortBySubjectRev.compare(biggerCheatSheet, smallerCheatSheet), 0);"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":33}},{"path":"src/test/java/sort/SortBySubjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package sort;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"class SortBySubjectTest {"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    void firstCheatSheetIsSmaller_success() {"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"        SortBySubject sortBySubject \u003d new SortBySubject();"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Java\", \"hello2\");"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortBySubject.compare(smallerCheatSheet, biggerCheatSheet) \u003c 0);"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    void secondCheatSheetIsSmaller_success() {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        SortBySubject sortBySubject \u003d new SortBySubject();"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"Java\", \"hello2\");"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"        assertTrue(sortBySubject.compare(biggerCheatSheet, smallerCheatSheet) \u003e 0);"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"    void compare_bothCheatSheetsEqual_success() {"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"        SortBySubject sortBySubject \u003d new SortBySubject();"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"        CheatSheet smallerCheatSheet \u003d new CheatSheet(\"gorilla\", \"C\", \"hello1\");"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":"        CheatSheet biggerCheatSheet \u003d new CheatSheet(\"elephant\", \"C\", \"hello2\");"},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"        assertEquals(sortBySubject.compare(biggerCheatSheet, smallerCheatSheet), 0);"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":33}},{"path":"src/test/java/storage/DataFileDestroyerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":""},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":""},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":""},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"public class DataFileDestroyerTest extends DataFileTest {"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"    Path sampleTest2 \u003d Paths.get(userDir, data, test, \"sample2.xml\");"},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"    Path sampleTest3 \u003d Paths.get(userDir, data, test, \"sample3.xml\");"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"    String sample2 \u003d \"sample2\";"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"    String sample3 \u003d \"sample3\";"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":""},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"    void clearSingleFile_singleSampleTest_success() {"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":""},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(sample3,"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet);"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":""},{"lineNumber":28,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest3, empty);"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"        File sampleFile3 \u003d sampleTest3.toFile();"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"        testDestroyer.executeFunction(sample3);"},{"lineNumber":32,"author":{"gitId":"theopin"},"content":""},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"        boolean isSampleRemoved \u003d !sampleFile3.exists();"},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"        if (!isSampleRemoved) {"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTest3);"},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTestDir);"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":39,"author":{"gitId":"theopin"},"content":""},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"        assertTrue(isSampleRemoved);"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"theopin"},"content":""},{"lineNumber":44,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"theopin"},"content":"    void clearDirectory_multipleSampleTest_success() {"},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":""},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest2, empty);"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest3, empty);"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":""},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet2 \u003d new CheatSheet(sample2,"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":54,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet3 \u003d new CheatSheet(sample3,"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":""},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet2);"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet3);"},{"lineNumber":62,"author":{"gitId":"theopin"},"content":""},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"        File sampleFile2 \u003d sampleTest2.toFile();"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"        File sampleFile3 \u003d sampleTest3.toFile();"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"        testDestroyer.executeFunction();"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":""},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"        boolean isSampleRemoved \u003d !(sampleFile2.exists() || sampleFile3.exists());"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"        if (!isSampleRemoved) {"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTest2);"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTest3);"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTestDir);"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":""},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"        assertTrue(isSampleRemoved);"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":""},{"lineNumber":79,"author":{"gitId":"theopin"},"content":""},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"theopin":80}},{"path":"src/test/java/storage/DataFileReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":""},{"lineNumber":5,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":""},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"public class DataFileReaderTest extends DataFileTest {"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":""},{"lineNumber":13,"author":{"gitId":"theopin"},"content":"    String fileInput \u003d \"\u003cmain\u003e\""},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"            + \"\u003cfavourite\u003eYes\u003c/favourite\u003e\""},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"            + \"\u003csubject\u003eTest\u003c/subject\u003e\""},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"            + \"\u003ccontents\u003eTest Success!\u003c/contents\u003e\""},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"            + \"\u003c/main\u003e\";"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"    String invalidFileInput  \u003d \"garble garble garble \";"},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"    Path sampleTest4 \u003d Paths.get(userDir, data, test, \"sample4.xml\");"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"    String sample4 \u003d \"sample4\";"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":""},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"    void readFile_name_success() {"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":30,"author":{"gitId":"theopin"},"content":""},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest4, fileInput);"},{"lineNumber":33,"author":{"gitId":"theopin"},"content":""},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTest4);"},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":""},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"        boolean isCheatSheetListEmpty \u003d testCheatSheetList.getSize() \u003d\u003d 0;"},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"        String testName \u003d !isCheatSheetListEmpty"},{"lineNumber":41,"author":{"gitId":"theopin"},"content":"                ? testCheatSheetList.getList().get(0).getName()"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"                : empty;"},{"lineNumber":43,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":""},{"lineNumber":45,"author":{"gitId":"theopin"},"content":"        assertEquals(sample4, testName);"},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":""},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"    void readFile_subject_success() {"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":""},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest4, fileInput);"},{"lineNumber":55,"author":{"gitId":"theopin"},"content":""},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTest4);"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":""},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"        boolean isCheatSheetListEmpty \u003d testCheatSheetList.getSize() \u003d\u003d 0;"},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"        String testSubject \u003d !isCheatSheetListEmpty"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"                ? testCheatSheetList.getList().get(0).getSubject() :"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"                empty;"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"        assertEquals(\"Test\", testSubject);"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":""},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"    void readFile_details_success() {"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":""},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest4, fileInput);"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":""},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTest4);"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":""},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"        boolean isCheatSheetListEmpty \u003d testCheatSheetList.getSize() \u003d\u003d 0;"},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"        String testSubject \u003d !isCheatSheetListEmpty"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"                ? testCheatSheetList.getList().get(0).getDetails() :"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"                empty;"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"        assertEquals(\"Test Success!\", testSubject);"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":""},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"    void readFile_favourite_success() {"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":93,"author":{"gitId":"theopin"},"content":""},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest4, fileInput);"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":""},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTest4);"},{"lineNumber":100,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":101,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":102,"author":{"gitId":"theopin"},"content":""},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"        boolean isCheatSheetListEmpty \u003d testCheatSheetList.getSize() \u003d\u003d 0;"},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"        boolean testFavourite \u003d !isCheatSheetListEmpty \u0026\u0026 testCheatSheetList.getList().get(0).getIsFavourite();"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"        assertTrue(testFavourite);"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"theopin"},"content":""},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"    void readFile_invalidFile_notAdded() {"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":""},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":114,"author":{"gitId":"theopin"},"content":""},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":116,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest4, invalidFileInput);"},{"lineNumber":117,"author":{"gitId":"theopin"},"content":""},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTest4);"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":121,"author":{"gitId":"theopin"},"content":""},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":123,"author":{"gitId":"theopin"},"content":""},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"        int finalListSize \u003d testCheatSheetList.getSize();"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":"        assertEquals(0, finalListSize);"},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"theopin"},"content":""},{"lineNumber":128,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":129,"author":{"gitId":"theopin"},"content":"    void readFile_jarFile_success() {"},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":""},{"lineNumber":133,"author":{"gitId":"theopin"},"content":"        testReader.jarDirectory \u003d sampleJarFile;"},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"        testReader.extractPreloadedCheatSheets();"},{"lineNumber":135,"author":{"gitId":"theopin"},"content":"        testReader.executeFunction();"},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"        final int finalListSize \u003d testCheatSheetList.getSize();"},{"lineNumber":137,"author":{"gitId":"theopin"},"content":""},{"lineNumber":138,"author":{"gitId":"theopin"},"content":"        eraseFile(Paths.get(userDir, data, \"preloaded\", \"C\", \"string.xml\"));"},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"        eraseFile(Paths.get(userDir, data, \"preloaded\", \"C\"));"},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"        eraseFile(Paths.get(userDir, data, \"preloaded\"));"},{"lineNumber":141,"author":{"gitId":"theopin"},"content":""},{"lineNumber":142,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":143,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":144,"author":{"gitId":"theopin"},"content":""},{"lineNumber":145,"author":{"gitId":"theopin"},"content":"        assertEquals(1, finalListSize);"},{"lineNumber":146,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"theopin"},"content":"    "},{"lineNumber":148,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"theopin":148}},{"path":"src/test/java/storage/DataFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"adhy-p"},"content":"import cheatsheet.CheatSheetList;"},{"lineNumber":4,"author":{"gitId":"adhy-p"},"content":"import settings.Settings;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"import ui.Printer;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"theopin"},"content":""},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"public class DataFileTest {"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":""},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"    String userDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":"    String data \u003d \"data\";"},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"    String temp \u003d \"temp\";"},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"    String test \u003d \"Test\";"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"    String empty \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"    String sample \u003d \"sample\";"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"    String sampleJarFile \u003d Paths.get(\"src\", \"test\", \"java\", \"storage\", \"Test.jar\")"},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"            .toString();"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":""},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"    Path settingsPath \u003d Paths.get(userDir, data, \"settings.txt\");"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"    Path sampleTestDir \u003d Paths.get(userDir, data, test);"},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"    Path dataDir \u003d Paths.get(userDir, data);"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"    Path tempDir \u003d Paths.get(userDir, temp);"},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"    Path tempDataDir \u003d Paths.get(userDir, temp, data);"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":""},{"lineNumber":29,"author":{"gitId":"adhy-p"},"content":""},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"    Printer printer \u003d new Printer();"},{"lineNumber":31,"author":{"gitId":"adhy-p"},"content":"    Settings settings \u003d new Settings(printer);"},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"    CheatSheetList testCheatSheetList \u003d new CheatSheetList();"},{"lineNumber":33,"author":{"gitId":"adhy-p"},"content":"    DataFileReader testReader \u003d new DataFileReader(settings, printer, testCheatSheetList);"},{"lineNumber":34,"author":{"gitId":"adhy-p"},"content":"    DataFileWriter testWriter \u003d new DataFileWriter(settings, printer, testCheatSheetList);"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"    DataFileDestroyer testDestroyer \u003d new DataFileDestroyer(printer, testCheatSheetList);"},{"lineNumber":36,"author":{"gitId":"theopin"},"content":""},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"    void createDirectory(Path directoryPath) {"},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"            Files.createDirectories(directoryPath);"},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"            printer.print(e.getMessage());"},{"lineNumber":42,"author":{"gitId":"theopin"},"content":""},{"lineNumber":43,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"theopin"},"content":""},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    void createSampleFile(Path fileName, String fileContent) {"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"            Files.createFile(fileName);"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"            Files.writeString(fileName, fileContent);"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"            printer.print(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"theopin"},"content":""},{"lineNumber":55,"author":{"gitId":"theopin"},"content":"    void eraseFile(Path fileName) {"},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"        fileName.toFile().delete();"},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":""},{"lineNumber":59,"author":{"gitId":"theopin"},"content":"    void shiftExistingDataFiles() {"},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"        createDirectory(tempDir);"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"            Files.move(dataDir, tempDataDir);"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"            printer.print(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"theopin"},"content":""},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"    void restoreDataDir(boolean isDataDirOriginallyExistent) {"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"        eraseFile(settingsPath);"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        eraseFile(dataDir);"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":""},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"        if (isDataDirOriginallyExistent) {"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":"            try {"},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"                Files.move(tempDataDir, dataDir);"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"                eraseFile(tempDir);"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"            } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"                printer.print(e.getMessage());"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":""},{"lineNumber":82,"author":{"gitId":"theopin"},"content":"    boolean checkDataDirectoryExistence() {"},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"        boolean isDataDirectoryExistent \u003d Files.exists(dataDir);"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"        if (isDataDirectoryExistent) {"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"            shiftExistingDataFiles();"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"        createDirectory(dataDir);"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"        return isDataDirectoryExistent;"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"abnermtj":5,"theopin":79,"adhy-p":6}},{"path":"src/test/java/storage/DataFileWriterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"theopin"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"theopin"},"content":""},{"lineNumber":3,"author":{"gitId":"theopin"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"theopin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"theopin"},"content":""},{"lineNumber":6,"author":{"gitId":"theopin"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"theopin"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"theopin"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"theopin"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"theopin"},"content":""},{"lineNumber":11,"author":{"gitId":"theopin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"theopin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":13,"author":{"gitId":"theopin"},"content":""},{"lineNumber":14,"author":{"gitId":"theopin"},"content":"public class DataFileWriterTest extends DataFileTest {"},{"lineNumber":15,"author":{"gitId":"theopin"},"content":""},{"lineNumber":16,"author":{"gitId":"theopin"},"content":"    String fileInput \u003d \"\u003c?xml version\u003d\\\"1.0\\\" encoding\u003d\\\"UTF-8\\\" standalone\u003d\\\"no\\\"?\u003e\""},{"lineNumber":17,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":18,"author":{"gitId":"theopin"},"content":"            + \"\u003cmain\u003e\""},{"lineNumber":19,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":20,"author":{"gitId":"theopin"},"content":"            + \"    \u003cfavourite\u003eNO\u003c/favourite\u003e\""},{"lineNumber":21,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":22,"author":{"gitId":"theopin"},"content":"            + \"    \u003csubject\u003eTest\u003c/subject\u003e\""},{"lineNumber":23,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":24,"author":{"gitId":"theopin"},"content":"            + \"    \u003ccontents\u003eTest Success!\u003c/contents\u003e\""},{"lineNumber":25,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":26,"author":{"gitId":"theopin"},"content":"            + \"\u003c/main\u003e\""},{"lineNumber":27,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator();"},{"lineNumber":28,"author":{"gitId":"theopin"},"content":""},{"lineNumber":29,"author":{"gitId":"theopin"},"content":"    String fileInput2 \u003d \"\u003c?xml version\u003d\\\"1.0\\\" encoding\u003d\\\"UTF-8\\\" standalone\u003d\\\"no\\\"?\u003e\""},{"lineNumber":30,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":31,"author":{"gitId":"theopin"},"content":"            + \"\u003cmain\u003e\""},{"lineNumber":32,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":33,"author":{"gitId":"theopin"},"content":"            + \"    \u003cfavourite\u003eNO\u003c/favourite\u003e\""},{"lineNumber":34,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":35,"author":{"gitId":"theopin"},"content":"            + \"    \u003csubject\u003eTest\u003c/subject\u003e\""},{"lineNumber":36,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":37,"author":{"gitId":"theopin"},"content":"            + \"    \u003ccontents\u003eTest Updated Success!\u003c/contents\u003e\""},{"lineNumber":38,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator()"},{"lineNumber":39,"author":{"gitId":"theopin"},"content":"            + \"\u003c/main\u003e\""},{"lineNumber":40,"author":{"gitId":"theopin"},"content":"            + System.lineSeparator();"},{"lineNumber":41,"author":{"gitId":"theopin"},"content":""},{"lineNumber":42,"author":{"gitId":"theopin"},"content":"    Path sampleTest \u003d Paths.get(userDir, data, test, \"sample.xml\");"},{"lineNumber":43,"author":{"gitId":"adhy-p"},"content":"    final Path settingsFile \u003d Paths.get(userDir, data, \"settings.txt\");"},{"lineNumber":44,"author":{"gitId":"theopin"},"content":""},{"lineNumber":45,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"theopin"},"content":"    void writeDataFiles_emptyTestCheatSheetList_success() {"},{"lineNumber":47,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":48,"author":{"gitId":"theopin"},"content":"        if (!isDataDirPresent) {"},{"lineNumber":49,"author":{"gitId":"theopin"},"content":"            createDirectory(dataDir);"},{"lineNumber":50,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"theopin"},"content":""},{"lineNumber":52,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":53,"author":{"gitId":"theopin"},"content":"        String[] userDirectoryFiles \u003d dataDir.toFile().list();"},{"lineNumber":54,"author":{"gitId":"adhy-p"},"content":"        final int expectedFiles \u003d userDirectoryFiles !\u003d null ? userDirectoryFiles.length + 1 : 1; // +1 for settings.txt"},{"lineNumber":55,"author":{"gitId":"theopin"},"content":""},{"lineNumber":56,"author":{"gitId":"theopin"},"content":"        testWriter.executeFunction();"},{"lineNumber":57,"author":{"gitId":"theopin"},"content":"        userDirectoryFiles \u003d dataDir.toFile().list();"},{"lineNumber":58,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":59,"author":{"gitId":"theopin"},"content":""},{"lineNumber":60,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":61,"author":{"gitId":"theopin"},"content":""},{"lineNumber":62,"author":{"gitId":"theopin"},"content":"        int directoryFiles \u003d userDirectoryFiles !\u003d null ? userDirectoryFiles.length : 0;"},{"lineNumber":63,"author":{"gitId":"theopin"},"content":"        assertEquals(expectedFiles, directoryFiles);"},{"lineNumber":64,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"theopin"},"content":""},{"lineNumber":66,"author":{"gitId":"theopin"},"content":""},{"lineNumber":67,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":68,"author":{"gitId":"theopin"},"content":"    void writeFileExists_sampleCheatsheet_success() {"},{"lineNumber":69,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":70,"author":{"gitId":"theopin"},"content":"        if (!isDataDirPresent) {"},{"lineNumber":71,"author":{"gitId":"theopin"},"content":"            createDirectory(dataDir);"},{"lineNumber":72,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"theopin"},"content":""},{"lineNumber":74,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":75,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(sample,"},{"lineNumber":76,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":77,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":78,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet);"},{"lineNumber":79,"author":{"gitId":"theopin"},"content":""},{"lineNumber":80,"author":{"gitId":"theopin"},"content":"        testWriter.executeFunction();"},{"lineNumber":81,"author":{"gitId":"theopin"},"content":"        boolean isSampleAdded \u003d sampleTest.toFile().exists();"},{"lineNumber":82,"author":{"gitId":"theopin"},"content":""},{"lineNumber":83,"author":{"gitId":"theopin"},"content":"        if (isSampleAdded) {"},{"lineNumber":84,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTest);"},{"lineNumber":85,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"theopin"},"content":""},{"lineNumber":87,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":88,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":89,"author":{"gitId":"theopin"},"content":""},{"lineNumber":90,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":91,"author":{"gitId":"theopin"},"content":"        assertTrue(isSampleAdded);"},{"lineNumber":92,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"theopin"},"content":""},{"lineNumber":94,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"theopin"},"content":"    void writeFileContents_sampleCheatsheet_success() {"},{"lineNumber":96,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":97,"author":{"gitId":"theopin"},"content":"        if (!isDataDirPresent) {"},{"lineNumber":98,"author":{"gitId":"theopin"},"content":"            createDirectory(dataDir);"},{"lineNumber":99,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":101,"author":{"gitId":"theopin"},"content":""},{"lineNumber":102,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(sample,"},{"lineNumber":103,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":104,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":105,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet);"},{"lineNumber":106,"author":{"gitId":"theopin"},"content":"        testWriter.executeFunction();"},{"lineNumber":107,"author":{"gitId":"theopin"},"content":""},{"lineNumber":108,"author":{"gitId":"theopin"},"content":"        String writtenFile \u003d empty;"},{"lineNumber":109,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"theopin"},"content":"            writtenFile \u003d Files.readString(sampleTest);"},{"lineNumber":111,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"theopin"},"content":"            printer.print(e.getMessage());"},{"lineNumber":113,"author":{"gitId":"theopin"},"content":"        } finally {"},{"lineNumber":114,"author":{"gitId":"theopin"},"content":"            if (sampleTest.toFile().exists()) {"},{"lineNumber":115,"author":{"gitId":"theopin"},"content":"                eraseFile(sampleTest);"},{"lineNumber":116,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"theopin"},"content":""},{"lineNumber":118,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTestDir);"},{"lineNumber":119,"author":{"gitId":"theopin"},"content":"            restoreDataDir(isDataDirPresent);"},{"lineNumber":120,"author":{"gitId":"theopin"},"content":""},{"lineNumber":121,"author":{"gitId":"theopin"},"content":"            testCheatSheetList.clear();"},{"lineNumber":122,"author":{"gitId":"theopin"},"content":"            assertEquals(fileInput, writtenFile);"},{"lineNumber":123,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"theopin"},"content":""},{"lineNumber":126,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":127,"author":{"gitId":"theopin"},"content":"    void writeFileExists_missingUserDir_success() {"},{"lineNumber":128,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":129,"author":{"gitId":"theopin"},"content":""},{"lineNumber":130,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":131,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(sample,"},{"lineNumber":132,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":133,"author":{"gitId":"theopin"},"content":"                \"Test Success!\");"},{"lineNumber":134,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet);"},{"lineNumber":135,"author":{"gitId":"theopin"},"content":""},{"lineNumber":136,"author":{"gitId":"theopin"},"content":"        testWriter.executeFunction();"},{"lineNumber":137,"author":{"gitId":"theopin"},"content":"        boolean isSampleAdded \u003d sampleTest.toFile().exists();"},{"lineNumber":138,"author":{"gitId":"theopin"},"content":""},{"lineNumber":139,"author":{"gitId":"theopin"},"content":"        if (isSampleAdded) {"},{"lineNumber":140,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTest);"},{"lineNumber":141,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"theopin"},"content":"        eraseFile(sampleTestDir);"},{"lineNumber":143,"author":{"gitId":"theopin"},"content":"        restoreDataDir(isDataDirPresent);"},{"lineNumber":144,"author":{"gitId":"theopin"},"content":""},{"lineNumber":145,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":146,"author":{"gitId":"theopin"},"content":"        assertTrue(isSampleAdded);"},{"lineNumber":147,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"theopin"},"content":""},{"lineNumber":149,"author":{"gitId":"theopin"},"content":"    @Test"},{"lineNumber":150,"author":{"gitId":"theopin"},"content":"    void writeFileContents_existingCheatsheet_success() {"},{"lineNumber":151,"author":{"gitId":"theopin"},"content":"        final boolean isDataDirPresent \u003d checkDataDirectoryExistence();"},{"lineNumber":152,"author":{"gitId":"theopin"},"content":"        if (!isDataDirPresent) {"},{"lineNumber":153,"author":{"gitId":"theopin"},"content":"            createDirectory(dataDir);"},{"lineNumber":154,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"theopin"},"content":"        createDirectory(sampleTestDir);"},{"lineNumber":156,"author":{"gitId":"theopin"},"content":"        createSampleFile(sampleTest, fileInput);"},{"lineNumber":157,"author":{"gitId":"theopin"},"content":""},{"lineNumber":158,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.clear();"},{"lineNumber":159,"author":{"gitId":"theopin"},"content":"        CheatSheet testCheatSheet \u003d new CheatSheet(sample,"},{"lineNumber":160,"author":{"gitId":"theopin"},"content":"                \"Test\","},{"lineNumber":161,"author":{"gitId":"theopin"},"content":"                \"Test Updated Success!\");"},{"lineNumber":162,"author":{"gitId":"theopin"},"content":"        testCheatSheetList.add(testCheatSheet);"},{"lineNumber":163,"author":{"gitId":"theopin"},"content":"        testWriter.executeFunction();"},{"lineNumber":164,"author":{"gitId":"theopin"},"content":""},{"lineNumber":165,"author":{"gitId":"theopin"},"content":"        String writtenFile \u003d empty;"},{"lineNumber":166,"author":{"gitId":"theopin"},"content":"        try {"},{"lineNumber":167,"author":{"gitId":"theopin"},"content":"            writtenFile \u003d Files.readString(sampleTest);"},{"lineNumber":168,"author":{"gitId":"theopin"},"content":"        } catch (IOException e) {"},{"lineNumber":169,"author":{"gitId":"theopin"},"content":"            printer.print(e.getMessage());"},{"lineNumber":170,"author":{"gitId":"theopin"},"content":"        } finally {"},{"lineNumber":171,"author":{"gitId":"theopin"},"content":"            if (sampleTest.toFile().exists()) {"},{"lineNumber":172,"author":{"gitId":"theopin"},"content":"                eraseFile(sampleTest);"},{"lineNumber":173,"author":{"gitId":"theopin"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"theopin"},"content":"            eraseFile(sampleTestDir);"},{"lineNumber":175,"author":{"gitId":"theopin"},"content":"            restoreDataDir(isDataDirPresent);"},{"lineNumber":176,"author":{"gitId":"theopin"},"content":""},{"lineNumber":177,"author":{"gitId":"theopin"},"content":"            testCheatSheetList.clear();"},{"lineNumber":178,"author":{"gitId":"theopin"},"content":"            assertEquals(fileInput2, writtenFile);"},{"lineNumber":179,"author":{"gitId":"theopin"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"theopin"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"theopin"},"content":"}"}],"authorContributionMap":{"theopin":179,"adhy-p":2}},{"path":"src/test/java/stubs/EditorStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package stubs;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import editor.Editor;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"public class EditorStub extends Editor {"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"    private String content;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    public EditorStub() {"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"    public void init() {"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"    public void setContent(CheatSheet cheatSheet) {"},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"        content \u003d cheatSheet.getDetails();"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"    public String getContent() {"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"        return content;"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    public void writeContent(String text) {"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":"        content \u003d text;"},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":"    public void setEditingContentAttributes(String name, String subject) {"},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":31,"author":{"gitId":"brandontoh"},"content":"    public void open() {"},{"lineNumber":32,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":34,"author":{"gitId":"brandontoh"},"content":"    public void waitForClose() {"},{"lineNumber":35,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":36}},{"path":"src/test/java/stubs/PrinterStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package stubs;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"public class PrinterStub extends Printer {"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"    private String cheatSheetName;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"    public void printViewCheatSheetMessage(CheatSheet cheatSheet) {"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"        cheatSheetName \u003d cheatSheet.getName();"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":"    public String getCheatSheetName() {"},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"        return cheatSheetName;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":16}},{"path":"src/test/java/stubs/SortFilterStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brandontoh"},"content":"package stubs;"},{"lineNumber":2,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":3,"author":{"gitId":"brandontoh"},"content":"import cheatsheet.CheatSheet;"},{"lineNumber":4,"author":{"gitId":"brandontoh"},"content":"import command.SortFilter;"},{"lineNumber":5,"author":{"gitId":"brandontoh"},"content":"import exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"brandontoh"},"content":"import sort.SortBySubject;"},{"lineNumber":7,"author":{"gitId":"brandontoh"},"content":"import sort.SortBySubjectRev;"},{"lineNumber":8,"author":{"gitId":"brandontoh"},"content":"import sort.SortByName;"},{"lineNumber":9,"author":{"gitId":"brandontoh"},"content":"import sort.SortByNameRev;"},{"lineNumber":10,"author":{"gitId":"brandontoh"},"content":"import ui.ConsoleColorsEnum;"},{"lineNumber":11,"author":{"gitId":"brandontoh"},"content":"import ui.Printer;"},{"lineNumber":12,"author":{"gitId":"brandontoh"},"content":"import ui.TablePrinter;"},{"lineNumber":13,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":14,"author":{"gitId":"brandontoh"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"brandontoh"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":17,"author":{"gitId":"brandontoh"},"content":"public class SortFilterStub extends SortFilter {"},{"lineNumber":18,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":19,"author":{"gitId":"brandontoh"},"content":"    public SortFilterStub(ArrayList\u003cCheatSheet\u003e cheatSheetArrayList, Printer printer) {"},{"lineNumber":20,"author":{"gitId":"brandontoh"},"content":"        super(cheatSheetArrayList, printer);"},{"lineNumber":21,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":23,"author":{"gitId":"brandontoh"},"content":"    public void execute(TablePrinter tp) {"},{"lineNumber":24,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":26,"author":{"gitId":"brandontoh"},"content":"    public void execute() {"},{"lineNumber":27,"author":{"gitId":"brandontoh"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"brandontoh"},"content":""},{"lineNumber":29,"author":{"gitId":"brandontoh"},"content":"}"}],"authorContributionMap":{"brandontoh":29}},{"path":"src/test/java/ui/CommandStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import command.Command;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"public class CommandStub extends Command {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    public CommandStub(boolean isExitCommand) {"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"        setIsExit(isExitCommand);"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    public void setIsExit(boolean isExitCommand) {"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"        this.isExitCommand \u003d isExitCommand;"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    public void execute() {"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":16}},{"path":"src/test/java/ui/DataFileReaderStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileReader;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"public class DataFileReaderStub extends DataFileReader {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    boolean isPreloadedExtracted \u003d false;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"    boolean isDataRead \u003d false;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    public DataFileReaderStub() {"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"        super(null, null, null);"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        isPreloadedExtracted \u003d false;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        isDataRead \u003d false;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    public void extractPreloadedCheatSheets() {"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        isPreloadedExtracted \u003d true;"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"    public void executeFunction() {"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"        isDataRead \u003d true;"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":25}},{"path":"src/test/java/ui/DataFileWriterStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import storage.DataFileWriter;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"public class DataFileWriterStub extends DataFileWriter {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    boolean isDataWritten \u003d false;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public DataFileWriterStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"        super(null, null, null);"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"        isDataWritten \u003d false;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    public void executeFunction() {"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        isDataWritten \u003d true;"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":19}},{"path":"src/test/java/ui/EditorStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import editor.Editor;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"public class EditorStub extends Editor {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    boolean isExisting \u003d true;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public EditorStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"        return;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"        isExisting \u003d true;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    public void dispose() {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"        isExisting \u003d false;"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":20}},{"path":"src/test/java/ui/ParserStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import exception.CommandException;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"public class ParserStub extends Parser {"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public ParserStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"        super(null, null, null, null, null,null,null);"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"    public CommandStub parse(String input) throws CommandException {"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"        if (input.equals(\"throw\")) {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"            throw new CommandException(\"Please enter a valid command\");"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"        } else if (input.equals(\"exit\")) {"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"            return new CommandStub(true);"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"            return new CommandStub(false);"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":21}},{"path":"src/test/java/ui/SettingsStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import settings.Settings;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"class SettingsStub extends Settings {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    private boolean isDisplayingHelpMessages \u003d true;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"    public SettingsStub() {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    public boolean getDisplayingHelpMessages() {"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"        return isDisplayingHelpMessages;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    public void setDisplayingHelpMessages(boolean isDisplayingHelpMessages, boolean isInit) {"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"        this.isDisplayingHelpMessages \u003d isDisplayingHelpMessages;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":18}},{"path":"src/test/java/ui/UiStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"class UiStub extends Ui {"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"    private final LinkedList\u003cString\u003e userInput;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"    boolean isExisting \u003d true;"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"    public void reset() {"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"        isExisting \u003d true;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"    protected UiStub() {"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"        userInput \u003d new LinkedList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"    protected void pushUserInput(String userInput) {"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"        this.userInput.push(userInput);"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"    public String getUserInput() {"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"        return userInput.removeLast();"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"    protected void clearUserInput() {"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"        userInput.clear();"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":""},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"    public void closeScanner() {"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"        isExisting \u003d false;"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"}"}],"authorContributionMap":{"abnermtj":33}},{"path":"src/test/java/ui/UserSessionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"abnermtj"},"content":"//package ui;"},{"lineNumber":2,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":3,"author":{"gitId":"abnermtj"},"content":"//import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":5,"author":{"gitId":"abnermtj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"abnermtj"},"content":"//import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":8,"author":{"gitId":"abnermtj"},"content":"//class UserSessionTest {"},{"lineNumber":9,"author":{"gitId":"abnermtj"},"content":"//    UserSession userSession;"},{"lineNumber":10,"author":{"gitId":"abnermtj"},"content":"//    Printer printer;"},{"lineNumber":11,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":12,"author":{"gitId":"abnermtj"},"content":"//    UiStub ui;"},{"lineNumber":13,"author":{"gitId":"abnermtj"},"content":"//    SettingsStub settings;"},{"lineNumber":14,"author":{"gitId":"abnermtj"},"content":"//    EditorStub editor;"},{"lineNumber":15,"author":{"gitId":"abnermtj"},"content":"//    DataFileReaderStub fileReader;"},{"lineNumber":16,"author":{"gitId":"abnermtj"},"content":"//    DataFileWriterStub fileWriter;"},{"lineNumber":17,"author":{"gitId":"abnermtj"},"content":"//    ParserStub userCommandParser;"},{"lineNumber":18,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":19,"author":{"gitId":"abnermtj"},"content":"//    public UserSessionTest() {"},{"lineNumber":20,"author":{"gitId":"abnermtj"},"content":"//        printer \u003d new Printer();"},{"lineNumber":21,"author":{"gitId":"abnermtj"},"content":"//        ui \u003d new UiStub();"},{"lineNumber":22,"author":{"gitId":"abnermtj"},"content":"//        settings \u003d new SettingsStub();"},{"lineNumber":23,"author":{"gitId":"abnermtj"},"content":"//        editor \u003d new EditorStub();"},{"lineNumber":24,"author":{"gitId":"abnermtj"},"content":"//        fileReader \u003d new DataFileReaderStub();"},{"lineNumber":25,"author":{"gitId":"abnermtj"},"content":"//        fileWriter \u003d new DataFileWriterStub();"},{"lineNumber":26,"author":{"gitId":"abnermtj"},"content":"//        userCommandParser \u003d new ParserStub();"},{"lineNumber":27,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":28,"author":{"gitId":"abnermtj"},"content":"//        userSession \u003d new UserSession();"},{"lineNumber":29,"author":{"gitId":"abnermtj"},"content":"//        userSession.cheatSheetList \u003d null;"},{"lineNumber":30,"author":{"gitId":"abnermtj"},"content":"//        userSession.fileDestroyer \u003d null;"},{"lineNumber":31,"author":{"gitId":"abnermtj"},"content":"//        userSession.editor \u003d editor;"},{"lineNumber":32,"author":{"gitId":"abnermtj"},"content":"//        userSession.ui \u003d ui;"},{"lineNumber":33,"author":{"gitId":"abnermtj"},"content":"//        userSession.userCommandParser \u003d userCommandParser;"},{"lineNumber":34,"author":{"gitId":"abnermtj"},"content":"//        userSession.printer \u003d printer;"},{"lineNumber":35,"author":{"gitId":"abnermtj"},"content":"//        userSession.settings \u003d  settings;"},{"lineNumber":36,"author":{"gitId":"abnermtj"},"content":"//        userSession.fileReader \u003d fileReader;"},{"lineNumber":37,"author":{"gitId":"abnermtj"},"content":"//        userSession.fileWriter \u003d fileWriter;"},{"lineNumber":38,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":39,"author":{"gitId":"abnermtj"},"content":"//        userSession.isEditorEnabled \u003d false;"},{"lineNumber":40,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":41,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":42,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":43,"author":{"gitId":"abnermtj"},"content":"//    void start_firstRunDisplayHelp_pass() {"},{"lineNumber":44,"author":{"gitId":"abnermtj"},"content":"//        fileReader.reset();"},{"lineNumber":45,"author":{"gitId":"abnermtj"},"content":"//        userSession.isFirstRun \u003d true;"},{"lineNumber":46,"author":{"gitId":"abnermtj"},"content":"//        settings.setDisplayingHelpMessages(true, true);"},{"lineNumber":47,"author":{"gitId":"abnermtj"},"content":"//        userSession.start();"},{"lineNumber":48,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":49,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(true, fileReader.isDataRead);"},{"lineNumber":50,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(true, fileReader.isPreloadedExtracted);"},{"lineNumber":51,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":52,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":53,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":54,"author":{"gitId":"abnermtj"},"content":"//    void start_notFirstRunNoDisplayHelp_pass() {"},{"lineNumber":55,"author":{"gitId":"abnermtj"},"content":"//        fileReader.reset();"},{"lineNumber":56,"author":{"gitId":"abnermtj"},"content":"//        userSession.isFirstRun \u003d false;"},{"lineNumber":57,"author":{"gitId":"abnermtj"},"content":"//        userSession.settings.setDisplayingHelpMessages(false, false);"},{"lineNumber":58,"author":{"gitId":"abnermtj"},"content":"//        userSession.start();"},{"lineNumber":59,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":60,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(false, fileReader.isPreloadedExtracted);"},{"lineNumber":61,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(true, fileReader.isDataRead);"},{"lineNumber":62,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":63,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":64,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":65,"author":{"gitId":"abnermtj"},"content":"//    void run_exitCommand_pass() {"},{"lineNumber":66,"author":{"gitId":"abnermtj"},"content":"//        ui.clearUserInput();"},{"lineNumber":67,"author":{"gitId":"abnermtj"},"content":"//        ui.pushUserInput(\"exit\");"},{"lineNumber":68,"author":{"gitId":"abnermtj"},"content":"//        ui.reset();"},{"lineNumber":69,"author":{"gitId":"abnermtj"},"content":"//        editor.reset();"},{"lineNumber":70,"author":{"gitId":"abnermtj"},"content":"//        fileReader.reset();"},{"lineNumber":71,"author":{"gitId":"abnermtj"},"content":"//        userSession.runProgramSequence();"},{"lineNumber":72,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(false, fileWriter.isDataWritten);"},{"lineNumber":73,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":74,"author":{"gitId":"abnermtj"},"content":"//        userSession.exit();"},{"lineNumber":75,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(false, ui.isExisting);"},{"lineNumber":76,"author":{"gitId":"abnermtj"},"content":"//        assertEquals(false, editor.isExisting);"},{"lineNumber":77,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":78,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":79,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":80,"author":{"gitId":"abnermtj"},"content":"//    void run_badCommand_exceptionHandled() {"},{"lineNumber":81,"author":{"gitId":"abnermtj"},"content":"//        try {"},{"lineNumber":82,"author":{"gitId":"abnermtj"},"content":"//            ui.clearUserInput();"},{"lineNumber":83,"author":{"gitId":"abnermtj"},"content":"//            ui.pushUserInput(\"throw\");"},{"lineNumber":84,"author":{"gitId":"abnermtj"},"content":"//            ui.pushUserInput(\"exit\");"},{"lineNumber":85,"author":{"gitId":"abnermtj"},"content":"//            fileReader.reset();"},{"lineNumber":86,"author":{"gitId":"abnermtj"},"content":"//            userSession.runProgramSequence();"},{"lineNumber":87,"author":{"gitId":"abnermtj"},"content":"//        } catch (Exception e) {"},{"lineNumber":88,"author":{"gitId":"abnermtj"},"content":"//            fail(e.getMessage());"},{"lineNumber":89,"author":{"gitId":"abnermtj"},"content":"//        }"},{"lineNumber":90,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":91,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":92,"author":{"gitId":"abnermtj"},"content":"//    @Test"},{"lineNumber":93,"author":{"gitId":"abnermtj"},"content":"//    void run_goodCommand_pass() {"},{"lineNumber":94,"author":{"gitId":"abnermtj"},"content":"//        try {"},{"lineNumber":95,"author":{"gitId":"abnermtj"},"content":"//            ui.clearUserInput();"},{"lineNumber":96,"author":{"gitId":"abnermtj"},"content":"//            ui.pushUserInput(\"/add\");"},{"lineNumber":97,"author":{"gitId":"abnermtj"},"content":"//            ui.pushUserInput(\"exit\");"},{"lineNumber":98,"author":{"gitId":"abnermtj"},"content":"//            fileWriter.reset();"},{"lineNumber":99,"author":{"gitId":"abnermtj"},"content":"//            userSession.runProgramSequence();"},{"lineNumber":100,"author":{"gitId":"abnermtj"},"content":"//"},{"lineNumber":101,"author":{"gitId":"abnermtj"},"content":"//            assertEquals(true, fileWriter.isDataWritten);"},{"lineNumber":102,"author":{"gitId":"abnermtj"},"content":"//        } catch (Exception e) {"},{"lineNumber":103,"author":{"gitId":"abnermtj"},"content":"//            fail(e.getMessage());"},{"lineNumber":104,"author":{"gitId":"abnermtj"},"content":"//        }"},{"lineNumber":105,"author":{"gitId":"abnermtj"},"content":"//    }"},{"lineNumber":106,"author":{"gitId":"abnermtj"},"content":"//}"}],"authorContributionMap":{"abnermtj":106}}]
