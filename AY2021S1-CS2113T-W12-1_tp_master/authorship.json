[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    mainClassName \u003d \"seedu.planus.Planus\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    archiveBaseName \u003d \"planus\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Arindam Shiva Tripathi | [Github](https://github.com/arindamshivatrip) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Timothy Cheah | [Github](https://github.com/e0406981) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chen Qixing | [Github](https://github.com/QX-CHEN) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chong Zhi Lin | [Github](https://github.com/czlin98) | [Portfolio](docs/team/zhilin.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Meng Han | [Github](https://github.com/mhchan163) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "czlin98": 1,
      "arindamshivatrip": 1,
      "e0406981": 1,
      "mhchan163": 1,
      "QX-CHEN": 1,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Design \u0026 implementation](#design--implementation)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Architecture](#architecture)  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Ui component](#ui-component)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Logic component](#logic-component)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Model component](#model-component)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Storage component](#storage-component)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Product scope](#product-scope)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Target user profile](#target-user-profile)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Value proposition](#value-proposition)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [User stories](#user-stories)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Use cases](#use-cases)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Non-functional requirements](#non-functional-requirements) "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Glossary](#glossary)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Instruction for manual testing](#instructions-for-manual-testing)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Architecture"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![Architecture](diagrams/Architecture.png)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "The Architecture Diagram above gives an overview of how different components interacts "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "with each other in the app. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "As the app starts, the main program initialises the Ui, Logic and Storage components."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Then, the Storage component reads existing data file if it is available, else a fresh copy of "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "data file is created. This step also initialises the content of runtime storage which is store "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "in a TaskMap object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Now the Ui component is ready to take inputs from the User, and the input is processed and executed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "in the Logic component, the execution result is passed back to Ui component and displayed to the User."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Just before the main program exits, Storage component saves the content in the TaskMap to the data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Commons provide utility functions and messages to be used by other components."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "The sequence diagram below shows a typical workflow the program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![ComponentsSeq](diagrams/ComponentsSeq.png)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "In the example above, after the programs starts, User inputs \"delete 2173\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "the input is captured by the Ui component, then it calls the processRaw "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "function from the Logic component, to extract useful information from the input. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Logic component verified the command is valid and calls the remove function "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "from the TaskMap, then TaskMap carries out the operation, and a message is"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "return to the Ui from the Logic component."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "The next input provide by the User is \"bye\", it follows a similar process."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "After the message is shown to the User, the main program calls the"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "writeTasksToFile() function in Storage and saves the data."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Ui component"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![UiComponent](diagrams/UiClass.png)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "The diagram above is a class diagram of the Ui component."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Other than the usual InputStream and OutputStream, the Ui component has a"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "DisplayDateStructure. This abstract class prepares the content to be "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "printed when the DisplayMode is WEEK or MONTH. The content is generated"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "using generateScreen function, which writes the intended content into"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "the 2-D array of characters. After that, the array will be shown to the user"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "by Ui class via the OutputStream. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Moreover, WeekStructure and MonthStructure extends the DisplayDateStructure."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "These classes will generate a different size of the 2-D array mentioned"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "in the previous paragraph due the difference in number of days displayed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Logic component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![LogicComponent](diagrams/LogicClass.png)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "From the Ui component, the raw input from the User is passed to the Parser class."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Parser class will process and validate the input, then it generates a specific"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "command accordingly.  Specific commands extends from the abstract Command class."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Command operates on the TaskMap and execution of Command generates a "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "CommandResult. This CommandResult is passed back to the Ui component and "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "respective content will be displayed to User based on the CommandResult. "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Model component"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![ModelComponent](diagrams/TaskMapClass.png)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Task class consists of attributes like description, date, start time, end time,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "priority that are important to users. Whereas other attributes like "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "HASH_VALUE_DIGITS, taskID and internal values of Priority enum class matters"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "more to developers. For example, the HASH_VALUE_DIGITS and the color code of "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Priority could affect the content displayed to User, and the reason why the"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "constant 4 is used will be explained in the next paragraph. "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "TaskMap is the container used for runtime storage, it stores up to 10000 Task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "objects. The number 10000 is chosen such that the unique identifier of each"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Task is kept within 4 digits. Keeping it to 4 digits allows the app to have a"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "better displaying effect."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "The underlying data structure used for TaskMap is the Java LinkedHashMap."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "It is chosen because it allows efficient access to an element (Task) using the"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "unique identifier (Integer). Another reason of using LinkedHashMap is because "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "it is ordered, this allows the container to be sorted. DateSorter and "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "PrioritySorter implements the Task comparator, they are used in the TaskMap"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "functions sortByDate() and sortByPriority()."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Storage component"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![StorageComponent](diagrams/StorageClass.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "At the initiating and closing stage of the program, the Storage component"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "will read and write to the data file respectively. As shown in the diagram"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "above, the data file is named as \"data.json\" and placed under a folder called"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\"data\". The Storage component also uses the Google Gson library to convert Task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "object to and from json format. For example, in the process of saving to file,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "each Task object is convert to json string and then writes to file via FileWriter. "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Common classes"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Common classes provide utility functions and string messages used by multiple components,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "and these classes are stored in the seedu.commons package."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Students in general"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Owns a personal laptop/PC"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Willing to use command line app for planning"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    PlaNUS is a one stop location for students to be able to view all their "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    commitments and assignments, and prioritize their work and commitment "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    with a user-friendly text interface."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Forgetful student|add tasks to list|keep track of them and not forget it|"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Busy student|modify existing tasks|don\u0027t waste time deleting and adding it all over again|"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|New user|see instructions|have quick access to the instruction w/o having to access the user guide|"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Student with many different tasks \u0026 due dates|set task priority|focus on more urgent tasks |"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Student with many different tasks \u0026 due dates|sort tasks by priority|clearly view of tasks urgency|"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Student with many tasks|search for tasks|find what i want quickly|"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Student with many tasks|delete tasks|old tasks don’t clutter up the display|"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v1.0|Busy student|clear all tasks|don’t waste time deleting one by one|"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "|v2.0|Busy student|View tasks in a weekly and monthly view|I know what i have due for that time period|"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "## Use cases"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Add task"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User adds a task"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus adds task"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. PLANus shows the task added message"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Extensions  "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1a. User adds task without any date  "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Date is set to the current date  "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1b. User adds tasks without any priority  "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Priority is set to low  "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1c. User adds task without start and end time  "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Time is set to empty  "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1d. User inputs wrong details format  "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "PLANus shows invalid command message  "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: List task"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User requests to list tasks"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus shows tasks"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Extensions"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 2a. List is empty - PLANus displays empty list"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Edit task"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User inputs the task index, and what user wants to change"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus changes the task details"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. PLANus shows the task edited message. "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Extensions"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1a. User inputs an invalid index"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Shows invalid command message"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1b. User inputs wrong details format"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Shows invalid command message"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Help"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User inputs help command"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus displays help message"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Search"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User inputs search command with keyword"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus searches the task list for keyword"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. PLANus displays results"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Extensions"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 2a. PLANus is unable to find any matches"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Shows no tasks found message"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Delete"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User inputs delete command with index"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus deletes the task"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. PLANus shows task deleted message"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Extensions "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "   - 1a. User inputs invalid index"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "PLANus shows invalid task number message"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Use case: Clear "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Main success scenario"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. User inputs clear command"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. PLANus clears all tasks"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. PLANus shows tasks cleared message"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Use case ends. "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - The system should respond within two seconds."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - The system should be easy to use, do not require much effort to learn."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Features should be able to be implemented before project deadline."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Launch and Shutdown"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. Initial launch"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\t"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Download the jar file and copy into an empty folder. Type `java -jar planus.jar`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    int the command line window and press enter, welcome message will be displayed."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. Shutdown"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Type “bye” into the command line and the program should exit."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. Add a task into the list by using add command using only description"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework  "
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: homework task should be added to the list with default date being set "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    to the current date."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. Add a task into the lists using add command with description and date."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-12-2020  "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: homework task should be added to the list with the date set as 25-12-2020."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-13-2020  "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: Since there is no 13th month, the task is not added to the list, "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and an error message is shown."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. Add a task into the lists using add command with description, date and start and end times."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-12-2020 st/1900 et/2000  "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: homework task should be added to the list with date set as 25-12-2020 "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and start time 19:00 and end time 20:00."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-12-2020 st/1900 et/2500"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: Since there is only 24 hours in a day, the task is not added to the list, "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and an error message is shown."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "4. Add a task into the lists using add command with description, date, start "
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and end times and priority."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\t"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-12-2020 st/1900 et/2000 p/3  "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: homework task should be added to the list with date set as 25-12-2020 "
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and start time 19:00 and end time 20:00 and with a HIGH priority."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: add homework d/25-12-2020 st/1900 et/2000 p/4  "
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected:  Since the highest priority is HIGH, the task is not added to the list, "
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and an error message is shown."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Prerequisites: Add some tasks to the list. List all tasks using the list command. "
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "All indexes are less than or equal to four-digit numbers."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. Deleting a task"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: delete 3542  "
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: Task with the index of 3542 is deleted from the list. "
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: delete 12378"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: No task is deleted, and an Invalid index error is shown."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Editing a task"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Prerequisites: Add some tasks to the list. List all tasks using the list command."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "All indexes are less than or equal to four-digit numbers."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "1. Editing the description of a task"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: edit 3542 des/homework   "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: The task with index 3542 will have its description changed to “homework” "
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    while the other components will remain the same."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. Editing the date of a task"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: edit 3542 d/21-10-2020  "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: The task with index 3542 will have its date changed to “21-10-2020” "
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    while the other components will remain the same."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. Editing the start and end time of a task"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: edit 3542 st/1500 et/1600  "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: The task with index 3542 will have its start time changed to 15:00 "
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    and end time changed to 16:00  while the other components will remain the same."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "4. Editing the priority of a task"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - Test case: edit 3542 p/3  "
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Expected: The task with index 3542 will have its priority changed to “HIGH” "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    while the other components will remain the same."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Prerequisites: Add some tasks to the list. "
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Ensure that data is saved during exit of the program"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "After adding some tasks to the list, exit the program using the “bye” command."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Reopen the program using the jar file and list all tasks using the list command."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected: All pre-existing tasks before the most recent program exit "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "should be displayed in the list."
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 356,
      "-": 27
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "# PlaNUS"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "PlaNUS is a desktop application for NUS students to manage their tasks and schedule, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "optimized for use via Command Line Interface (CLI). We aim for PlaNUS to become a "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "one stop location for students to be able to view all their commitments and assignments "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "and prioritize their work and commitment with a user-friendly text interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 7,
      "-": 6
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": "PlaNUS is a desktop application for NUS students to manage their tasks and schedule,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "optimized for use via Command Line Interface (CLI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "This user guide is a document aiming to help users in understanding the features"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "provided by PlaNUS and the instructions required for each step."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Quick start](#quick-start)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Showing commands](#showing-all-commands--help)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Adding task](#adding-a-task--add)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Editing task](#editing-a-task--edit)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Displaying tasks](#displaying-tasks--list)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Searching task](#searching-relevant-tasks--search)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Removing task](#removing-a-task--delete)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Clearing task](#clearing-tasks--clear)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - [Exiting program](#exiting-program--bye)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [FAQ](#faq)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- [Command summary](#command-summary)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always; visibility: hidden\"\u003e "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\\pagebreak "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "2. Download the latest \"planus.jar\" from [here](https://github.com/AY2021S1-CS2113T-W12-1/tp/releases/download/v1.0/planus.jar)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "3. For first time Windows user, open command prompt and run the following line to enable color display of command prompt:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    `reg add HKCU\\Console /v VirtualTerminalLevel /t REG_DWORD /d 1`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "4. Open a **new** command prompt/terminal and run \"planus.jar\" with following command:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    `java -jar planus.jar`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Following content is display if there\u0027s no existing data file:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    ![initial display](images/init.PNG)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "5. **Maximise** the command prompt/terminal window to get a full display of the contents."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "6. Type a command in command prompt/terminal and press Enter to execute it."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "7. Refer to the [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always; visibility: hidden\"\u003e "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\\pagebreak "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Notes about command format:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Words in UPPER_CASE are the parameters to be supplied by the user. "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. in \"add DESCRIPTION [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]\", "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    DESCRIPTION is a parameter which can be used as \"add user guide\"."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "      "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Parameter in square bracket is optional. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. in \"add DESCRIPTION [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]\", "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    DATE, START_TIME, END_TIME and PRIORITY are optional parameters which can be omitted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Within square bracket, optional flags could be enabled, flags are separated by \u0027|\u0027."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. in \"list [-d|-p|-w|-m]\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    The flag parameter is an optional parameter. When it is used, any one of the flags"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    like -d or -p or -w or -m could be enabled. "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Input date format is dd-MM-yyyy."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. 20/02/2020"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "      "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Input time format is HHmm in 24-hrs."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. 1830"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Input priority format is 1, 2 or 3 represents LOW, MEDIUM and HIGH respectively."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "- Index of a task is the number displayed after \"#\" and before description of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    - e.g. \"#1029 meeting\", 1029 is the index."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "czlin98"
        },
        "content": "```    "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eShowing all commands\u003c/span\u003e : `help`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Shows the commands available with the formats."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![help](images/help.PNG)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eAdding a task\u003c/span\u003e : `add`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Add a task to the task list and display a message."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Default date will be the day when the tasked is added."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Default priority is low."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `add DESCRIPTION [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`add meeting st/1000`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`add borrow book`  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Task added."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eEditing a task\u003c/span\u003e : `edit`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Edit a task in the task list using index and display a message."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `edit INDEX [des/DESCRIPTION] [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`edit 5546 des/reading`  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`edit 7019 st/1400 et/1600 p/3`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Task edited."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eDisplaying tasks\u003c/span\u003e : `list` "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Default display mode: display **all** tasks by **adding sequence**.  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`-d`: display **all** tasks by **date**, from past to future.  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`-p`: display **all** tasks by **priority**, from HIGH to LOW.  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`-w`: display **only tasks in current week** by **adding sequence**.   "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`-m`: display **only tasks in current month** by **adding sequence**.  "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`d/DATE`: display **all tasks of a date provided** by adding sequence.  "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `list [-d|-p|-w|-m|d/DATE]`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`list`  "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`list -d`  "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`list -w`  "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`list d/20-10-2020`  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![list](images/list.PNG)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![sort_by_date](images/list_sort_by_date.PNG)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![sort_by_priority](images/list_sort_by_priority.PNG)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![weekly_view](images/list_week.PNG)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![monthly_view](images/list_month.PNG)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eSearching relevant task(s)\u003c/span\u003e : `search`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Search and display task(s) with given keyword, this feature is case-insensitive."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `search KEYWORD`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`search meeting`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![search](images/search.PNG)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eRemoving a task\u003c/span\u003e : `delete`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Delete a task from the task list us an index."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`delete 5546`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Task deleted."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eClearing tasks\u003c/span\u003e : `clear`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Delete all tasks in the list."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    All tasks cleared."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### \u003cspan style\u003d\"color:red\"\u003eExiting program\u003c/span\u003e : `bye`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Display a message and exits the program."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Bye! See you again!"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "### Saving data to file"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Data will be automatically saved after modification commands like "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "`add`, `delete`, `edit` and so forth."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always; visibility: hidden\"\u003e "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\\pagebreak "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "**A**: Copy the existing data file to the computer, then create a \"data\" folder under the "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "same folder as \"planus.jar\". Lastly, copy the data file to \"data\" folder and name it \"data.json\"."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003cdiv style\u003d\"page-break-after: always; visibility: hidden\"\u003e "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\\pagebreak "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "Action | Format | Example"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "------ | ------ | -------"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add | `add DESCRIPTION [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]` | `add meeting st/1400`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit | `edit INDEX [des/DESCRIPTION] [d/DATE] [st/START_TIME] [et/END_TIME] [p/PRIORITY]` | `edit 1234 p/3`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list | \u003ccode\u003elist [-d\u0026#124;-p\u0026#124;-w\u0026#124;-m\u0026#124;d/DATE]\u003c/code\u003e | `list -d`, `list d/10-10-2020`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "search | `search KEYWORD` | `search meet`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete | `delete INDEX` | `delete 212`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "clear | `clear` | `clear`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "bye | `bye` | `bye`"
      }
    ],
    "authorContributionMap": {
      "czlin98": 6,
      "QX-CHEN": 218,
      "-": 35
    }
  },
  {
    "path": "src/main/java/seedu/commands/Add.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.DataStack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.MaxNumTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Add extends ModificationCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Default date: day that the task is created, default priority: 0 (low to high: 0 - 2)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^add (?\u003cdescription\u003e(\\\\w+\\\\s*)+\\\\w*)\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( d/(?\u003cdate\u003e\\\\d{2}-\\\\d{2}-\\\\d{4}))?\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( st/(?\u003cst\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( et/(?\u003cet\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( p/(?\u003cpriority\u003e\\\\d))?$\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String startTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String endTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String priority;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Add(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(\"description\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            startTime \u003d matcher.group(\"st\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            endTime \u003d matcher.group(\"et\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d matcher.group(\"priority\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        throws InvalidPriorityException, InvalidDatetimeException, MaxNumTaskException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasks \u003d model.getTaskMap();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Handle collision by generating new taskID if the value is in use."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task task \u003d new Task(description, date, startTime, endTime, priority);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Integer taskID \u003d task.getTaskID();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (tasks.size() \u003d\u003d TaskMap.MAX_NUM_TASKS) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new MaxNumTaskException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert tasks.size() !\u003d TaskMap.MAX_NUM_TASKS;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Finding an unused key"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (tasks.get(taskID) !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            taskID \u003d (taskID + 1) % TaskMap.MAX_NUM_TASKS;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        task.setTaskID(taskID);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // update stack"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        model.pushAndUpdate(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(ADD_MESSAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 66
    }
  },
  {
    "path": "src/main/java/seedu/commands/Bye.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Bye extends GeneralCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        CommandResult result \u003d new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        result.setExit(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 13
    }
  },
  {
    "path": "src/main/java/seedu/commands/Clear.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.CLEAR_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Clear extends ModificationCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasks \u003d model.getTaskMap();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        model.pushAndUpdate(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(CLEAR_MESSAGE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 17
    }
  },
  {
    "path": "src/main/java/seedu/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.EmptyDataStackException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.MaxNumTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskMap taskMap) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model) throws InvalidPriorityException, InvalidDatetimeException,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        MaxNumTaskException, InvalidTaskNumberException, EmptyDataStackException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 24
    }
  },
  {
    "path": "src/main/java/seedu/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.DisplayMode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private TaskMap tasks \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private DisplayMode displayMode \u003d DisplayMode.ALL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message, TaskMap tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message, TaskMap tasks, DisplayMode displayMode) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.displayMode \u003d displayMode;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap getTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public DisplayMode getDisplayMode() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return displayMode;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 46
    }
  },
  {
    "path": "src/main/java/seedu/commands/Delete.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static seedu.messages.Messages.DELETE_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Delete extends ModificationCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Integer key;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^delete (?\u003ckey\u003e\\\\d+)$\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Delete(String rawInput) throws InvalidCommandException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                key \u003d Integer.parseInt(matcher.group(\"key\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model) throws InvalidTaskNumberException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasks \u003d model.getTaskMap();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task task \u003d tasks.get(key);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.delete(key);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        model.pushAndUpdate(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return new CommandResult(DELETE_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 25,
      "QX-CHEN": 18
    }
  },
  {
    "path": "src/main/java/seedu/commands/Edit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.EDIT_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Edit extends ModificationCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^edit (?\u003ckey\u003e\\\\d+)\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( des/(?\u003cdescription\u003e(\\\\w+\\\\s*)+\\\\w*))?\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( d/(?\u003cdate\u003e\\\\d{2}-\\\\d{2}-\\\\d{4}))?\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( st/(?\u003cst\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( et/(?\u003cet\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( p/(?\u003cpriority\u003e\\\\d))?$\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Integer key;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String startTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String endTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String priority;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Edit(String rawInput) throws InvalidCommandException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                key \u003d Integer.parseInt(matcher.group(\"key\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(\"description\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            startTime \u003d matcher.group(\"st\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            endTime \u003d matcher.group(\"et\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d matcher.group(\"priority\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        throws InvalidTaskNumberException, InvalidPriorityException, InvalidDatetimeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasks \u003d model.getTaskMap();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task task \u003d tasks.get(key);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task editedTask \u003d new Task(key, task.getDescription(), task.getDate(), task.getStartTime(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.getEndTime(), task.getPriority());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Set field"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (description !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            editedTask.setDescription(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            editedTask.setDate(date);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            editedTask.setStartTime(startTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (endTime !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            editedTask.setEndTime(endTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (priority !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            editedTask.setPriority(priority);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.delete(key);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(editedTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        model.pushAndUpdate(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(EDIT_MESSAGE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 82
    }
  },
  {
    "path": "src/main/java/seedu/commands/GeneralCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class GeneralCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4
    }
  },
  {
    "path": "src/main/java/seedu/commands/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.HELP_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Help extends GeneralCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(HELP_MESSAGE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/main/java/seedu/commands/List.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.DisplayMode;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LIST_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class List extends ReadOnlyCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        \"^list(?\u003cdateFlag\u003e -d)?\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \"(?\u003cpriorityFlag\u003e -p)?\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \"(?\u003cdisplayByWeek\u003e -w)?\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \"(?\u003cdisplayByMonth\u003e -m)?\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \"( d/(?\u003cdate\u003e\\\\d{2}-\\\\d{2}-\\\\d{4}))?$\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final boolean dateFlag;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final boolean priorityFlag;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final boolean displayByWeek;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final boolean displayByMonth;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public List(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            dateFlag \u003d \" -d\".equals(matcher.group(\"dateFlag\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priorityFlag \u003d \" -p\".equals(matcher.group(\"priorityFlag\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            displayByWeek \u003d \" -w\".equals(matcher.group(\"displayByWeek\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            displayByMonth \u003d \" -m\".equals(matcher.group(\"displayByMonth\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskMap tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert !(dateFlag \u0026\u0026 priorityFlag);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // TODO Check flag condition"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (dateFlag) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(LIST_MESSAGE, tasks.sortListByDate());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (priorityFlag) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(LIST_MESSAGE, tasks.sortListByPriority());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (displayByWeek || displayByMonth) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            DisplayMode displayMode;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (displayByWeek) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                displayMode \u003d DisplayMode.WEEK;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                displayMode \u003d DisplayMode.MONTH;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(LIST_MESSAGE, tasks, displayMode);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            LocalDate tempDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String dateString \u003d LS + tempDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \" \" + tempDate.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \":\" + LS;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(LIST_MESSAGE + dateString, tasks.searchByDate(tempDate));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(LIST_MESSAGE, tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 73
    }
  },
  {
    "path": "src/main/java/seedu/commands/LogicManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.EmptyDataStackException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.MaxNumTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class LogicManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LogicManager(Ui ui, Model model) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                assert userInput !\u003d null : \"null input\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Command command \u003d parser.processRaw(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                assert command !\u003d null : \"null command\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                assert result !\u003d null : \"null command result\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                isExit \u003d ui.interpretCommandResult(result);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                ui.showException(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private CommandResult executeCommand(Command cmd)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        throws MaxNumTaskException, InvalidTaskNumberException, InvalidDatetimeException,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        InvalidPriorityException, EmptyDataStackException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (cmd instanceof ReadOnlyCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return cmd.execute(model.getTaskMap());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (cmd instanceof ModificationCommand) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return cmd.execute(model);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return cmd.execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 58
    }
  },
  {
    "path": "src/main/java/seedu/commands/ModificationCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class ModificationCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4
    }
  },
  {
    "path": "src/main/java/seedu/commands/ReadOnlyCommand.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class ReadOnlyCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4
    }
  },
  {
    "path": "src/main/java/seedu/commands/Search.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.SEARCH_FOUND_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.SEARCH_NOT_FOUND_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Search extends ReadOnlyCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"search\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Search by description, can extend to other attributes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        \"^search (?\u003ctoSearch\u003e(\\\\w+\\\\s*)+\\\\w*)$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String toSearch;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Search(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            toSearch \u003d matcher.group(\"toSearch\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskMap tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap found \u003d tasks.searchByDescription(toSearch);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (found.size() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(SEARCH_FOUND_MESSAGE, found);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(SEARCH_NOT_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 37
    }
  },
  {
    "path": "src/main/java/seedu/commands/Undo.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.DataStack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.EmptyDataStackException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Undo extends ModificationCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Currently unable to redo undo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"undo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(Model model) throws EmptyDataStackException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        DataStack dataStack \u003d model.getDataStack();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (dataStack.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(Messages.NO_PREV_MODIFICATION);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            model.popAndUpdate();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(Messages.UNDO_MESSAGE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 24
    }
  },
  {
    "path": "src/main/java/seedu/commons/Util.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Util {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static String generatePadStringWithCharAndLength(char pad, int length) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return String.format(\"%\" + length + \"s\", \"\").replace(\u0027 \u0027, pad);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static String limitStringWithDots(String string, int limit) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Could be changed to -4 to get an extra space"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (limit \u003c\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (limit \u003c 3) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return string.substring(0, limit);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return (string.length() \u003e limit) ? (string.substring(0, limit - 3) + \"...\") : string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void putsIntoArray(String string, char[] arr, int start) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        string.getChars(0, string.length(), arr, start);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void putsIntoArrayWithCentralise(String string, char[] arr, int start, int end) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // assert within range"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert (end - start) \u003e string.length();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int dstBegin \u003d start + (end - start - string.length()) / 2;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        string.getChars(0, string.length(), arr, dstBegin);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 33
    }
  },
  {
    "path": "src/main/java/seedu/data/DataStack.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.EmptyDataStackException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayDeque;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Deque;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DataStack {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Deque\u003cTaskMap\u003e stack \u003d new ArrayDeque\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void push(TaskMap taskMap) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        stack.addFirst(taskMap);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap pop() throws EmptyDataStackException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (stack.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new EmptyDataStackException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return stack.removeFirst();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap peek() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return stack.getFirst();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return stack.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 30
    }
  },
  {
    "path": "src/main/java/seedu/data/Model.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.EmptyDataStackException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Model {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private TaskMap taskMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private DataStack dataStack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Model(TaskMap taskMap) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.taskMap \u003d taskMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        dataStack \u003d new DataStack();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        dataStack.push(taskMap);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public DataStack getDataStack() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return dataStack;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap getTaskMap() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // new copy of taskMap"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap(taskMap.getValues());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setTaskMap(TaskMap taskMap) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.taskMap \u003d taskMap;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void pushAndUpdate(TaskMap taskMap) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        dataStack.push(taskMap);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setTaskMap(taskMap);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void popAndUpdate() throws EmptyDataStackException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        dataStack.pop();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setTaskMap(dataStack.peek());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 42
    }
  },
  {
    "path": "src/main/java/seedu/data/TaskMap.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.DateSorter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.PrioritySorter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class TaskMap {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final int MAX_NUM_TASKS \u003d 10000;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LinkedHashMap\u003cInteger, Task\u003e tasksMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasksMap \u003d new LinkedHashMap\u003c\u003e(MAX_NUM_TASKS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap(Collection\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasksMap \u003d new LinkedHashMap\u003c\u003e(MAX_NUM_TASKS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasksMap.put(task.getTaskID(), task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Collection\u003cTask\u003e getValues() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasksMap.values();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasksMap.put(task.getTaskID(), task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasksMap.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task get(Integer key) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasksMap.get(key);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap sortListByDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by date"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e sorted \u003d tasksMap.values().stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .sorted(new DateSorter())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap(sorted);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap sortListByPriority() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by priority, same priority then date"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e sorted \u003d tasksMap.values().stream()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .sorted(new DateSorter())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .sorted(new PrioritySorter())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap(sorted);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap searchByDescription(String toSearch) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e found \u003d tasksMap.values().stream()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .filter(task -\u003e task.getDescription().toLowerCase().contains(toSearch.toLowerCase()))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap(found);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap searchByDate(LocalDate date) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e found \u003d tasksMap.values().stream()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .filter(task -\u003e task.getDate().equals(date))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap(found);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasksMap.clear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void delete(Integer key) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasksMap.remove(key);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 85
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/EmptyDataStackException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class EmptyDataStackException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.EMPTY_DATA_STACK;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidDatetimeException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidDatetimeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_DATETIME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidPriorityException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidPriorityException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_PRIORITY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidTaskNumberException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/MaxNumTaskException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class MaxNumTaskException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.MAX_NUM_TASK;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/UnknowCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class UnknowCommandException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/font/Colors.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.font;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Colors {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Colors from https://dev.to/awwsmm/coloured-terminal-output-with-java-57l3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_RESET  \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BLACK  \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_RED    \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_GREEN  \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BLUE   \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_CYAN   \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_WHITE  \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BLACK  \u003d \"\\u001B[90m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_RED    \u003d \"\\u001B[91m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_GREEN  \u003d \"\\u001B[92m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_YELLOW \u003d \"\\u001B[93m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BLUE   \u003d \"\\u001B[94m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_PURPLE \u003d \"\\u001B[95m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_CYAN   \u003d \"\\u001B[96m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_WHITE  \u003d \"\\u001B[97m\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String[] FOREGROUNDS \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BLACK, ANSI_RED, ANSI_GREEN, ANSI_YELLOW,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BLUE, ANSI_PURPLE, ANSI_CYAN, ANSI_WHITE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BLACK, ANSI_BRIGHT_RED, ANSI_BRIGHT_GREEN, ANSI_BRIGHT_YELLOW,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BLUE, ANSI_BRIGHT_PURPLE, ANSI_BRIGHT_CYAN, ANSI_BRIGHT_WHITE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_BLACK  \u003d \"\\u001B[40m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_RED    \u003d \"\\u001B[41m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_GREEN  \u003d \"\\u001B[42m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_YELLOW \u003d \"\\u001B[43m\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_BLUE   \u003d \"\\u001B[44m\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_PURPLE \u003d \"\\u001B[45m\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_CYAN   \u003d \"\\u001B[46m\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_WHITE  \u003d \"\\u001B[47m\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_BLACK  \u003d \"\\u001B[100m\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_RED    \u003d \"\\u001B[101m\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_GREEN  \u003d \"\\u001B[102m\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_YELLOW \u003d \"\\u001B[103m\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_BLUE   \u003d \"\\u001B[104m\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_PURPLE \u003d \"\\u001B[105m\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_CYAN   \u003d \"\\u001B[106m\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_WHITE  \u003d \"\\u001B[107m\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String[] BACKGROUNDS \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BG_BLACK, ANSI_BG_RED, ANSI_BG_GREEN, ANSI_BG_YELLOW,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BG_BLUE, ANSI_BG_PURPLE, ANSI_BG_CYAN, ANSI_BG_WHITE,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BG_BLACK, ANSI_BRIGHT_BG_RED, ANSI_BRIGHT_BG_GREEN, ANSI_BRIGHT_BG_YELLOW,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BG_BLUE, ANSI_BRIGHT_BG_PURPLE, ANSI_BRIGHT_BG_CYAN, ANSI_BRIGHT_BG_WHITE };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String DEFAULT_STRING_COLOR \u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 57
    }
  },
  {
    "path": "src/main/java/seedu/messages/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commons.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_CYAN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_PURPLE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RESET;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_YELLOW;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String WELCOME_BORDER \u003d \" \" + padString(\u0027\u003d\u0027, 58) + \" \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String WELCOME_BORDER_SPACE \u003d \"||\" + padString(\u0027 \u0027, 56) + \"||\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String WELCOME_PREFIX \u003d \"||         \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String HELP_BORDER \u003d \" \" + padString(\u0027\u003d\u0027, 98) + \" \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String HELP_BORDER_SPACE \u003d \"||\" + padString(\u0027 \u0027, 96) + \"||\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String HELP_PREFIX \u003d \"||       \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_PRIORITY \u003d \"Invalid priority!\" + LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"Invalid command!\" + LS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"Unknown command!\" + LS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_TASK_NUMBER \u003d \"Invalid task number!\" + LS;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_DATETIME \u003d \"Invalid datetime!\" + LS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String MAX_NUM_TASK \u003d \"Max number of tasks reached!\" + LS;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String EMPTY_DATA_STACK \u003d \"Empty data stack!\" + LS;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d WELCOME_BORDER + LS"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_BORDER_SPACE + LS"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_YELLOW + \"Welcome to\" + ANSI_RESET + padString(\u0027 \u0027, 37) + \"||\" + LS"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_CYAN + \"    ____  __      _   ____  _______\" + ANSI_RESET + \"            ||\" + LS"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_CYAN + \"   / __ \\\\/ /___ _/ | / / / / / ___/\" + ANSI_RESET + \"            ||\" + LS"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_CYAN + \"  / /_/ / / __ `/  |/ / / / /\\\\__ \\\\ \" + ANSI_RESET + \"            ||\" + LS"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_CYAN + \" / ____/ / /_/ / /|  / /_/ /___/ / \" + ANSI_RESET + \"            ||\" + LS"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_PREFIX + ANSI_CYAN + \"/_/   /_/\\\\__,_/_/ |_/\\\\____//____/  \" + ANSI_RESET"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + ANSI_CYAN + \"v1.0\" + ANSI_RESET + \"        ||\" + LS"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + WELCOME_BORDER_SPACE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String HELP_MESSAGE \u003d HELP_BORDER + LS"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_BORDER_SPACE + LS"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"List of available commands:\" + padString(\u0027 \u0027, 62) + \"||\" + LS"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"Note:\" + padString(\u0027 \u0027, 84) + \"||\" + LS"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"1. Square bracket input is optional.\" + padString(\u0027 \u0027, 53) + \"||\" + LS"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- help: show list of available commands\" + padString(\u0027 \u0027, 50) + \"||\" + LS"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"help\" + ANSI_RESET + padString(\u0027 \u0027, 77) + \"||\" + LS"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- add: add a task\" + padString(\u0027 \u0027, 71) + \"||\" + LS"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + \"add DESCRIPTION [d/dd-MM-yyyy] [st/HHmm] [et/HHmm] [p/NUMBER]\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + ANSI_RESET + \"                    ||\" + LS"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- edit: edit a task\" + padString(\u0027 \u0027, 70) + \"||\" + LS"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + \"edit INDEX [des/DESCRIPTION] [d/dd-MM-yyyy] [st/HHmm] [et/HHmm] [p/NUMBER]\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + ANSI_RESET + \"       ||\" + LS"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- list: show list of tasks\" + padString(\u0027 \u0027, 63) + \"||\" + LS"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"list [-d|-p|-w|-m|d/DATE]\" + ANSI_RESET"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + padString(\u0027 \u0027, 56) + \"||\" + LS"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- search: find task(s) with keyword in description\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + padString(\u0027 \u0027, 39) + \"||\" + LS"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"search KEYWORD(S)\" + ANSI_RESET"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + padString(\u0027 \u0027, 64) + \"||\" + LS"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- delete remove particular task by index\" + padString(\u0027 \u0027, 49) + \"||\" + LS"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"delete INDEX\" + ANSI_RESET"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    + padString(\u0027 \u0027, 69) + \"||\" + LS"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- clear: remove all tasks\" + padString(\u0027 \u0027, 64) + \"||\" + LS"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"clear\" + ANSI_RESET + padString(\u0027 \u0027, 76) + \"||\" + LS"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"- bye: exit the program\" + padString(\u0027 \u0027, 66) + \"||\" + LS"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_PREFIX + \"format: \" + ANSI_PURPLE + \"bye\" + ANSI_RESET + padString(\u0027 \u0027, 78) + \"||\" + LS"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_BORDER_SPACE + LS"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            + HELP_BORDER + LS;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye! See you again!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String LIST_MESSAGE \u003d \"Here is your list of tasks:\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ADD_MESSAGE \u003d \"Task added.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String EDIT_MESSAGE \u003d \"Task edited.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String CLEAR_MESSAGE \u003d \"All tasks cleared.\" + LS;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static final String DELETE_MESSAGE \u003d \"Task deleted.\" + LS;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String SEARCH_NOT_FOUND_MESSAGE \u003d \"No matched item found.\" + LS;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String SEARCH_FOUND_MESSAGE \u003d \"Here is your list of tasks\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \" which contain the word/letters:\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String NO_PREV_MODIFICATION \u003d \"There\u0027s nothing to undo.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String UNDO_MESSAGE \u003d \"Previous modification has been undone.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private static String padString(char letter, int length) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return Util.generatePadStringWithCharAndLength(letter, length);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 52,
      "e0406981": 1,
      "QX-CHEN": 32
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Add;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Bye;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Clear;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Delete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Edit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Help;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Search;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.Undo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.UnknowCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Command processRaw(String rawInput) throws"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            UnknowCommandException, InvalidCommandException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (rawInput.startsWith(Help.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Help();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Add.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Add(rawInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(List.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new List(rawInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Bye.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Bye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Edit.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Edit(rawInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Clear.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Clear();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Search.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Search(rawInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (rawInput.startsWith(Delete.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return new Delete(rawInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Undo.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Undo();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new UnknowCommandException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 11,
      "QX-CHEN": 32
    }
  },
  {
    "path": "src/main/java/seedu/planus/Planus.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.planus;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Planus {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LogicManager logicManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        new Planus().run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            initProgram();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            logicManager.run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            shutdownProgram();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            ui.showException(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void initProgram() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        model \u003d new Model(storage.loadTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        logicManager \u003d new LogicManager(ui, model);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ui.showWelcomeMessage(model.getTaskMap());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void shutdownProgram() throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        storage.writeTasksToFile(model.getTaskMap());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 47
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String DIRECTORY_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String FILE_NAME \u003d \"data.json\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Write to file the latest data of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * @param tasks latest TaskList object after modification."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void writeTasksToFile(TaskMap tasks) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        FileWriter file \u003d new FileWriter(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task task : tasks.getValues()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            file.write(gson.toJson(task) + System.lineSeparator());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Load data from file and add tasks to TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskMap loadTasks() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // If both dir and file are newly created, return empty taskMap."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (!createDirectory()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return readTasksFromFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskMap();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Create a directory if the \"data\" directory does not exists."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * @return true if directory is created at the point of execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean createDirectory() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            boolean directoryCreated \u003d directory.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assert directoryCreated;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            boolean fileCreated \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME).createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assert fileCreated;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Read lines from file and process each line."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private TaskMap readTasksFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasks \u003d new TaskMap();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Type type \u003d new TypeToken\u003cTask\u003e(){}.getType();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.addTask(gson.fromJson(scanner.nextLine(), type));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 75
    }
  },
  {
    "path": "src/main/java/seedu/task/DateSorter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DateSorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int compare(Task task, Task t1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return task.getDate().compareTo(t1.getDate());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 11
    }
  },
  {
    "path": "src/main/java/seedu/task/Priority.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_GREEN;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RED;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RESET;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_YELLOW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    LOW(1, \"LOW\", ANSI_GREEN),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    MEDIUM(2, \"MEDIUM\", ANSI_YELLOW),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    HIGH(3, \"HIGH\", ANSI_RED);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final int priority;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String string;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Priority(int priority, String string, String color) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.color \u003d color;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return color + string + ANSI_RESET;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 31
    }
  },
  {
    "path": "src/main/java/seedu/task/PrioritySorter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class PrioritySorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int compare(Task task, Task t1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // descending order"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return t1.getPriority().compareTo(task.getPriority());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 12
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static java.lang.Math.pow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // MAX_NUM_TASKS \u003d 10000"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final int HASH_VALUE_DIGITS \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Integer taskID;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(String description, String dateString, String startTime, String endTime, String priorityString)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        throws InvalidPriorityException, InvalidDatetimeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        date \u003d dateStringToDate(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d timeStringToTime(startTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d timeStringToTime(endTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        priority \u003d priorityStringToPriority(priorityString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskID \u003d generateHashValue();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(Integer taskID, String description, LocalDate date,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                LocalTime startTime, LocalTime endTime, Priority priority) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(String taskID, String description, String dateString,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                String startTime, String endTime, String priorityString)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        throws InvalidPriorityException, InvalidDatetimeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        date \u003d dateStringToDate(dateString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d timeStringToTime(startTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d timeStringToTime(endTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        priority \u003d priorityStringToPriority(priorityString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.taskID \u003d Integer.parseInt(taskID);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private int generateHashValue() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return hashCode() % (int) pow(10, HASH_VALUE_DIGITS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Integer getTaskID() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return taskID;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setTaskID(Integer taskID) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalDate dateStringToDate(String dateString) throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (dateString \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String[] dateParts \u003d dateString.split(\"-\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int day \u003d Integer.parseInt(dateParts[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int month \u003d Integer.parseInt(dateParts[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int year \u003d Integer.parseInt(dateParts[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidDatetimeException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime timeStringToTime(String timeString) throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (timeString \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int minute \u003d time % 100;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidDatetimeException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Priority priorityStringToPriority(String priorityString) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (priorityString \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Priority priority;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        switch (priorityString) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidPriorityException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \" \" + date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String timeToString(LocalTime time) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \" \" + time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String priorityToString(Priority priority) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \" \" + priority.toString();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDate(String dateString) throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        date \u003d dateStringToDate(dateString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setStartTime(String startTime) throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d timeStringToTime(startTime);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setEndTime(LocalTime endTime) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setEndTime(String endTime) throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d timeStringToTime(endTime);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setPriority(String priorityString) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        priority \u003d priorityStringToPriority(priorityString);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return taskID.toString() + \" \" + description + dateToString(date) + timeToString(startTime)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + timeToString(endTime) + priorityToString(priority);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 188
    }
  },
  {
    "path": "src/main/java/seedu/ui/DayStructure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DayStructure extends DisplayDateStructure {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected void generateScreen(TaskMap tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 16
    }
  },
  {
    "path": "src/main/java/seedu/ui/DisplayDateStructure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class DisplayDateStructure {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final TextStyle MONTH_TEXT_STYLE \u003d TextStyle.FULL;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final TextStyle WEEKDAY_TEXT_STYLE \u003d TextStyle.SHORT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final Locale LOCALE \u003d Locale.ENGLISH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final int DAYS_PER_WEEK \u003d 7;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final int HASHCODE_STRING_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final int DISPLAY_LENGTH \u003d 141;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final int DAY_COLUMN_WIDTH \u003d 20;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected static final int WEEK_ROW_WIDTH \u003d 10;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected Month currentMonth \u003d currentDate.getMonth();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected int currentDateDayOfMonth \u003d currentDate.getDayOfMonth();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected DayOfWeek currentDateDayOfWeek \u003d currentDate.getDayOfWeek();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected char[][] screen;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public char[][] getScreen() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return screen;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected abstract void generateScreen(TaskMap tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 34
    }
  },
  {
    "path": "src/main/java/seedu/ui/DisplayMode.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public enum DisplayMode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    ALL,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    WEEK,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    MONTH;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 7
    }
  },
  {
    "path": "src/main/java/seedu/ui/MonthStructure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commons.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.commons.Util.putsIntoArray;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.commons.Util.putsIntoArrayWithCentralise;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class MonthStructure extends DisplayDateStructure {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final int DISPLAY_HEIGHT \u003d 51;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final int ROW_NUM_OFFSET \u003d 2;    // Month name and Day of week"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected void generateScreen(TaskMap tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String monthString \u003d currentMonth.getDisplayName(MONTH_TEXT_STYLE, LOCALE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int currentCol \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int currentRow \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Set empty screen"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        screen \u003d new char[DISPLAY_HEIGHT][DISPLAY_LENGTH];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        generateScreenWithBorder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Display month name"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        putsIntoArrayWithCentralise(monthString, screen[currentRow++], 0, DISPLAY_LENGTH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Display day name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d DAYS_PER_WEEK; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String dayOfWeek \u003d DayOfWeek.of(i).getDisplayName(WEEKDAY_TEXT_STYLE, LOCALE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            putsIntoArrayWithCentralise(dayOfWeek,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[currentRow], currentCol, currentCol + DAY_COLUMN_WIDTH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            currentCol +\u003d DAY_COLUMN_WIDTH;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        currentRow++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Display days"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        LocalDate startDate \u003d currentDate.minusDays(currentDateDayOfMonth - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int lengthOfCurrentMonth \u003d currentDate.lengthOfMonth();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        LocalDate endDate \u003d startDate.plusDays(lengthOfCurrentMonth);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        currentCol \u003d (startDate.getDayOfWeek().getValue() - 1) * DAY_COLUMN_WIDTH + 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (LocalDate date \u003d startDate; date.isBefore(endDate); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            int tempRowNum \u003d currentRow;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            // for each day"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String dayOfMonth \u003d String.valueOf(date.getDayOfMonth());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            putsIntoArrayWithCentralise(dayOfMonth,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[tempRowNum++], currentCol, currentCol + DAY_COLUMN_WIDTH);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (Task task : tasks.searchByDate(date).getValues()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                String temp;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                if (tempRowNum \u003d\u003d currentRow + WEEK_ROW_WIDTH - ROW_NUM_OFFSET) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    temp \u003d \"...\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    putsIntoArray(temp, screen[tempRowNum], currentCol);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp \u003d \"#\" + task.getTaskID();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                // # + 4 digits + \" \" \u003d 6"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp +\u003d Util.generatePadStringWithCharAndLength(\u0027 \u0027, HASHCODE_STRING_LENGTH - temp.length());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp +\u003d task.getDescription();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Util.limitStringWithDots(temp, DAY_COLUMN_WIDTH);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                putsIntoArray(temp, screen[tempRowNum++], currentCol);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (date.getDayOfWeek() \u003d\u003d DayOfWeek.SUNDAY) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                currentCol \u003d 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                currentRow +\u003d WEEK_ROW_WIDTH;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                currentCol +\u003d DAY_COLUMN_WIDTH;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void generateScreenWithBorder() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; i \u003c DISPLAY_HEIGHT; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (int j \u003d 0; j \u003c DISPLAY_LENGTH; j++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[i][j] \u003d (i \u003d\u003d 0 || i \u003d\u003d (DISPLAY_HEIGHT - 1)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    || ((i - ROW_NUM_OFFSET) % WEEK_ROW_WIDTH \u003d\u003d 0 \u0026\u0026 i !\u003d ROW_NUM_OFFSET)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    || j % DAY_COLUMN_WIDTH \u003d\u003d 0) ? \u0027*\u0027 : \u0027 \u0027;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 90
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commons.Util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private DisplayDateStructure displayDateStructure;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void displayAll(TaskMap tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Basic adding sequence"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert tasks !\u003d null : \"null tasks\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayTasks(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void displayByWeek(TaskMap tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Weekly view"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayDateStructure \u003d new WeekStructure();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayDateStructure.generateScreen(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printScreen();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void displayByMonth(TaskMap tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Monthly view"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayDateStructure \u003d new MonthStructure();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayDateStructure.generateScreen(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printScreen();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void printScreen() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (char[] arr : displayDateStructure.getScreen()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            out.println(arr);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void displayTasks(TaskMap tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Header"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String headerFormat \u003d \"  | %-10s | %-20s | %-15s | %-10s | %-10s | %-11s |\" + LS;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String contentFormat \u003d \"  | %-10s | %-20s | %-15s | %-10s | %-10s | %-20s |\" + LS;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"   \" + Util.generatePadStringWithCharAndLength(\u0027_\u0027, 93));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        out.format(headerFormat, \"Index\", \"Description\", \"Date\", \"Start\", \"End\", \"Priority\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"   \" + Util.generatePadStringWithCharAndLength(\u0027-\u0027, 93));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            out.println(\"  |\" + Util.generatePadStringWithCharAndLength(\u0027 \u0027, 93) + \"|\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (Task task : tasks.getValues()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                out.format(contentFormat,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    \"#\" + task.getTaskID(),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    Util.limitStringWithDots(task.getDescription(), 20),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    task.getDate(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    task.getStartTime() \u003d\u003d null ? \"\" : task.getStartTime(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    task.getEndTime() \u003d\u003d null ? \"\" : task.getEndTime(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    task.getPriority());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"   \" + Util.generatePadStringWithCharAndLength(\u0027-\u0027, 93));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showWelcomeMessage(TaskMap tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        showMessage(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (tasks !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            showReminders(tasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showReminders(TaskMap tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert tasks !\u003d null : \"null tasks\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap tasksDueToday \u003d tasks.searchByDate(LocalDate.now());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String messageFormat \u003d \"%-15s%-30s%15s\" + LS;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String taskFormat \u003d \"%-15s%-6s%-18s%-6s%15s\" + LS;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"||\" + Util.generatePadStringWithCharAndLength(\u0027 \u0027, 56) + \"||\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        out.format(messageFormat, \"||\", \"You have \" + tasksDueToday.size() + \" tasks due today.\", \"||\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task task : tasksDueToday.getValues()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            out.format(taskFormat,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                \"||\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"#\" + task.getTaskID() + \" \","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Util.limitStringWithDots(task.getDescription(), 17),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                (task.getStartTime() \u003d\u003d null ? \"\" : task.getStartTime()),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                \"||\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"||\" + Util.generatePadStringWithCharAndLength(\u0027 \u0027, 56) + \"||\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        TaskMap tasksDueTomorrow \u003d tasks.searchByDate(LocalDate.now().plusDays(1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        out.format(messageFormat, \"||\", \"Upcoming tasks tomorrow:\", \"||\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task task : tasksDueTomorrow.getValues()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            out.format(taskFormat,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                \"||\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"#\" + task.getTaskID() + \" \","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Util.limitStringWithDots(task.getDescription(), 17),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                (task.getStartTime() \u003d\u003d null ? \"\" : task.getStartTime()),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                \"||\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(\"||\" + Util.generatePadStringWithCharAndLength(\u0027 \u0027,56) + \"||\" + LS"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + \" \" + Util.generatePadStringWithCharAndLength(\u0027\u003d\u0027, 58) + \" \" + LS);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showException(Exception e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(e);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public boolean interpretCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assert result.getMessage() !\u003d null : \"null message\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        showCommandResult(result);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return result.isExit();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void displayTasksForTesting(TaskMap taskMap) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayAll(taskMap);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void showCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        showMessage(result.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (result.getTasks() !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (result.getDisplayMode() \u003d\u003d DisplayMode.ALL) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                displayAll(result.getTasks());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else if (result.getDisplayMode() \u003d\u003d DisplayMode.WEEK) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                // Weekly view"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                displayByWeek(result.getTasks());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else if (result.getDisplayMode() \u003d\u003d DisplayMode.MONTH) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                // Monthly view"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                displayByMonth(result.getTasks());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 20,
      "QX-CHEN": 137
    }
  },
  {
    "path": "src/main/java/seedu/ui/WeekStructure.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commons.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class WeekStructure extends DisplayDateStructure {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final int DISPLAY_HEIGHT \u003d 11;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected void generateScreen(TaskMap tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String monthString \u003d currentMonth.getDisplayName(MONTH_TEXT_STYLE, LOCALE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Set screen with border"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        screen \u003d new char[DISPLAY_HEIGHT][DISPLAY_LENGTH];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        generateScreenWithBorder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int currentCol \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int currentRow \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Display month name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Util.putsIntoArrayWithCentralise(monthString, screen[currentRow++], 0, DISPLAY_LENGTH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Display weekdays"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        LocalDate startDate \u003d currentDate.minusDays(currentDateDayOfWeek.getValue() - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        LocalDate endDate \u003d startDate.plusDays(DAYS_PER_WEEK);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (LocalDate date \u003d startDate; date.isBefore(endDate); date \u003d date.plusDays(1)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            // for each day"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String dayOfWeek \u003d date.getDayOfWeek().getDisplayName(WEEKDAY_TEXT_STYLE, LOCALE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            Util.putsIntoArrayWithCentralise(dayOfWeek,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[currentRow++], currentCol, currentCol + DAY_COLUMN_WIDTH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String dayOfMonth \u003d String.valueOf(date.getDayOfMonth());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            Util.putsIntoArrayWithCentralise(dayOfMonth,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[currentRow++], currentCol, currentCol + DAY_COLUMN_WIDTH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (Task task : tasks.searchByDate(date).getValues()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                String temp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                if (currentRow \u003d\u003d DISPLAY_HEIGHT - 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    temp \u003d \"...\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    Util.putsIntoArray(temp, screen[currentRow], currentCol);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp \u003d \"#\" + task.getTaskID();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                // # + 4 digits + \" \" \u003d 6"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp +\u003d Util.generatePadStringWithCharAndLength(\u0027 \u0027, HASHCODE_STRING_LENGTH - temp.length());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                temp +\u003d task.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Util.limitStringWithDots(temp, 20);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Util.putsIntoArray(temp, screen[currentRow++], currentCol);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            currentCol +\u003d 20;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            currentRow \u003d 2;    // Row0: Month str"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void generateScreenWithBorder() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; i \u003c DISPLAY_HEIGHT; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (int j \u003d 0; j \u003c DISPLAY_LENGTH; j++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                screen[i][j] \u003d (i % WEEK_ROW_WIDTH \u003d\u003d 0 || j % DAY_COLUMN_WIDTH \u003d\u003d 0) ? \u0027*\u0027 : \u0027 \u0027;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 70
    }
  },
  {
    "path": "src/test/java/seedu/commands/AddTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.MaxNumTaskException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static seedu.messages.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "class AddTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void constructor_noRawInput_throws_InvalidCommandException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e new Add(\"\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addCommand_wrongStartTimeFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        final String[] invalidInputs \u003d {\"\", \" \", \"1231242345\", \"\u0026*^%*\u0026^\", \"abc\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidInputs.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            int finalI \u003d i;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            assertThrows(InvalidCommandException.class, () -\u003e new Add(\"add task1 st/\" + invalidInputs[finalI]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addCommand_wrongEndTimeFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        final String[] invalidInputs \u003d {\"\", \" \", \"1231242345\", \"\u0026*^%*\u0026^\", \"abc\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidInputs.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            int finalI \u003d i;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            assertThrows(InvalidCommandException.class, () -\u003e new Add(\"add task1 et/\" + invalidInputs[finalI]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addCommand_wrongDateFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        final String[] invalidInputs \u003d {\"\", \" \", \"1231242345\", \"\u0026*^%*\u0026^\", \"abc\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidInputs.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            int finalI \u003d i;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            assertThrows(InvalidCommandException.class, () -\u003e new Add(\"add task1 d/\" + invalidInputs[finalI]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addCommand_wrongPriorityFormat() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        final String[] invalidInputs \u003d {\"\", \" \", \"1231242345\", \"\u0026*^%*\u0026^\", \"abc\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidInputs.length; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            int finalI \u003d i;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            assertThrows(InvalidCommandException.class, () -\u003e new Add(\"add task1 p/\" + invalidInputs[finalI]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addCommand_executeSuccess() throws InvalidCommandException, InvalidDatetimeException,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            InvalidPriorityException, MaxNumTaskException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        TaskMap taskMap \u003d new TaskMap();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Model model \u003d new Model(taskMap);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Add add \u003d new Add(\"add newTask\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        CommandResult result \u003d add.execute(model);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(1, model.getTaskMap().size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 65,
      "QX-CHEN": 4
    }
  },
  {
    "path": "src/test/java/seedu/commands/DeleteTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.data.TaskMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "class DeleteTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Task t1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Task t2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Task t3;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Task t4;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Task t5;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            t1 \u003d new Task(\"meeting\", \"20-10-2020\", null, null, null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            t2 \u003d new Task(\"meeting\", \"20-10-2020\", null, null, \"2\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            t3 \u003d new Task(\"reading\", \"17-10-2020\", null, null, \"2\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            t4 \u003d new Task(\"reading\", \"24-10-2020\", \"2200\", \"2300\", null);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            t5 \u003d new Task(\"random\", \"15-10-2020\", null, null, \"3\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void constructor_noRawInput_throws_InvalidCommandException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e new Delete(\"\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void deleteCommand_invalidData() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        final String[] invalidInputs \u003d {\"\", \" \", \"\u0026*^%*\u0026^\", \"abc\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c invalidInputs.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            int finalI \u003d i;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            assertThrows(InvalidCommandException.class, () -\u003e new Add(\"delete \" + invalidInputs[finalI]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void deleteCommand_executeTest() throws InvalidTaskNumberException, InvalidCommandException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        TaskMap taskMap \u003d new TaskMap();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t3);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t4);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Model model \u003d new Model(taskMap);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        int id1 \u003d t1.getTaskID();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Delete delete \u003d new Delete(\"delete \" + Integer.toString(id1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        CommandResult result \u003d delete.execute(model);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(4, model.getTaskMap().size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void deleteCommand_invalidTaskNumber() throws InvalidTaskNumberException, InvalidCommandException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        TaskMap taskMap \u003d new TaskMap();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        taskMap.addTask(t3);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Random random \u003d new Random();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int wrongId3 \u003d 3217;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (taskMap.get(wrongId3) !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            wrongId3 \u003d random.nextInt(10000);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Model model \u003d new Model(taskMap);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Delete delete \u003d new Delete(\"delete \" + Integer.toString(wrongId3));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertThrows(InvalidTaskNumberException.class, () -\u003e delete.execute(model));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 73,
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/test/java/seedu/commons/UtilTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class UtilTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void generatePadStringWithCharAndLength_zeroLength_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"\", Util.generatePadStringWithCharAndLength(\u0027 \u0027, 0));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"\", Util.generatePadStringWithCharAndLength(\u0027$\u0027, 0));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void generatePadStringWithCharAndLength_nonZeroLength_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"$$$$$$\", Util.generatePadStringWithCharAndLength(\u0027$\u0027, 6));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"----\", Util.generatePadStringWithCharAndLength(\u0027-\u0027, 4));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void generatePadStringWithCharAndLength_negativeLength_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Effect of - will be left adjust, which doesnt affect the return value."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"$\", Util.generatePadStringWithCharAndLength(\u0027$\u0027, -1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"$$\", Util.generatePadStringWithCharAndLength(\u0027$\u0027, -2));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void limitStringWithDots_LengthGreaterThanThree_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"abc...\", Util.limitStringWithDots(\"abcdefg\", 6));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"abcdef\", Util.limitStringWithDots(\"abcdef\", 6));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"abcdefg\", Util.limitStringWithDots(\"abcdefg\", 10));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void limitStringWithDots_LengthEqualThree_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"...\", Util.limitStringWithDots(\"abcdefg\", 3));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"abc\", Util.limitStringWithDots(\"abc\", 3));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void limitStringWithDots_LengthLessThanThree_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"ab\", Util.limitStringWithDots(\"abcdefg\", 2));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"\", Util.limitStringWithDots(\"abcdef\", -1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(\"\", Util.limitStringWithDots(\"abcdefg\", 0));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 47
    }
  },
  {
    "path": "src/test/java/seedu/data/TaskMapTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class TaskMapTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private TaskMap taskMap \u003d new TaskMap();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task t1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task t2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task t3;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task t4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task t5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void setup() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            t1 \u003d new Task(\"meeting\", \"20-10-2020\", null, null, null);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            t2 \u003d new Task(\"meeting\", \"20-10-2020\", null, null, \"2\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            t3 \u003d new Task(\"reading\", \"17-10-2020\", null, null, \"2\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            t4 \u003d new Task(\"reading\", \"24-10-2020\", \"2200\", \"2300\", null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            t5 \u003d new Task(\"random\", \"15-10-2020\", null, null, \"3\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void operations_emptyTaskMap_success() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertNull(taskMap.get(Integer.parseInt(\"1234\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.getValues().size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.sortListByDate().size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.sortListByPriority().size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.searchByDate(LocalDate.now()).size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.searchByDescription(\"abc\").size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // All sizes should be 0."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int sizeBeforeDelete \u003d taskMap.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.delete(Integer.parseInt(\"1234\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(sizeBeforeDelete, taskMap.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int sizeBeforeClear \u003d taskMap.size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(sizeBeforeClear, taskMap.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void operations_nonEmptyTaskMap_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.addTask(t1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(1, taskMap.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(t1, taskMap.get(t1.getTaskID()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.addTask(t2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int currentSize \u003d taskMap.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(2, currentSize);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Found both tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(currentSize, taskMap.searchByDescription(\"meet\").size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(currentSize, taskMap.searchByDescription(\"Meet\").size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(currentSize, taskMap.searchByDate(LocalDate.of(2020,10,20)).size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Not found"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.searchByDate(LocalDate.of(2020, 10,30)).size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.searchByDescription(\"reading\").size());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.addTask(t3);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.addTask(t4);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        currentSize \u003d taskMap.size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(currentSize, taskMap.searchByDescription(\"ing\").size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.addTask(t5);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // getValues()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(5, taskMap.getValues().size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap sortedByDate \u003d taskMap.sortListByDate();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Integer[] indexSortedByDate \u003d {t5.getTaskID(), t3.getTaskID(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                                       t1.getTaskID(), t2.getTaskID(), t4.getTaskID()};"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task t : sortedByDate.getValues()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(taskMap.get(indexSortedByDate[count++]), t);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by priority"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskMap sortedByPriority \u003d taskMap.sortListByPriority();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Integer[] indexSortedByPriority \u003d {t5.getTaskID(), t3.getTaskID(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                                           t2.getTaskID(), t1.getTaskID(), t4.getTaskID()};"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        count \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task t : sortedByPriority.getValues()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(taskMap.get(indexSortedByPriority[count++]), t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.delete(t1.getTaskID());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(4, taskMap.size());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(0, taskMap.size());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void initialiseTaskMap_TaskList_success() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(t1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(t2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(t3);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(t4);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(t5);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        taskMap \u003d new TaskMap(tasks);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(tasks.size(), taskMap.size());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 119
    }
  },
  {
    "path": "src/test/java/seedu/planus/PlanusTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.planus;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class PlanusTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 3,
      "-": 10
    }
  },
  {
    "path": "src/test/java/seedu/task/TaskTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidDatetimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.INVALID_DATETIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.INVALID_PRIORITY;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void initialiseTask_differentPriority_success() throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"p1\", null,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    null, null, \"1\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"p2\", null,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, null, \"2\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"p3\", null,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, null, \"3\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void initialise_task_invalidPriorityExceptionThrown() throws InvalidDatetimeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"p0\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, null, null, \"0\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(INVALID_PRIORITY, e.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"p4\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, null, null, \"4\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(INVALID_PRIORITY, e.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void initialiseTask__datetime_success() throws InvalidPriorityException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"dt1\", \"20-10-2020\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, null, null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"dt2\", null,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"0000\", null, null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"dt3\", null,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, \"2359\", null);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidDatetimeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void initialise_task_invalidDatetimeExceptionThrown() throws InvalidPriorityException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"date_fail\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"20-20-2020\", null, null, null);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidDatetimeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(INVALID_DATETIME, e.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            new Task(\"time_fail\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                null, \"3000\", null, null);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (InvalidDatetimeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            assertEquals(INVALID_DATETIME, e.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 81
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add    d/20-10-2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add\tst/2000"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add  et/2000"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add p/3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add meeting d/20-10-2020"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add any field d/22-10-2020 st/2000 p/2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add test d/28-11-2020 st/1400 et/1600 p/3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "find"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "search reading"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "search t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 813021893218302138219083291830218"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit -1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit 327187837128372897312321321"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit 10"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "edit 1 des/changed d/20-10-2020 et/2200"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "clear"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 29
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "java -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 1,
      "-": 22
    }
  }
]
