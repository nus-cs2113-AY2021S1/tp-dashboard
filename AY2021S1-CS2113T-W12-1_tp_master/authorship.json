[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    mainClassName \u003d \"seedu.planus.Planus\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    archiveBaseName \u003d \"planus\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 3,
      "-": 44
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Doe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Timothy Cheah | [Github](https://github.com/e0406981) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chen Qixing | [Github](https://github.com/QX-CHEN) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chong Zhi Lin | [Github](https://github.com/czlin98) | [Portfolio](docs/team/zhilin.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhchan163"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chan Meng Han | [Github](https://github.com/mhchan163) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "czlin98": 1,
      "e0406981": 1,
      "mhchan163": 1,
      "QX-CHEN": 1,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/commands/Add.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Add extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Default date: day that the task is created, default priority: 0 (low to high: 0 - 2)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^add (?\u003cdescription\u003e(\\\\w+\\\\s*)+\\\\w*)\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( d/(?\u003cdate\u003e\\\\d{2}-\\\\d{2}-\\\\d{4}))?\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( st/(?\u003cst\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( et/(?\u003cet\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( p/(?\u003cpriority\u003e\\\\d))?$\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String startTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String endTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String priority;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Add(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(\"description\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            startTime \u003d matcher.group(\"st\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            endTime \u003d matcher.group(\"et\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d matcher.group(\"priority\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task task \u003d new Task(description, date, startTime, endTime, priority);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // task arg not in used, in case want change display message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(ADD_MESSAGE, tasks, task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 48
    }
  },
  {
    "path": "src/main/java/seedu/commands/Bye.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Bye extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/main/java/seedu/commands/Clear.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.CLEAR_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Clear extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(CLEAR_MESSAGE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 15
    }
  },
  {
    "path": "src/main/java/seedu/commands/Command.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract CommandResult execute(TaskList tasks)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throws InvalidPriorityException, InvalidTaskNumberException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 12
    }
  },
  {
    "path": "src/main/java/seedu/commands/CommandResult.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this(message, null, null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message, TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this(message, tasks, null);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult(String message, TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 36
    }
  },
  {
    "path": "src/main/java/seedu/commands/Delete.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import static seedu.messages.Messages.DELETE_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^delete (?\u003cindex\u003e\\\\d+)$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Delete(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            index \u003d Integer.parseInt(matcher.group(\"index\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public CommandResult execute(TaskList tasks) throws InvalidTaskNumberException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        tasks.delete(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return new CommandResult(DELETE_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 33,
      "QX-CHEN": 2
    }
  },
  {
    "path": "src/main/java/seedu/commands/Edit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.EDIT_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Edit extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"^edit (?\u003cindex\u003e\\\\d+)\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( des/(?\u003cdescription\u003e(\\\\w+\\\\s*)+\\\\w*))?\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( d/(?\u003cdate\u003e\\\\d{2}-\\\\d{2}-\\\\d{4}))?\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( st/(?\u003cst\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( et/(?\u003cet\u003e\\\\d{4}))?\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    + \"( p/(?\u003cpriority\u003e\\\\d))?$\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String startTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String endTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String priority;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Edit(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            index \u003d Integer.parseInt(matcher.group(\"index\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(\"description\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            startTime \u003d matcher.group(\"st\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            endTime \u003d matcher.group(\"et\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d matcher.group(\"priority\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throws InvalidTaskNumberException, InvalidPriorityException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Check range"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Set field"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (description !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.setDescription(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.setDate(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.setStartTime(startTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (endTime !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.setEndTime(endTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (priority !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            task.setPriority(priority);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(EDIT_MESSAGE, tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 70
    }
  },
  {
    "path": "src/main/java/seedu/commands/Help.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.HELP_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Help extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(HELP_MESSAGE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/main/java/seedu/commands/List.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LIST_MESSAGE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class List extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new CommandResult(LIST_MESSAGE, tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/main/java/seedu/commands/Search.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.SEARCH_FOUND_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.SEARCH_NOT_FOUND_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Search extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"search\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Search by description, can extend to other attributes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        \"^search (?\u003ctoSearch\u003e(\\\\w+\\\\s*)+\\\\w*)$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String toSearch;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Search(String rawInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(rawInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            toSearch \u003d matcher.group(\"toSearch\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public CommandResult execute(TaskList tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskList found \u003d tasks.searchDescription(toSearch);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (found.size() \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(SEARCH_FOUND_MESSAGE, found);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new CommandResult(SEARCH_NOT_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 38
    }
  },
  {
    "path": "src/main/java/seedu/data/TaskList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.DateSorter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.PrioritySorter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void addTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.tasks.addAll(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public boolean contains(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks.contains(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList sortListByDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by date"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e sorted \u003d tasks.stream()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .sorted(new DateSorter())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskList((ArrayList\u003cTask\u003e) sorted);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList sortListByPriority() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Sort by priority, same priority then date"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e sorted \u003d tasks.stream()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .sorted(new DateSorter())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .sorted(new PrioritySorter())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskList((ArrayList\u003cTask\u003e) sorted);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public TaskList searchDescription(String toSearch) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        List\u003cTask\u003e found \u003d tasks.stream()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(toSearch))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return new TaskList((ArrayList\u003cTask\u003e) found);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 4,
      "QX-CHEN": 72
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidPriorityException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidPriorityException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_PRIORITY;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/InvalidTaskNumberException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/exceptions/UnknowCommandException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class UnknowCommandException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return Messages.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10
    }
  },
  {
    "path": "src/main/java/seedu/font/Colors.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.font;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Colors {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Colors from https://dev.to/awwsmm/coloured-terminal-output-with-java-57l3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_RESET  \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BLACK  \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_RED    \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_GREEN  \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BLUE   \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_CYAN   \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_WHITE  \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BLACK  \u003d \"\\u001B[90m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_RED    \u003d \"\\u001B[91m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_GREEN  \u003d \"\\u001B[92m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_YELLOW \u003d \"\\u001B[93m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BLUE   \u003d \"\\u001B[94m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_PURPLE \u003d \"\\u001B[95m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_CYAN   \u003d \"\\u001B[96m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_WHITE  \u003d \"\\u001B[97m\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String[] FOREGROUNDS \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BLACK, ANSI_RED, ANSI_GREEN, ANSI_YELLOW,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BLUE, ANSI_PURPLE, ANSI_CYAN, ANSI_WHITE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BLACK, ANSI_BRIGHT_RED, ANSI_BRIGHT_GREEN, ANSI_BRIGHT_YELLOW,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BLUE, ANSI_BRIGHT_PURPLE, ANSI_BRIGHT_CYAN, ANSI_BRIGHT_WHITE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_BLACK  \u003d \"\\u001B[40m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_RED    \u003d \"\\u001B[41m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_GREEN  \u003d \"\\u001B[42m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_YELLOW \u003d \"\\u001B[43m\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_BLUE   \u003d \"\\u001B[44m\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_PURPLE \u003d \"\\u001B[45m\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_CYAN   \u003d \"\\u001B[46m\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BG_WHITE  \u003d \"\\u001B[47m\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_BLACK  \u003d \"\\u001B[100m\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_RED    \u003d \"\\u001B[101m\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_GREEN  \u003d \"\\u001B[102m\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_YELLOW \u003d \"\\u001B[103m\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_BLUE   \u003d \"\\u001B[104m\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_PURPLE \u003d \"\\u001B[105m\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_CYAN   \u003d \"\\u001B[106m\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ANSI_BRIGHT_BG_WHITE  \u003d \"\\u001B[107m\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String[] BACKGROUNDS \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BG_BLACK, ANSI_BG_RED, ANSI_BG_GREEN, ANSI_BG_YELLOW,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BG_BLUE, ANSI_BG_PURPLE, ANSI_BG_CYAN, ANSI_BG_WHITE,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BG_BLACK, ANSI_BRIGHT_BG_RED, ANSI_BRIGHT_BG_GREEN, ANSI_BRIGHT_BG_YELLOW,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ANSI_BRIGHT_BG_BLUE, ANSI_BRIGHT_BG_PURPLE, ANSI_BRIGHT_BG_CYAN, ANSI_BRIGHT_BG_WHITE };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String DEFAULT_STRING_COLOR \u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 57
    }
  },
  {
    "path": "src/main/java/seedu/messages/Messages.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_CYAN;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RESET;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_YELLOW;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_PRIORITY \u003d \"Invalid priority!\" + LS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"Invalid command!\" + LS;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"Unknown command!\" + LS;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String INVALID_TASK_NUMBER \u003d \"Invalid task number!\" + LS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d ANSI_YELLOW + \"Welcome to\" + LS + ANSI_CYAN"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"    ____  __      _   ____  _______\" + LS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"   / __ \\\\/ /___ _/ | / / / / / ___/\" + LS"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"  / /_/ / / __ `/  |/ / / / /\\\\__ \\\\ \" + LS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \" / ____/ / /_/ / /|  / /_/ /___/ / \" + LS"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"/_/   /_/\\\\__,_/_/ |_/\\\\____//____/  \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"v1.0\" + ANSI_RESET + LS;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"List of available commands:\" + LS"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"- help: show list of available commands\" + LS"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"- add: add a task\" + LS"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"- list: show list of tasks\" + LS"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \"- bye: exit the program\" + LS;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye! See you again!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String LIST_MESSAGE \u003d \"Here is your list of tasks:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String ADD_MESSAGE \u003d \"Task added.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String EDIT_MESSAGE \u003d \"Task edited.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String CLEAR_MESSAGE \u003d \"All tasks cleared.\" + LS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static final String DELETE_MESSAGE \u003d \"Task deleted.\" + LS;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String SEARCH_NOT_FOUND_MESSAGE \u003d \"No matched item found.\" + LS;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String SEARCH_FOUND_MESSAGE \u003d \"Here is your list of tasks\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            + \" which contain the word/letters:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 1,
      "QX-CHEN": 36
    }
  },
  {
    "path": "src/main/java/seedu/parser/Parser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Add;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Bye;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Clear;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Delete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Edit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Help;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import seedu.commands.Search;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.UnknowCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Command processRaw(String rawInput) throws"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            UnknowCommandException, InvalidCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (rawInput.startsWith(Help.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Help();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Add.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Add(rawInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(List.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new List();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Bye.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Bye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Edit.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Edit(rawInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Clear.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Clear();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (rawInput.startsWith(Search.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new Search(rawInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (rawInput.startsWith(Delete.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return new Delete(rawInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new UnknowCommandException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 13,
      "QX-CHEN": 27
    }
  },
  {
    "path": "src/main/java/seedu/planus/Planus.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.planus;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.Bye;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Planus {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Main entry-point for the java.duke.Duke application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        new Planus().run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        initProgram();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Command command \u003d parser.processRaw(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                CommandResult result \u003d command.execute(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                ui.showCommandResult(result);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                if (command instanceof Bye) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    storage.writeTasksToFile(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                ui.showException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void initProgram() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 52
    }
  },
  {
    "path": "src/main/java/seedu/storage/Storage.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String DIRECTORY_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String FILE_NAME \u003d \"data.json\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Write to file the latest data of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * @param tasks latest TaskList object after modification."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void writeTasksToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try (FileWriter file \u003d new FileWriter(DIRECTORY_NAME + \"/\" + FILE_NAME)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                file.write(gson.toJson(tasks.get(i)) + System.lineSeparator());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"IO EXCEPTION\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Load data from file and add tasks to TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void loadTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (!createDirectory()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                readTasksFromFile(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Create a directory if the \"data\" directory does not exists."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * @return true if directory is created at the point of execution."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean createDirectory() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean directoryCreated \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean fileCreated \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                directoryCreated \u003d directory.mkdir();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                fileCreated \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME).createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return directoryCreated \u0026\u0026 fileCreated;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     * Read lines from file and process each line."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void readTasksFromFile(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Type type \u003d new TypeToken\u003cTask\u003e(){}.getType();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.addTask(gson.fromJson(scanner.nextLine(), type));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 79
    }
  },
  {
    "path": "src/main/java/seedu/task/DateSorter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DateSorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int compare(Task task, Task t1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return task.getDate().compareTo(t1.getDate());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 11
    }
  },
  {
    "path": "src/main/java/seedu/task/Priority.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_GREEN;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RED;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_RESET;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.font.Colors.ANSI_YELLOW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    LOW(0, \"LOW\", ANSI_GREEN),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    MEDIUM(1, \"MEDIUM\", ANSI_YELLOW),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    HIGH(2, \"HIGH\", ANSI_RED);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final int priority;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String string;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    Priority(int priority, String string, String color) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.color \u003d color;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return color + string + ANSI_RESET;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 31
    }
  },
  {
    "path": "src/main/java/seedu/task/PrioritySorter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class PrioritySorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int compare(Task task, Task t1) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // descending order"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return t1.getPriority().compareTo(task.getPriority());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 12
    }
  },
  {
    "path": "src/main/java/seedu/task/Task.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(String description, String dateString,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                String startTime, String endTime, String priorityString) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        date \u003d dateStringToDate(dateString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d timeStringToTime(startTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d timeStringToTime(endTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        priority \u003d priorityStringToPriority(priorityString);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalDate dateStringToDate(String dateString) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (dateString \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String[] dateParts \u003d dateString.split(\"-\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int day \u003d Integer.parseInt(dateParts[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int month \u003d Integer.parseInt(dateParts[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int year \u003d Integer.parseInt(dateParts[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private LocalTime timeStringToTime(String timeString) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (timeString \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        int minute \u003d time % 100;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Priority priorityStringToPriority(String priorityString) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (priorityString \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Priority priority;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        switch (priorityString) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"0\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidPriorityException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String dateToString(LocalDate date) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \" \" + date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String timeToString(LocalTime time) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return \" \" + time.format(DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String priorityToString(Priority priority) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \" \" + priority.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDate(String dateString) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        date \u003d dateStringToDate(dateString);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setStartTime(LocalTime startTime) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setStartTime(String startTime) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.startTime \u003d timeStringToTime(startTime);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setEndTime(LocalTime endTime) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setEndTime(String endTime) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.endTime \u003d timeStringToTime(endTime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setPriority(Priority priority) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setPriority(String priorityString) throws InvalidPriorityException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        priority \u003d priorityStringToPriority(priorityString);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return description + dateToString(date) + timeToString(startTime)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                + timeToString(endTime) + priorityToString(priority);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 149
    }
  },
  {
    "path": "src/main/java/seedu/ui/Ui.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.LS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static seedu.messages.Messages.WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        //        this.out \u003d new PrintStream(System.out, true, StandardCharsets.ISO_8859_1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Set default printing color"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        //        out.print(DEFAULT_STRING_COLOR);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void displayAll(TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Basic adding sequence"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        displayTasks(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private void displayTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // Header"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String format \u003d \"%-10s%-15s%-15s%-10s%-10s%-10s\" + LS;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.format(format, \"Index\", \"Description\", \"Date\", \"Start\", \"End\", \"Priority\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            out.format(format,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    i + 1,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getDescription(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getDate(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getStartTime() \u003d\u003d null ? \"\" : tasks.get(i).getStartTime(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getEndTime() \u003d\u003d null ? \"\" : tasks.get(i).getEndTime(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getPriority());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        showMessage(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showException(Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        out.println(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void showCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        showMessage(result.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (result.getTasks() !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            displayAll(result.getTasks());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 73
    }
  },
  {
    "path": "src/test/java/seedu/data/TaskListTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.exceptions.InvalidPriorityException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import seedu.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task meeting;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task reading;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task lecture;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private Task tutorial;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setup() throws InvalidPriorityException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        meeting \u003d new Task(\"meeting\", \"13-10-2020\", \"2000\", \"2200\", \"2\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        reading \u003d new Task(\"reading\", \"21-10-2020\", null, null, null);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        lecture \u003d new Task(\"lecture\", \"20-10-2020\", \"1800\", null, null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tutorial \u003d new Task(\"tutorial\", \"19-10-2020\", \"1500\", null, \"1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(meeting);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(reading);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(2, tasks.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertTrue(tasks.contains(meeting));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertFalse(tasks.contains(lecture));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(lecture);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.addTask(tutorial);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(4, tasks.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertTrue(tasks.contains(lecture));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertTrue(tasks.contains(tutorial));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void sortListByDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskList sortedDate \u003d tasks.sortListByDate();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(meeting, sortedDate.get(0));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(tutorial, sortedDate.get(1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(lecture, sortedDate.get(2));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(reading, sortedDate.get(3));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    void sortListByPriority() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        addTask();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        TaskList sortedPriority \u003d tasks.sortListByPriority();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(meeting, sortedPriority.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(tutorial, sortedPriority.get(1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(lecture, sortedPriority.get(2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        assertEquals(reading, sortedPriority.get(3));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 62
    }
  },
  {
    "path": "src/test/java/seedu/planus/PlanusTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package seedu.planus;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "class PlanusTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4,
      "-": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "java -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 1,
      "-": 22
    }
  }
]
