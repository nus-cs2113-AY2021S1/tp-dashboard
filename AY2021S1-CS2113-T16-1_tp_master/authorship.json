[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"# FinanceIt"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"FinanceIt is a greenfield Java project. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu.financeit/Financeit.java` file, right-click it, and choose `Run Financeit.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   "},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"   \u003e Task :run"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   "},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"      ||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"      ||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$||||"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"      ||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d|     Welcome to       |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"      ||||$||        ~         \u0027------\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d--------\u0027                ||$||||"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"      ||\u003c\u003c |        |$|              || ____ ||                         | \u003e\u003e||"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"      ||\u003e\u003e|  12    ||L||            || ///..) ||         L38036133B   12 |\u003c\u003c||"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"      ||\u003c\u003c|        || ||           || \u003c||  \u003e)  ||                        |\u003e\u003e||"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"      ||\u003e\u003e|         |$|            ||  $$ --)  ||        One Hundred     |\u003c\u003c||"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"   ||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||\u003e||"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"   ||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$||||\u003e||"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"   ||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d|     FinanceIt!       |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||\u003e||"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"   ||||$||        ~         \u0027------\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d--------\u0027                ||$||||\u003e||"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"   ||\u003c\u003c |        |$|              || ____ ||                         | \u003e\u003e||)||"},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"   ||\u003e\u003e|  12    ||L||            || ///..) ||         L38036133B   12 |\u003c\u003c||/||"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"   ||\u003c\u003c|        || ||           || \u003c||  \u003e)  ||                        |\u003e\u003e||\u003d||"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"   ||\u003e\u003e|         |$|            ||  $$ --)  ||        One Hundred     |\u003c\u003c||"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"   ||\u003c\u003c|      L38036133B        *||  |(_)  ||* series                 |\u003e\u003e||"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"   ||\u003e\u003e|  12                     *||(___)_||*   1989                  |\u003c\u003c||"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"   ||\u003c\u003c|      Treasurer     ______(  V2.0   )________     Secretary 12 |\u003e\u003e||"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"   ||||$|                 ~| A finanace tracking app |~               |$||||"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"   ||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d  ONE HUNDRED DOLLARS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"   ||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$//||"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"   ||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"   Status: "},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"   \u003d Welcome to Main Menu                                                                              \u003d"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"   | No.            |  Feature                                           |  Commands                    |"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"   -----------------------------------------------------------------------------------------------------"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"   | [1]            |  Manual Income/Expense Tracker                     |  manual                      |"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"   | [2]            |  Recurring Income/Expense Tracker                  |  recur                       |"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"   | [3]            |  Account Summary                                   |  acc                         |"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"   | [4]            |  Goals Tracker                                     |  goal                        |"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"   | [5]            |  Financial Calculator                              |  financial                   |"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"   | [6]            |  Save Manager                                      |  saver                       |"},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"   | [7]            |  Toggle Log On or Off                              |  logger                      |"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"   | [8]            |  Quit The Program                                  |  exit                        |"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"   ____________________________________________________________"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"   \u003e\u003e\u003e "},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "},{"lineNumber":83,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":88,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"[Kaiwen](kaiwen98.md)"}],"authorContributionMap":{"-":51,"bqxy":53,"kaiwen98":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    mainClassName \u003d \"seedu.financeit.Financeit\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    archiveBaseName \u003d \"financeit\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"    enableAssertions \u003d true"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"Artemis-Hunt":1,"kaiwen98":2}},{"path":"data/tests/JunitTestCase_at.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"18\u003e\u0026@#\u003ctest test test\u003e\u0026@#\u003c\u003e\u0026@#\u003c+$16700.00\u003e\u0026@#\u003cEvery month\u003e\u0026@#\u003cAuto deduction\u003e\u0026@#\u003c"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":"27\u003e\u0026@#\u003ctest test test\u003e\u0026@#\u003c-$14500.00\u003e\u0026@#\u003c\u003e\u0026@#\u003cEvery month\u003e\u0026@#\u003cAuto deduction\u003e\u0026@#\u003ctest test test"}],"authorContributionMap":{"Feudalord":2}},{"path":"data/tests/JunitTestCase_gt.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"Expense;100000;JANUARY"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":"Income;100000;JANUARY"}],"authorContributionMap":{"Feudalord":2}},{"path":"data/tests/JunitTestCase_mt.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"Ledger;2020-01-01"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":"Entry;Expense;TRANSPORT;$11500.00;11:51;test test test"},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"Entry;Income;SALARY;$31500.00;11:31;test test test"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"Ledger;2020-01-02"},{"lineNumber":5,"author":{"gitId":"Feudalord"},"content":"Entry;Income;SALARY;$21500.00;11:21;test test test"},{"lineNumber":6,"author":{"gitId":"Feudalord"},"content":"Entry;Expense;TRANSPORT;$41500.00;11:11;test test test"}],"authorContributionMap":{"Feudalord":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"![alt text](team/photos/kaiwen98.png) | Looi Kai Wen | [Github](https://github.com/kaiwen98) | [Portfolio](team/kaiwen98.md)"},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Brandon Quek | [Github](https://github.com/bqxy) | [Portfolio](team/bqxy.md)"},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Dixon Chai | [Github](https://github.com/dixoncwc) | [Portfolio](team/dixoncwc.md)"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cimg src\u003d\"team/photos/artemis-hunt.png\" width\u003d\"100\"/\u003e | Duan Yu Hang | [Github](https://github.com/Artemis-Hunt) | [Portfolio](team/artemis-hunt.md)"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sun Ling Yue | [Github](https://github.com/Feudalord) | [Portfolio](team/sly.md)"}],"authorContributionMap":{"dixoncwc":2,"Feudalord":1,"-":4,"Artemis-Hunt":1,"kaiwen98":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"# Developer Guide for FinanceIt"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"* Table of Contents"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":"{:toc}"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"# Design"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author kaiwen98 --\u003e"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"## Overview of Architecture"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"__Architecture Diagram__"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Overall.png)"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"There are 5 distinct features that exists within the FinanceIt application, all of which are accessed via the main menu "},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"interface facilitated in FinanceIt.java."},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"The design of the software can be split into 5 distinct components:"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"* Logic Manager component"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"* Logic component"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"* Input Manager component"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"* Data component"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"* Storage component"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"## Logic Manager Component"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_arch.png)"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"The Logic Manager component serves as the bridge between user interface and program operations."},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"\u003cbr /\u003eIt includes 5 classes: "},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"* ```ManualTracker```"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"* ```EntryTracker```"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"* ```RecurringTracker```"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"* ```GoalTracker```"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"* ```FinanceTools```"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"* ```ManualTracker```, `RecurringTracker` and ```EntryTracker``` maintains an instance of a ```DataList``` (```LedgerList``` and ```EntryList```) in ```Model``` respectively, "},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":" and provides an interface for the user can append, remove or perform other ```Data``` operations with the contents of the ```Datalist```."},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"* ```GoalTracker``` maintains a list of income or expense ```Goals``` to track against entries in the ```EntryList```, "},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"and provides an interface for the user to append or remove ```Goals```."},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"* ```Finance Tools``` class provides an interface for users to utilize an array of "},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"finance calculator tools within it."},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"* All ```LogicManager``` classes use the ```InputManager``` component to process user input, then use ```Logic``` component"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"to perform the operation associated with the param handling."},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"__Design decisions__ "},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"* For each feature that involves some sort of query and response, we wanted a module of classes that handles such in a systematic fashion. "},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"Five isolated classes that handles each feature in a self-contained manner helps to reduce overtly complex interactions between user and software."},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"## Logic Component"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Logic_arch.png)"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"The Logic Component executes logic operations passed via a `CommandPacket`, by handling individual params "},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"contained in the `CommandPacket`."},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"* Different `CommandHandler` classes are used in `LogicManager` classes to handle various operations e.g. new, edit, delete"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"* If `CommandHandler` classes recognises a `param` from the `CommandPacket` instance, it performs a sub-operation"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"associated with the `param`. For instance, `/date` will cause `CreateLedgerCommand` instance to set the date of the"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"newly created ledger.  "},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"* `CommandHandler` in turn uses `ParamChecker` to verify validity of inputs before setting."},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"__Design decisions__ "},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"* The handling of parameters throughout the various features of the software have alot of common key features, including logic, input class (`CommandPacket`) "},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"and error cases. Therefore we abstracted out the common behavior into an abstract class called `ParamHandler`, whereby the other `CommandHandler` classes inherit from."},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"* Along the same philosophy, we designed the `ParamChecker` singleton class to consolidate a plethora of error handling methods whereby other `CommandHandlers` can use."},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"This is fit for the software since many of the features share strong similarities in the handling of errors and exceptions."},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"    * The alternative implementation, which is to implement logic of features independently of one another, would result in duplication of code and lack of common error-handling policy. "},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"## Input Manager Component"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/InputManager.png)"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"The Input Manager consists of the ```UiManager``` class, and the ```Parser``` sub-component."},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"* ```handleInput()``` from the ```UiManager``` class is called from ```Handler``` classes to "},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"retrieve the raw string input from the user."},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"* ```Parser``` classes are responsible for parsing raw String input from the user"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"and produce a ```CommandPacket```."},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"* `CommandPacket` consists of two components"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"    * `commandString` which is the command entered by the user"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":"    * `paramMap` which is a HashMap of param entered - key is param tag and value "},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"    is the raw input String."},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. if user inputs `new /desc Quick brown fox`, `commandString` will be `\"add\"`,"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"    while paramMap will consist of one key-value pair, key being `\"/desc\"` and value being"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"    `\"Quick brown fox\"`"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":111,"author":{"gitId":"bqxy"},"content":"## Model Component"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Data_arch.png)"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"Represents data and data list in the program, whereby program operations specified"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"by user input can be performed upon."},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"* ```EntryTracker```, ```RecurringEntryTracker``` and ```ManualTracker``` classes can interact with ```LedgerList``` and ```EntryList```"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"instances to perform add, remove or edit operations on the ```Ledgers``` or ```Entry``` instances in it."},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"* ```Storage``` component interact with ```DataList``` classes for save and load operations."},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"    * For save, ```Storage``` component uses the ```EntryTracker``` and ```ManualTracker``` instances in the program"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"    at the point of save to write to a series of text files that persists after the program closes."},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"    * For load, ```Storage``` component writes data from the text files to ```EntryTracker``` and ```ManualTracker``` respectively."},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"* Utility Model sub-components"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"    * Goal"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"        * Used by the `GoalTracker`. The user can set their income or expense goals by creating a `Goal` instance. They can then be compared against with total entry amounts recorded by the user, whereby the `GoalTracker` will report the progress of the user towards the `Goal` that they set. "},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"        * More information can be found in the [GoalTracker section](#goal-Tracker)."},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"    * AccountSaver"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"        * Stores account information of the user."},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"        * More details can be found in the [FinanceTools section](#financeTools)."},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":136,"author":{"gitId":"bqxy"},"content":"## Storage Component"},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":138,"author":{"gitId":"Feudalord"},"content":"![](uml_images/saveManager/SaveManagerClassSimpilfied.png)"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":142,"author":{"gitId":"Feudalord"},"content":"Storage component performs storage of data from Goal Tracker, Manual Tracker and Recurring Tracker. It loads"},{"lineNumber":143,"author":{"gitId":"Feudalord"},"content":"the data upon entry into the program and performs auto save upon exiting the program. Save Manager also added"},{"lineNumber":144,"author":{"gitId":"Feudalord"},"content":"a feature that allow multiple copies of backup data to be saved and loaded."},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":146,"author":{"gitId":"Feudalord"},"content":"__API__"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":148,"author":{"gitId":"Feudalord"},"content":"* ```manualTrackerSaver```, ```goalTrackerSaver``` and ```autoTrackerSaver``` inherits some common methods"},{"lineNumber":149,"author":{"gitId":"Feudalord"},"content":"from ```saveHandler```. The saver classes are primarily used by ```saveManager``` for file input output operations."},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author kaiwen98 --\u003e"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"## Logging"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"Some classes facilitate critical operations which need to be logged for debugging purposes."},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"The `LoggerCentre` class includes all logger instances for such classes throughout the program."},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":"* The `LoggerCentre` interacts with `FinanceIt` class directly; it creates log files in the beginning of program execution."},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"* The `LoggerCentre` consolidates initial configuration of all `logger` instances used in the program. However,"},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"those instances will log independently of the `LoggerCentre`. "},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"* The `LoggerCentre` creates new log files every time the program runs from the command line. The files are in .log format and"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"can be accessed in the `logs` folder.   "},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":171,"author":{"gitId":"bqxy"},"content":"# Implementation"},{"lineNumber":172,"author":{"gitId":"bqxy"},"content":"## Module-level Implementation"},{"lineNumber":173,"author":{"gitId":"Artemis-Hunt"},"content":"* This section describes generalizable implementations that are similar across features."},{"lineNumber":174,"author":{"gitId":"Artemis-Hunt"},"content":"* More components described in [Feature-level implementation](#feature-level-implementation) below."},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author kaiwen98 --\u003e"},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"### Input Manager"},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"* Note: Refer to [Input Manager Component](#input-manager-component) above for class diagram "},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"illustration of the below subsections."},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":"__Input Conventions__"},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"* The user input is composed of the following format:"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"    \u003ccommand\u003e \u003cparam type\u003e \u003cparameter\u003e \u003cparam type\u003e \u003cparameter\u003e ..."},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"* The ```command``` string determines the function to be executed e.g. `new` or `edit`."},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":"* The remainder of the string includes a series of  param type` - `param` combinations, whereby"},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"```param type``` indicates the type of the parameter and ```param``` indicates the parameter "},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":"that is associated with the ```param type```. "},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"* Param types are restricted to two types: "},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"    * ```/\u003cstring\u003e```, requires a corresponding parameter. "},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"        * Eg. `/date 200814` "},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"        * ```param type```: ```/date```"},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"        * ```param``` : ```200814```"},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"    * ```-\u003cstring\u003e```, does not require a corresponding parameter. "},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"        * Reserved for param types which are used to specify a property to be true/false"},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":"        * Eg. ```-auto```, to specify if an entry has automatic deduction. "},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":"\u003ca name\u003d\"commandPacket\"\u003e\u003c/a\u003e __CommandPacket class__ "},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Contains two particular attributes to store the user input in an organised fashion."},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"    * ```commandString``` :  ```String``` Store the command string from the input."},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"    * ```paramMap``` : ```HashMap``` Store the pairs of ```param type``` and ```param``` present in the input string."},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"        * Key: ```param type```"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":"        * Value:  ```param```"},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"__InputParser class__"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Parses the input string and returns a corresponding [```commandPacket```](#commandPacket)."},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":"    * ```parseInput()```: "},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"        * Initializes a ```commandPacket``` and populates the ```commandString``` attribute."},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":"        * Calls ParamParser instance to parse the segment of the input string"},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":"        that corresponds with the sequence of ```param type``` - ```param``` pairs, and"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"        return a HashMap populated with the aforementioned pairs."},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":"        * Returns a fully populated ```commandPacket``` to be used by user classes."},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":"         "},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"__ParamsParser class__"},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Parses the subsequence of the input string that corresponds with sequence of "},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"```param type``` - ```param``` pairs."},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":"    * Parsing of input for params via ```parseParams()```:"},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"        * __Step 1__: Use a regex helper class ```RegexMatcher``` to identify and extract ```param type``` that matches the "},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"        pattern specified in \"Input conventions\":"},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"            * `/\u003cstring\u003e` or `-\u003cstring\u003e`"},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"        * __Step 2__: Identify the substring of the rest of the input string before the next ```param type``` or end-of-line. "},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":"        This is the `param` to the previously identified `param type`. Extract it from the input string."},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"            * Eg. input is `new /desc NNN /amt 35`. `ParamsParser` will receive `/desc NNN /amt 35` as a string."},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"            * It will look for a param type -  in this case the first param type is `/desc`."},{"lineNumber":229,"author":{"gitId":"kaiwen98"},"content":"            * It then removes the param type from the string and checks for the next param or end of string."},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":"            * The next param identified is `/amt`"},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":"            * `param` associated with `/desc` is hence everything after `/desc` until `/amt`, which is `\"NNN\"` "},{"lineNumber":232,"author":{"gitId":"kaiwen98"},"content":"        * __Step 3__: Put the ```param type``` - ```param``` pair into a ```HashMap```."},{"lineNumber":233,"author":{"gitId":"kaiwen98"},"content":"        * __Step 4__: Repeat steps 1 to 4 until there is the input string is fully extracted."},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"        * __Step 5__: Return a ```HashMap``` populated with the aforementioned pairs."},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"### Logic Managers"},{"lineNumber":240,"author":{"gitId":"kaiwen98"},"content":"* Note: Refer to [Logic Manager Component](#logic-manager-component) above for class diagram "},{"lineNumber":241,"author":{"gitId":"kaiwen98"},"content":"illustration of the below subsections."},{"lineNumber":242,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":243,"author":{"gitId":"kaiwen98"},"content":"**Execution** \u003cbr /\u003e"},{"lineNumber":244,"author":{"gitId":"kaiwen98"},"content":"1. Logic Managers are implemented with a common method: ```execute()```, which utilizes a `while loop`"},{"lineNumber":245,"author":{"gitId":"kaiwen98"},"content":"to maintain a cycle of 2 processes: User input processing and Command handling."},{"lineNumber":246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":247,"author":{"gitId":"kaiwen98"},"content":"**User Input Processing** \u003cbr /\u003e"},{"lineNumber":248,"author":{"gitId":"kaiwen98"},"content":"1. Logic Managers depend on InputManager module to read user input, parse user input and produce a "},{"lineNumber":249,"author":{"gitId":"kaiwen98"},"content":"meaningful ```CommandPacket``` instance."},{"lineNumber":250,"author":{"gitId":"kaiwen98"},"content":"1. The ```CommandPacket``` instance can then be used by the next step of the cycle."},{"lineNumber":251,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":252,"author":{"gitId":"kaiwen98"},"content":"**Command Handling** \u003cbr /\u003e"},{"lineNumber":253,"author":{"gitId":"kaiwen98"},"content":"1. Each Logic Manager will have several methods that are dedicated to handle a single operation. They can"},{"lineNumber":254,"author":{"gitId":"kaiwen98"},"content":"typically be identified by a specific naming convention: `\"handle.....()\"`."},{"lineNumber":255,"author":{"gitId":"kaiwen98"},"content":"1. These methods use ```CommandHandler``` classes to perform `param` dependent operations, which involves evaluation"},{"lineNumber":256,"author":{"gitId":"kaiwen98"},"content":"of `paramMap` in the provided `CommandPacket` instance to decide the operation to perform, be it on `Data` or `DataList`."},{"lineNumber":257,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":258,"author":{"gitId":"kaiwen98"},"content":"**Error Reporting** \u003cbr /\u003e"},{"lineNumber":259,"author":{"gitId":"kaiwen98"},"content":"1. While error handling from `param` parsing is handled by `ParamChecker` singleton class, there is a need"},{"lineNumber":260,"author":{"gitId":"kaiwen98"},"content":"to identify from the execution methods at Logic Managers, whether an exception has been thrown. "},{"lineNumber":261,"author":{"gitId":"kaiwen98"},"content":"1. This is handled by a `try-catch block` within the  `\"handle.....()\"` methods, whereby an exception caught"},{"lineNumber":262,"author":{"gitId":"kaiwen98"},"content":"will result in an error message printed. The error message will not be specific to the exact error; rather it "},{"lineNumber":263,"author":{"gitId":"kaiwen98"},"content":"generally indicates whether an operation has failed."},{"lineNumber":264,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":265,"author":{"gitId":"kaiwen98"},"content":"**Example** \u003cbr /\u003e"},{"lineNumber":266,"author":{"gitId":"kaiwen98"},"content":"* Execute Method"},{"lineNumber":267,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":268,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":269,"author":{"gitId":"kaiwen98"},"content":"    public static void execute() {"},{"lineNumber":270,"author":{"gitId":"kaiwen98"},"content":"        endTracker \u003d false;"},{"lineNumber":271,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Welcome to Manual Tracker!\");"},{"lineNumber":272,"author":{"gitId":"kaiwen98"},"content":"        while (!endTracker) {"},{"lineNumber":273,"author":{"gitId":"kaiwen98"},"content":"            endTracker \u003d false;"},{"lineNumber":274,"author":{"gitId":"kaiwen98"},"content":"            handleMainMenu();"},{"lineNumber":275,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":276,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":278,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":279,"author":{"gitId":"kaiwen98"},"content":"* Operation Methods"},{"lineNumber":280,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":281,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":282,"author":{"gitId":"kaiwen98"},"content":"    static void handleDeleteLedger() {"},{"lineNumber":283,"author":{"gitId":"kaiwen98"},"content":"        //Retrieves ledger and deletes it"},{"lineNumber":284,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":286,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":287,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":288,"author":{"gitId":"kaiwen98"},"content":"### Logic "},{"lineNumber":289,"author":{"gitId":"Artemis-Hunt"},"content":"* Note: Refer to [Logic Component](#logic-component) above for class diagram "},{"lineNumber":290,"author":{"gitId":"Artemis-Hunt"},"content":"illustration of the below subsections."},{"lineNumber":291,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":292,"author":{"gitId":"Artemis-Hunt"},"content":"**`ParamChecker`**"},{"lineNumber":293,"author":{"gitId":"Artemis-Hunt"},"content":"1. Contains a set of public static methods which verifies the validity of the raw input provided"},{"lineNumber":294,"author":{"gitId":"kaiwen98"},"content":"1. If there is nothing wrong with the ```param```, the method will typically return the `param` supplied without modification."},{"lineNumber":295,"author":{"gitId":"kaiwen98"},"content":"1. If the ```param``` fails to pass the tests administered within the method, the following procedures will execute:"},{"lineNumber":296,"author":{"gitId":"kaiwen98"},"content":"    1. Log to log file a corresponding error message with ```WARNING``` level"},{"lineNumber":297,"author":{"gitId":"kaiwen98"},"content":"    1. Print to console, any applicable error messages."},{"lineNumber":298,"author":{"gitId":"kaiwen98"},"content":"    1. Throw a common exception: `ParseFailParamException` "},{"lineNumber":299,"author":{"gitId":"kaiwen98"},"content":"        1. The implication is that the range of exceptions that would have been caught in other"},{"lineNumber":300,"author":{"gitId":"kaiwen98"},"content":"        parts of the software with regards to param handling, is now consolidated within a single class in the program."},{"lineNumber":301,"author":{"gitId":"kaiwen98"},"content":"        The class that uses ParamChecker is only concerned with whether the ```param``` is valid or not."},{"lineNumber":302,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":303,"author":{"gitId":"Artemis-Hunt"},"content":"**`ParamHandler`**"},{"lineNumber":304,"author":{"gitId":"Artemis-Hunt"},"content":"1. `CommandPacket` created from user-input needs to be handled by a particular `ParamHandler` subclass,"},{"lineNumber":305,"author":{"gitId":"Artemis-Hunt"},"content":"depending on what kind of command it is. E.g. CreateEntryHandler handles creating a new Entry."},{"lineNumber":306,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":307,"author":{"gitId":"Artemis-Hunt"},"content":"**`CommandHandler`**"},{"lineNumber":308,"author":{"gitId":"Artemis-Hunt"},"content":"1. Extends `ParamHandler` class. Individual implementation of `handleSingleParams()`"},{"lineNumber":309,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. `CreateEntryHandler` handles `/desc` param, whereas `RetrieveEntryHandler` does not."},{"lineNumber":310,"author":{"gitId":"Artemis-Hunt"},"content":"1. Used within Logic Managers to handle processing of `CommandPacket`.  "},{"lineNumber":311,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":312,"author":{"gitId":"Artemis-Hunt"},"content":"**Handling of params by `XYZCommandHandler`**:  "},{"lineNumber":313,"author":{"gitId":"Artemis-Hunt"},"content":"1. Initialize the state of the handler "},{"lineNumber":314,"author":{"gitId":"Artemis-Hunt"},"content":"    * `XYZCommandHandler#setRequiredParams()` sets required Params that need to be parsed successfully to "},{"lineNumber":315,"author":{"gitId":"Artemis-Hunt"},"content":"    constitute a valid input."},{"lineNumber":316,"author":{"gitId":"Artemis-Hunt"},"content":"        * E.g. to create a new `RecurringEntry`, `/desc` and `/day` are two of the required params,"},{"lineNumber":317,"author":{"gitId":"Artemis-Hunt"},"content":"        whereas editing has no required params (provided that at least one param is present)."},{"lineNumber":318,"author":{"gitId":"Artemis-Hunt"},"content":"    * Pass `CommandPacket` to `ParamChecker` by calling `ParamChecker#setPacket(packet)`."},{"lineNumber":319,"author":{"gitId":"Artemis-Hunt"},"content":"1. Call `ParamHandler#handleParams()`"},{"lineNumber":320,"author":{"gitId":"Artemis-Hunt"},"content":"    * For every`paramType` in the `CommandPacket` instance, execute `XYZCommandHandler#handleSingleParam(packet)`"},{"lineNumber":321,"author":{"gitId":"Artemis-Hunt"},"content":"    * If the `param` parses successfully, it will be added to `paramsSuccessfullyParsed`, else an Exception will be thrown"},{"lineNumber":322,"author":{"gitId":"Artemis-Hunt"},"content":"1. Check if the CommandPacket is valid. The below conditions must be satisfied:"},{"lineNumber":323,"author":{"gitId":"Artemis-Hunt"},"content":"    * All params set earlier via `setRequiredParams()` are parsed with no exceptions thrown."},{"lineNumber":324,"author":{"gitId":"Artemis-Hunt"},"content":"    That is, all params in `requiredParams` is also in `paramsSuccessfullyParsed`."},{"lineNumber":325,"author":{"gitId":"Artemis-Hunt"},"content":"1. If all successful, the entry created is returned. Else, throw ```InsufficientParamsException()```."},{"lineNumber":326,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":327,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":328,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":329,"author":{"gitId":"bqxy"},"content":"## Feature-level Implementation"},{"lineNumber":330,"author":{"gitId":"bqxy"},"content":"### Main Menu"},{"lineNumber":331,"author":{"gitId":"kaiwen98"},"content":"- Loading up user data"},{"lineNumber":332,"author":{"gitId":"kaiwen98"},"content":"- Access to various features"},{"lineNumber":333,"author":{"gitId":"kaiwen98"},"content":"- Saving outstanding user data to respective save files"},{"lineNumber":334,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":335,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":336,"author":{"gitId":"bqxy"},"content":"### Manual Tracker \u0026 Entry Tracker"},{"lineNumber":337,"author":{"gitId":"bqxy"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":338,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":339,"author":{"gitId":"kaiwen98"},"content":"__Ledgers and Entries__"},{"lineNumber":340,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":341,"author":{"gitId":"kaiwen98"},"content":"In this feature, we represent the transactions incurred by the users as ```Entry``` instances."},{"lineNumber":342,"author":{"gitId":"kaiwen98"},"content":"Instances of ```Entry``` class are categorised by the date of origin, which is represented by"},{"lineNumber":343,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances."},{"lineNumber":344,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":345,"author":{"gitId":"kaiwen98"},"content":"```Entry``` instances are characterized by the following: "},{"lineNumber":346,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":347,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction: Income/ Expense "},{"lineNumber":348,"author":{"gitId":"kaiwen98"},"content":"* Amount in transaction"},{"lineNumber":349,"author":{"gitId":"kaiwen98"},"content":"* Category of spending/ expenditure"},{"lineNumber":350,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":351,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":352,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances are characterized by the following: "},{"lineNumber":353,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":354,"author":{"gitId":"kaiwen98"},"content":"* Collection of ```Entry```instances"},{"lineNumber":355,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":356,"author":{"gitId":"bqxy"},"content":"**Manual Tracker** \u003cbr /\u003e"},{"lineNumber":357,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":358,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is a feature that allows users to manage Ledgers with create, delete"},{"lineNumber":359,"author":{"gitId":"kaiwen98"},"content":"and open operations. Ledgers is a class that maintains a list of transactions that are "},{"lineNumber":360,"author":{"gitId":"kaiwen98"},"content":"recorded for a given date. "},{"lineNumber":361,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":362,"author":{"gitId":"kaiwen98"},"content":"The Entry Tracker is fundamentally similar to the Manual Tracker, except it manages ```Entry``` instances"},{"lineNumber":363,"author":{"gitId":"kaiwen98"},"content":"instead of ```Ledger```. Entry Tracker is initialized when a ```Ledger``` instance is \"opened\", whereby "},{"lineNumber":364,"author":{"gitId":"kaiwen98"},"content":"the Entry Tracker facilitate the manipulation of the collection of ```Entry``` instances that are associated with"},{"lineNumber":365,"author":{"gitId":"kaiwen98"},"content":"that particular ```Ledger``` instance."},{"lineNumber":366,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":367,"author":{"gitId":"kaiwen98"},"content":"For the sake of brevity, this section will focus on the discussion of the Manual Tracker. "},{"lineNumber":368,"author":{"gitId":"kaiwen98"},"content":"The edit operation of the Entry Tracker will be discussed at the [end of this section](#entryseq); it is sufficiently unique to Manual Tracker operations to merit detailed discussion."},{"lineNumber":369,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":370,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is capable of executing the following states of operation:"},{"lineNumber":371,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":372,"author":{"gitId":"kaiwen98"},"content":"|States| Operations | "},{"lineNumber":373,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":374,"author":{"gitId":"kaiwen98"},"content":"|```MAIN_MENU```|Go to main menu for users to choose the available operations"},{"lineNumber":375,"author":{"gitId":"kaiwen98"},"content":"|```CREATE_LEDGER```|Create a ledger specified by date, and append it to ```ledgerList```."},{"lineNumber":376,"author":{"gitId":"kaiwen98"},"content":"|```DELETE_LEDGER```|Delete an existing ledger, referenced by date or index."},{"lineNumber":377,"author":{"gitId":"kaiwen98"},"content":"|```OPEN_LEDGER```|Go to subroutine \"Entry Tracker\" for the entries recorded  under the specified ledger."},{"lineNumber":378,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":379,"author":{"gitId":"kaiwen98"},"content":"**Architecture in Context** "},{"lineNumber":380,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":381,"author":{"gitId":"kaiwen98"},"content":"**Logic Manager and Parser** "},{"lineNumber":382,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":383,"author":{"gitId":"Artemis-Hunt"},"content":"![](uml_images/images_updated/Handler.png)"},{"lineNumber":384,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":385,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":386,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":387,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |\t"},{"lineNumber":388,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|\t"},{"lineNumber":389,"author":{"gitId":"kaiwen98"},"content":"|```InputParser```| Breaks input string by user into ```commandString``` and a sequence of ```paramTypes```-```param``` pairs. \u003cbr\u003e\u003cbr\u003e The latter subsequence of the string is passed into ParamParser for further processing. \u003cbr\u003e\u003cbr\u003e Information obtained from input parsing will be used to populate an instantiated ```CommandPacket``` instance, which will then be passed to the entity that called the parsing function.\t"},{"lineNumber":390,"author":{"gitId":"kaiwen98"},"content":"|```ParamParser```| Process the sequence of ```paramTypes```-```param``` pairs and populate the ```paramMap``` in the instantiated ```CommandPacket``` instance.\t"},{"lineNumber":391,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":392,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":393,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":394,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":395,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d logic_data\u003e\u003c/a\u003eLogic Manager and Data** \u003cbr /\u003e"},{"lineNumber":396,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":397,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_Data.png)"},{"lineNumber":398,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":399,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":400,"author":{"gitId":"kaiwen98"},"content":"|--------|--------|"},{"lineNumber":401,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":402,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":403,"author":{"gitId":"kaiwen98"},"content":"|```EntryList```| Omitted for brevity."},{"lineNumber":404,"author":{"gitId":"kaiwen98"},"content":"|```Entry```| Omitted for brevity."},{"lineNumber":405,"author":{"gitId":"kaiwen98"},"content":"|```LedgerList```| Extends ItemList. Refer to Ledgers and Entries section for class behavior."},{"lineNumber":406,"author":{"gitId":"kaiwen98"},"content":"|```Ledger```| Extends DateTimeItem. Refer to Ledgers and Entries section for class behavior."},{"lineNumber":407,"author":{"gitId":"kaiwen98"},"content":"|```ItemList```| Class with defined list behavior specified with helper methods such as retrieval, checking of Duplicates and deletion."},{"lineNumber":408,"author":{"gitId":"kaiwen98"},"content":"|```DateTimeItem```| Abstract class that extends ```Item``` class; instances will have ```LocalDate``` or ```LocalTime``` attributes and corresponding helper methods."},{"lineNumber":409,"author":{"gitId":"kaiwen98"},"content":"|```Item```| Abstract class to define behavior of entities that need are stored in ```ItemList``` instances."},{"lineNumber":410,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":411,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d handler_logic\u003e\u003c/a\u003eHandler and Logic** \u003cbr /\u003e"},{"lineNumber":412,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":413,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Commands_Logic.png)"},{"lineNumber":414,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":415,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":416,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":417,"author":{"gitId":"kaiwen98"},"content":"|```RetrieveLedgerHandler```| Process ```paramTypes```-```param``` pairs from the ```CommandPacket``` instance to identify specified ```Ledger``` instance, then retrieves the instance from the existing ```LedgerList```."},{"lineNumber":418,"author":{"gitId":"kaiwen98"},"content":"|```CreateLedgerHandler```| Process ```paramTypes```-```param``` pairs from the ```CommandPacket``` instance to identify specified ```Ledger``` instance to be created, then creates the instance and append to existing ```LedgerList```."},{"lineNumber":419,"author":{"gitId":"kaiwen98"},"content":"|```retrieveEntryHandler```| Omitted for brevity."},{"lineNumber":420,"author":{"gitId":"kaiwen98"},"content":"|```CreateEntryHandler```| Omitted for brevity."},{"lineNumber":421,"author":{"gitId":"kaiwen98"},"content":"|```EditEntryHandler```| Omitted for brevity."},{"lineNumber":422,"author":{"gitId":"kaiwen98"},"content":"|```ParamChecker```| Class contains a collection of methods that verify the correctness of the ```param``` supplied. \u003cbr\u003e\u003cbr\u003e For instance, ```ParamChecker.checkAndReturnIndex``` checks if the index provided is out of bounds relative to the specified list, and throws the relevant exception if the input index is invalid. "},{"lineNumber":423,"author":{"gitId":"kaiwen98"},"content":"|```ParamHandler```| Abstract class that outlines the general param handling behavior of ```commands``` instances and other classes that need to handle ```params``` in its operation.  "},{"lineNumber":424,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":425,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":426,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d logicManager_handler\u003e \u003c/a\u003eLogic Manager and Handler** \u003cbr /\u003e"},{"lineNumber":427,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":428,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_Commands.png)"},{"lineNumber":429,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":430,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":431,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":432,"author":{"gitId":"kaiwen98"},"content":"|```RetrieveLedgerHandler```| [Refer to section](#handler_logic)."},{"lineNumber":433,"author":{"gitId":"kaiwen98"},"content":"|```CreateLedgerHandler```| [Refer to section](#handler_logic)."},{"lineNumber":434,"author":{"gitId":"kaiwen98"},"content":"|```retrieveEntryHandler```| Omitted for brevity."},{"lineNumber":435,"author":{"gitId":"kaiwen98"},"content":"|```CreateEntryHandler```| Omitted for brevity."},{"lineNumber":436,"author":{"gitId":"kaiwen98"},"content":"|```EditEntryHandler```| Omitted for brevity."},{"lineNumber":437,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| Implements Manual Tracker. Contains handler methods that implements a particular operation capable by the Manual Tracker. \u003cbr\u003e\u003cbr\u003e These methods use the above ```command``` instances for param handling operations from user input."},{"lineNumber":438,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":439,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":440,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":441,"author":{"gitId":"bqxy"},"content":"**Functions with Sequence Diagrams** \u003cbr /\u003e"},{"lineNumber":442,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":443,"author":{"gitId":"kaiwen98"},"content":"**Creation of Ledger([Sequence Diagram](#diag1))** \u003cbr /\u003e"},{"lineNumber":444,"author":{"gitId":"kaiwen98"},"content":"1. At ```ManualTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":445,"author":{"gitId":"kaiwen98"},"content":"1. Input is parsed by ```InputParser.parseInput()```, and ```ManualTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":446,"author":{"gitId":"kaiwen98"},"content":"1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr/\u003eIn this case, ```handleCreateLedger()``` will be called."},{"lineNumber":447,"author":{"gitId":"kaiwen98"},"content":"1. At `handleCreateLedger()`, the following processes will be executed:"},{"lineNumber":448,"author":{"gitId":"kaiwen98"},"content":"    1. A new instance of ```CreateLedgerHandler``` is created. The input String array will be passed into `CreateLedgerHandler.setRequiredParams()` to set required params for a successful parse."},{"lineNumber":449,"author":{"gitId":"kaiwen98"},"content":"    1. A new instance of `Ledger` will be instantiated and set to `CreateLedgerHandler.currLedger`."},{"lineNumber":450,"author":{"gitId":"kaiwen98"},"content":"    1. ```CreateLedgerHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":451,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#logic) for more details pertaining to general param handling. "},{"lineNumber":452,"author":{"gitId":"kaiwen98"},"content":"        1. For `CreateLedgerHandler`, the `handleSingleParam` abstract method will be implemented as shown in the [following table](#table1)."},{"lineNumber":453,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":454,"author":{"gitId":"kaiwen98"},"content":"1. From ```ManualTracker```, the configured ```Ledger``` instance will be retrieved from the ```CreateLedgerHandler``` instance"},{"lineNumber":455,"author":{"gitId":"kaiwen98"},"content":"and added into the ```LedgerList``` instance at ```ManualTracker.ledgerList```."},{"lineNumber":456,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":457,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d table1\u003e\u003c/a\u003e Param Handling Behavior__"},{"lineNumber":458,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":459,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":460,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":461,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DATE```|\"/date\"|Various format of date in string, eg. \"2020-03-02\"| Call ```currLedger.setDate()``` to set date for the ```Ledger``` instance. | ```ParamChecker.checkAndReturnDate(packet)```|"},{"lineNumber":462,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":463,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":464,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":465,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d diag1\u003e\u003c/a\u003e Sequence Diagram__"},{"lineNumber":466,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":467,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/manualTrackerCreateLedgerSeqDiagram.png)"},{"lineNumber":468,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":469,"author":{"gitId":"kaiwen98"},"content":"**Deletion of Ledger ([Sequence Diagram](#diag2))** \u003cbr /\u003e"},{"lineNumber":470,"author":{"gitId":"kaiwen98"},"content":"The deletion of a specified ledger is performed in two phases: Ledger Retrieval and Ledger Delete."},{"lineNumber":471,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":472,"author":{"gitId":"kaiwen98"},"content":"    1. At ```ManualTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":473,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```ManualTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":474,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":475,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleDeleteLedger()``` will be called."},{"lineNumber":476,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Ledger retrieval__"},{"lineNumber":477,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleDeleteLedger()```, the following processes will be executed:"},{"lineNumber":478,"author":{"gitId":"kaiwen98"},"content":"        1. A new instance of ```RetrieveLedgerHandler``` is created. The input String array will be passed into "},{"lineNumber":479,"author":{"gitId":"kaiwen98"},"content":"        ```CreateLedgerHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":480,"author":{"gitId":"kaiwen98"},"content":"        1. ```RetrieveledgerHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":481,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#logic) for more details pertaining to general param handling. "},{"lineNumber":482,"author":{"gitId":"kaiwen98"},"content":"            1. For ```CreateLedgerHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table2):"},{"lineNumber":483,"author":{"gitId":"kaiwen98"},"content":"                * Note that only one of the two params need to be invoked from the input. "},{"lineNumber":484,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Ledger Deletion__"},{"lineNumber":485,"author":{"gitId":"kaiwen98"},"content":"    1. From ```ManualTracker```, call ```ledgerList.RemoveItemAtCurrIndex()``` to remove the ledger specified by the index set to modify earlier."},{"lineNumber":486,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":487,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d table2\u003e\u003c/a\u003e Param Handling Behavior__"},{"lineNumber":488,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":489,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":490,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":491,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DATE```|\"/date\"|Various format of date in string, eg. \"2020-03-02\"| Call ```ledgerList.setIndexToModify()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDate(packet)```|"},{"lineNumber":492,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list from 1 onwards.|Call ```ledgerList.setIndexToModify()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":493,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":494,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":495,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":496,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d diag2\u003e\u003c/a\u003e Sequence Diagram__"},{"lineNumber":497,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":498,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/manualTrackerDeleteLedgerSeqDiagram.png)"},{"lineNumber":499,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":500,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":501,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":502,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d entryseq\u003e\u003c/a\u003eEntry Tracker: Edit of entries** \u003cbr /\u003e"},{"lineNumber":503,"author":{"gitId":"kaiwen98"},"content":"The editing of details within the entry is performed in two phases: Entry Retrieval and Entry Edit."},{"lineNumber":504,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":505,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram0.png)"},{"lineNumber":506,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":507,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":508,"author":{"gitId":"kaiwen98"},"content":"    1. At ```EntryTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":509,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```EntryTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":510,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":511,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleEditEntry()``` will be called."},{"lineNumber":512,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Entry retrieval([Sequence Diagram](#diag3))__"},{"lineNumber":513,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleEditEntry()```, the following processes will be executed:"},{"lineNumber":514,"author":{"gitId":"kaiwen98"},"content":"        1. A singleton instance of ```RetrieveEntryHandler``` is retrieved. The input String array will be passed into "},{"lineNumber":515,"author":{"gitId":"kaiwen98"},"content":"        ```retrieveEntryHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":516,"author":{"gitId":"kaiwen98"},"content":"        1. ```retrieveEntryHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":517,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#logic) for more details pertaining to general param handling. "},{"lineNumber":518,"author":{"gitId":"kaiwen98"},"content":"            1. For ```retrieveEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table3)."},{"lineNumber":519,"author":{"gitId":"kaiwen98"},"content":"            1. From ```EntryTracker```, call ```entryList.popItemAtCurrIndex``` to retrieve the entry specified by the index set to modify earlier."},{"lineNumber":520,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":521,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d table3\u003e\u003c/a\u003e Param Handling Behavior__"},{"lineNumber":522,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":523,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":524,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":525,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list \u003cbr/\u003efrom 1 onwards.|Call ```entryList.setIndexToModify()``` \u003cbr/\u003eto set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":526,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":527,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":528,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":529,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d diag3\u003e\u003c/a\u003e Sequence Diagram__ "},{"lineNumber":530,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":531,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram2.png)"},{"lineNumber":532,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":533,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Entry edit ([Sequence Diagram](#diag4))__ \u003cbr/\u003e"},{"lineNumber":534,"author":{"gitId":"kaiwen98"},"content":"    1. Following Phase 1, the following processes will be executed:"},{"lineNumber":535,"author":{"gitId":"kaiwen98"},"content":"        1. The singleton instance of ```EditEntryHandler``` is retrieved. There is no need to call ```EditEntryHandler.setRequiredParams()```"},{"lineNumber":536,"author":{"gitId":"kaiwen98"},"content":"        ; this command does not require params to modify. Instead, it acceps any params supplied and performs the edit accordingly."},{"lineNumber":537,"author":{"gitId":"kaiwen98"},"content":"        1. `editeEntryHandler.setPacket(packet)` is called to set packet."},{"lineNumber":538,"author":{"gitId":"kaiwen98"},"content":"    1. ```EditEntryHandler.handlePacket()``` is called to handle params in the packet."},{"lineNumber":539,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#logic) for more details pertaining to general param handling. "},{"lineNumber":540,"author":{"gitId":"kaiwen98"},"content":"        1. For ```EditEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table4)."},{"lineNumber":541,"author":{"gitId":"kaiwen98"},"content":"    1. The edited entry is added back into the list."},{"lineNumber":542,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":543,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d table4\u003e\u003c/a\u003e Param Handling Behavior__          "},{"lineNumber":544,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":545,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":546,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":547,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.AMOUNT```|\"/amt\"|Positive Double in 2 decimal places|Call ```entryList.setAmount()``` to set amount | ```ParamChecker.checkAndReturnDoubleSigned(packet)```|"},{"lineNumber":548,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.TIME```|\"/time\"|Various format of time in string, eg. \"15:00\"|Call ```entryList.setTime()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnTime(packet)```|"},{"lineNumber":549,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INC```|\"-i\"|Income entry type flag|Call ```entryList.setEntryType(EntryType.INC)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":550,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.EXP```|\"-e\"|Expense entry type flag|Call ```entryList.setEntryType(EntryType.EXP)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":551,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DESCRIPTION```|\"/desc\"|Description in string, \u0027;\u0027 character is illegal.|Call ```entryList.setDescription()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDescription(packet)```|"},{"lineNumber":552,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.CATEGORY```|\"/cat\"|A set of strings that corresponds with entry type|Call ```entryList.setCategory()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnCategories(packet)```|"},{"lineNumber":553,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":554,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":555,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":556,"author":{"gitId":"kaiwen98"},"content":"__\u003ca name \u003d diag4\u003e\u003c/a\u003e Sequence Diagram__"},{"lineNumber":557,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":558,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram3.png)"},{"lineNumber":559,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":560,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":561,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":562,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":563,"author":{"gitId":"kaiwen98"},"content":"### Recurring Tracker"},{"lineNumber":564,"author":{"gitId":"bqxy"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":565,"author":{"gitId":"Artemis-Hunt"},"content":"Recurring Tracker handles the creation, deletion and editing of recurring entries."},{"lineNumber":566,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":567,"author":{"gitId":"Artemis-Hunt"},"content":"Entries use the class ```RecurringEntry```, and are stored in the ```RecurringEntryList``` class."},{"lineNumber":568,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":569,"author":{"gitId":"Artemis-Hunt"},"content":"`RecurringEntry` has the following attributes:"},{"lineNumber":570,"author":{"gitId":"Artemis-Hunt"},"content":"* `day` - The day which the transaction occurs"},{"lineNumber":571,"author":{"gitId":"Artemis-Hunt"},"content":"* `description`"},{"lineNumber":572,"author":{"gitId":"Artemis-Hunt"},"content":"* `entryType` - Can be `Constants.EntryType.INC` or `Constants.EntryType.INC` "},{"lineNumber":573,"author":{"gitId":"Artemis-Hunt"},"content":"depending on whether the entry is an income or expenditure respectively."},{"lineNumber":574,"author":{"gitId":"Artemis-Hunt"},"content":"* `amount`"},{"lineNumber":575,"author":{"gitId":"Artemis-Hunt"},"content":"* `start` and `end` - Which months does the entry apply to. Set to 1 and 12 by "},{"lineNumber":576,"author":{"gitId":"Artemis-Hunt"},"content":"default (i.e. occurs every month)"},{"lineNumber":577,"author":{"gitId":"Artemis-Hunt"},"content":"    * [Proposed] Start-end month feature: User is able to set start and end months. "},{"lineNumber":578,"author":{"gitId":"Artemis-Hunt"},"content":"    Reminders will not be generated for months in which entry does not occur."},{"lineNumber":579,"author":{"gitId":"Artemis-Hunt"},"content":"* `isAuto` - Indicates whether the entry is automatically deducted/credited from/to account, "},{"lineNumber":580,"author":{"gitId":"Artemis-Hunt"},"content":"or manually deducted/credited from/to account. Causes entry to be displayed differently to the user, "},{"lineNumber":581,"author":{"gitId":"Artemis-Hunt"},"content":"but does not cause different functionality."},{"lineNumber":582,"author":{"gitId":"Artemis-Hunt"},"content":"* `notes` - Any user-specified notes"},{"lineNumber":583,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":584,"author":{"gitId":"Artemis-Hunt"},"content":"`RecurringEntryList` extends ItemList, and supports the following methods on top of inherited methods"},{"lineNumber":585,"author":{"gitId":"Artemis-Hunt"},"content":"* `addItem(Item)` - Override. Adds item and sorts according to the day in ascending order"},{"lineNumber":586,"author":{"gitId":"Artemis-Hunt"},"content":"* `getEntriesFromDayXtoY` - Returns an ArrayList of all entries that fall between day X and Y "},{"lineNumber":587,"author":{"gitId":"Artemis-Hunt"},"content":"(provided by developer in the code, not by user). Used for reminders."},{"lineNumber":588,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":589,"author":{"gitId":"Artemis-Hunt"},"content":"![](uml_images/images_updated/recurringTrackerClassDiagram.png)"},{"lineNumber":590,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":591,"author":{"gitId":"Artemis-Hunt"},"content":"**Logic Manager and Handler**"},{"lineNumber":592,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":593,"author":{"gitId":"Artemis-Hunt"},"content":"`RecurringTracker`, like `EntryTracker`, utilizes 3 handlers - `CreateEntryHandler`, `EditEntryHandler` and `RetrieveEntryHandler`."},{"lineNumber":594,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":595,"author":{"gitId":"Artemis-Hunt"},"content":"**`handleCreateEntry()`**"},{"lineNumber":596,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":597,"author":{"gitId":"Artemis-Hunt"},"content":"* Entry creation is handled by `CreateEntryHandler`, who will create an empty RecurringEntry,"},{"lineNumber":598,"author":{"gitId":"Artemis-Hunt"},"content":"call `ParamChecker` to verify validity of input, and set the relevant fields in the RecurringEntry."},{"lineNumber":599,"author":{"gitId":"Artemis-Hunt"},"content":"* Finally, it returns the filled entry back to RecurringTracker to add to the list."},{"lineNumber":600,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":601,"author":{"gitId":"Artemis-Hunt"},"content":"Below are the compulsory params; an Exception will be thrown by `CreateEntryHandler` if not all are present."},{"lineNumber":602,"author":{"gitId":"Artemis-Hunt"},"content":"* \"-e\" or \"-i\""},{"lineNumber":603,"author":{"gitId":"Artemis-Hunt"},"content":"* \"/desc\""},{"lineNumber":604,"author":{"gitId":"Artemis-Hunt"},"content":"* \"/amt\" "},{"lineNumber":605,"author":{"gitId":"Artemis-Hunt"},"content":"* \"/day\""},{"lineNumber":606,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":607,"author":{"gitId":"Artemis-Hunt"},"content":"Optional params are"},{"lineNumber":608,"author":{"gitId":"Artemis-Hunt"},"content":"* \"-auto\""},{"lineNumber":609,"author":{"gitId":"Artemis-Hunt"},"content":"* \"/notes\""},{"lineNumber":610,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":611,"author":{"gitId":"Artemis-Hunt"},"content":"The following sequence diagram illustrates the process:"},{"lineNumber":612,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":613,"author":{"gitId":"Artemis-Hunt"},"content":"![](uml_images/images_updated/recurringTrackerCreateEntrySeqDiagram.png)"},{"lineNumber":614,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":615,"author":{"gitId":"Artemis-Hunt"},"content":"**`handleDeleteEntry()`**"},{"lineNumber":616,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":617,"author":{"gitId":"Artemis-Hunt"},"content":"The only compulsory param is `/id`, the 1-based index of the item to delete."},{"lineNumber":618,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":619,"author":{"gitId":"Artemis-Hunt"},"content":"* Uses `RetrieveEntryHandler`, who will call `ParamChecker` to verify"},{"lineNumber":620,"author":{"gitId":"Artemis-Hunt"},"content":"that a valid index was provided. "},{"lineNumber":621,"author":{"gitId":"Artemis-Hunt"},"content":"* The handler will then remove the entry at the given index"},{"lineNumber":622,"author":{"gitId":"Artemis-Hunt"},"content":"by calling `entries#removeItemAtCurrIndex()`."},{"lineNumber":623,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":624,"author":{"gitId":"Artemis-Hunt"},"content":"**`handleEditEntry()`**"},{"lineNumber":625,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":626,"author":{"gitId":"Artemis-Hunt"},"content":"Compulsory params are \"/id\" and at least one other param to edit "},{"lineNumber":627,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":628,"author":{"gitId":"Artemis-Hunt"},"content":"* `RetrieveEntryHandler` is first called to retrieve the entry to be edited, similar to what "},{"lineNumber":629,"author":{"gitId":"Artemis-Hunt"},"content":"occurs in `handleDeleteEntry()."},{"lineNumber":630,"author":{"gitId":"Artemis-Hunt"},"content":"* `EditEntryHandler` is then called to operate on the given entry. The overall process is "},{"lineNumber":631,"author":{"gitId":"Artemis-Hunt"},"content":"similar to that of `handleCreateEntry()`, which is illustrated in the above sequence diagram,"},{"lineNumber":632,"author":{"gitId":"Artemis-Hunt"},"content":"with the only difference being that there can be any number of paramTypes in the command packet"},{"lineNumber":633,"author":{"gitId":"Artemis-Hunt"},"content":"depending on how many fields the user wishes to change."},{"lineNumber":634,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":635,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":636,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":637,"author":{"gitId":"bqxy"},"content":"**Reminders** \u003cbr /\u003e"},{"lineNumber":638,"author":{"gitId":"Artemis-Hunt"},"content":"Upon launching the program, the system date and time is recorded in `RunHistory`."},{"lineNumber":639,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":640,"author":{"gitId":"Artemis-Hunt"},"content":"The program then checks if there are any entries upcoming within 5 days from the current date, and prints the entries out"},{"lineNumber":641,"author":{"gitId":"Artemis-Hunt"},"content":"as reminders."},{"lineNumber":642,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":643,"author":{"gitId":"Artemis-Hunt"},"content":"1. Main code calls `MenuPrinter#printReminders()`, which in turn calls "},{"lineNumber":644,"author":{"gitId":"Artemis-Hunt"},"content":"`ReminderListGenerator#generateListOfRemindersAsStrings()`. "},{"lineNumber":645,"author":{"gitId":"Artemis-Hunt"},"content":"1. `ReminderListGenerator` checks the current date, and calculates the day of month which is 5 days from current date."},{"lineNumber":646,"author":{"gitId":"Artemis-Hunt"},"content":"This is stored in `dayToRemindUntil`."},{"lineNumber":647,"author":{"gitId":"Artemis-Hunt"},"content":"1. `ReminderListGenerator` then checks if `dayToRemindUntil` is after the last day of the current month. If it is,"},{"lineNumber":648,"author":{"gitId":"Artemis-Hunt"},"content":"then the reminder timeframe will overflow to the next month. "},{"lineNumber":649,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":650,"author":{"gitId":"Artemis-Hunt"},"content":"    For example:"},{"lineNumber":651,"author":{"gitId":"Artemis-Hunt"},"content":"    * Current date is 29th October. There are 31 days in October. 5 days after today is 34th, "},{"lineNumber":652,"author":{"gitId":"Artemis-Hunt"},"content":"    which is beyond last day of October."},{"lineNumber":653,"author":{"gitId":"Artemis-Hunt"},"content":"    * Reminder timeframe will overflow to next month, until 3rd of November"},{"lineNumber":654,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":655,"author":{"gitId":"Artemis-Hunt"},"content":"1. If it has overflown, set `isOverflowToNextMonth` to true. Subtract the last day of month from `dayToRemindUntil`."},{"lineNumber":656,"author":{"gitId":"Artemis-Hunt"},"content":"The new value of `dayToRemindUntil` is the day of next month that the reminder timeframe extends to."},{"lineNumber":657,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":658,"author":{"gitId":"Artemis-Hunt"},"content":"    For example:"},{"lineNumber":659,"author":{"gitId":"Artemis-Hunt"},"content":"    * Continuing from example earlier, `dayToRemindUntil \u003d 34`."},{"lineNumber":660,"author":{"gitId":"Artemis-Hunt"},"content":"    * `dayToRemindUntil -\u003d NUM_DAYS_IN_OCT`, i.e. 34 - 31"},{"lineNumber":661,"author":{"gitId":"Artemis-Hunt"},"content":"    * `dayToRemindUntil \u003d 3`, representing that the reminder timeframe extends to 3rd of November"},{"lineNumber":662,"author":{"gitId":"Artemis-Hunt"},"content":"1. `ReminderListGenerator` then grabs the entries within the reminder timeframe from the list of all recurring entries."},{"lineNumber":663,"author":{"gitId":"Artemis-Hunt"},"content":"    * If `isOverflowToNextMonth \u003d\u003d true`, it will grab all entries from `currentDay` to `lastDayOfMonth` "},{"lineNumber":664,"author":{"gitId":"Artemis-Hunt"},"content":"    and all entries from `1` (1st day of next month) to `dayToRemindUntil`"},{"lineNumber":665,"author":{"gitId":"Artemis-Hunt"},"content":"    * Else, it will simply grab all entries from `currentDay` to `dayToRemindUntil`"},{"lineNumber":666,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":667,"author":{"gitId":"Artemis-Hunt"},"content":"1. Lastly, the list of entries will be converted to a formatted String to be displayed as reminders, and passed back"},{"lineNumber":668,"author":{"gitId":"Artemis-Hunt"},"content":"to `MenuPrinter`, who will pass it to `UiManager` to print."},{"lineNumber":669,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":670,"author":{"gitId":"Artemis-Hunt"},"content":"The sequence diagram below shows how it works:"},{"lineNumber":671,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":672,"author":{"gitId":"Artemis-Hunt"},"content":"![](uml_images/recurringtracker/images/reminderSeqDiagram.png)"},{"lineNumber":673,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":674,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":675,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":676,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":677,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":678,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author bqxy --\u003e"},{"lineNumber":679,"author":{"gitId":"bqxy"},"content":"### FinanceTools"},{"lineNumber":680,"author":{"gitId":"bqxy"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":681,"author":{"gitId":"bqxy"},"content":"FinanceTools consists of the following features"},{"lineNumber":682,"author":{"gitId":"bqxy"},"content":"1. Simple Interest Calculator"},{"lineNumber":683,"author":{"gitId":"bqxy"},"content":"2. Yearly/Monthly Compound Interest Calculator"},{"lineNumber":684,"author":{"gitId":"bqxy"},"content":"3. Cashback Calculator"},{"lineNumber":685,"author":{"gitId":"bqxy"},"content":"4. Miles Credit Calculator"},{"lineNumber":686,"author":{"gitId":"bqxy"},"content":"6. Account Storage"},{"lineNumber":687,"author":{"gitId":"bqxy"},"content":"7. Command and Calculation History"},{"lineNumber":688,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":689,"author":{"gitId":"bqxy"},"content":"**Simple Interest Calculator** \u003cbr /\u003e"},{"lineNumber":690,"author":{"gitId":"bqxy"},"content":"Simple Interest Calculator is facilitated by ```SimpleInterest``` class. It allows user to calculate interest earned."},{"lineNumber":691,"author":{"gitId":"bqxy"},"content":"When user inputs ```simple``` as a command, ```handleSimpleInterest``` from ```Handler``` class will handle user"},{"lineNumber":692,"author":{"gitId":"bqxy"},"content":"inputted parameters. The calculation is done by ```SimpleInterest``` class. The result is outputted in"},{"lineNumber":693,"author":{"gitId":"bqxy"},"content":"```FinanceTools.main()```."},{"lineNumber":694,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":695,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":696,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":697,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":698,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Interest Rate (Mandatory)"},{"lineNumber":699,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":700,"author":{"gitId":"bqxy"},"content":"The following class diagram shows how the Simple Interest Calculator feature works:"},{"lineNumber":701,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":702,"author":{"gitId":"bqxy"},"content":"![ClassDiagram](uml_images/financetools/SimpleInterest/SimpleInterestClassDiagram.png)"},{"lineNumber":703,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":704,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the params are handled before the implementation is carried out:"},{"lineNumber":705,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":706,"author":{"gitId":"bqxy"},"content":"For more information on parameters handling, refer [here](#implementation)."},{"lineNumber":707,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/SimpleInterest/SimpleInterestSequenceDiagram(1).png)"},{"lineNumber":708,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":709,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":710,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the Simple Interest Calculator feature works:"},{"lineNumber":711,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":712,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram2](uml_images/financetools/SimpleInterest/SimpleInterestSequenceDiagram(2).png)"},{"lineNumber":713,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":714,"author":{"gitId":"bqxy"},"content":"**Yearly/Monthly Compound Interest Calculator** \u003cbr /\u003e"},{"lineNumber":715,"author":{"gitId":"bqxy"},"content":"Yearly/Monthly Compound Interest Calculator is facilitated by ```YearlyCompoundInterest``` /"},{"lineNumber":716,"author":{"gitId":"bqxy"},"content":"```MonthlyCompoundInterest``` class. It allows user to calculate interest earned."},{"lineNumber":717,"author":{"gitId":"bqxy"},"content":"When user inputs ```cyearly``` / ```cmonthly``` as a command, ```handleYearlyCompoundInterest``` /"},{"lineNumber":718,"author":{"gitId":"bqxy"},"content":"```handleMonthlyCompoundInterest``` from ```Handler``` class will handle user inputted parameters. The calculation "},{"lineNumber":719,"author":{"gitId":"bqxy"},"content":"is done by ```YearlyCompoundInterest``` / ```MonthlyCompoundInterest``` class. The result is outputted in"},{"lineNumber":720,"author":{"gitId":"bqxy"},"content":"```FinanceTools.main()```."},{"lineNumber":721,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":722,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":723,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":724,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":725,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":726,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Interest Rate (Mandatory)"},{"lineNumber":727,"author":{"gitId":"bqxy"},"content":"* ```/p``` - Number of Years/Months (Mandatory)"},{"lineNumber":728,"author":{"gitId":"bqxy"},"content":"* ```/d``` - Yearly/Monthly Deposit (Optional)"},{"lineNumber":729,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":730,"author":{"gitId":"bqxy"},"content":"The following class diagram shows how the Yearly/Monthly Compound Interest Calculator feature works:"},{"lineNumber":731,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":732,"author":{"gitId":"bqxy"},"content":"![ClassDiagram1](uml_images/financetools/YearlyMonthlyCompoundInterest/YearlyCompoundInterestClassDiagram.png)"},{"lineNumber":733,"author":{"gitId":"bqxy"},"content":"![ClassDiagram2](uml_images/financetools/YearlyMonthlyCompoundInterest/MonthlyCompoundInterestClassDiagram.png)"},{"lineNumber":734,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":735,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the params are handled before the implementation is carried out:"},{"lineNumber":736,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":737,"author":{"gitId":"bqxy"},"content":"For more information on parameters handling, refer [here](#implementation)."},{"lineNumber":738,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/YearlyMonthlyCompoundInterest/YearlyCompoundInterestSequenceDiagram(1).png)"},{"lineNumber":739,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":740,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":741,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/YearlyMonthlyCompoundInterest/MonthlyCompoundInterestSequenceDiagram(1).png)"},{"lineNumber":742,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":743,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":744,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the Yearly/Monthly Compound Interest Calculator feature works:"},{"lineNumber":745,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":746,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/YearlyMonthlyCompoundInterest/YearlyCompoundInterestSequenceDiagram(2).png)"},{"lineNumber":747,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":748,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":749,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/YearlyMonthlyCompoundInterest/MonthlyCompoundInterestSequenceDiagram(2).png)"},{"lineNumber":750,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":751,"author":{"gitId":"bqxy"},"content":"**Cashback Calculator** \u003cbr /\u003e"},{"lineNumber":752,"author":{"gitId":"bqxy"},"content":"Cashback Calculator is facilitated by ```Cashback``` class. It allows user to calculate cashback earned."},{"lineNumber":753,"author":{"gitId":"bqxy"},"content":"When user inputs ```cashb``` as a command, ```handleCashback``` from ```Handler``` class will handle user"},{"lineNumber":754,"author":{"gitId":"bqxy"},"content":"inputted parameters. The calculation is done by ```Cashback``` class. The result is outputted in"},{"lineNumber":755,"author":{"gitId":"bqxy"},"content":"```FinanceTools.main()```."},{"lineNumber":756,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":757,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":758,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":759,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":760,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Cashback Rate (Mandatory)"},{"lineNumber":761,"author":{"gitId":"bqxy"},"content":"* ```/c``` - Cashback Cap (Mandatory)"},{"lineNumber":762,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":763,"author":{"gitId":"bqxy"},"content":"The following class diagram shows how the Cashback Calculator feature works:"},{"lineNumber":764,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":765,"author":{"gitId":"bqxy"},"content":"![ClassDiagram](uml_images/financetools/Cashback/CashbackClassDiagram.png)"},{"lineNumber":766,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":767,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the params are handled before the implementation is carried out:"},{"lineNumber":768,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":769,"author":{"gitId":"bqxy"},"content":"For more information on parameters handling, refer [here](#implementation)."},{"lineNumber":770,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/Cashback/CashbackSequenceDiagram(1).png)"},{"lineNumber":771,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":772,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":773,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the Cashback Calculator feature works:"},{"lineNumber":774,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":775,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram2](uml_images/financetools/Cashback/CashbackSequenceDiagram(2).png)"},{"lineNumber":776,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":777,"author":{"gitId":"bqxy"},"content":"**Miles Credit Calculator** \u003cbr /\u003e"},{"lineNumber":778,"author":{"gitId":"bqxy"},"content":"Miles Credit Calculator is facilitated by ```MilesCredit``` class. It allows user to calculate miles credit earned."},{"lineNumber":779,"author":{"gitId":"bqxy"},"content":"When user inputs ```miles``` as a command, ```handleMilesCredit``` from ```Handler``` class will handle user"},{"lineNumber":780,"author":{"gitId":"bqxy"},"content":"inputted parameters. The calculation is done by ```MilesCredit``` class. The result is outputted in"},{"lineNumber":781,"author":{"gitId":"bqxy"},"content":"```FinanceTools.main()```."},{"lineNumber":782,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":783,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":784,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":785,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":786,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Miles Rate (Mandatory)"},{"lineNumber":787,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":788,"author":{"gitId":"bqxy"},"content":"The following class diagram shows how the Miles Credit Calculator feature works:"},{"lineNumber":789,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":790,"author":{"gitId":"bqxy"},"content":"![ClassDiagram](uml_images/financetools/MilesCredit/MilesCreditClassDiagram.png)"},{"lineNumber":791,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":792,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the params are handled before the implementation is carried out:"},{"lineNumber":793,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":794,"author":{"gitId":"bqxy"},"content":"For more information on parameters handling, refer [here](#implementation)."},{"lineNumber":795,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/MilesCredit/MilesCreditSequenceDiagram(1).png)"},{"lineNumber":796,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":797,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":798,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the Miles Creidt Calculator feature works:"},{"lineNumber":799,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":800,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram2](uml_images/financetools/MilesCredit/MilesCreditSequenceDiagram(2).png)"},{"lineNumber":801,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":802,"author":{"gitId":"bqxy"},"content":"**Account Storage** \u003cbr /\u003e"},{"lineNumber":803,"author":{"gitId":"bqxy"},"content":"Account Storage feature is facilitated by ```AccountStorage``` class. It allows user to store account"},{"lineNumber":804,"author":{"gitId":"bqxy"},"content":"information such as name of account, interest rate, cashback rate, etc. When user inputs ```store``` as command,"},{"lineNumber":805,"author":{"gitId":"bqxy"},"content":"```handleAccountStorage``` from ```Handler``` class will handle user inputted parameters and store information "},{"lineNumber":806,"author":{"gitId":"bqxy"},"content":"accordingly. The implementation is done by ```handleInfoStorage``` from ```AccountStorage``` class. Afterwards, this "},{"lineNumber":807,"author":{"gitId":"bqxy"},"content":"information is stored into a txt file which is done by ```updateFile``` from ```AccountSaver``` class."},{"lineNumber":808,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":809,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":810,"author":{"gitId":"bqxy"},"content":"Additionally, it implements the following operations:"},{"lineNumber":811,"author":{"gitId":"bqxy"},"content":"* ```info``` - list account(s) information"},{"lineNumber":812,"author":{"gitId":"bqxy"},"content":"* ```clearinfo``` - clear all information"},{"lineNumber":813,"author":{"gitId":"bqxy"},"content":"* ```store /rm \u003cACCOUNT_NO\u003e``` - delete corresponding account number in list"},{"lineNumber":814,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":815,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":816,"author":{"gitId":"bqxy"},"content":"* ```/n``` - Account Name (Optional)"},{"lineNumber":817,"author":{"gitId":"bqxy"},"content":"* ```/ir``` - Interest Rate (Optional)"},{"lineNumber":818,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Cashback Rate (Optional)"},{"lineNumber":819,"author":{"gitId":"bqxy"},"content":"* ```/c``` - Cashback Cap (Optional)"},{"lineNumber":820,"author":{"gitId":"bqxy"},"content":"* ```/o``` - Other Notes (Optional)"},{"lineNumber":821,"author":{"gitId":"bqxy"},"content":"* ```/rm``` - Account Number (Optional)"},{"lineNumber":822,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":823,"author":{"gitId":"bqxy"},"content":"**Details** \u003cbr /\u003e"},{"lineNumber":824,"author":{"gitId":"bqxy"},"content":"```handleInfoStorage``` stores the user inputted information into an ```ArrayList``` which is then passed into"},{"lineNumber":825,"author":{"gitId":"bqxy"},"content":"```updateFile``` to update the txt file. The purpose of using txt file is so that when the user exits and enters the"},{"lineNumber":826,"author":{"gitId":"bqxy"},"content":"program again, the information is retained, and the user does not have to re-enter the account information(s) again."},{"lineNumber":827,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":828,"author":{"gitId":"bqxy"},"content":" "},{"lineNumber":829,"author":{"gitId":"bqxy"},"content":"When user first enters FinanceTools in the program, ```readFileContents``` reads 5 lines in the txt file consecutively"},{"lineNumber":830,"author":{"gitId":"bqxy"},"content":"in a ```while``` loop because these 5 lines consists of information that belong to a particular account. These"},{"lineNumber":831,"author":{"gitId":"bqxy"},"content":"categories include: Name, Interest Rate, Cashback Rate, Cashback Cap and Notes\". Doing so helps to facilitate"},{"lineNumber":832,"author":{"gitId":"bqxy"},"content":"the ```delete``` option where instead of deleting single lines, we can delete the entire account information"},{"lineNumber":833,"author":{"gitId":"bqxy"},"content":"which correspond to a particular account because the information is stored in one index of the ```ArrayList```."},{"lineNumber":834,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":835,"author":{"gitId":"bqxy"},"content":" "},{"lineNumber":836,"author":{"gitId":"bqxy"},"content":"The following class diagram shows how the Account Storage feature works:"},{"lineNumber":837,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":838,"author":{"gitId":"bqxy"},"content":"![ClassDiagram](uml_images/financetools/AccountStorage/AccountStorageClassDiagram.png)"},{"lineNumber":839,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":840,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the params are handled before the implementation is carried out:"},{"lineNumber":841,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":842,"author":{"gitId":"bqxy"},"content":"For more information on parameters handling, refer [here](#implementation)."},{"lineNumber":843,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram1](uml_images/financetools/AccountStorage/AccountStorageSequenceDiagram(1).png)"},{"lineNumber":844,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":845,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":846,"author":{"gitId":"bqxy"},"content":"The following sequence diagram shows how the Account Storage feature works:"},{"lineNumber":847,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":848,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":849,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram2](uml_images/financetools/AccountStorage/AccountStorageSequenceDiagram(2).png)"},{"lineNumber":850,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":851,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":852,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":853,"author":{"gitId":"bqxy"},"content":"![SequenceDiagram3](uml_images/financetools/AccountStorage/AccountStorageSequenceDiagram(3).png)"},{"lineNumber":854,"author":{"gitId":"bqxy"},"content":" "},{"lineNumber":855,"author":{"gitId":"bqxy"},"content":"**Command and Calculation History** \u003cbr /\u003e"},{"lineNumber":856,"author":{"gitId":"bqxy"},"content":"To store the commands inputted by user and results from calculations in FinanceTools, an ```ArrayList``` is used."},{"lineNumber":857,"author":{"gitId":"bqxy"},"content":"The commands are stored in the ```ArrayList``` before the params are handled and implementation is executed. "},{"lineNumber":858,"author":{"gitId":"bqxy"},"content":"The results from calculation is stored in the ```ArrayList``` when the implementation has finished executed."},{"lineNumber":859,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":860,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":861,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":862,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author--\u003e"},{"lineNumber":863,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":864,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":865,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":866,"author":{"gitId":"kaiwen98"},"content":"### Goal Tracker"},{"lineNumber":867,"author":{"gitId":"bqxy"},"content":"**Set Expense Goal Feature** \u003cbr /\u003e"},{"lineNumber":868,"author":{"gitId":"dixoncwc"},"content":"The set expense goal feature is being implemented by ```GoalTracker```. It allows the user to set an expense goal for"},{"lineNumber":869,"author":{"gitId":"dixoncwc"},"content":"the respective month to ensure that the user does not overspent his budget. "},{"lineNumber":870,"author":{"gitId":"dixoncwc"},"content":"When user enter ```expense 2000 for 08```, the command will be sent to InputParser and parse it into String[]."},{"lineNumber":871,"author":{"gitId":"dixoncwc"},"content":"With the String[], it will be sent to a class called ```Goal```, and it will store the individual information."},{"lineNumber":872,"author":{"gitId":"dixoncwc"},"content":"Afterwards, it will be added to a ArrayList in a class called ```TotalGoalList```. "},{"lineNumber":873,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":874,"author":{"gitId":"dixoncwc"},"content":"Not only that, ```GoalTracker``` also implemented a feature called ```set income goal``` that works almost the same as "},{"lineNumber":875,"author":{"gitId":"dixoncwc"},"content":"set expense goal feature with just slight command difference."},{"lineNumber":876,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":877,"author":{"gitId":"dixoncwc"},"content":" `Format:`"},{"lineNumber":878,"author":{"gitId":"dixoncwc"},"content":"* setExpenseGoal: expense 5000 for 08"},{"lineNumber":879,"author":{"gitId":"dixoncwc"},"content":"* setIncomeGoal: income 5000 for 08"},{"lineNumber":880,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":881,"author":{"gitId":"bqxy"},"content":"**Details** \u003cbr /\u003e"},{"lineNumber":882,"author":{"gitId":"dixoncwc"},"content":"Firstly, user will input the command based on the `Format`."},{"lineNumber":883,"author":{"gitId":"dixoncwc"},"content":"Secondly, the input command will be sent to InputParser to parse."},{"lineNumber":884,"author":{"gitId":"dixoncwc"},"content":"Thirdly, the parsed information will be sent to class `Goal` to store the individual information"},{"lineNumber":885,"author":{"gitId":"dixoncwc"},"content":"Next, it will be added to a ArrayList in class `TotalGoalList`."},{"lineNumber":886,"author":{"gitId":"dixoncwc"},"content":"Lastly, the goal status will be displayed to the user.  "},{"lineNumber":887,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":888,"author":{"gitId":"dixoncwc"},"content":"This class diagram will show how the setting of expense goal works:"},{"lineNumber":889,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":890,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":891,"author":{"gitId":"bqxy"},"content":"![ExpenseClassDiagram](uml_images/goaltracker/SetExpenseGoalClassDiagram.png)"},{"lineNumber":892,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":893,"author":{"gitId":"dixoncwc"},"content":"This sequence diagram will show the flow of setting of expense goal:"},{"lineNumber":894,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":895,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":896,"author":{"gitId":"bqxy"},"content":"![ExpenseSequenceDiagram](uml_images/goaltracker/SetExpenseGoalSequenceDiagram.png)"},{"lineNumber":897,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":898,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":899,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":900,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":901,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":902,"author":{"gitId":"kaiwen98"},"content":"### Storage Utility"},{"lineNumber":903,"author":{"gitId":"bqxy"},"content":"**What it does** \u003cbr /\u003e"},{"lineNumber":904,"author":{"gitId":"Feudalord"},"content":"Storage utility is a tool designed for backup and storage of all data associated with Goal tracker, Manual tracker and recurring tracker."},{"lineNumber":905,"author":{"gitId":"Feudalord"},"content":"It performs auto loading and saving of data upon entry and exit of the program as well as allowing multiple saves to be created and loaded"},{"lineNumber":906,"author":{"gitId":"Feudalord"},"content":"at will."},{"lineNumber":907,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":908,"author":{"gitId":"bqxy"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":909,"author":{"gitId":"Feudalord"},"content":"Storage utility contains 5 classes. SaveHandler class contains some commonly used functions such as buildFile that is inherited to the 3"},{"lineNumber":910,"author":{"gitId":"Feudalord"},"content":"saver child classes. goalTrackerSaver produce text file to save goalTracker states, autoTrackerSaver saves recurringTracker states and"},{"lineNumber":911,"author":{"gitId":"Feudalord"},"content":"manualTrackerSaver saves manualTracker states."},{"lineNumber":912,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":913,"author":{"gitId":"bqxy"},"content":"**Save Manager Class Diagram** \u003cbr /\u003e"},{"lineNumber":914,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":915,"author":{"gitId":"Feudalord"},"content":"![SaveManagerClassDiagram](uml_images/saveManager/SaveManagerClass.png)"},{"lineNumber":916,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":917,"author":{"gitId":"Feudalord"},"content":"Saver classes alone can handle autosave of data during entry and when exiting the program. This is done by calling load and save functions"},{"lineNumber":918,"author":{"gitId":"Feudalord"},"content":"in the Financit main. saveManager class adds additional features that performs adding and loading of backup saves. addSave function is done"},{"lineNumber":919,"author":{"gitId":"Feudalord"},"content":"by calling save function in each respective saver class with 2 parameters attached. Since save function is implemented as variable argument"},{"lineNumber":920,"author":{"gitId":"Feudalord"},"content":"function, it is designed to accept no argument or two arguments. For the case with no argument the function will save to the default location"},{"lineNumber":921,"author":{"gitId":"Feudalord"},"content":"given during initilization of the program and used for loading during startup and saving upon exit. For the case with two argument, new directory "},{"lineNumber":922,"author":{"gitId":"Feudalord"},"content":"location is specified that is used for saving of backup data."},{"lineNumber":923,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":924,"author":{"gitId":"Feudalord"},"content":"saveManager loadSave function was implemented by calling first the clear function in each respective saver classes, then the load functions."},{"lineNumber":925,"author":{"gitId":"Feudalord"},"content":"FileChannel is also used to copy contents of the backup save file into the default initilzation save file in case program was unexpectedly"},{"lineNumber":926,"author":{"gitId":"Feudalord"},"content":"terminated."},{"lineNumber":927,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":928,"author":{"gitId":"bqxy"},"content":"**Save Manager Sequence Diagram** \u003cbr /\u003e"},{"lineNumber":929,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":930,"author":{"gitId":"Feudalord"},"content":"![SaveManagerSequenceDiagram](uml_images/saveManager/SequenceSaveManager.png)"},{"lineNumber":931,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":932,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":933,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":934,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":935,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":936,"author":{"gitId":"bqxy"},"content":"# Product scope"},{"lineNumber":937,"author":{"gitId":"bqxy"},"content":"## Target user profile"},{"lineNumber":938,"author":{"gitId":"-"},"content":""},{"lineNumber":939,"author":{"gitId":"Artemis-Hunt"},"content":"* has a need to keep track of their expenditure and income"},{"lineNumber":940,"author":{"gitId":"Artemis-Hunt"},"content":"* needs a tool to calculate interest earned and cashback amounts"},{"lineNumber":941,"author":{"gitId":"Artemis-Hunt"},"content":"* prefers CLI over a GUI app"},{"lineNumber":942,"author":{"gitId":"Artemis-Hunt"},"content":"* can type fast"},{"lineNumber":943,"author":{"gitId":"-"},"content":""},{"lineNumber":944,"author":{"gitId":"bqxy"},"content":"## Value proposition"},{"lineNumber":945,"author":{"gitId":"-"},"content":" "},{"lineNumber":946,"author":{"gitId":"kaiwen98"},"content":"**ManualTracker and EntryTracker**"},{"lineNumber":947,"author":{"gitId":"kaiwen98"},"content":"* Input itemised spending on a daily basis."},{"lineNumber":948,"author":{"gitId":"kaiwen98"},"content":"* Summarise the daily expenditure."},{"lineNumber":949,"author":{"gitId":"kaiwen98"},"content":"* Categorise expenditures (e.g. food, transport etc) "},{"lineNumber":950,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":951,"author":{"gitId":"kaiwen98"},"content":"**GoalTracker**"},{"lineNumber":952,"author":{"gitId":"dixoncwc"},"content":"* Set a budget (monthly)"},{"lineNumber":953,"author":{"gitId":"dixoncwc"},"content":"* Remind users of how much budget they have left for that month"},{"lineNumber":954,"author":{"gitId":"dixoncwc"},"content":"* Edit the budget (monthly)"},{"lineNumber":955,"author":{"gitId":"dixoncwc"},"content":"* Display the budget for that month"},{"lineNumber":956,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":957,"author":{"gitId":"kaiwen98"},"content":"**RecurringTracker**"},{"lineNumber":958,"author":{"gitId":"Artemis-Hunt"},"content":"* Keep track of expenditure/income that occur on a monthly basis e.g. bills and income"},{"lineNumber":959,"author":{"gitId":"Artemis-Hunt"},"content":"* Remind users of upcoming entries, e.g. a bill payment which is due tomorrow"},{"lineNumber":960,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":961,"author":{"gitId":"bqxy"},"content":"**Finance Tools**"},{"lineNumber":962,"author":{"gitId":"bqxy"},"content":"* Calculate simple interest"},{"lineNumber":963,"author":{"gitId":"bqxy"},"content":"* Calculate compound interest with optional monthly/yearly deposit"},{"lineNumber":964,"author":{"gitId":"bqxy"},"content":"* Calculate cashback earned"},{"lineNumber":965,"author":{"gitId":"bqxy"},"content":"* Calculate miles credit earned"},{"lineNumber":966,"author":{"gitId":"bqxy"},"content":"* Save account information for reference"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":969,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":970,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":971,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":972,"author":{"gitId":"bqxy"},"content":"# User Stories"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|"},{"lineNumber":975,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|"},{"lineNumber":976,"author":{"gitId":"bqxy"},"content":"|v1.0|financially prudent user|Keep record of my spendings of the day|I can keep track of my spending habits on a daily basis.|"},{"lineNumber":977,"author":{"gitId":"bqxy"},"content":"|v1.0|student who mistypes easily|Edit my transaction details using one line commands|I can correct my mis-types in a easy and intuitive way.|"},{"lineNumber":978,"author":{"gitId":"bqxy"},"content":"|v1.0|university student who may have difficulty keeping track of his finances|Monitor my spending habits and income according to various categories of expenditure|I can identify which particular category of spending forms the majority of my daily expenditures.|"},{"lineNumber":979,"author":{"gitId":"bqxy"},"content":"|v1.0|person who spends a lot of time in front of a computer|Record my expenses and income using one-line commands|I can monitor my spending habits conveniently and hassle-free.|"},{"lineNumber":980,"author":{"gitId":"bqxy"},"content":"|v1.0|person who owns a bank account|calculate interest over a principal amount|know how much interest I can earn|"},{"lineNumber":981,"author":{"gitId":"bqxy"},"content":"|v1.0|user planning for my future finances|calculate interest earned over a period time|know how much interest I can earn at the end of a period|"},{"lineNumber":982,"author":{"gitId":"bqxy"},"content":"|v1.0|user who owns a cashback credit card|calculate cashback earned|know how much cashback I can earn|"},{"lineNumber":983,"author":{"gitId":"bqxy"},"content":"|v1.0|user who owns a miles credit card|calculate miles credit earned|know how much miles credit I can earn|"},{"lineNumber":984,"author":{"gitId":"bqxy"},"content":"|v1.0|user who is interested about my expenses|set expense goal for 1 year|manage my expenditure according to the budget I set aside|"},{"lineNumber":985,"author":{"gitId":"bqxy"},"content":"|v1.0|user wants to save money|set income goal for 1 year|know how much I have saved and did I reach my saving target|"},{"lineNumber":986,"author":{"gitId":"bqxy"},"content":"|v1.0|user that wishes to manage my income|know my goal status everytime I made an entry|saved the hassle to go to goal tracker just to check the progress|"},{"lineNumber":987,"author":{"gitId":"bqxy"},"content":"|v1.0|user that has recurring bills from subscription services|add a recurring entry|Keep track of monthly transactions like income or bills|"},{"lineNumber":988,"author":{"gitId":"bqxy"},"content":"|v1.0|user that has recurring bills from subscription services|edit a recurring entry|update details of existing entries without having to re-enter everything|"},{"lineNumber":989,"author":{"gitId":"bqxy"},"content":"|v1.0|user that has multiple recurring subscription services bill|delete a recurring entry|remove recurring entries that are no longer valid e.g. cancelled subscription|"},{"lineNumber":990,"author":{"gitId":"bqxy"},"content":"|v1.0|user who wants to know my expenditure|create a save after I exit the program and load that save when I return|shutdown my PC and save electrical bills without losing progress|"},{"lineNumber":991,"author":{"gitId":"bqxy"},"content":"|v2.0|user who is planning for long-term finances|calculate interest over a principal amount with yearly or monthly deposit|know how much interest I can earn with regular deposits|"},{"lineNumber":992,"author":{"gitId":"bqxy"},"content":"|v2.0|user who has multiple bank accounts and credit cards|store account or card information|refer to account features such as interest rate any time|"},{"lineNumber":993,"author":{"gitId":"bqxy"},"content":"|v2.0|user who is new to credit cards or bank accounts|compare my calculations with different interest rate|decide which account is better|"},{"lineNumber":994,"author":{"gitId":"bqxy"},"content":"|v2.0|user whose expenditure is large for particular months|set expense goal for specific month|manage my expenditure monthly instead of yearly|"},{"lineNumber":995,"author":{"gitId":"bqxy"},"content":"|v2.0|user who wants flexibility for finance-related goals|set income goal for specific month|know exactly which month I manage to saved up to my target goal|"},{"lineNumber":996,"author":{"gitId":"bqxy"},"content":"|v2.0|user who has different income goals for different month|edit expense/income goal for specific month|adjust my expenditure/saving target according to the situation|"},{"lineNumber":997,"author":{"gitId":"bqxy"},"content":"|v2.0|user that is interested in my finances for a particular month|display expense/income goal for specific month|keep track of my progress|"},{"lineNumber":998,"author":{"gitId":"Artemis-Hunt"},"content":"|v2.0|busy user with many bills to pay|see all my upcoming recurring entries|keep track of bill payment dates and prevent overdue fees|"},{"lineNumber":999,"author":{"gitId":"bqxy"},"content":"|v2.0|user that has a lot of financial-related information|be assured my saved progress is not lost if program unexpectedly terminates|work long hours without manually saving the program|"},{"lineNumber":1000,"author":{"gitId":"bqxy"},"content":"|v2.0|user who manages finance for other people|keep multiple copies of different saves|load a different save if my friend wishes to use the program on my computer|"},{"lineNumber":1001,"author":{"gitId":"bqxy"},"content":"|v2.0|user who is particular about sensitive information|reset my program|easily remove all saved progress without having to delete them one at a time|"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1004,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1005,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":1006,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1007,"author":{"gitId":"bqxy"},"content":"# Non-Functional Requirements"},{"lineNumber":1008,"author":{"gitId":"-"},"content":""},{"lineNumber":1009,"author":{"gitId":"kaiwen98"},"content":"* _Constraint_ - Single User Product. "},{"lineNumber":1010,"author":{"gitId":"kaiwen98"},"content":"* _Performance_ - JAR file does not exceed 100Mb."},{"lineNumber":1011,"author":{"gitId":"bqxy"},"content":"* _User_ - Users should prefer typing on CLI"},{"lineNumber":1012,"author":{"gitId":"bqxy"},"content":"* _Program_ - Platform independent (Windows/Mac/Linux)"},{"lineNumber":1013,"author":{"gitId":"bqxy"},"content":"* _Program_ - Works without needing an installer"},{"lineNumber":1014,"author":{"gitId":"-"},"content":""},{"lineNumber":1015,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":1016,"author":{"gitId":"-"},"content":""},{"lineNumber":1017,"author":{"gitId":"bqxy"},"content":"# Glossary"},{"lineNumber":1018,"author":{"gitId":"kaiwen98"},"content":"* __General__"},{"lineNumber":1019,"author":{"gitId":"bqxy"},"content":"    * _IntelliJ_ - An Integrated Development Environment (IDE) used to develop FinanceIt"},{"lineNumber":1020,"author":{"gitId":"bqxy"},"content":"    * _CLI_ - Command Line Interface"},{"lineNumber":1021,"author":{"gitId":"bqxy"},"content":"    * _UML_ - Unified Modeling Language"},{"lineNumber":1022,"author":{"gitId":"kaiwen98"},"content":"* __Technical__"},{"lineNumber":1023,"author":{"gitId":"kaiwen98"},"content":"    * _Param types_ - A keyword to a parameter that serves as input to a particular command. eg. `/date`"},{"lineNumber":1024,"author":{"gitId":"kaiwen98"},"content":"    * _Param_ - The parameter to the command. Is associated with a param type. eg. `200404`"},{"lineNumber":1025,"author":{"gitId":"kaiwen98"},"content":"    * _Param Map_ - A HashMap that maps Param types to their respective Params."},{"lineNumber":1026,"author":{"gitId":"kaiwen98"},"content":"    * _CommandPacket_ - Class that represents the user input in distinct attributes that are easier to be accessed by the program."},{"lineNumber":1027,"author":{"gitId":"kaiwen98"},"content":"    * _Command Handlers_ - Component of classes that implements a command."},{"lineNumber":1028,"author":{"gitId":"kaiwen98"},"content":"    * _Logic Managers_ - Component of classes that implements the high-level logical sequence of events and operations within a certain feature."},{"lineNumber":1029,"author":{"gitId":"kaiwen98"},"content":"    * _Logic_ - Component of classes that interprets CommandPacket attributes to control the low-level operation flow of a command."},{"lineNumber":1030,"author":{"gitId":"kaiwen98"},"content":"    * _Input Manager_ - Component of classes that handles input by user and output to user. "},{"lineNumber":1031,"author":{"gitId":"kaiwen98"},"content":"* __Manual Tracker and Entry Tracker__"},{"lineNumber":1032,"author":{"gitId":"kaiwen98"},"content":"    * _Entries_ - The class designed to represent a unit of transaction of the user. "},{"lineNumber":1033,"author":{"gitId":"kaiwen98"},"content":"    * _Ledger_ - A collection of entries which are incurred on the same day."},{"lineNumber":1034,"author":{"gitId":"kaiwen98"},"content":"    * _Entry Type_ - Whether an entry is an Income or Expense."},{"lineNumber":1035,"author":{"gitId":"kaiwen98"},"content":"    * _Entry Category_ - Type of entry along the following choices:"},{"lineNumber":1036,"author":{"gitId":"kaiwen98"},"content":"        * _Expense Entry_ - Transport, Food, Travel, Shopping, Bills, Others"},{"lineNumber":1037,"author":{"gitId":"kaiwen98"},"content":"        * _Income Entry_ - Allowance, Salary, Others"},{"lineNumber":1038,"author":{"gitId":"kaiwen98"},"content":"    * _Entry Amount_ - Amount of money associated with the transaction."},{"lineNumber":1039,"author":{"gitId":"kaiwen98"},"content":"    * _Entry Description_ - Text for users to identify the transaction. Can include general transaction details."},{"lineNumber":1040,"author":{"gitId":"Artemis-Hunt"},"content":"* __Recurring Tracker__"},{"lineNumber":1041,"author":{"gitId":"Artemis-Hunt"},"content":"    * _Entries_ - Transactions which occur on a monthly basis"},{"lineNumber":1042,"author":{"gitId":"Artemis-Hunt"},"content":"    * _Day_ - Day of month on which the entry occurs. Can also be deadline, for instance bill due date. "},{"lineNumber":1043,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1044,"author":{"gitId":"-"},"content":""},{"lineNumber":1045,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":1046,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1047,"author":{"gitId":"kaiwen98"},"content":"# Future implementations"},{"lineNumber":1048,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1049,"author":{"gitId":"kaiwen98"},"content":"1. **Integrate Goal Tracker with Recurring Tracker**  \u003cbr/\u003e"},{"lineNumber":1050,"author":{"gitId":"kaiwen98"},"content":"In the next version, the Goal tracker will be used to keep track not only the manual tracker but also the recurring "},{"lineNumber":1051,"author":{"gitId":"kaiwen98"},"content":"tracker. With this feature being implemented, those fixed monthly income and expenditure will also be included into "},{"lineNumber":1052,"author":{"gitId":"kaiwen98"},"content":"the goal tracker progress to better aid the user in managing their finances."},{"lineNumber":1053,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1054,"author":{"gitId":"kaiwen98"},"content":"1. **Entry Categories used for analysis** \u003cbr /\u003e"},{"lineNumber":1055,"author":{"gitId":"kaiwen98"},"content":"In the next version, entry categories can be recorded and used in meaningful calculations to represent the user\u0027s "},{"lineNumber":1056,"author":{"gitId":"kaiwen98"},"content":"spending habits in a more detailed and categorised manner. Perhaps a tabulated summary of entries by each category"},{"lineNumber":1057,"author":{"gitId":"kaiwen98"},"content":"would be helpful in assisting the users in meaningfully monitoring their spending habits."},{"lineNumber":1058,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1059,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":1060,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1061,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":1062,"author":{"gitId":"-"},"content":""},{"lineNumber":1063,"author":{"gitId":"bqxy"},"content":"# Instructions for Manual Testing"},{"lineNumber":1064,"author":{"gitId":"-"},"content":""},{"lineNumber":1065,"author":{"gitId":"bqxy"},"content":"1. Download the executable from our [latest release](https://github.com/AY2021S1-CS2113-T16-1/tp/releases/)"},{"lineNumber":1066,"author":{"gitId":"bqxy"},"content":"1. Save the executable file in your preferred folder"},{"lineNumber":1067,"author":{"gitId":"bqxy"},"content":"1. Run the program via the command line. The command is: ```java -jar financeit.jar```"},{"lineNumber":1068,"author":{"gitId":"kaiwen98"},"content":"1. You should see the following output:"},{"lineNumber":1069,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1070,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu.png)"},{"lineNumber":1071,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1072,"author":{"gitId":"kaiwen98"},"content":"## Testing Main Menu"},{"lineNumber":1073,"author":{"gitId":"kaiwen98"},"content":"1. Accessing a feature (Using ManualTracker as example):"},{"lineNumber":1074,"author":{"gitId":"kaiwen98"},"content":"    1. Enter ```manual``` into the console."},{"lineNumber":1075,"author":{"gitId":"kaiwen98"},"content":"    You should see the following: "},{"lineNumber":1076,"author":{"gitId":"kaiwen98"},"content":"            "},{"lineNumber":1077,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu_manual.png)"},{"lineNumber":1078,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1079,"author":{"gitId":"kaiwen98"},"content":"1. Exiting the main menu and quit the program: "},{"lineNumber":1080,"author":{"gitId":"kaiwen98"},"content":"    1. Enter ```exit``` into the console."},{"lineNumber":1081,"author":{"gitId":"kaiwen98"},"content":"        You should see the following: "},{"lineNumber":1082,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":1083,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu_exit.png)"},{"lineNumber":1084,"author":{"gitId":"kaiwen98"},"content":"## Testing ManualTracker"},{"lineNumber":1085,"author":{"gitId":"bqxy"},"content":"**Show Command List** \u003cbr /\u003e"},{"lineNumber":1086,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```commands``` into the console."},{"lineNumber":1087,"author":{"gitId":"kaiwen98"},"content":"You should see the following: "},{"lineNumber":1088,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1089,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_commands.png)"},{"lineNumber":1090,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1091,"author":{"gitId":"bqxy"},"content":"**Create Ledger** \u003cbr /\u003e"},{"lineNumber":1092,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1093,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```new /date 200505``` into the console."},{"lineNumber":1094,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1095,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1096,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_new.png)"},{"lineNumber":1097,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1098,"author":{"gitId":"bqxy"},"content":"**Negative test: Duplicate inputs** \u003cbr /\u003e"},{"lineNumber":1099,"author":{"gitId":"kaiwen98"},"content":"1. Again, enter ```new /date 200505``` into the console."},{"lineNumber":1100,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1102,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_new_dup.png)"},{"lineNumber":1103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1104,"author":{"gitId":"bqxy"},"content":"**Testing Show Ledger List** \u003cbr /\u003e"},{"lineNumber":1105,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1106,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the console. "},{"lineNumber":1107,"author":{"gitId":"kaiwen98"},"content":"You should see the following: "},{"lineNumber":1108,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1109,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_list.png)"},{"lineNumber":1110,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1111,"author":{"gitId":"kaiwen98"},"content":"\u003e Observe that there is currently one ledger in the list, of date 2020-05-05."},{"lineNumber":1112,"author":{"gitId":"kaiwen98"},"content":"1. Refer to the above section on creating ledgers to create another ledger of date 2020-06-06 using the command: "},{"lineNumber":1113,"author":{"gitId":"kaiwen98"},"content":"```new /date 200606```. "},{"lineNumber":1114,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the console. "},{"lineNumber":1115,"author":{"gitId":"kaiwen98"},"content":"\u003e Observe that there are now two ledgers in the list."},{"lineNumber":1116,"author":{"gitId":"kaiwen98"},"content":"You should see the following: "},{"lineNumber":1117,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1118,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_list2.png)"},{"lineNumber":1119,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1120,"author":{"gitId":"bqxy"},"content":"**Testing Delete Ledger** \u003cbr /\u003e"},{"lineNumber":1121,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1122,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```delete /id 1``` into the console."},{"lineNumber":1123,"author":{"gitId":"kaiwen98"},"content":"    * This will delete the first ledger on index, which is of date 2020-05-05"},{"lineNumber":1124,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the consolde."},{"lineNumber":1125,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1126,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1127,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_delete1.png)"},{"lineNumber":1128,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1129,"author":{"gitId":"kaiwen98"},"content":"\u003e Observe there is now one ledger on the list."},{"lineNumber":1130,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1131,"author":{"gitId":"bqxy"},"content":"**Open Ledger** \u003cbr /\u003e"},{"lineNumber":1132,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```open /date 200707``` into the console."},{"lineNumber":1133,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1135,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_open.png)"},{"lineNumber":1136,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1137,"author":{"gitId":"kaiwen98"},"content":"\u003e Note that the ledger of date 2020-07-07 was not created beforehand. However, the ledger will be automatically created by the operation, and will resume as per normal. "},{"lineNumber":1138,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1139,"author":{"gitId":"kaiwen98"},"content":"## Testing EntryTracker"},{"lineNumber":1140,"author":{"gitId":"kaiwen98"},"content":"1. The following testing guide assumes that the test for __Manual Tracker__ has been completed."},{"lineNumber":1141,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1142,"author":{"gitId":"bqxy"},"content":"**Show Command List** \u003cbr /\u003e"},{"lineNumber":1143,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```commands``` into the console."},{"lineNumber":1144,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1145,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1146,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_commands.png)"},{"lineNumber":1147,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1148,"author":{"gitId":"bqxy"},"content":"**Show Category List** \u003cbr /\u003e"},{"lineNumber":1149,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```cat``` into the console."},{"lineNumber":1150,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1151,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1152,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_cat.png)"},{"lineNumber":1153,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1154,"author":{"gitId":"bqxy"},"content":"**Create Entry** \u003cbr /\u003e"},{"lineNumber":1155,"author":{"gitId":"kaiwen98"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1156,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```new /time 1500 /cat tpt /amt $16.30 /desc Riding the bus back home -e``` into the console."},{"lineNumber":1157,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1158,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1159,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_create.png)"},{"lineNumber":1160,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```new /time 1500 /cat slr /amt $16.30 /desc Riding the bus back home -i``` into the console."},{"lineNumber":1161,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1162,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1163,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_create2.png)"},{"lineNumber":1164,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1165,"author":{"gitId":"kaiwen98"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1166,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```new /time 1500 /cat tpt /amt $16.30 /desc Riding the bus back home -i``` into the console."},{"lineNumber":1167,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1169,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_create_err1.png)"},{"lineNumber":1170,"author":{"gitId":"kaiwen98"},"content":"\u003e Note that the error is thrown because category ```tpt``` is not considered an income, `-i`. Instead, it is "},{"lineNumber":1171,"author":{"gitId":"kaiwen98"},"content":"    considered an expenditure, and `-e` should have been used instead."},{"lineNumber":1172,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1173,"author":{"gitId":"bqxy"},"content":"**Testing Show Entry List** \u003cbr /\u003e"},{"lineNumber":1174,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the console."},{"lineNumber":1175,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1176,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1177,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_list.png)"},{"lineNumber":1178,"author":{"gitId":"kaiwen98"},"content":"\u003e Note that the number of entries is now __2__."},{"lineNumber":1179,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1180,"author":{"gitId":"bqxy"},"content":"**Testing Edit Entry** \u003cbr /\u003e"},{"lineNumber":1181,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1182,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```edit /id 1 /amt $0.50``` into the console."},{"lineNumber":1183,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the console."},{"lineNumber":1184,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1185,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1186,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_edit_list.png)"},{"lineNumber":1187,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1188,"author":{"gitId":"kaiwen98"},"content":"\u003e Observe that the entry of entry number 1 is not $0.50 under the __Amount__ column."},{"lineNumber":1189,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1190,"author":{"gitId":"bqxy"},"content":"**Testing Delete Entry** \u003cbr /\u003e"},{"lineNumber":1191,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```delete /id 2``` into the console."},{"lineNumber":1192,"author":{"gitId":"kaiwen98"},"content":"1. Enter ```list``` into the console."},{"lineNumber":1193,"author":{"gitId":"kaiwen98"},"content":"You should see the following:"},{"lineNumber":1194,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1195,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_delete_list.png)"},{"lineNumber":1196,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1197,"author":{"gitId":"kaiwen98"},"content":"\u003e Observe the entry that is the latter to be added, entry with __Entry Type \u003d Income__, is now"},{"lineNumber":1198,"author":{"gitId":"kaiwen98"},"content":"removed from the list."},{"lineNumber":1199,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1200,"author":{"gitId":"kaiwen98"},"content":"## Testing RecurringTracker"},{"lineNumber":1201,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `recur` in the Main Menu. You should see the following:"},{"lineNumber":1202,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1203,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/enter_tracker.png)"},{"lineNumber":1204,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1205,"author":{"gitId":"bqxy"},"content":"**Show Command List** \u003cbr /\u003e"},{"lineNumber":1206,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `commands`. Output: \u003cbr /\u003e"},{"lineNumber":1207,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/commands.png)"},{"lineNumber":1208,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1209,"author":{"gitId":"bqxy"},"content":"**Testing Add Entry** \u003cbr /\u003e"},{"lineNumber":1210,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1211,"author":{"gitId":"bqxy"},"content":"**Positive Test 1: Normal Entry** \u003cbr/\u003e"},{"lineNumber":1212,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `new -e /desc Netflix /amt 36.20 /day 27 /notes Cancel when finished watching Black Mirror`. Output:"},{"lineNumber":1213,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1214,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/add_entry_all_months.png)"},{"lineNumber":1215,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1216,"author":{"gitId":"bqxy"},"content":"**Entry with special day of month** \u003cbr /\u003e"},{"lineNumber":1217,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `new -e /desc Drinks /amt 58.45 /day 31`. Output:"},{"lineNumber":1218,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1219,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/add_entry_day_31.png)"},{"lineNumber":1220,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1221,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1222,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `new /desc OIH()(\u0026%* /amt 343243`. Output:"},{"lineNumber":1223,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1224,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/add_entry_no_day_i\u0026e.png)"},{"lineNumber":1225,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1226,"author":{"gitId":"bqxy"},"content":"**Testing List Entries** \u003cbr /\u003e"},{"lineNumber":1227,"author":{"gitId":"Artemis-Hunt"},"content":"* The following testing guide assumes that the testing above has been completed. \u003cbr /\u003e"},{"lineNumber":1228,"author":{"gitId":"Artemis-Hunt"},"content":"Enter `list`. Output:"},{"lineNumber":1229,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1230,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cimg src\u003d\"developerGuide_images/screenshots_recurringtracker/list.png\" width\u003d\"800\"/\u003e"},{"lineNumber":1231,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1232,"author":{"gitId":"bqxy"},"content":"**Testing Edit Entry** \u003cbr /\u003e"},{"lineNumber":1233,"author":{"gitId":"Artemis-Hunt"},"content":"* The following testing guide assumes that the testing above has been completed. \u003cbr /\u003e"},{"lineNumber":1234,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1235,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `edit /id 1 /day 29 -i`. Output:\u003cbr /\u003e"},{"lineNumber":1236,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/edit_entry.png)"},{"lineNumber":1237,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `list`. Output:"},{"lineNumber":1238,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1239,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cimg src\u003d\"developerGuide_images/screenshots_recurringtracker/list_after_edit.png\" width\u003d\"800\"/\u003e"},{"lineNumber":1240,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1241,"author":{"gitId":"bqxy"},"content":"**Negative Test: No Params to Edit** \u003cbr /\u003e"},{"lineNumber":1242,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1243,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `edit /id 1`. Output:"},{"lineNumber":1244,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1245,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/edit_entry_no_params.png)"},{"lineNumber":1246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1247,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":1248,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1249,"author":{"gitId":"bqxy"},"content":"**Negative Test: No Such Index** \u003cbr /\u003e"},{"lineNumber":1250,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1251,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `edit /id 4 /desc Hello Bubble`. Output:"},{"lineNumber":1252,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1253,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/edit_entry_invalid_index.png)"},{"lineNumber":1254,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1255,"author":{"gitId":"bqxy"},"content":"**Testing Delete Entry** \u003cbr /\u003e"},{"lineNumber":1256,"author":{"gitId":"Artemis-Hunt"},"content":"* The following testing guide assumes that all testing above has been completed. \u003cbr /\u003e"},{"lineNumber":1257,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1258,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `delete /id 1`. Output:"},{"lineNumber":1259,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1260,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/delete_entry.png)"},{"lineNumber":1261,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1262,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `list`. Output:"},{"lineNumber":1263,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1264,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cimg src\u003d\"developerGuide_images/screenshots_recurringtracker/list_after_delete.png\" width\u003d\"800\"/\u003e"},{"lineNumber":1265,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1266,"author":{"gitId":"bqxy"},"content":"**Testing Reminders** \u003cbr /\u003e"},{"lineNumber":1267,"author":{"gitId":"Artemis-Hunt"},"content":"* The following testing guide assumes that all previous entries have been deleted. This can be achieved by running `delete /id 1` repeatedly until list is empty."},{"lineNumber":1268,"author":{"gitId":"Artemis-Hunt"},"content":"* As reminders are based on system date at time of running, the `/day` param of the below examples will have to be modified accordingly. Simply copy-pasting the commands will not create the expected output."},{"lineNumber":1269,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `add -e /desc SingTel bill /amt 120.50 /day {CURRENT_DAY}`"},{"lineNumber":1270,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. if today is 15th, input will be `/day 15`"},{"lineNumber":1271,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":1272,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `add -e -auto /desc Spotify subscription /amt 9.99 /day {CURRENT_DAY + 2}`"},{"lineNumber":1273,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. if today is 15th, input will be `/day 17`"},{"lineNumber":1274,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":1275,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `add -i /desc Collect cash from Sonia /amt 500 /day {CURRENT_DAY + 7}`"},{"lineNumber":1276,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. if today is 15th, input will be `/day 22`"},{"lineNumber":1277,"author":{"gitId":"Artemis-Hunt"},"content":"    * E.g. if today is 28th, input will be `/day 5` OR `day 4` depending on whether the current month has 30 or 31 days respectively."},{"lineNumber":1278,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1279,"author":{"gitId":"kaiwen98"},"content":"1. Enter `exit` to quit to main menu. Reminders are printed above the Main Menu prompt. Note: Screenshot was taken on 6th, hence entries entered above are on the 6th, 8th and 13th respective. Output:"},{"lineNumber":1280,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":1281,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/reminders.png)"},{"lineNumber":1282,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":1283,"author":{"gitId":"Artemis-Hunt"},"content":"1. Enter `exit` to quit the program. Run the .jar file again. Reminders are printed below the logo and above the Main Menu prompt."},{"lineNumber":1284,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1285,"author":{"gitId":"Artemis-Hunt"},"content":"![](developerGuide_images/screenshots_recurringtracker/reminders_launch.png)"},{"lineNumber":1286,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":1287,"author":{"gitId":"kaiwen98"},"content":"## Testing GoalTracker"},{"lineNumber":1288,"author":{"gitId":"bqxy"},"content":"**Set Goal for Expense** \u003cbr /\u003e"},{"lineNumber":1289,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1290,"author":{"gitId":"bqxy"},"content":"Enter ``` expense 4000 for 01 ``` into the console."},{"lineNumber":1291,"author":{"gitId":"dixoncwc"},"content":"You should see the following: "},{"lineNumber":1292,"author":{"gitId":"dixoncwc"},"content":"![SetExpenseGoal](developerGuide_images/screenshot_goaltracker/SetExpenseGoal.png)"},{"lineNumber":1293,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1294,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1295,"author":{"gitId":"bqxy"},"content":"Again, enter ```expense 2000 for 01``` into the console."},{"lineNumber":1296,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1297,"author":{"gitId":"dixoncwc"},"content":"![NegativeSet](developerGuide_images/screenshot_goaltracker/NegativeSetExpense.png)"},{"lineNumber":1298,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1299,"author":{"gitId":"bqxy"},"content":"**Testing Set Goal for Income** \u003cbr /\u003e"},{"lineNumber":1300,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1301,"author":{"gitId":"bqxy"},"content":"Enter ```income 2000 for 02``` into the console."},{"lineNumber":1302,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1303,"author":{"gitId":"dixoncwc"},"content":"![SetIncomeGoal](developerGuide_images/screenshot_goaltracker/SetIncomeGoal.png)"},{"lineNumber":1304,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1305,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1306,"author":{"gitId":"bqxy"},"content":"Again, enter ```income 7000 for 02``` into the console."},{"lineNumber":1307,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1308,"author":{"gitId":"dixoncwc"},"content":"![NegativeSetIncome](developerGuide_images/screenshot_goaltracker/NegativeSetIncome.png)"},{"lineNumber":1309,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1310,"author":{"gitId":"bqxy"},"content":"**Edit Goal for Expense** \u003cbr /\u003e"},{"lineNumber":1311,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1312,"author":{"gitId":"bqxy"},"content":"Enter ```edit expense 2000 for 01``` into the console."},{"lineNumber":1313,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1314,"author":{"gitId":"dixoncwc"},"content":"![EditExpenseGoal](developerGuide_images/screenshot_goaltracker/EditExpenseGoal.png)"},{"lineNumber":1315,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1316,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1317,"author":{"gitId":"bqxy"},"content":"Enter ```edit expense 4000 for 05``` into the console."},{"lineNumber":1318,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1319,"author":{"gitId":"dixoncwc"},"content":"![NegativeEditExpense](developerGuide_images/screenshot_goaltracker/NegativeEditExpense.png)"},{"lineNumber":1320,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1321,"author":{"gitId":"bqxy"},"content":"**Edit Goal for Income** \u003cbr /\u003e"},{"lineNumber":1322,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1323,"author":{"gitId":"bqxy"},"content":"Enter ```edit income 5000 for 02``` into the console."},{"lineNumber":1324,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1325,"author":{"gitId":"dixoncwc"},"content":"![EditIncomeGoal](developerGuide_images/screenshot_goaltracker/EditIncomeGoal.png)"},{"lineNumber":1326,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1327,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1328,"author":{"gitId":"bqxy"},"content":"Enter ```edit income 1000 for 09``` into the console."},{"lineNumber":1329,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1330,"author":{"gitId":"dixoncwc"},"content":"![NegativeEditIncome](developerGuide_images/screenshot_goaltracker/NegativeEditIncome.png)"},{"lineNumber":1331,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1332,"author":{"gitId":"bqxy"},"content":"**Display Expense goal** \u003cbr /\u003e"},{"lineNumber":1333,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1334,"author":{"gitId":"bqxy"},"content":"Enter ```display expense for 01``` into the console."},{"lineNumber":1335,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1336,"author":{"gitId":"dixoncwc"},"content":"![DisplayExpenseGoal](developerGuide_images/screenshot_goaltracker/DisplayExpenseGoal.png)"},{"lineNumber":1337,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1338,"author":{"gitId":"bqxy"},"content":"**Display Income Goal** \u003cbr /\u003e"},{"lineNumber":1339,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1340,"author":{"gitId":"bqxy"},"content":"Enter ```display income for 02``` into the console."},{"lineNumber":1341,"author":{"gitId":"dixoncwc"},"content":"You should see the following:"},{"lineNumber":1342,"author":{"gitId":"dixoncwc"},"content":"![DisplayIncomeGoal](developerGuide_images/screenshot_goaltracker/DisplayIncomeGoal.png)"},{"lineNumber":1343,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1344,"author":{"gitId":"dixoncwc"},"content":"**Goal Status Update** \u003cbr /\u003e"},{"lineNumber":1345,"author":{"gitId":"dixoncwc"},"content":"When a user make a new entry, the goal status will update and display as output as shown:"},{"lineNumber":1346,"author":{"gitId":"dixoncwc"},"content":"![GoalStatusUpdate](developerGuide_images/screenshot_goaltracker/GoalStatusUpdate.png)"},{"lineNumber":1347,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":1348,"author":{"gitId":"kaiwen98"},"content":"## Testing SaveManager"},{"lineNumber":1349,"author":{"gitId":"bqxy"},"content":"**Add Save** \u003cbr /\u003e"},{"lineNumber":1350,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1351,"author":{"gitId":"bqxy"},"content":"Enter ```add /name save123``` into the console."},{"lineNumber":1352,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1353,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1354,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1355,"author":{"gitId":"Feudalord"},"content":"![capture](uml_images/saveManager/puml/Capture.PNG)"},{"lineNumber":1356,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1357,"author":{"gitId":"Feudalord"},"content":"![capture2](uml_images/saveManager/puml/Capture2.PNG)"},{"lineNumber":1358,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1359,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1360,"author":{"gitId":"bqxy"},"content":"Enter ```add /name``` into the console."},{"lineNumber":1361,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1362,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1363,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1364,"author":{"gitId":"Feudalord"},"content":"![capture1](uml_images/saveManager/puml/Capture1.PNG)"},{"lineNumber":1365,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1366,"author":{"gitId":"bqxy"},"content":"**Load Save** \u003cbr /\u003e"},{"lineNumber":1367,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1368,"author":{"gitId":"bqxy"},"content":"Enter ```load /name save123``` into the console."},{"lineNumber":1369,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1370,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1371,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1372,"author":{"gitId":"Feudalord"},"content":"![capture3](uml_images/saveManager/puml/Capture3.PNG)"},{"lineNumber":1373,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1374,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1375,"author":{"gitId":"bqxy"},"content":"Enter ```load /name wrongName``` into the console."},{"lineNumber":1376,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1377,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1378,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1379,"author":{"gitId":"Feudalord"},"content":"![capture4](uml_images/saveManager/puml/Capture4.PNG)"},{"lineNumber":1380,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1381,"author":{"gitId":"bqxy"},"content":"**Delete Save** \u003cbr /\u003e"},{"lineNumber":1382,"author":{"gitId":"bqxy"},"content":"**Positive Test** \u003cbr /\u003e"},{"lineNumber":1383,"author":{"gitId":"bqxy"},"content":"Enter ```delete /name save123``` into the console."},{"lineNumber":1384,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1385,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1386,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1387,"author":{"gitId":"Feudalord"},"content":"![capture5](uml_images/saveManager/puml/Capture5.PNG)"},{"lineNumber":1388,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1389,"author":{"gitId":"Feudalord"},"content":"![capture7](uml_images/saveManager/puml/Capture7.PNG)"},{"lineNumber":1390,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1391,"author":{"gitId":"bqxy"},"content":"**Negative Test** \u003cbr /\u003e"},{"lineNumber":1392,"author":{"gitId":"bqxy"},"content":"Enter ```delete /name wrongName``` into the console."},{"lineNumber":1393,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":1394,"author":{"gitId":"Feudalord"},"content":"You should see the following:"},{"lineNumber":1395,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":1396,"author":{"gitId":"Feudalord"},"content":"![capture6](uml_images/saveManager/puml/Capture6.PNG)"},{"lineNumber":1397,"author":{"gitId":"-"},"content":""},{"lineNumber":1398,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author bqxy --\u003e"},{"lineNumber":1399,"author":{"gitId":"bqxy"},"content":"## Testing FinanceTools"},{"lineNumber":1400,"author":{"gitId":"bqxy"},"content":"**Simple Interest Calculator** \u003cbr /\u003e"},{"lineNumber":1401,"author":{"gitId":"bqxy"},"content":"Enter ```simple /a 1000 /r 5``` into the console. \u003cbr /\u003e"},{"lineNumber":1402,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1403,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/SimpleInterest(1).PNG)"},{"lineNumber":1404,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":1405,"author":{"gitId":"bqxy"},"content":"**Yearly Compound Interest Calculator** \u003cbr /\u003e"},{"lineNumber":1406,"author":{"gitId":"bqxy"},"content":"Enter ```cyearly /a 1000 /r 3 /p 2``` into the console. \u003cbr /\u003e"},{"lineNumber":1407,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1408,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/YearlyCompoundInterest(1).PNG) \u003cbr /\u003e"},{"lineNumber":1409,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":1410,"author":{"gitId":"bqxy"},"content":"**Monthly Compound Interest Calculator** \u003cbr /\u003e"},{"lineNumber":1411,"author":{"gitId":"bqxy"},"content":"Enter ```cmonthly /a 1000 /r 3 /p 2``` into the console. \u003cbr /\u003e"},{"lineNumber":1412,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1413,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/MonthlyCompoundInterest(1).PNG) \u003cbr /\u003e"},{"lineNumber":1414,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":1415,"author":{"gitId":"bqxy"},"content":"**Cashback Calculator** \u003cbr /\u003e"},{"lineNumber":1416,"author":{"gitId":"bqxy"},"content":"Enter ```cashb /a 1000 /r 5 /c 1000``` into the console. \u003cbr /\u003e"},{"lineNumber":1417,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1418,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Cashback(1).PNG) \u003cbr /\u003e"},{"lineNumber":1419,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":1420,"author":{"gitId":"bqxy"},"content":"**Miles Credit Calculator** \u003cbr /\u003e"},{"lineNumber":1421,"author":{"gitId":"bqxy"},"content":"Enter ```miles /a 1000 /r 5``` into the console. \u003cbr /\u003e"},{"lineNumber":1422,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1423,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Miles(1).PNG) \u003cbr /\u003e"},{"lineNumber":1424,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":1425,"author":{"gitId":"bqxy"},"content":"**Account Storage** \u003cbr /\u003e"},{"lineNumber":1426,"author":{"gitId":"bqxy"},"content":"Enter ```store /n myaccount /ir 2 /r 2 /c 100 /o main account``` followed by ```info``` into the console. \u003cbr /\u003e"},{"lineNumber":1427,"author":{"gitId":"bqxy"},"content":"You should see the following:"},{"lineNumber":1428,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(1).PNG)"},{"lineNumber":1429,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":1430,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":1431,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(2).PNG) \u003cbr /\u003e"},{"lineNumber":1432,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author --\u003e"}],"authorContributionMap":{"dixoncwc":62,"Feudalord":63,"-":19,"bqxy":371,"Artemis-Hunt":226,"kaiwen98":691}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"# FinanceIt"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"comfortable with a CLI interface. It includes 5 different finance tools, all of which take in typed commands from the "},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":"users to execute their respective functions."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"-":5,"bqxy":4,"kaiwen98":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"# FinanceIt: A Finance Management Application with a CLI Interface"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are comfortable with a CLI interface."},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"It includes 5 different finance tools, all of which take in typed commands from the users to execute their respective functions."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"# Set-up"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"## Setting up for Testers (IMPORTANT)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"Prerequisites: A computer"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"1. Download the executable from our [latest release](https://github.com/AY2021S1-CS2113-T16-1/tp/releases/) ."},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"1. Save the executable file in your preferred folder."},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"1. Run the program via the command line. The command is: ```java -jar financeit.jar```."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"## Setting up in Intellij"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"1. Download the latest release from the release page."},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"   1. Click `OK`"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"   1. Click `Open or Import`."},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"1. After the importing is complete, locate the `src/main/java/seedu.financeit/Financeit.java` file, right-click it, and choose `Run Financeit.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"__Output:__"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu.png)"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e   "},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"# Overview"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"## Main Features"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"Feature|Command|Description|"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"-------|-------|-----------|"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"Manual Tracker|```manual```| Manual entry of transactions. In Manual Tracker, the user manages daily lists of entries called Ledgers. "},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"Entry Tracker|```entry```| Subsidiary subroutine of Manual Tracker. In Entry Tracker, the user manages ledger entries, which represents a unit of transaction for a particular day."},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"Recurring Tracker|```recur```| In recurring Tracker, the user manages special recurring entries that reoccur on a monthly basis, for instance monthly bills and salary."},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"Goal Tracker|```goal```| Sets income or expense goals, whereby the tracker will report to user his progress towards them whenever an entry is added."},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"Save Manager|```saver```| Allows save of multiple program running states and load them anytime you want. May also delete and reset running state."},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"Finance Tools|```finance```| FinanceTools contains tools related to financial calculations."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"# Main Menu"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"Gateway to the various other features of the application. "},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"Upon running the application, you should be greeted by the main menu. Enter the corresponsing commands shown on the table to visit the desired feature!"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"Feature|Command|"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"-------|-------|"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"Manual Tracker|```manual```| "},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"Entry Tracker|```entry```| "},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"Recurring Tracker|```recur```| "},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"Goal Tracker|```goal```| "},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"Save Manager|```saver```| "},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"Finance Tools|```financial```| "},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"Quit|```quit```|"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"## Exit from Main Menu"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"Exits from the program. If you have an outstanding list, it will be saved automatically as lastSave.txt in"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"the saveStates folder. This folder will be automatically created when you first run the program."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu_exit.png)"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"# Manual Tracker"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"Users can manage lists of entries, which are known as ledgers. Each list represents a single date of record."},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"    If I wish to record my income and expenditures on 30 October 2020, I will use the program as follows:"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"    1. Use Manual Tracker to create a ledger of date 20-10-03"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    2. Open the ledger of date 20-10-03 "},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"    3. Use Entry Tracker to create entries to record the transactions for that particular date"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"## Add ledger"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"Add a ledger to the record, representing a date."},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"    new {PARAM_TYPE} {PARAM} "},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_new.png)"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"## Remove ledger"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"Remove a specified ledger from the record, referenced by date or id on the list."},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":" "},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM}"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_delete1.png)"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":123,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":124,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":125,"author":{"gitId":"bqxy"},"content":"## Open ledger"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"Users will gain access into the entries associated with the specified ledger, referenced by date or id on the list."},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"* Automatic creation of non-existing ledgers "},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"    * If the ledger specified do not exist and if the param type supplied is \"/date\", the program will create a new ledger"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"    in accordance to the date supplied."},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"    * If the user specifies a non-existing index, then the program will not have enough information to create the new ledger instance. Automatic creation"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"    will not apply in this particular case."},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"Refer to Feature Entry Tracker onwards for further instructions."},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"    open {PARAM_TYPE} {PARAM}"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_open.png)"},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":151,"author":{"gitId":"bqxy"},"content":"## Show ledger list"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"Shows the record of ledgers that has been added."},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"    list"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_list.png)"},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":162,"author":{"gitId":"bqxy"},"content":"## Print command list"},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"Prints available commands that users can enter in for manualTracker."},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"    commands"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_commands.png)"},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":173,"author":{"gitId":"bqxy"},"content":"## Exit to Main Menu"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"Exit to main menu where users can choose another feature to use."},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_exit.png)"},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e   "},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":187,"author":{"gitId":"bqxy"},"content":"# Entry Tracker"},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"Subroutine that is subsidiary off the ManualTracker. "},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":"Users can manage entries associated with the ledger they have opened."},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"Entries are specified by the following parameters:"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"   * Time in which the transaction ocurred"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction "},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"   * Income or Expense"},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"* Category of transaction. The user is only limited to the following set of categories. "},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"   * Income: {Salary, Allowance, Others}"},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"   * Expense: {Transport, Food, Travel, Shopping, Bills, Others}"},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"* Amount"},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":"   * Amount involved in the transaction. "},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"      * If the transaction type is expense, the amount is considered as a deduction to the account."},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":"      * If the transaction type is income, the amount is considered as a credit to the account."},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"   * User input texts to help them record the details of the transaction."},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"    Ledger of date 20-10-03"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"        Entry 1: Shopping at MBS : $1500"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"        Entry 2: Salary : $3000"},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"    From the above, we can infer that on the date 20-10-03, the user has one expense entry and one income entry."},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":214,"author":{"gitId":"bqxy"},"content":"## Add entry"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"Add an entry to the ledger record."},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":"__Note:__"},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"* For transaction categories, we require the users to enter the shortcut equivalent to the categories listed above. Refer to the following table."},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"Category|Category shortcut|Compatible transaction type"},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"FOOD|fd|Expense"},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"BILLS|bll|Expense"},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"TRANSPORT|tpt|Expense"},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"TRAVEL|tvl|Expense"},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":"SALARY|slr|Expense"},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"ALLOWANCE|alw|Income"},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"OTHERS|oth|Income"},{"lineNumber":229,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":232,"author":{"gitId":"Artemis-Hunt"},"content":"    new {PARAM_TYPE} {PARAM}"},{"lineNumber":233,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":"`/amt`|Amount involved in the transaction.| Input positive floating point number in 2 d.p. \u003cbr/\u003e Can be $XX.XX, XX, etc."},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"`/cat`|Category of transaction. | Input string belonging in the set: {tpt, fd, tvl, shp, bll, slr, alw}"},{"lineNumber":240,"author":{"gitId":"kaiwen98"},"content":"`-i or -e`|Type of transaction. | No parameter required. "},{"lineNumber":241,"author":{"gitId":"kaiwen98"},"content":"`/desc`|Information about the transaction | Description should not have \u0027;\u0027 characters.\u003cbr/\u003eUsers can use the \u0027\u003e\u0027 character to indent their input texts. "},{"lineNumber":242,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":243,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":244,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":245,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_create.png)"},{"lineNumber":246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":247,"author":{"gitId":"kaiwen98"},"content":"\u003e Note that \u0027;\u0027 is an illegal input character! Also, you can force indent to your text using \u0027\u003e\u0027 key. "},{"lineNumber":248,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":249,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":250,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":251,"author":{"gitId":"bqxy"},"content":"## Edit entry"},{"lineNumber":252,"author":{"gitId":"kaiwen98"},"content":"Edit an existing entry in the ledger record."},{"lineNumber":253,"author":{"gitId":"kaiwen98"},"content":"Users only need specify the param-type to edit; there is no need to fill out all param-types as per the create entry command."},{"lineNumber":254,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":255,"author":{"gitId":"kaiwen98"},"content":"__Note__"},{"lineNumber":256,"author":{"gitId":"kaiwen98"},"content":"* While the index is compulsory to be provided, the rest of the params are not compulsory."},{"lineNumber":257,"author":{"gitId":"kaiwen98"},"content":"The users will include the params that they wish to modify."},{"lineNumber":258,"author":{"gitId":"kaiwen98"},"content":"* Hence, a sample command ```entry edit /id 1 /time 1600``` will modify entry at __index 1__ to __time 1600__."},{"lineNumber":259,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":260,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":261,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":262,"author":{"gitId":"kaiwen98"},"content":"    edit /id {INDEX} {PARAM_TYPE} {PARAM} ... "},{"lineNumber":263,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":264,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":265,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":266,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the entry in the list, where the first entry is of index 1. | Input positive integer"},{"lineNumber":267,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":268,"author":{"gitId":"kaiwen98"},"content":"`/amt`|Amount involved in the transaction.| Input positive floating point number in 2 d.p. \u003cbr/\u003e Can be $XX.XX, XX, etc."},{"lineNumber":269,"author":{"gitId":"kaiwen98"},"content":"`/cat`|Category of transaction. | Input string belonging in the set: {tpt, fd, tvl, shp, bll, slr, alw}"},{"lineNumber":270,"author":{"gitId":"kaiwen98"},"content":"`-i or -e`|Type of transaction. | No parameter required. "},{"lineNumber":271,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":272,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":273,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":274,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_edit_list.png)"},{"lineNumber":275,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":276,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":277,"author":{"gitId":"bqxy"},"content":"## Remove entry"},{"lineNumber":278,"author":{"gitId":"kaiwen98"},"content":"Remove a specified entry from the record, referenced by id on the list."},{"lineNumber":279,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":280,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":281,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":282,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM} "},{"lineNumber":283,"author":{"gitId":"kaiwen98"},"content":"            "},{"lineNumber":284,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":285,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":286,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":287,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the entry in the list, where the first entry is of index 1. | Input positive integer"},{"lineNumber":288,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":289,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":290,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":291,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_delete_list.png)"},{"lineNumber":292,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":293,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":294,"author":{"gitId":"bqxy"},"content":"## Show entry list"},{"lineNumber":295,"author":{"gitId":"kaiwen98"},"content":"Shows the record of entries that has been added."},{"lineNumber":296,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":297,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":298,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":299,"author":{"gitId":"kaiwen98"},"content":"    list"},{"lineNumber":300,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":301,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":302,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":303,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_list.png)"},{"lineNumber":304,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":305,"author":{"gitId":"bqxy"},"content":"## Print command list"},{"lineNumber":306,"author":{"gitId":"kaiwen98"},"content":"Prints available commands that users can enter in for manualTracker."},{"lineNumber":307,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":308,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":309,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":310,"author":{"gitId":"kaiwen98"},"content":"    commands"},{"lineNumber":311,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":312,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":313,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":314,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_commands.png)"},{"lineNumber":315,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":316,"author":{"gitId":"bqxy"},"content":"## Print categories"},{"lineNumber":317,"author":{"gitId":"kaiwen98"},"content":"Prints expenditure category shortcuts that the user can input in entry creation/ edit commands."},{"lineNumber":318,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":319,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":320,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":321,"author":{"gitId":"kaiwen98"},"content":"    cat"},{"lineNumber":322,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":323,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":324,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":325,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_cat.png)"},{"lineNumber":326,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":327,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":328,"author":{"gitId":"bqxy"},"content":"## Exit to Manual Tracker Main Routine"},{"lineNumber":329,"author":{"gitId":"kaiwen98"},"content":"Exit to Manual tracker where users can choose another ledger."},{"lineNumber":330,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":331,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":332,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":333,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":334,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":335,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":336,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":337,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshot_entrytracker/entry_exit.png)"},{"lineNumber":338,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":339,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":340,"author":{"gitId":"Artemis-Hunt"},"content":"\u003c!-- @@author Artemis-Hunt --\u003e"},{"lineNumber":341,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":342,"author":{"gitId":"Artemis-Hunt"},"content":"# Recurring Tracker"},{"lineNumber":343,"author":{"gitId":"Artemis-Hunt"},"content":"Users can manage expenses/income that recurs on a monthly basis e.g. monthly bill or salary."},{"lineNumber":344,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":345,"author":{"gitId":"Artemis-Hunt"},"content":"## New entry"},{"lineNumber":346,"author":{"gitId":"Artemis-Hunt"},"content":"Creates a recurring entry. Entries can either be income or expense. If income, entries"},{"lineNumber":347,"author":{"gitId":"Artemis-Hunt"},"content":"can be set to \"auto\" which indicates that the income is automatically credited to the user\u0027s"},{"lineNumber":348,"author":{"gitId":"Artemis-Hunt"},"content":"bank account e.g. Salary which is transferred into bank account by company. "},{"lineNumber":349,"author":{"gitId":"Artemis-Hunt"},"content":"Else, it will indicate a manually credited income, which requires the user to "},{"lineNumber":350,"author":{"gitId":"Artemis-Hunt"},"content":"collect or take action upon e.g. collecting payment from customers (as a supplier), redeeming"},{"lineNumber":351,"author":{"gitId":"Artemis-Hunt"},"content":"of reward points on a monthly basis."},{"lineNumber":352,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":353,"author":{"gitId":"Artemis-Hunt"},"content":"Vice versa for expense entries."},{"lineNumber":354,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":355,"author":{"gitId":"Artemis-Hunt"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":356,"author":{"gitId":"Artemis-Hunt"},"content":"* `-e` OR `-i` - Indicates whether entry is income or expense (Mandatory to have 1 of 2, but not both)"},{"lineNumber":357,"author":{"gitId":"Artemis-Hunt"},"content":"* `-auto` - Indicates that entry is an automatically deducted/credited expense/income. Only serves as a reminder, "},{"lineNumber":358,"author":{"gitId":"Artemis-Hunt"},"content":"is not linked to any functionality. (Optional)"},{"lineNumber":359,"author":{"gitId":"Artemis-Hunt"},"content":"* `/desc` - Description of entry (Mandatory)"},{"lineNumber":360,"author":{"gitId":"Artemis-Hunt"},"content":"* `/amt` - Amount (Mandatory)"},{"lineNumber":361,"author":{"gitId":"Artemis-Hunt"},"content":"* `/day` - Day of month which entry occurs on (Mandatory)"},{"lineNumber":362,"author":{"gitId":"Artemis-Hunt"},"content":"* `/notes` - Additional notes and remarks (Optional)"},{"lineNumber":363,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":364,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eSyntax"},{"lineNumber":365,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":366,"author":{"gitId":"Artemis-Hunt"},"content":"    new [-e OR -i] [-auto] /desc {DESCRIPTION} /amt {AMOUNT} /day {DAY_OF_MONTH} [/notes {NOTES}]"},{"lineNumber":367,"author":{"gitId":"Artemis-Hunt"},"content":"   "},{"lineNumber":368,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":369,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eExample"},{"lineNumber":370,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":371,"author":{"gitId":"Artemis-Hunt"},"content":"    new -e -auto /desc Netflix /amt 40 /day 10 /notes Cancel if Homemade ends"},{"lineNumber":372,"author":{"gitId":"Artemis-Hunt"},"content":"    //Netflix, $40 per month, auto-payment via credit card "},{"lineNumber":373,"author":{"gitId":"Artemis-Hunt"},"content":"    on the 10th of every month. Saved with a note of “Cancel if Homemade ends\""},{"lineNumber":374,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":375,"author":{"gitId":"Artemis-Hunt"},"content":"    new -i /desc Redeem air miles for vouchers /amt 50 /day 12"},{"lineNumber":376,"author":{"gitId":"Artemis-Hunt"},"content":"    //Redeem air miles for vouchers, $50 per month, user has to take manual action "},{"lineNumber":377,"author":{"gitId":"Artemis-Hunt"},"content":"    by 12th of every month."},{"lineNumber":378,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":379,"author":{"gitId":"Artemis-Hunt"},"content":"## List all entries"},{"lineNumber":380,"author":{"gitId":"Artemis-Hunt"},"content":"Displays a list of all recurring entries."},{"lineNumber":381,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":382,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eSyntax"},{"lineNumber":383,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":384,"author":{"gitId":"Artemis-Hunt"},"content":"    list"},{"lineNumber":385,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":386,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cimg src\u003d\"screenshots/recurringtracker/list.png\" width\u003d\"800\"/\u003e"},{"lineNumber":387,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":388,"author":{"gitId":"Artemis-Hunt"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":389,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":390,"author":{"gitId":"Artemis-Hunt"},"content":"## Delete entry"},{"lineNumber":391,"author":{"gitId":"Artemis-Hunt"},"content":"Deletes an entry at the given index. Index can be found via `list` and then checking the "},{"lineNumber":392,"author":{"gitId":"Artemis-Hunt"},"content":"associated index in the leftmost column."},{"lineNumber":393,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":394,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eSyntax"},{"lineNumber":395,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":396,"author":{"gitId":"Artemis-Hunt"},"content":"    delete /id {INDEX}"},{"lineNumber":397,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":398,"author":{"gitId":"Artemis-Hunt"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":399,"author":{"gitId":"Artemis-Hunt"},"content":"* `/id` - Index of item to be deleted. 1-based indexing (Mandatory)"},{"lineNumber":400,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":401,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eExample"},{"lineNumber":402,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":403,"author":{"gitId":"Artemis-Hunt"},"content":"    delete /id 15"},{"lineNumber":404,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":405,"author":{"gitId":"Artemis-Hunt"},"content":"## Edit entry"},{"lineNumber":406,"author":{"gitId":"Artemis-Hunt"},"content":"Update one or more fields of an existing entry. Overwrites any existing value corresponding to the "},{"lineNumber":407,"author":{"gitId":"Artemis-Hunt"},"content":"field(s) being modified."},{"lineNumber":408,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":409,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eSyntax"},{"lineNumber":410,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":411,"author":{"gitId":"Artemis-Hunt"},"content":"    edit /id {INDEX} [field(s) to edit]"},{"lineNumber":412,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":413,"author":{"gitId":"Artemis-Hunt"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":414,"author":{"gitId":"Artemis-Hunt"},"content":"* `/id` - Index of entry to edit. 1-based indexing (Mandatory)"},{"lineNumber":415,"author":{"gitId":"Artemis-Hunt"},"content":"* `field(s) to edit` - Follows the same format as new entry "},{"lineNumber":416,"author":{"gitId":"Artemis-Hunt"},"content":"E.g. to edit amount, use `/amt {NEW_AMT}`."},{"lineNumber":417,"author":{"gitId":"Artemis-Hunt"},"content":"Overwrites previous value present."},{"lineNumber":418,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":419,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eExample"},{"lineNumber":420,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":421,"author":{"gitId":"Artemis-Hunt"},"content":"    edit /id 2 /desc Updated name!! /day 23"},{"lineNumber":422,"author":{"gitId":"Artemis-Hunt"},"content":"    //Overwrites existing description and day for entry 2. Other fields are untouched."},{"lineNumber":423,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":424,"author":{"gitId":"Artemis-Hunt"},"content":"## Exit tracker"},{"lineNumber":425,"author":{"gitId":"Artemis-Hunt"},"content":"Exits to main menu."},{"lineNumber":426,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":427,"author":{"gitId":"Artemis-Hunt"},"content":"\u003eSyntax"},{"lineNumber":428,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":429,"author":{"gitId":"Artemis-Hunt"},"content":"    exit"},{"lineNumber":430,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":431,"author":{"gitId":"Artemis-Hunt"},"content":"## Reminders"},{"lineNumber":432,"author":{"gitId":"Artemis-Hunt"},"content":"The program will check the list of recurring entries, and automatically print reminders for"},{"lineNumber":433,"author":{"gitId":"Artemis-Hunt"},"content":"entries which are within 5 days from current system date."},{"lineNumber":434,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":435,"author":{"gitId":"Artemis-Hunt"},"content":"For instance, if the two examples in [New Entry](#new-entry) are entered and current system date is the 9th,"},{"lineNumber":436,"author":{"gitId":"Artemis-Hunt"},"content":"the following reminders will be shown upon launching the program or returning to main menu."},{"lineNumber":437,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":438,"author":{"gitId":"Artemis-Hunt"},"content":"![](screenshots/recurringtracker/reminders.png)"},{"lineNumber":439,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":440,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":441,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author bqxy --\u003e"},{"lineNumber":442,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":443,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":444,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":445,"author":{"gitId":"bqxy"},"content":"# FinanceTools"},{"lineNumber":446,"author":{"gitId":"bqxy"},"content":"FinanceTools contains tools related to financial calculations."},{"lineNumber":447,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":448,"author":{"gitId":"bqxy"},"content":"## Simple Interest Calculator"},{"lineNumber":449,"author":{"gitId":"bqxy"},"content":"Calculate simple interest earned."},{"lineNumber":450,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":451,"author":{"gitId":"bqxy"},"content":"Simple interest is based on the principal amount of a deposit."},{"lineNumber":452,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":453,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":454,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":455,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Interest Rate (Mandatory)"},{"lineNumber":456,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":457,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":458,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":459,"author":{"gitId":"bqxy"},"content":"    simple /a {AMOUNT} /r {INTEREST_RATE}"},{"lineNumber":460,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":461,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":462,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":463,"author":{"gitId":"bqxy"},"content":"    simple /a 1000 /r 5"},{"lineNumber":464,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":465,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/SimpleInterest(1).PNG)"},{"lineNumber":466,"author":{"gitId":"bqxy"},"content":"## Yearly Compound Interest Calculator"},{"lineNumber":467,"author":{"gitId":"bqxy"},"content":"Calculate yearly compound interest earned with optional yearly deposit."},{"lineNumber":468,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":469,"author":{"gitId":"bqxy"},"content":"Compound interest is based on the principal amount and the interest that accumulates on it every period."},{"lineNumber":470,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":471,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":472,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":473,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Interest Rate (Mandatory)"},{"lineNumber":474,"author":{"gitId":"bqxy"},"content":"* ```/p``` - Number of Years (Mandatory)"},{"lineNumber":475,"author":{"gitId":"bqxy"},"content":"* ```/d``` - Yearly Deposit (Optional)"},{"lineNumber":476,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":477,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":478,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":479,"author":{"gitId":"bqxy"},"content":"    cyearly /a {AMOUNT} /r {INTEREST_RATE} /p {YEARS} /d {YEARLY_DEPOSIT}"},{"lineNumber":480,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":481,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":482,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":483,"author":{"gitId":"bqxy"},"content":"    cyearly /a 1000 /r 3 /p 2"},{"lineNumber":484,"author":{"gitId":"bqxy"},"content":"    cyearly /a 1000 /r 3 /p 2 /d 1200"},{"lineNumber":485,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":486,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/YearlyCompoundInterest(1).PNG)"},{"lineNumber":487,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":488,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":489,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/YearlyCompoundInterest(2).PNG)"},{"lineNumber":490,"author":{"gitId":"bqxy"},"content":"## Monthly Compound Interest Calculator"},{"lineNumber":491,"author":{"gitId":"bqxy"},"content":"Calculate monthly compound interest earned with optional monthly deposit."},{"lineNumber":492,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":493,"author":{"gitId":"bqxy"},"content":"Compound interest is based on the principal amount and the interest that accumulates on it every period."},{"lineNumber":494,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":495,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":496,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":497,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Interest Rate (Mandatory)"},{"lineNumber":498,"author":{"gitId":"bqxy"},"content":"* ```/p``` - Number of Months (Mandatory)"},{"lineNumber":499,"author":{"gitId":"bqxy"},"content":"* ```/d``` - Monthly Deposit (Optional)"},{"lineNumber":500,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":501,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":502,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":503,"author":{"gitId":"bqxy"},"content":"    cyearly /a {AMOUNT} /r {INTEREST_RATE} /p {MONTHS} /d {MONTHLY_DEPOSIT}"},{"lineNumber":504,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":505,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":506,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":507,"author":{"gitId":"bqxy"},"content":"    cmonthly /a 1000 /r 3 /p 2"},{"lineNumber":508,"author":{"gitId":"bqxy"},"content":"    cmonthly /a 1000 /r 3 /p 2 /d 100"},{"lineNumber":509,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":510,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/MonthlyCompoundInterest(1).PNG)"},{"lineNumber":511,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":512,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":513,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/MonthlyCompoundInterest(2).PNG)"},{"lineNumber":514,"author":{"gitId":"bqxy"},"content":"## Cashback Calculator"},{"lineNumber":515,"author":{"gitId":"bqxy"},"content":"Calculate cashback earned with optional monthly cap. The monthly cap is the maximum amount of cashback"},{"lineNumber":516,"author":{"gitId":"bqxy"},"content":"a user can earn per month."},{"lineNumber":517,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":518,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":519,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":520,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Cashback Rate (Mandatory)"},{"lineNumber":521,"author":{"gitId":"bqxy"},"content":"* ```/c``` - Cashback Cap (Mandatory)"},{"lineNumber":522,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":523,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":524,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":525,"author":{"gitId":"bqxy"},"content":"    cashb /a {AMOUNT} /r {CASHBACK_RATE} /c {CASHBACK_CAP}"},{"lineNumber":526,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":527,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":528,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":529,"author":{"gitId":"bqxy"},"content":"    cashb /a 1000 /r 5 /c 1000"},{"lineNumber":530,"author":{"gitId":"bqxy"},"content":"    cashb /a 1000 /r 5 /c 10"},{"lineNumber":531,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":532,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Cashback(1).PNG)"},{"lineNumber":533,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":534,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":535,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Cashback(2).PNG)"},{"lineNumber":536,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":537,"author":{"gitId":"bqxy"},"content":"## Miles Credit Calculator"},{"lineNumber":538,"author":{"gitId":"bqxy"},"content":"Calculate cashback earned."},{"lineNumber":539,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":540,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":541,"author":{"gitId":"bqxy"},"content":"* ```/a``` - Amount (Mandatory)"},{"lineNumber":542,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Miles Rate (Mandatory)"},{"lineNumber":543,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":544,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":545,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":546,"author":{"gitId":"bqxy"},"content":"    miles /a {AMOUNT} /r {MILES_RATE}"},{"lineNumber":547,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":548,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":549,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":550,"author":{"gitId":"bqxy"},"content":"    miles /a 1000 /r 5"},{"lineNumber":551,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":552,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Miles(1).PNG)"},{"lineNumber":553,"author":{"gitId":"bqxy"},"content":"## Account Storage"},{"lineNumber":554,"author":{"gitId":"bqxy"},"content":"Store account information."},{"lineNumber":555,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":556,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":557,"author":{"gitId":"bqxy"},"content":"Additionally, it implements the following operations:"},{"lineNumber":558,"author":{"gitId":"bqxy"},"content":"* ```info``` - list account(s) information"},{"lineNumber":559,"author":{"gitId":"bqxy"},"content":"* ```clearinfo``` - clear all information"},{"lineNumber":560,"author":{"gitId":"bqxy"},"content":"* ```store /rm \u003cACCOUNT_NO\u003e``` - delete corresponding account number in list"},{"lineNumber":561,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":562,"author":{"gitId":"bqxy"},"content":"**Parameters** \u003cbr /\u003e"},{"lineNumber":563,"author":{"gitId":"bqxy"},"content":"* ```/n``` - Account Name (Optional)"},{"lineNumber":564,"author":{"gitId":"bqxy"},"content":"* ```/ir``` - Interest Rate (Optional)"},{"lineNumber":565,"author":{"gitId":"bqxy"},"content":"* ```/r``` - Cashback Rate (Optional)"},{"lineNumber":566,"author":{"gitId":"bqxy"},"content":"* ```/c``` - Cashback Cap (Optional)"},{"lineNumber":567,"author":{"gitId":"bqxy"},"content":"* ```/o``` - Other Notes (Optional)"},{"lineNumber":568,"author":{"gitId":"bqxy"},"content":"* ```/rm``` - Account Number (Optional)"},{"lineNumber":569,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":570,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":571,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":572,"author":{"gitId":"bqxy"},"content":"    store /n {ACCOUNT_NAME} /ir {INTEREST_RATE} /r {CASHBACK_RATE} /c {CASHBACK_CAP} /o {OTHER_NOTES}"},{"lineNumber":573,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":574,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":575,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":576,"author":{"gitId":"bqxy"},"content":"    store"},{"lineNumber":577,"author":{"gitId":"bqxy"},"content":"    store /n myaccount"},{"lineNumber":578,"author":{"gitId":"bqxy"},"content":"    store /n myaccount /ir 2"},{"lineNumber":579,"author":{"gitId":"bqxy"},"content":"    store /n myaccount /ir 2 /r 2"},{"lineNumber":580,"author":{"gitId":"bqxy"},"content":"    store /n myaccount /ir 2 /r 2 /c 100"},{"lineNumber":581,"author":{"gitId":"bqxy"},"content":"    store /n myaccount /ir 2 /r 2 /c 100 /o main account"},{"lineNumber":582,"author":{"gitId":"bqxy"},"content":"    store /rm 1"},{"lineNumber":583,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":584,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(1).PNG)"},{"lineNumber":585,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":586,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":587,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(2).PNG)"},{"lineNumber":588,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":589,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":590,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(3).PNG)"},{"lineNumber":591,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":592,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":593,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(4).PNG)"},{"lineNumber":594,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":595,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":596,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(5).PNG)"},{"lineNumber":597,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":598,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":599,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(6).PNG)"},{"lineNumber":600,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":601,"author":{"gitId":"bqxy"},"content":"\u003cbr /\u003e"},{"lineNumber":602,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/AccountStorage(7).PNG)"},{"lineNumber":603,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":604,"author":{"gitId":"bqxy"},"content":"## Command and Calculation History"},{"lineNumber":605,"author":{"gitId":"bqxy"},"content":"Store the commands inputted and results from calculations in FinanceTools."},{"lineNumber":606,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":607,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":608,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":609,"author":{"gitId":"bqxy"},"content":"    history"},{"lineNumber":610,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":611,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":612,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":613,"author":{"gitId":"bqxy"},"content":"    history"},{"lineNumber":614,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":615,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/History(1).PNG)"},{"lineNumber":616,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":617,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":618,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":619,"author":{"gitId":"bqxy"},"content":"## Exit FinanceTools"},{"lineNumber":620,"author":{"gitId":"bqxy"},"content":"Exit FinanceTools to Main Menu."},{"lineNumber":621,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":622,"author":{"gitId":"bqxy"},"content":"\u003eSyntax:"},{"lineNumber":623,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":624,"author":{"gitId":"bqxy"},"content":"    exit"},{"lineNumber":625,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":626,"author":{"gitId":"bqxy"},"content":"\u003e Example: "},{"lineNumber":627,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":628,"author":{"gitId":"bqxy"},"content":"    exit"},{"lineNumber":629,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":630,"author":{"gitId":"bqxy"},"content":"![Example](screenshots/financetools/Exit(1).PNG)"},{"lineNumber":631,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":632,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":633,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":634,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":635,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":636,"author":{"gitId":"bqxy"},"content":"# Goal Tracker"},{"lineNumber":637,"author":{"gitId":"dixoncwc"},"content":"Goal Tracker that helps user to track their monthly incomes and expenses goal."},{"lineNumber":638,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":639,"author":{"gitId":"bqxy"},"content":"## Set Goal"},{"lineNumber":640,"author":{"gitId":"bqxy"},"content":"**Set Income Goal** \u003cbr /\u003e"},{"lineNumber":641,"author":{"gitId":"dixoncwc"},"content":"Setting of income goal for respective months."},{"lineNumber":642,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":643,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax"},{"lineNumber":644,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":645,"author":{"gitId":"dixoncwc"},"content":"    income {int amount} for {month in int form}"},{"lineNumber":646,"author":{"gitId":"dixoncwc"},"content":"    "},{"lineNumber":647,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":648,"author":{"gitId":"dixoncwc"},"content":"\u003eExample:"},{"lineNumber":649,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":650,"author":{"gitId":"dixoncwc"},"content":"    income 5000 for 08"},{"lineNumber":651,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":652,"author":{"gitId":"dixoncwc"},"content":"![Example](screenshots/goaltracker/setincomegoal.png)"},{"lineNumber":653,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":654,"author":{"gitId":"bqxy"},"content":"**Set Expense Goal** \u003cbr /\u003e"},{"lineNumber":655,"author":{"gitId":"dixoncwc"},"content":"Setting of expense goal for respective months."},{"lineNumber":656,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":657,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax"},{"lineNumber":658,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":659,"author":{"gitId":"dixoncwc"},"content":"    expense {int amount} for {month in int form}"},{"lineNumber":660,"author":{"gitId":"dixoncwc"},"content":"   "},{"lineNumber":661,"author":{"gitId":"dixoncwc"},"content":"\u003eExample"},{"lineNumber":662,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":663,"author":{"gitId":"dixoncwc"},"content":"    expense 2000 for 07"},{"lineNumber":664,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":665,"author":{"gitId":"dixoncwc"},"content":"![Example](screenshots/goaltracker/setexpensegoal.png)"},{"lineNumber":666,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":667,"author":{"gitId":"bqxy"},"content":"## Display Goal"},{"lineNumber":668,"author":{"gitId":"dixoncwc"},"content":"Display income and expense goal for the individual month."},{"lineNumber":669,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":670,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax"},{"lineNumber":671,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":672,"author":{"gitId":"dixoncwc"},"content":"    display income/expense for {month in int form}"},{"lineNumber":673,"author":{"gitId":"dixoncwc"},"content":"   "},{"lineNumber":674,"author":{"gitId":"dixoncwc"},"content":"\u003eExample"},{"lineNumber":675,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":676,"author":{"gitId":"dixoncwc"},"content":"    display income for 08"},{"lineNumber":677,"author":{"gitId":"dixoncwc"},"content":"    display expense for 07"},{"lineNumber":678,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":679,"author":{"gitId":"dixoncwc"},"content":"![IncomeExample](screenshots/goaltracker/displayincome.png)"},{"lineNumber":680,"author":{"gitId":"dixoncwc"},"content":"![ExpenseExample](screenshots/goaltracker/displayexpense.png)"},{"lineNumber":681,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":682,"author":{"gitId":"bqxy"},"content":"## Exit Display Goal "},{"lineNumber":683,"author":{"gitId":"dixoncwc"},"content":"The system will auto prompt the user whether they want to exit DisplayGoal and return to Goal tracker main menu."},{"lineNumber":684,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":685,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax "},{"lineNumber":686,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":687,"author":{"gitId":"dixoncwc"},"content":"    enter {y} to exit"},{"lineNumber":688,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":689,"author":{"gitId":"dixoncwc"},"content":"\u003eExample"},{"lineNumber":690,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":691,"author":{"gitId":"dixoncwc"},"content":"    y"},{"lineNumber":692,"author":{"gitId":"dixoncwc"},"content":"    "},{"lineNumber":693,"author":{"gitId":"dixoncwc"},"content":"![PromptExitDisplay](screenshots/goaltracker/PromptExitDisplay.png)"},{"lineNumber":694,"author":{"gitId":"dixoncwc"},"content":"![ReturnMain](screenshots/goaltracker/returnmainmenu.png)"},{"lineNumber":695,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":696,"author":{"gitId":"bqxy"},"content":"## Edit Goal"},{"lineNumber":697,"author":{"gitId":"dixoncwc"},"content":"Edit income and expense goal for the individual month."},{"lineNumber":698,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":699,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax"},{"lineNumber":700,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":701,"author":{"gitId":"dixoncwc"},"content":"    edit income/expense {int amount} for {month in int form}"},{"lineNumber":702,"author":{"gitId":"dixoncwc"},"content":" "},{"lineNumber":703,"author":{"gitId":"dixoncwc"},"content":"\u003eExample"},{"lineNumber":704,"author":{"gitId":"dixoncwc"},"content":"    "},{"lineNumber":705,"author":{"gitId":"dixoncwc"},"content":"    edit income 2000 for 08"},{"lineNumber":706,"author":{"gitId":"dixoncwc"},"content":"    edit expense 1000 for 07"},{"lineNumber":707,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":708,"author":{"gitId":"dixoncwc"},"content":"![EditIncome](screenshots/goaltracker/editincome.png)"},{"lineNumber":709,"author":{"gitId":"dixoncwc"},"content":"![EditExpense](screenshots/goaltracker/editexpense.png)"},{"lineNumber":710,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":711,"author":{"gitId":"bqxy"},"content":"## Exit Goal Tracker"},{"lineNumber":712,"author":{"gitId":"dixoncwc"},"content":"Exit Goal Tracker program and return to FinanceIt main UI."},{"lineNumber":713,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":714,"author":{"gitId":"dixoncwc"},"content":"\u003esyntax"},{"lineNumber":715,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":716,"author":{"gitId":"dixoncwc"},"content":"    exit"},{"lineNumber":717,"author":{"gitId":"dixoncwc"},"content":"    "},{"lineNumber":718,"author":{"gitId":"dixoncwc"},"content":"\u003eExample "},{"lineNumber":719,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":720,"author":{"gitId":"dixoncwc"},"content":"    exit"},{"lineNumber":721,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":722,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":723,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":724,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":725,"author":{"gitId":"bqxy"},"content":"# Save Manager"},{"lineNumber":726,"author":{"gitId":"Feudalord"},"content":"This utility feature helps to save multiple program states and load them at will."},{"lineNumber":727,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":728,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":729,"author":{"gitId":"bqxy"},"content":"## Menu"},{"lineNumber":730,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture1.PNG)"},{"lineNumber":731,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":732,"author":{"gitId":"Feudalord"},"content":"Main menu shows all the available commands and how to use them."},{"lineNumber":733,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":734,"author":{"gitId":"Feudalord"},"content":"You can enter \"help\" anytime to return to this main menu"},{"lineNumber":735,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":736,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":737,"author":{"gitId":"bqxy"},"content":"## List Save"},{"lineNumber":738,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture2.PNG)"},{"lineNumber":739,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":740,"author":{"gitId":"Feudalord"},"content":"You can enter \"list\" to list all backup saves."},{"lineNumber":741,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":742,"author":{"gitId":"Feudalord"},"content":"\u003eExample"},{"lineNumber":743,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":744,"author":{"gitId":"Feudalord"},"content":"    list"},{"lineNumber":745,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":746,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":747,"author":{"gitId":"bqxy"},"content":"## Add Save"},{"lineNumber":748,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture3.PNG)"},{"lineNumber":749,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":750,"author":{"gitId":"Feudalord"},"content":"To create a back up save"},{"lineNumber":751,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":752,"author":{"gitId":"Feudalord"},"content":"\u003eSyntax"},{"lineNumber":753,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":754,"author":{"gitId":"Feudalord"},"content":"    add /name {SAVE_NAME}"},{"lineNumber":755,"author":{"gitId":"Feudalord"},"content":"\u003eExample"},{"lineNumber":756,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":757,"author":{"gitId":"Feudalord"},"content":"    add /name save12345"},{"lineNumber":758,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":759,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture4.PNG)"},{"lineNumber":760,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":761,"author":{"gitId":"Feudalord"},"content":"In your data/backup directory, you can see 3 text files created."},{"lineNumber":762,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":763,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture5.PNG)"},{"lineNumber":764,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":765,"author":{"gitId":"Feudalord"},"content":"In your names.txt file, an additional entry will be appended."},{"lineNumber":766,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":767,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":768,"author":{"gitId":"bqxy"},"content":"## Load Save"},{"lineNumber":769,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture6.PNG)"},{"lineNumber":770,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":771,"author":{"gitId":"Feudalord"},"content":"To load a back up save"},{"lineNumber":772,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":773,"author":{"gitId":"Feudalord"},"content":"\u003eSyntax"},{"lineNumber":774,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":775,"author":{"gitId":"Feudalord"},"content":"    load /name {SAVE_NAME}"},{"lineNumber":776,"author":{"gitId":"Feudalord"},"content":"\u003eExample"},{"lineNumber":777,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":778,"author":{"gitId":"Feudalord"},"content":"    load /name save12345"},{"lineNumber":779,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":780,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":781,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":782,"author":{"gitId":"bqxy"},"content":"## Delete Save"},{"lineNumber":783,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture7.PNG)"},{"lineNumber":784,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":785,"author":{"gitId":"Feudalord"},"content":"To remove a back up save"},{"lineNumber":786,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":787,"author":{"gitId":"Feudalord"},"content":"\u003eSyntax"},{"lineNumber":788,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":789,"author":{"gitId":"Feudalord"},"content":"    delete /name {SAVE_NAME}"},{"lineNumber":790,"author":{"gitId":"Feudalord"},"content":"\u003eExample"},{"lineNumber":791,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":792,"author":{"gitId":"Feudalord"},"content":"    delete /name save123"},{"lineNumber":793,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":794,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture8.PNG)"},{"lineNumber":795,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":796,"author":{"gitId":"Feudalord"},"content":"As you can see, the 3 text files you want to delete are gone."},{"lineNumber":797,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":798,"author":{"gitId":"Feudalord"},"content":"names.txt file is also updated."},{"lineNumber":799,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":800,"author":{"gitId":"bqxy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":801,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":802,"author":{"gitId":"bqxy"},"content":"## Reset"},{"lineNumber":803,"author":{"gitId":"Feudalord"},"content":"![picture](uml_images/saveManager/Capture9.PNG)"},{"lineNumber":804,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":805,"author":{"gitId":"Feudalord"},"content":"To reset all data currently used by the program enter \"reset\""},{"lineNumber":806,"author":{"gitId":"Feudalord"},"content":"\u003cbr /\u003e"},{"lineNumber":807,"author":{"gitId":"Feudalord"},"content":"\u003eExample"},{"lineNumber":808,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":809,"author":{"gitId":"Feudalord"},"content":"    reset"},{"lineNumber":810,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":811,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":812,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":813,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":814,"author":{"gitId":"bqxy"},"content":"# Summary of Features "},{"lineNumber":815,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":816,"author":{"gitId":"bqxy"},"content":"## Manual Tracker"},{"lineNumber":817,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":818,"author":{"gitId":"bqxy"},"content":"No. | Feature | Syntax |"},{"lineNumber":819,"author":{"gitId":"bqxy"},"content":"----|---------|---------|"},{"lineNumber":820,"author":{"gitId":"kaiwen98"},"content":"1.|Open Ledger|_open /date {YYMMDD} or delete /id {INDEX}_|"},{"lineNumber":821,"author":{"gitId":"kaiwen98"},"content":"2.|New Ledger|_new /date {YYMMDD}_|"},{"lineNumber":822,"author":{"gitId":"kaiwen98"},"content":"3.|List Ledgers|_list_|"},{"lineNumber":823,"author":{"gitId":"kaiwen98"},"content":"4.|Delete Ledgers|_delete /date {YYMMDD} or delete /id {INDEX}_ |"},{"lineNumber":824,"author":{"gitId":"bqxy"},"content":"5.|Exit to Main Menu|_exit_|"},{"lineNumber":825,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":826,"author":{"gitId":"bqxy"},"content":"## Entry tracker"},{"lineNumber":827,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":828,"author":{"gitId":"bqxy"},"content":"No. | Feature | Syntax |"},{"lineNumber":829,"author":{"gitId":"bqxy"},"content":"----|---------|---------|"},{"lineNumber":830,"author":{"gitId":"kaiwen98"},"content":"1.|New Entry|_new /time {HHMM} /desc {STRING} /cat {STRING_CATEGORY} /amt {AMOUNT} [-i or -e]_|"},{"lineNumber":831,"author":{"gitId":"kaiwen98"},"content":"2.|Edit Entry|_edit /id {INDEX} {PARAM_TYPE} {PARAM} ..._|"},{"lineNumber":832,"author":{"gitId":"kaiwen98"},"content":"3.|list Entries|_list_|"},{"lineNumber":833,"author":{"gitId":"kaiwen98"},"content":"4.|Delete Entry|_delete /id {INDEX}_|"},{"lineNumber":834,"author":{"gitId":"bqxy"},"content":"5.|List Transaction Categories|_cat_|"},{"lineNumber":835,"author":{"gitId":"bqxy"},"content":"6.|Exit to Manual Tracker|_exit_|"},{"lineNumber":836,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":837,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":838,"author":{"gitId":"Artemis-Hunt"},"content":"## Recurring Tracker"},{"lineNumber":839,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":840,"author":{"gitId":"Artemis-Hunt"},"content":"No. | Feature | Syntax |"},{"lineNumber":841,"author":{"gitId":"Artemis-Hunt"},"content":"----|---------|---------|"},{"lineNumber":842,"author":{"gitId":"Artemis-Hunt"},"content":"1.|New Entry|_new [-e OR -i] [-auto] /desc {DESCRIPTION} /amt {AMOUNT} /day {DAY_OF_MONTH} [/notes {NOTES}]_|"},{"lineNumber":843,"author":{"gitId":"Artemis-Hunt"},"content":"2.|Edit Entry|_edit /id {INDEX} {PARAM_TYPE} {PARAM} ..._|"},{"lineNumber":844,"author":{"gitId":"Artemis-Hunt"},"content":"3.|list Entries|_list_|"},{"lineNumber":845,"author":{"gitId":"Artemis-Hunt"},"content":"4.|Delete Entry|_delete /id {INDEX}_|"},{"lineNumber":846,"author":{"gitId":"Artemis-Hunt"},"content":"6.|Exit to Manual Tracker|_exit_|"},{"lineNumber":847,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":848,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author bqxy --\u003e"},{"lineNumber":849,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":850,"author":{"gitId":"bqxy"},"content":"## FinanceTools"},{"lineNumber":851,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":852,"author":{"gitId":"bqxy"},"content":"No. | Feature | Syntax |"},{"lineNumber":853,"author":{"gitId":"bqxy"},"content":"----|---------|---------|"},{"lineNumber":854,"author":{"gitId":"bqxy"},"content":"1.|Simple Interest Calculator|_simple /a {AMOUNT} /r {INTEREST_RATE}_|"},{"lineNumber":855,"author":{"gitId":"bqxy"},"content":"2.|Yearly Compound Interest Calculator|_cyearly /a {AMOUNT} /r {INTEREST_RATE} /p {YEARS} /d {YEARLY_DEPOSIT}_|"},{"lineNumber":856,"author":{"gitId":"bqxy"},"content":"3.|Monthly Compound Interest Calculator|_cmonthly /a {AMOUNT} /r {INTEREST_RATE} /p {MONTHS} /d {MONTHLY_DEPOSIT}_|"},{"lineNumber":857,"author":{"gitId":"bqxy"},"content":"4.|Cashback Calculator|_cashb /a {AMOUNT} /r {CASHBACK_RATE} /c {CASHBACK_CAP}_|"},{"lineNumber":858,"author":{"gitId":"bqxy"},"content":"5.|Miles Credit Calculator|_miles /a {AMOUNT} /r {MILES_RATE}_|"},{"lineNumber":859,"author":{"gitId":"bqxy"},"content":"6.|Account Storage|_store /n {ACCOUNT_NAME} /ir {INTEREST_RATE} /r {CASHBACK_RATE} /c {CASHBACK_CAP} /o {OTHER_NOTES}_|"},{"lineNumber":860,"author":{"gitId":"bqxy"},"content":"7.|List Account(s) Information|_info_|"},{"lineNumber":861,"author":{"gitId":"bqxy"},"content":"8.|Clear All Account Information|_clearinfo_|"},{"lineNumber":862,"author":{"gitId":"bqxy"},"content":"9.|Command and Calculation History|_history_|"},{"lineNumber":863,"author":{"gitId":"bqxy"},"content":"10.|Exit to Main Menu|_exit_|"},{"lineNumber":864,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":865,"author":{"gitId":"bqxy"},"content":"\u003c!-- @@author --\u003e"},{"lineNumber":866,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":867,"author":{"gitId":"bqxy"},"content":"## Goal Tracker"},{"lineNumber":868,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":869,"author":{"gitId":"dixoncwc"},"content":"No. | Feature | Syntax |"},{"lineNumber":870,"author":{"gitId":"dixoncwc"},"content":"----|---------|---------|"},{"lineNumber":871,"author":{"gitId":"dixoncwc"},"content":"1.|Set Expense Goal|_expense {AMOUNT} for {MONTH IN INT VALUE}_|"},{"lineNumber":872,"author":{"gitId":"dixoncwc"},"content":"2.|Set Income Goal|_income {AMOUNT} for {MONTH IN INT VALUE}_|"},{"lineNumber":873,"author":{"gitId":"dixoncwc"},"content":"3.|Edit Expense Goal|_edit expense {AMOUNT} for {MONTH IN INT VALUE}_|"},{"lineNumber":874,"author":{"gitId":"dixoncwc"},"content":"4.|Edit Income Goal|_edit income {AMOUNT} for {MONTH IN INT VALUE}_|"},{"lineNumber":875,"author":{"gitId":"dixoncwc"},"content":"5.|Display Expense Goal|_display expense for {MONTH IN INT VALUE}_|"},{"lineNumber":876,"author":{"gitId":"dixoncwc"},"content":"6.|Display Income Goal|_display income for {MONTH IN INT VALUE}_|"},{"lineNumber":877,"author":{"gitId":"dixoncwc"},"content":"7.|Exit to Main Menu|_exit_|"},{"lineNumber":878,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":879,"author":{"gitId":"bqxy"},"content":"## Save Manager"},{"lineNumber":880,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":881,"author":{"gitId":"Feudalord"},"content":"No. | Feature | Syntax |"},{"lineNumber":882,"author":{"gitId":"Feudalord"},"content":"----|---------|---------|"},{"lineNumber":883,"author":{"gitId":"Feudalord"},"content":"1.|List save|_list_|"},{"lineNumber":884,"author":{"gitId":"Feudalord"},"content":"2.|Add save|_add /name {SAVE_NAME}_|"},{"lineNumber":885,"author":{"gitId":"Feudalord"},"content":"3.|Load save|_load /name {SAVE_NAME}_|"},{"lineNumber":886,"author":{"gitId":"Feudalord"},"content":"4.|Delete save|_delete /name {SAVE_NAME}_|"},{"lineNumber":887,"author":{"gitId":"Feudalord"},"content":"5.|Reset program|_reset_|"},{"lineNumber":888,"author":{"gitId":"Feudalord"},"content":"6.|Return to main menu|_exit_|"},{"lineNumber":889,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"dixoncwc":87,"Feudalord":90,"-":21,"bqxy":275,"Artemis-Hunt":114,"kaiwen98":302}},{"path":"docs/kaiwen98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"# Looi Kai Wen\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"# Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"# Overview"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"comfortable with a CLI interface. In the application, it consists of 5 sub-application that helps student to manage"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"their finance. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Code management"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"1. Project Management"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    * Managed releases `v1.0` - `v-2.0` on GitHub (2 releases)"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to the project on RepoSense. \u003cbr/\u003e"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    * **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkaiwen98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to TP repository "},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    1. Report and maintenance of [project issues and milestones](https://github.com/AY2021S1-CS2113-T16-1/tp/issues?q\u003d+is%3Aissue+author%3Akaiwen98+)"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        1. Bug reporting: [#16](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/16), [#19](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/19), [#3](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/3)"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        1. Features (ManualTracker): [#24](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/24)"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    1. [Pull Requests](https://github.com/AY2021S1-CS2113-T16-1/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Akaiwen98) to TP for code contribution "},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        1. Functional code contributions:"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            1. Dynamic Table Printer to be used for output throughout the software: [#7](https://github.com/CS2113-AY2021S1-T16-1/tp/pull/7)"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to ManualTracker and EntryTracker feature: [#28](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/28), [#1](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/1)"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to code quality and organisation: [#99](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/99), [#105](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/105), [#70](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/70), [#50](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/50)   "},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        1. Error Handling contributions: [#14](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/14)"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        1. Logging contributions: [#241](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/241), [#273](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/273)"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        1. Code testing contributions: [#240](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/240), [#57](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/57), [#45](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/45)"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Documentation"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"# Contributions to UG"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"# Manual Tracker"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"Users can manage lists of entries, which are known as ledgers. Each list represents a single date of record."},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    If I wish to record my income and expenditures on 30 October 2020, I will use the program as follows:"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    1. Use Manual Tracker to create a ledger of date 20-10-03"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    2. Open the ledger of date 20-10-03 "},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    3. Use Entry Tracker to create entries to record the transactions for that particular date"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"## Add ledger"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"Add a ledger to the record, representing a date."},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"    new {PARAM_TYPE} {PARAM} "},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_new.png)"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"## Remove ledger"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"Remove a specified ledger from the record, referenced by date or id on the list."},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":" "},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM}"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_delete1.png)"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"## Open ledger"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"Users will gain access into the entries associated with the specified ledger, referenced by date or id on the list."},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"* Automatic creation of non-existing ledgers "},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"    * If the ledger specified do not exist and if the param type supplied is \"/date\", the program will create a new ledger"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"    in accordance to the date supplied."},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"    * If the user specifies a non-existing index, then the program will not have enough information to create the new ledger instance. Automatic creation"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    will not apply in this particular case."},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"Refer to Feature Entry Tracker onwards for further instructions."},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    open {PARAM_TYPE} {PARAM}"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_open.png)"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e "},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"# Contributions to DG"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"### Manual Tracker \u0026 Entry Tracker"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"__Ledgers and Entries__"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"In this feature, we represent the transactions incurred by the users as ```Entry``` instances."},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"Instances of ```Entry``` class are categorised by the date of origin, which is represented by"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances."},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"```Entry``` instances are characterized by the following: "},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction: Income/ Expense "},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"* Amount in transaction"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"* Category of spending/ expenditure"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances are characterized by the following: "},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"* Collection of ```Entry```instances"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"**Manual Tracker** \u003cbr /\u003e"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is a feature that allows users to manage Ledgers with create, delete"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"and open operations. Ledgers is a class that maintains a list of transactions that are "},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"recorded for a given date. "},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"The Entry Tracker is fundamentally similar to the Manual Tracker, except it manages ```Entry``` instances"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"instead of ```Ledger```. Entry Tracker is initialized when a ```Ledger``` instance is \"opened\", whereby "},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"the Entry Tracker facilitate the manipulation of the collection of ```Entry``` instances that are associated with"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"that particular ```Ledger``` instance."},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"For the sake of brevity, this section will focus on the discussion of the Manual Tracker. "},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"The edit operation of the Entry Tracker will be discussed at the [end of this section](#entryseq); it is sufficiently unique to Manual Tracker operations to merit detailed discussion."},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is capable of executing the following states of operation:"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"|States| Operations | "},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"|```MAIN_MENU```|Go to main menu for users to choose the available operations"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"|```CREATE_LEDGER```|Create a ledger specified by date, and append it to ```ledgerList```."},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"|```DELETE_LEDGER```|Delete an existing ledger, referenced by date or index."},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"|```OPEN_LEDGER```|Go to subroutine \"Entry Tracker\" for the entries recorded  under the specified ledger."},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"**Architecture in Context** "},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"**Logic Manager and Parser** "},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler.png)"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |\t"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|\t"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"|```InputParser```| Breaks input string by user into ```commandString``` and a sequence of ```paramTypes```-```param``` pairs. \u003cbr\u003e\u003cbr\u003e The latter subsequence of the string is passed into ParamParser for further processing. \u003cbr\u003e\u003cbr\u003e Information obtained from input parsing will be used to populate an instantiated ```CommandPacket``` instance, which will then be passed to the entity that called the parsing function.\t"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"|```ParamParser```| Process the sequence of ```paramTypes```-```param``` pairs and populate the ```paramMap``` in the instantiated ```CommandPacket``` instance.\t"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"**Functions with Sequence Diagrams** \u003cbr /\u003e"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d entryseq\u003e\u003c/a\u003eEntry Tracker: Edit of entries** \u003cbr /\u003e"},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"The editing of details within the entry is performed in two phases: Entry Retrieval and Entry Edit."},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram0.png)"},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"    1. At ```EntryTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```EntryTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleEditEntry()``` will be called."},{"lineNumber":173,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Entry retrieval([Sequence Diagram](#diag3))__"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleEditEntry()```, the following processes will be executed:"},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"        1. A singleton instance of ```RetrieveEntryHandler``` is retrieved. The input String array will be passed into "},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"        ```retrieveEntryHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"        1. ```retrieveEntryHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"            1. For ```retrieveEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table3)."},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"            1. From ```EntryTracker```, call ```entryList.getItemAtCurrIndex``` to retrieve the entry specified by the index set to modify earlier."},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table3\u003e\u003c/a\u003e Param Handling Behavior"},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list \u003cbr/\u003efrom 1 onwards.|Call ```entryList.setIndexToModify()``` \u003cbr/\u003eto set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag3\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram2.png)"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Entry edit ([Sequence Diagram](#diag4))__ "},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"    1. Following Phase 1, the following processes will be executed:"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"        1. The singleton instance of ```EditEntryHandler``` is retrieved. There is no need to call ```EditEntryHandler.setRequiredParams()```"},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"        ; this command does not require params to modify. Instead, it acceps any params supplied and performs the edit accordingly."},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"        1. `editeEntryHandler.setPacket(packet)` is called to set packet."},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"    1. ```EditEntryHandler.handlePacket()``` is called to handle params in the packet."},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"        1. For ```EditEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table4)."},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table4\u003e\u003c/a\u003e Param Handling Behavior           "},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.AMOUNT```|\"/amt\"|Positive Double in 2 decimal places|Call ```entryList.setAmount()``` to set amount | ```ParamChecker.checkAndReturnDoubleSigned(packet)```|"},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.TIME```|\"/time\"|Various format of time in string, eg. \"15:00\"|Call ```entryList.setTime()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnTime(packet)```|"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INC```|\"-i\"|Income entry type flag|Call ```entryList.setEntryType(EntryType.INC)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.EXP```|\"-e\"|Expense entry type flag|Call ```entryList.setEntryType(EntryType.EXP)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DESCRIPTION```|\"/desc\"|Description in string, \u0027;\u0027 character is illegal.|Call ```entryList.setDescription()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDescription(packet)```|"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.CATEGORY```|\"/cat\"|A set of strings that corresponds with entry type|Call ```entryList.setCategory()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnCategories(packet)```|"},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag4\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram3.png)"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;"},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"kaiwen98":219}},{"path":"docs/team/artemis-hunt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"# Duan Yu Hang\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"## Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"## Overview"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"comfortable with a CLI interface. In the application, it consists of 5 sub-application that helps student to manage"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"their finance. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"## Summary of Contributions"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"### Code contributed"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"[RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dArtemis-Hunt\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"### Enhancements implemented"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"* RecurringTracker and associated RecurringEntry as well as RecurringEntryList"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    * Modified version of Entry Tracker with enhancements specific to recurring entries"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"        * Attributes specific to RecurringEntry"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"            * Day of month, auto/manual, notes"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"            * different toString() method as it is displayed differently"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        * Methods specific to RecurringEntryList"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"            * getEntryFromDayXtoY, which returns a list of entries between a given period"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    * If user inputs a day which not every month has (feb does not have day 30, for instance), "},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    it will remind the user, and this info will be displayed when the user types `list`"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"* ReminderGenerator for upcoming recurring entries"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    * Checks system date and generate reminders for entries upcoming in next 5 days"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    * If the reminder period overflows to next month, reminds entries that are end of current month"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"    and start of next month"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    * Reminders are not provided for entries that fall on a day which does not exist in the current "},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"    month (no reminder in feb for an entry on day 30)"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"* Logic for params parsing"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    * Recursive parsing of param type and param details, by looking for the current param type and the next param type or end of input"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"* Schema of CommandPacket, which stores the command and all params"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"    * HashMap structure to store the inputted params"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"### Contribution to UG"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"* Wrote section on Recurring Tracker"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"* Wrote summary of features and manual testing instructions for Recurring Tracker"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"### Contributions to DG"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"* Wrote section on Recurring Tracker"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"    * Created the class diagram as well as the two sequence diagrams"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"* Updated the class diagram in Design \u003e Logic Component "},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"* Updated writeup for Design \u003e Input manager."},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"* Updated writeup for Implementation \u003e Input manager."},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"* Summarized and updated writeup for Implementation \u003e Logic Managers"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"* Wrote section on \"Handling of params by `XYZCommandHandler`\""},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"* Looked through and cleaned up the Design and Module-level Implementation sections e.g. summarize portions"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"that were too wordy, rewording sentences for clarity, offered suggestions on UML diagram improvements (omit less "},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"important details, generalize certain components/interactions, break diagram into smaller pieces etc.)"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"### Contribution to team-based tasks"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"* Coding standard compliance"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"    * Refactored code to achieve higher degree of SLAP and to adhere to good design practices"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        * Refactor long chunks of code to individual methods/classes"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        * Abstracted out common portions of code into a standalone class to reduce copy-pasting"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        * Refactored some classes to singletons"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"    * Renamed variables, methods and classes for clarity"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"* Code clarity"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"    * Added JavaDoc comments for a significant portion of the methods"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"    * Added in-code comments for clarity"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"* Testing"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"    * Wrote some JUnit tests for common components e.g. ParamChecker, which is used by 3 features."},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"    * Wrote functions to generate random strings/double/integer to facilitate testing"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"* Bug reporting for other members\u0027 features: [#127](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/127), [#118](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/118), [#87](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/87)"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"* Used issue tracker for enhancements: [#90](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/90)"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"    "},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"### Review/mentoring contributions"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"* Reviewed [#74](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74)"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"    * Comprehensive checking of code, and many suggestions on improvement"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"* Provided suggestions on code structure and DG structure via WhatsApp chats"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"* Reviewed another team\u0027s program and reported bugs. For example: [#7](https://github.com/Artemis-Hunt/ped/issues/7), [#2](https://github.com/Artemis-Hunt/ped/issues/2), [#10](https://github.com/Artemis-Hunt/ped/issues/10)"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":""}],"authorContributionMap":{"Artemis-Hunt":74}},{"path":"docs/team/bqxy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"# Brandon Quek\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"## Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"comfortable with a CLI interface. It includes 5 different finance tools, all of which take in typed commands from the "},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"users to execute their respective functions. \u003cbr/\u003e"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"\u003cbr/\u003e"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"Given below are my contributions to the project. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"* **New Feature**"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"  * Added the ability to calculate interest earned over a period. "},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"    ([\\#29](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/29),"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"     [\\#80](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/80),"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"     [\\#81](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/81))"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"    * What it does: allows the user to calculate either simple interest or compound interest."},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"    * Justification: This feature improves the product significantly as interest computation and knowledge is an "},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"                     integral component of any finance-related product."},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"    * Highlights: The optional yearly or monthly deposits helps enhance the capability of this feature and more "},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"                  accurately reflects real-world situations."},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"  * Added the ability to calculate cashback and miles credit earned. "},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"    ([\\#40](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/40))"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    * What it does: allows the user to calculate either cashback or miles credit earned."},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    * Justification: This feature improves the product significantly as cashback and miles credit calculations are "},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"                     relevant to the project\u0027s target users who own a credit card."},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    * Highlights: The cashback calculator also includes an option to include the monthly cap so that the calculation"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"                  is made easier for user."},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"* **Code contributed** [RepoSense link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dbqxy\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"  "},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"* **Project management**"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"  * Team\u0027s [Google Docs](https://docs.google.com/document/d/1keHmuWwXtKrzDheih1o0Sb_BZ4sHQ1aAWvEHo0Jp0pM/edit)"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"  * Documentation Management "},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"    ([\\#219](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/219), "},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     [\\#218](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/218)"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"     [\\#166](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/166))"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"                              "},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"* **Enhancements to existing features**"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"  * Added ability to store account information. "},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"    ([\\#93](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/93),"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"     [\\#109](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/109))"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"    * What it does: allows user to store account-related information such as interest rate and cashback rate."},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"    * Justification: This feature caters to user who have multiple accounts with different interest rate, etc. It allows"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"                     them to refer their accounts easily."},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"    * Highlights: It also includes a feature to list account(s) information in the program, clear all information and"},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"                 delete account stored in the program."},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"  "},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"  * Added ability to store commands inputted by user and results of calculations. "},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"    ([\\#108](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/108),"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"     [\\#253](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/253))"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"    * What it does: allows the user to store the commands inputted and results from calculations"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"    * Justification: This feature allows user to compare interest computations from different input values so that"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"                     they can decide which inputs has the best interest they can potentially accrue."},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"    * Highlights: It also shows the past commands inputted by the user for reference."},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"  * Wrote additional test for existing feature to increase coverage. "},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"    ([\\#114](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/114))"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"  "},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"* **Documentation**"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"  * User Guide"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"    * Added documentation for the features ```simple```, ```cyearly```, ```cmonthly```, ```cashb```, ```miles```, "},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"      ```store```, ```info```, ```clearinfo```, and ```exit```. "},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"      ([\\#115](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/115),"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"       [\\#254](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/254))"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"    * Comestic tweaks to existing documentation "},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"      ([\\#207](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/207),"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"       [\\#208](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/208),"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"       [\\#221](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/221),"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"       [\\#223](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/223),"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"       [\\#224](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/224),"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"       [\\#225](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/225)"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"       [\\#251](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/251))"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"    "},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"   * Developer Guide"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"     * Added implementation details for the features ```simple```, ```cyearly```, ```cmonthly```, ```cashb```, "},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"       ```miles```, ```store```, ```info```, ```clearinfo```, and ```exit```. "},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"       ([\\#85](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/85),"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"        [\\#86](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/86),"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"        [\\#110](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/110),"},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"        [\\#255](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/255),"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"        [\\#258](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/258))"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"     * Comestic tweaks to existing documentation "},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"       ([\\#84](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/84),"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"        [\\#126](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/126),"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"        [\\#217](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/217),"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"        [\\#220](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/220)"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"        [\\#252](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/252))"},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"* **Community**"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"  * Reported bugs and suggestions for other teams "},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"    ([\\#1](https://github.com/bqxy/ped/issues/1),"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"     [\\#2](https://github.com/bqxy/ped/issues/2),"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"     [\\#3](https://github.com/bqxy/ped/issues/3),"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"     [\\#4](https://github.com/bqxy/ped/issues/4),"},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"     [\\#5](https://github.com/bqxy/ped/issues/5),"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"     [\\#6](https://github.com/bqxy/ped/issues/6),"},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"     [\\#7](https://github.com/bqxy/ped/issues/7))"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"* **Tools**"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"  * Introduced [PlantUML Web Server](http://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000) for UML diagrams"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"   "},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"  "}],"authorContributionMap":{"bqxy":101}},{"path":"docs/team/dixoncwc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dixoncwc"},"content":"# Dixon Chai\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"dixoncwc"},"content":"## Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"dixoncwc"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":5,"author":{"gitId":"dixoncwc"},"content":"comfortable with a CLI interface. In the application, it consists of 5 sub-application that helps student to manage"},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":"their finance. \u003cbr/\u003e"},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":"\u003cbr/\u003e"},{"lineNumber":8,"author":{"gitId":"dixoncwc"},"content":"Given below are my contributions to the project. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":10,"author":{"gitId":"dixoncwc"},"content":"* **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003ddixoncwc\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":"* **New Features** "},{"lineNumber":13,"author":{"gitId":"dixoncwc"},"content":"  * Implemented Setting of Goals feature"},{"lineNumber":14,"author":{"gitId":"dixoncwc"},"content":"    * What it does: It allows user to set expense/income goals."},{"lineNumber":15,"author":{"gitId":"dixoncwc"},"content":"    * Justification: This features improve the application significantly as user can now set a target that they want"},{"lineNumber":16,"author":{"gitId":"dixoncwc"},"content":"                     inside the application without having to remember it by themselves. "},{"lineNumber":17,"author":{"gitId":"dixoncwc"},"content":"    * Highlights: In budget managing, setting target goals is essential as it helps user to micro manage "},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":"                  their finance."},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":"                "},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":"  * Implemented Editing of Goals feature"},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":"    * What it does: It allows user to edit their expense/income goals for a specific month."},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":"    * Justification: This features improves the application significantly as user can make mistakes in typing their "},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"                     goal in the console and this feature will allow user to edit it without having to delete it. "},{"lineNumber":24,"author":{"gitId":"dixoncwc"},"content":"    * Highlights: This features requires changes to existing command as we have to extract the data from the arraylist"},{"lineNumber":25,"author":{"gitId":"dixoncwc"},"content":"                  and overwrite it."},{"lineNumber":26,"author":{"gitId":"dixoncwc"},"content":"                  "},{"lineNumber":27,"author":{"gitId":"dixoncwc"},"content":"  * Implemented Display of Goals feature"},{"lineNumber":28,"author":{"gitId":"dixoncwc"},"content":"    * What it does: It allows user to display their expense/income goals for a specific month."},{"lineNumber":29,"author":{"gitId":"dixoncwc"},"content":"    * Justification: This features improves the application significantly as user might forget their goal or lost track"},{"lineNumber":30,"author":{"gitId":"dixoncwc"},"content":"                     of their saving/expenditure so this allows the user to refer and keep track of the progress."},{"lineNumber":31,"author":{"gitId":"dixoncwc"},"content":"    * Highlights: It also tells the user if they have reached their desired goals, if not they will calculate the "},{"lineNumber":32,"author":{"gitId":"dixoncwc"},"content":"                  difference and prompt the user whether how much is left to spend/ how much more he/she need to save"},{"lineNumber":33,"author":{"gitId":"dixoncwc"},"content":"                  before reaching his/her income goals."},{"lineNumber":34,"author":{"gitId":"dixoncwc"},"content":"                  "},{"lineNumber":35,"author":{"gitId":"dixoncwc"},"content":"* **Project Management**"},{"lineNumber":36,"author":{"gitId":"dixoncwc"},"content":"  * Team\u0027s [Weekly Update Docs](https://docs.google.com/document/d/1keHmuWwXtKrzDheih1o0Sb_BZ4sHQ1aAWvEHo0Jp0pM/edit)"},{"lineNumber":37,"author":{"gitId":"dixoncwc"},"content":"  "},{"lineNumber":38,"author":{"gitId":"dixoncwc"},"content":"* **Enhancements to existing features**"},{"lineNumber":39,"author":{"gitId":"dixoncwc"},"content":"  * Added the ability to set goal in monthly format (Pull requests [#74](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74))"},{"lineNumber":40,"author":{"gitId":"dixoncwc"},"content":"  * Wrote additional JUnit tests for existing features to increase coverage"},{"lineNumber":41,"author":{"gitId":"dixoncwc"},"content":"    (Pull request [#74](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/74),"},{"lineNumber":42,"author":{"gitId":"dixoncwc"},"content":"    [#125](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/125))"},{"lineNumber":43,"author":{"gitId":"dixoncwc"},"content":"    "},{"lineNumber":44,"author":{"gitId":"dixoncwc"},"content":"* **Documentation**"},{"lineNumber":45,"author":{"gitId":"dixoncwc"},"content":"  * User Guide"},{"lineNumber":46,"author":{"gitId":"dixoncwc"},"content":"    * Added documentations for the feature ```set goal```, ```edit goal```, ```display goal```,"},{"lineNumber":47,"author":{"gitId":"dixoncwc"},"content":"     ```exit```."},{"lineNumber":48,"author":{"gitId":"dixoncwc"},"content":"     ([#125](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/125))"},{"lineNumber":49,"author":{"gitId":"dixoncwc"},"content":"  * Developer Guide"},{"lineNumber":50,"author":{"gitId":"dixoncwc"},"content":"    * Added implementation details for the features ```set goal```, ```edit goal```, ```display goal```,"},{"lineNumber":51,"author":{"gitId":"dixoncwc"},"content":"      ```exit```."},{"lineNumber":52,"author":{"gitId":"dixoncwc"},"content":"    * Added class and sequence diagram for the features ```set goal```."},{"lineNumber":53,"author":{"gitId":"dixoncwc"},"content":"      ([#88](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/88),"},{"lineNumber":54,"author":{"gitId":"dixoncwc"},"content":"       [#91](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/91))"},{"lineNumber":55,"author":{"gitId":"dixoncwc"},"content":"       "},{"lineNumber":56,"author":{"gitId":"dixoncwc"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"dixoncwc"},"content":"* **Community**"},{"lineNumber":58,"author":{"gitId":"dixoncwc"},"content":"  * Review other groups project during PED, reported bugs and suggested improvements."},{"lineNumber":59,"author":{"gitId":"dixoncwc"},"content":"  ([#1](https://github.com/dixoncwc/ped/issues/1),"},{"lineNumber":60,"author":{"gitId":"dixoncwc"},"content":"   [#2](https://github.com/dixoncwc/ped/issues/2),"},{"lineNumber":61,"author":{"gitId":"dixoncwc"},"content":"   [#3](https://github.com/dixoncwc/ped/issues/3),"},{"lineNumber":62,"author":{"gitId":"dixoncwc"},"content":"   [#4](https://github.com/dixoncwc/ped/issues/4),"},{"lineNumber":63,"author":{"gitId":"dixoncwc"},"content":"   [#5](https://github.com/dixoncwc/ped/issues/5))"},{"lineNumber":64,"author":{"gitId":"dixoncwc"},"content":"  "},{"lineNumber":65,"author":{"gitId":"dixoncwc"},"content":"* **Tools**"},{"lineNumber":66,"author":{"gitId":"dixoncwc"},"content":"  * Use [PlantUML Web Server](http://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000) to draw class and "},{"lineNumber":67,"author":{"gitId":"dixoncwc"},"content":"  sequence diagram."}],"authorContributionMap":{"dixoncwc":67}},{"path":"docs/team/kaiwen98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"# Looi Kai Wen\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"# Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"# Overview"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"comfortable with a CLI interface. In the application, it consists of 5 sub-application that helps student to manage"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"their finance. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Code management"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"1. Project Management"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    * Managed releases `v1.0` - `v-2.0` on GitHub (2 releases)"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to the project on RepoSense. \u003cbr/\u003e"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    * **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkaiwen98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to TP repository "},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    1. Report and maintenance of [project issues and milestones](https://github.com/AY2021S1-CS2113-T16-1/tp/issues?q\u003d+is%3Aissue+author%3Akaiwen98+)"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        1. Bug reporting: [#16](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/16), [#19](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/19), [#3](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/3)"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        1. Features (ManualTracker): [#24](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/24)"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    1. [Pull Requests](https://github.com/AY2021S1-CS2113-T16-1/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Akaiwen98) to TP for code contribution "},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        1. Functional code contributions:"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            1. Dynamic Table Printer to be used for output throughout the software: [#7](https://github.com/CS2113-AY2021S1-T16-1/tp/pull/7)"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to ManualTracker and EntryTracker feature: [#28](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/28), [#1](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/1)"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to code quality and organisation: [#99](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/99), [#105](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/105), [#70](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/70), [#50](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/50)   "},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        1. Error Handling contributions: [#14](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/14)"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        1. Logging contributions: [#241](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/241), [#273](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/273)"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        1. Code testing contributions: [#240](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/240), [#57](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/57), [#45](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/45)"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Documentation"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"# Contributions to UG"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"# Manual Tracker"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"Users can manage lists of entries, which are known as ledgers. Each list represents a single date of record."},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    If I wish to record my income and expenditures on 30 October 2020, I will use the program as follows:"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    1. Use Manual Tracker to create a ledger of date 20-10-03"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    2. Open the ledger of date 20-10-03 "},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    3. Use Entry Tracker to create entries to record the transactions for that particular date"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"## Add ledger"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"Add a ledger to the record, representing a date."},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"    new {PARAM_TYPE} {PARAM} "},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"![](../developerGuide_images/screenshots_manualtracker/manual_new.png)"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"## Remove ledger"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"Remove a specified ledger from the record, referenced by date or id on the list."},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":" "},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM}"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"![](../developerGuide_images/screenshots_manualtracker/manual_delete1.png)"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"## Open ledger"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"Users will gain access into the entries associated with the specified ledger, referenced by date or id on the list."},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"* Automatic creation of non-existing ledgers "},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"    * If the ledger specified do not exist and if the param type supplied is \"/date\", the program will create a new ledger"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"    in accordance to the date supplied."},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"    * If the user specifies a non-existing index, then the program will not have enough information to create the new ledger instance. Automatic creation"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    will not apply in this particular case."},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"Refer to Feature Entry Tracker onwards for further instructions."},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    open {PARAM_TYPE} {PARAM}"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"![](../developerGuide_images/screenshots_manualtracker/manual_open.png)"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e "},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"# Contributions to DG"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"### Manual Tracker \u0026 Entry Tracker"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"__Ledgers and Entries__"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"In this feature, we represent the transactions incurred by the users as ```Entry``` instances."},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"Instances of ```Entry``` class are categorised by the date of origin, which is represented by"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances."},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"```Entry``` instances are characterized by the following: "},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction: Income/ Expense "},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"* Amount in transaction"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"* Category of spending/ expenditure"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances are characterized by the following: "},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"* Collection of ```Entry```instances"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"**Manual Tracker** \u003cbr /\u003e"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is a feature that allows users to manage Ledgers with create, delete"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"and open operations. Ledgers is a class that maintains a list of transactions that are "},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"recorded for a given date. "},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"The Entry Tracker is fundamentally similar to the Manual Tracker, except it manages ```Entry``` instances"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"instead of ```Ledger```. Entry Tracker is initialized when a ```Ledger``` instance is \"opened\", whereby "},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"the Entry Tracker facilitate the manipulation of the collection of ```Entry``` instances that are associated with"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"that particular ```Ledger``` instance."},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"For the sake of brevity, this section will focus on the discussion of the Manual Tracker. "},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"The edit operation of the Entry Tracker will be discussed at the [end of this section](#entryseq); it is sufficiently unique to Manual Tracker operations to merit detailed discussion."},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is capable of executing the following states of operation:"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"|States| Operations | "},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"|```MAIN_MENU```|Go to main menu for users to choose the available operations"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"|```CREATE_LEDGER```|Create a ledger specified by date, and append it to ```ledgerList```."},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"|```DELETE_LEDGER```|Delete an existing ledger, referenced by date or index."},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"|```OPEN_LEDGER```|Go to subroutine \"Entry Tracker\" for the entries recorded  under the specified ledger."},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"**Architecture in Context** "},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"**Logic Manager and Parser** "},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"![](../uml_images/images_updated/Handler.png)"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |\t"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|\t"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"|```InputParser```| Breaks input string by user into ```commandString``` and a sequence of ```paramTypes```-```param``` pairs. \u003cbr\u003e\u003cbr\u003e The latter subsequence of the string is passed into ParamParser for further processing. \u003cbr\u003e\u003cbr\u003e Information obtained from input parsing will be used to populate an instantiated ```CommandPacket``` instance, which will then be passed to the entity that called the parsing function.\t"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"|```ParamParser```| Process the sequence of ```paramTypes```-```param``` pairs and populate the ```paramMap``` in the instantiated ```CommandPacket``` instance.\t"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"**Functions with Sequence Diagrams** \u003cbr /\u003e"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d entryseq\u003e\u003c/a\u003eEntry Tracker: Edit of entries** \u003cbr /\u003e"},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"The editing of details within the entry is performed in two phases: Entry Retrieval and Entry Edit."},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"![](../uml_images/images_updated/entryTrackerEditEntrySeqDiagram0s.png)"},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"    1. At ```EntryTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```EntryTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleEditEntry()``` will be called."},{"lineNumber":173,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Entry retrieval([Sequence Diagram](#diag3))__"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleEditEntry()```, the following processes will be executed:"},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"        1. A singleton instance of ```RetrieveEntryHandler``` is retrieved. The input String array will be passed into "},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"        ```retrieveEntryHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"        1. ```retrieveEntryHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"            1. For ```retrieveEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table3)."},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"            1. From ```EntryTracker```, call ```entryList.getItemAtCurrIndex``` to retrieve the entry specified by the index set to modify earlier."},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table3\u003e\u003c/a\u003e Param Handling Behavior"},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list \u003cbr/\u003efrom 1 onwards.|Call ```entryList.setIndexToModify()``` \u003cbr/\u003eto set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag3\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"![](../uml_images/images_updated/entryTrackerEditEntrySeqDiagram2s.png)"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Entry edit ([Sequence Diagram](#diag4))__ "},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"    1. Following Phase 1, the following processes will be executed:"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"        1. The singleton instance of ```EditEntryHandler``` is retrieved. There is no need to call ```EditEntryHandler.setRequiredParams()```"},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"        ; this command does not require params to modify. Instead, it acceps any params supplied and performs the edit accordingly."},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"        1. `editeEntryHandler.setPacket(packet)` is called to set packet."},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"    1. ```EditEntryHandler.handlePacket()``` is called to handle params in the packet."},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"        1. For ```EditEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table4)."},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table4\u003e\u003c/a\u003e Param Handling Behavior           "},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.AMOUNT```|\"/amt\"|Positive Double in 2 decimal places|Call ```entryList.setAmount()``` to set amount | ```ParamChecker.checkAndReturnDoubleSigned(packet)```|"},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.TIME```|\"/time\"|Various format of time in string, eg. \"15:00\"|Call ```entryList.setTime()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnTime(packet)```|"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INC```|\"-i\"|Income entry type flag|Call ```entryList.setEntryType(EntryType.INC)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.EXP```|\"-e\"|Expense entry type flag|Call ```entryList.setEntryType(EntryType.EXP)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DESCRIPTION```|\"/desc\"|Description in string, \u0027;\u0027 character is illegal.|Call ```entryList.setDescription()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDescription(packet)```|"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.CATEGORY```|\"/cat\"|A set of strings that corresponds with entry type|Call ```entryList.setCategory()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnCategories(packet)```|"},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag4\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":"![](../uml_images/images_updated/entryTrackerEditEntrySeqDiagram3s.png)"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;"},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"kaiwen98":219}},{"path":"docs/team/sly.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"# Sun Ling Yue - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"I have worked on a project in year 2020. This project was about creating a command line program to manage"},{"lineNumber":5,"author":{"gitId":"Feudalord"},"content":"your finances. We were a team of five NUS students. Each of us has chosen a unique feature to work on. For my"},{"lineNumber":6,"author":{"gitId":"Feudalord"},"content":"part, I have created a save and load manager that maintain copies of past saves to be loaded at will."},{"lineNumber":7,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"### Summary of Contributions"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"#### Code contribution"},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":"[RepoSense](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dfeudalord\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dFeudalord\u0026tabRepo\u003dAY2021S1-CS2113-T16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)"},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":"#### Enhancement implemented"},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":"##### Version one"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"- Implemented saving and loading of tracker classes upon entry and exit from the program."},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"- Main function implementation as well as main menu implementation."},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"##### Version two"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":"- Implemented save manager that allows adding, loading and deleting of multiple saves."},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"- Made sure saving is done the moment a change is made instead of only during program exit."},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"- Partially worked on saving of log files onto a text file."},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":"- Created a Junit test case to test load and save feature by comparing contents of loaded save and new save."},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"#### Contribution to documentation"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"My contribution for User Guide is on a section called save Manager. It details how to use the save manager with given examples."},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"#### Contribution to developer\u0027s guide"},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"My contribution of developer\u0027s guide is on a section called Storage utiliy as well as Save Manager manual testing and some user stories related to saving and"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"loading. Under the Save Manager section I also have created a class diagram and sequence diagram. Under Storage component I have also created an architecture"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"diagram and it\u0027s explaination."},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"#### Contribution to team based tasks"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"Contribution to weekly docs where we plan user stories next milestones etc."}],"authorContributionMap":{"Feudalord":33}},{"path":"kaiwen98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"# Looi Kai Wen\u0027s Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"# Project: FinanceIt"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"# Overview"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are "},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"comfortable with a CLI interface. In the application, it consists of 5 sub-application that helps student to manage"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"their finance. \u003cbr/\u003e"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Code management"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"1. Project Management"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    * Managed releases `v1.0` - `v-2.0` on GitHub (2 releases)"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to the project on RepoSense. \u003cbr/\u003e"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    * **Code contributed:** [RepoSense Link](https://nus-cs2113-ay2021s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dkaiwen98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-09-27\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"1. Contributions to TP repository "},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    1. Report and maintenance of [project issues and milestones](https://github.com/AY2021S1-CS2113-T16-1/tp/issues?q\u003d+is%3Aissue+author%3Akaiwen98+)"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        1. Bug reporting: [#16](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/16), [#19](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/19), [#3](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/3)"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        1. Features (ManualTracker): [#24](https://github.com/AY2021S1-CS2113-T16-1/tp/issues/24)"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    1. [Pull Requests](https://github.com/AY2021S1-CS2113-T16-1/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Akaiwen98) to TP for code contribution "},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        1. Functional code contributions:"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            1. Dynamic Table Printer to be used for output throughout the software: [#7](https://github.com/CS2113-AY2021S1-T16-1/tp/pull/7)"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to ManualTracker feature: [#28](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/28), [#1](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/1)"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            1. Contributions to code quality and organisation: [#99](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/99), [#105](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/105), [#70](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/70), [#50](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/50)   "},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        1. Error Handling contributions: [#14](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/14)"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        1. Code testing contributions: [#240](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/240), [#57](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/57), [#45](https://github.com/AY2021S1-CS2113-T16-1/tp/pull/45)"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e "},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"# Summary of Contributions: Documentation"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"# Contributions to UG"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"# FinanceIt: A Finance Management Application with a CLI Interface"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"FinanceIt is an all-in-one desktop application that handles the finance tracking needs of university students who are comfortable with a CLI interface."},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"It includes 5 different finance tools, all of which take in typed commands from the users to execute their respective functions."},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"* Table of Contents"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"{:toc}"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"# Set-up"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"## Setting up for Testers (IMPORTANT)"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"Prerequisites: A computer"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"1. Download the executable from our [latest release](https://github.com/AY2021S1-CS2113-T16-1/tp/releases/) ."},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"1. Save the executable file in your preferred folder."},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"1. Run the program via the command line. The command is: ```java -jar financeit.jar```."},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"## Setting up in Intellij"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"1. Download the latest release from the release page."},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"   1. Click `OK`"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"   1. Click `Open or Import`."},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"1. After the importing is complete, locate the `src/main/java/seedu.financeit/Financeit.java` file, right-click it, and choose `Run Financeit.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"__Output:__"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu.png)"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e   "},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"# Overview"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"## Main Features"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"Feature|Command|Description|"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"-------|-------|-----------|"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"Manual Tracker|```manual```| Manual entry of transactions. In Manual Tracker, the user manages daily lists of entries called Ledgers. "},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"Entry Tracker|```entry```| Subsidiary subroutine of Manual Tracker. In Entry Tracker, the user manages ledger entries, which represents a unit of transaction for a particular day."},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"Recurring Tracker|```recur```| In recurring Tracker, the user manages special recurring entries that are deducted on a regular basis, which are too cumbersome to record regularly with Entry Tracker."},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"Goal Tracker|```goal```| Sets income or expense goals, whereby the tracker will report to user his progress towards them whenever an entry is added."},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"Save Manager|```saver```| Allows save of multiple program running states and load them anytime you want. May also delete and reset running state."},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"Finance Tools|```finance```| FinanceTools contains tools related to financial calculations."},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"# Main Menu"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"Gateway to the various other features of the application. "},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"Upon running the application, you should be greeted by the main menu. Enter the corresponsing commands shown on the table to visit the desired feature!"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"Feature|Command|"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"-------|-------|"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"Manual Tracker|```manual```| "},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"Entry Tracker|```entry```| "},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"Recurring Tracker|```recur```| "},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"Goal Tracker|```goal```| "},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"Save Manager|```saver```| "},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"Finance Tools|```financial```| "},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"Quit|```quit```|"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"## Exit from Main Menu"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"Exits from the program. If you have an outstanding list, it will be saved automatically as lastSave.txt in"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"the saveStates folder. This folder will be automatically created when you first run the program."},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_mainmenu/main_menu_exit.png)"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e  "},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"# Manual Tracker"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"Users can manage lists of entries, which are known as ledgers. Each list represents a single date of record."},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"    If I wish to record my income and expenditures on 30 October 2020, I will use the program as follows:"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"    1. Use Manual Tracker to create a ledger of date 20-10-03"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"    2. Open the ledger of date 20-10-03 "},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"    3. Use Entry Tracker to create entries to record the transactions for that particular date"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"## Add ledger"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"Add a ledger to the record, representing a date."},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"    new {PARAM_TYPE} {PARAM} "},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_new.png)"},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"## Remove ledger"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"Remove a specified ledger from the record, referenced by date or id on the list."},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":" "},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM}"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_delete1.png)"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"## Open ledger"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"Users will gain access into the entries associated with the specified ledger, referenced by date or id on the list."},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":"This means that the user only need to specify one of the two param types, either ```/date``` or ```/id```."},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"* Automatic creation of non-existing ledgers "},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":"    * If the ledger specified do not exist and if the param type supplied is \"/date\", the program will create a new ledger"},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"    in accordance to the date supplied."},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":"    * If the user specifies a non-existing index, then the program will not have enough information to create the new ledger instance. Automatic creation"},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"    will not apply in this particular case."},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"Refer to Feature Entry Tracker onwards for further instructions."},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"    open {PARAM_TYPE} {PARAM}"},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":173,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"`/date`|Date of the ledger, and all the entries under that ledger.| Input string of the date in YYMMDD, YY-MM-DD or YY-M-D"},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the ledger in the list, where the first ledger is of index 1. | Input positive integer "},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_open.png)"},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"## Show ledger list"},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"Shows the record of ledgers that has been added."},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"    list"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_list.png)"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"## Print command list"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"Prints available commands that users can enter in for manualTracker."},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"    commands"},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_commands.png)"},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"## Exit to Main Menu"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"Exit to main menu where users can choose another feature to use."},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_manualtracker/manual_exit.png)"},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e   "},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":"# Entry Tracker"},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"Subroutine that is subsidiary off the ManualTracker. "},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":"Users can manage entries associated with the ledger they have opened."},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"Entries are specified by the following parameters:"},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"   * Time in which the transaction ocurred"},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction "},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"   * Income or Expense"},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":"* Category of transaction. The user is only limited to the following set of categories. "},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"   * Income: {Salary, Allowance, Others}"},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"   * Expense: {Transport, Food, Travel, Shopping, Bills, Others}"},{"lineNumber":229,"author":{"gitId":"kaiwen98"},"content":"* Amount"},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":"   * Amount involved in the transaction. "},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":"      * If the transaction type is expense, the amount is considered as a deduction to the account."},{"lineNumber":232,"author":{"gitId":"kaiwen98"},"content":"      * If the transaction type is income, the amount is considered as a credit to the account."},{"lineNumber":233,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"   * User input texts to help them record the details of the transaction."},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":"\u003e Example"},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":"    Ledger of date 20-10-03"},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"        Entry 1: Shopping at MBS : $1500"},{"lineNumber":240,"author":{"gitId":"kaiwen98"},"content":"        Entry 2: Salary : $3000"},{"lineNumber":241,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":242,"author":{"gitId":"kaiwen98"},"content":"    From the above, we can infer that on the date 20-10-03, the user has one expense entry and one income entry."},{"lineNumber":243,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":244,"author":{"gitId":"kaiwen98"},"content":"## Add entry"},{"lineNumber":245,"author":{"gitId":"kaiwen98"},"content":"Add an entry to the ledger record."},{"lineNumber":246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":247,"author":{"gitId":"kaiwen98"},"content":"__Note:__"},{"lineNumber":248,"author":{"gitId":"kaiwen98"},"content":"* For transaction categories, we require the users to enter the shortcut equivalent to the categories listed above. Refer to the following table."},{"lineNumber":249,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":250,"author":{"gitId":"kaiwen98"},"content":"Category|Category shortcut|Compatible transaction type"},{"lineNumber":251,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":252,"author":{"gitId":"kaiwen98"},"content":"FOOD|fd|Expense"},{"lineNumber":253,"author":{"gitId":"kaiwen98"},"content":"BILLS|bll|Expense"},{"lineNumber":254,"author":{"gitId":"kaiwen98"},"content":"TRANSPORT|tpt|Expense"},{"lineNumber":255,"author":{"gitId":"kaiwen98"},"content":"TRAVEL|tvl|Expense"},{"lineNumber":256,"author":{"gitId":"kaiwen98"},"content":"SALARY|slr|Expense"},{"lineNumber":257,"author":{"gitId":"kaiwen98"},"content":"ALLOWANCE|alw|Income"},{"lineNumber":258,"author":{"gitId":"kaiwen98"},"content":"OTHERS|oth|Income"},{"lineNumber":259,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":260,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":261,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":262,"author":{"gitId":"kaiwen98"},"content":"    new {PARAM_TYPE} {PARAM}"},{"lineNumber":263,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":264,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":265,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":266,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":267,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":268,"author":{"gitId":"kaiwen98"},"content":"`/amt`|Amount involved in the transaction.| Input positive floating point number in 2 d.p. \u003cbr/\u003e Can be $XX.XX, XX, etc."},{"lineNumber":269,"author":{"gitId":"kaiwen98"},"content":"`/cat`|Category of transaction. | Input string belonging in the set: {tpt, fd, tvl, shp, bll, slr, alw}"},{"lineNumber":270,"author":{"gitId":"kaiwen98"},"content":"`-i or -e`|Type of transaction. | No parameter required. "},{"lineNumber":271,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":272,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":273,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":274,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_create.png)"},{"lineNumber":275,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":276,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":277,"author":{"gitId":"kaiwen98"},"content":"## Edit entry"},{"lineNumber":278,"author":{"gitId":"kaiwen98"},"content":"Add an entry to the ledger record."},{"lineNumber":279,"author":{"gitId":"kaiwen98"},"content":"Users only need specify the param to edit, there is no need to fill out all params."},{"lineNumber":280,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":281,"author":{"gitId":"kaiwen98"},"content":"__Note__"},{"lineNumber":282,"author":{"gitId":"kaiwen98"},"content":"* While the index is compulsory to be provided, the rest of the params are not compulsory."},{"lineNumber":283,"author":{"gitId":"kaiwen98"},"content":"The users will include the params that they wish to modify."},{"lineNumber":284,"author":{"gitId":"kaiwen98"},"content":"* Hence, a sample command ```entry edit /id 1 /time 1600``` will modify entry at __index 1__ to __time 1600__."},{"lineNumber":285,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":286,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":287,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":288,"author":{"gitId":"kaiwen98"},"content":"    edit /id {INDEX} {PARAM_TYPE} {PARAM} ... "},{"lineNumber":289,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":290,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":291,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":292,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the entry in the list, where the first entry is of index 1. | Input positive integer"},{"lineNumber":293,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":294,"author":{"gitId":"kaiwen98"},"content":"`/amt`|Amount involved in the transaction.| Input positive floating point number in 2 d.p. \u003cbr/\u003e Can be $XX.XX, XX, etc."},{"lineNumber":295,"author":{"gitId":"kaiwen98"},"content":"`/cat`|Category of transaction. | Input string belonging in the set: {tpt, fd, tvl, shp, bll, slr, alw}"},{"lineNumber":296,"author":{"gitId":"kaiwen98"},"content":"`-i or -e`|Type of transaction. | No parameter required. "},{"lineNumber":297,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":298,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":299,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":300,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_edit_list.png)"},{"lineNumber":301,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":302,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":303,"author":{"gitId":"kaiwen98"},"content":"## Remove entry"},{"lineNumber":304,"author":{"gitId":"kaiwen98"},"content":"Remove a specified entry from the record, referenced by id on the list."},{"lineNumber":305,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":306,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":307,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":308,"author":{"gitId":"kaiwen98"},"content":"    delete {PARAM_TYPE} {PARAM} "},{"lineNumber":309,"author":{"gitId":"kaiwen98"},"content":"            "},{"lineNumber":310,"author":{"gitId":"kaiwen98"},"content":"Param Type| Param | Param Format"},{"lineNumber":311,"author":{"gitId":"kaiwen98"},"content":"----------|-------|------------|"},{"lineNumber":312,"author":{"gitId":"kaiwen98"},"content":"`/time`|Time of the entry.| Input string of the date in HHMM, HHMMSS or H."},{"lineNumber":313,"author":{"gitId":"kaiwen98"},"content":"`/id`|Index of the entry in the list, where the first entry is of index 1. | Input positive integer"},{"lineNumber":314,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":315,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":316,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":317,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_delete_list.png)"},{"lineNumber":318,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":319,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":320,"author":{"gitId":"kaiwen98"},"content":"## Show entry list"},{"lineNumber":321,"author":{"gitId":"kaiwen98"},"content":"Shows the record of entries that has been added."},{"lineNumber":322,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":323,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":324,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":325,"author":{"gitId":"kaiwen98"},"content":"    list"},{"lineNumber":326,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":327,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":328,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":329,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_list.png)"},{"lineNumber":330,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":331,"author":{"gitId":"kaiwen98"},"content":"## Print command list"},{"lineNumber":332,"author":{"gitId":"kaiwen98"},"content":"Prints available commands that users can enter in for manualTracker."},{"lineNumber":333,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":334,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":335,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":336,"author":{"gitId":"kaiwen98"},"content":"    commands"},{"lineNumber":337,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":338,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":339,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":340,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_commands.png)"},{"lineNumber":341,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":342,"author":{"gitId":"kaiwen98"},"content":"## Print categories"},{"lineNumber":343,"author":{"gitId":"kaiwen98"},"content":"Prints expenditure category shortcuts that the user can input in entry creation/ edit commands."},{"lineNumber":344,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":345,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":346,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":347,"author":{"gitId":"kaiwen98"},"content":"    cat"},{"lineNumber":348,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":349,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":350,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":351,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshots_entrytracker/entry_cat.png)"},{"lineNumber":352,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":353,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":354,"author":{"gitId":"kaiwen98"},"content":"## Exit to Manual Tracker Main Routine"},{"lineNumber":355,"author":{"gitId":"kaiwen98"},"content":"Exit to Manual tracker where users can choose another ledger."},{"lineNumber":356,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":357,"author":{"gitId":"kaiwen98"},"content":"\u003eSyntax"},{"lineNumber":358,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":359,"author":{"gitId":"kaiwen98"},"content":"    exit"},{"lineNumber":360,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":361,"author":{"gitId":"kaiwen98"},"content":"\u003e Example: "},{"lineNumber":362,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":363,"author":{"gitId":"kaiwen98"},"content":"![](developerGuide_images/screenshot_entrytracker/entry_exit.png)"},{"lineNumber":364,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":365,"author":{"gitId":"kaiwen98"},"content":"## Manual Tracker"},{"lineNumber":366,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":367,"author":{"gitId":"kaiwen98"},"content":"No. | Feature | Syntax |"},{"lineNumber":368,"author":{"gitId":"kaiwen98"},"content":"----|---------|---------|"},{"lineNumber":369,"author":{"gitId":"kaiwen98"},"content":"1.|Open Ledger|_open /date {YYMMDD} or delete /id {INDEX}_|"},{"lineNumber":370,"author":{"gitId":"kaiwen98"},"content":"2.|New Ledger|_new /date {YYMMDD}_|"},{"lineNumber":371,"author":{"gitId":"kaiwen98"},"content":"3.|List Ledgers|_list_|"},{"lineNumber":372,"author":{"gitId":"kaiwen98"},"content":"4.|Delete Ledgers|_delete /date {YYMMDD} or delete /id {INDEX}_ |;"},{"lineNumber":373,"author":{"gitId":"kaiwen98"},"content":"5.|Exit to Main Menu|_exit_|"},{"lineNumber":374,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":375,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e "},{"lineNumber":376,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":377,"author":{"gitId":"kaiwen98"},"content":"# Contributions to DG"},{"lineNumber":378,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":379,"author":{"gitId":"kaiwen98"},"content":"## Overview of Architecture"},{"lineNumber":380,"author":{"gitId":"kaiwen98"},"content":"__Architecture Diagram__"},{"lineNumber":381,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":382,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Overall.png)"},{"lineNumber":383,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":384,"author":{"gitId":"kaiwen98"},"content":"There are 5 distinct features that exists within the FinanceIt application, all of which are accessed via the main menu "},{"lineNumber":385,"author":{"gitId":"kaiwen98"},"content":"interface facilitated in FinanceIt.java."},{"lineNumber":386,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":387,"author":{"gitId":"kaiwen98"},"content":"The design of the software can be split into 5 distinct components:"},{"lineNumber":388,"author":{"gitId":"kaiwen98"},"content":"* Logic Manager component"},{"lineNumber":389,"author":{"gitId":"kaiwen98"},"content":"* Logic component"},{"lineNumber":390,"author":{"gitId":"kaiwen98"},"content":"* Input Manager component"},{"lineNumber":391,"author":{"gitId":"kaiwen98"},"content":"* Data component"},{"lineNumber":392,"author":{"gitId":"kaiwen98"},"content":"* Storage component"},{"lineNumber":393,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":394,"author":{"gitId":"kaiwen98"},"content":"## Logic Manager Component"},{"lineNumber":395,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":396,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_arch.png)"},{"lineNumber":397,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":398,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":399,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":400,"author":{"gitId":"kaiwen98"},"content":"The Logic Manager component serves as the bridge between user interface and program operations."},{"lineNumber":401,"author":{"gitId":"kaiwen98"},"content":"\u003cbr /\u003eIt includes 5 classes: "},{"lineNumber":402,"author":{"gitId":"kaiwen98"},"content":"* ```ManualTracker```"},{"lineNumber":403,"author":{"gitId":"kaiwen98"},"content":"* ```EntryTracker```"},{"lineNumber":404,"author":{"gitId":"kaiwen98"},"content":"* ```RecurringTracker```"},{"lineNumber":405,"author":{"gitId":"kaiwen98"},"content":"* ```GoalTracker```"},{"lineNumber":406,"author":{"gitId":"kaiwen98"},"content":"* ```FinanceTools```"},{"lineNumber":407,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":408,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":409,"author":{"gitId":"kaiwen98"},"content":"* ```ManualTracker```, `RecurringTracker` and ```EntryTracker``` maintains an instance of a ```DataList``` (```LedgerList``` and ```EntryList```) in ```Model``` respectively, "},{"lineNumber":410,"author":{"gitId":"kaiwen98"},"content":" and provides an interface for the user can append, remove or perform other ```Data``` operations with the contents of the ```Datalist```."},{"lineNumber":411,"author":{"gitId":"kaiwen98"},"content":"* ```GoalTracker``` maintains a list of income or expense ```Goals``` to track against entries in the ```EntryList```, "},{"lineNumber":412,"author":{"gitId":"kaiwen98"},"content":"and provides an interface for the user to append or remove ```Goals```."},{"lineNumber":413,"author":{"gitId":"kaiwen98"},"content":"* ```Finance Tools``` class provides an interface for users to utilize an array of "},{"lineNumber":414,"author":{"gitId":"kaiwen98"},"content":"finance calculator tools within it."},{"lineNumber":415,"author":{"gitId":"kaiwen98"},"content":"* All ```LogicManager``` classes use the ```InputManager``` component to process user input, then use ```Logic``` component"},{"lineNumber":416,"author":{"gitId":"kaiwen98"},"content":"to perform the operation associated with the param handling."},{"lineNumber":417,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":418,"author":{"gitId":"kaiwen98"},"content":"## Logic Component"},{"lineNumber":419,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":420,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Logic_arch.png)"},{"lineNumber":421,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":422,"author":{"gitId":"kaiwen98"},"content":"__Description__"},{"lineNumber":423,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":424,"author":{"gitId":"kaiwen98"},"content":"The Logic Component executes logic operations passed via a `CommandPacket`, by handling individual params "},{"lineNumber":425,"author":{"gitId":"kaiwen98"},"content":"contained in the `CommandPacket`."},{"lineNumber":426,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":427,"author":{"gitId":"kaiwen98"},"content":"__API__"},{"lineNumber":428,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":429,"author":{"gitId":"kaiwen98"},"content":"* Different `CommandHandler` classes are used in `LogicManager` classes to handle various operations e.g. new, edit, delete"},{"lineNumber":430,"author":{"gitId":"kaiwen98"},"content":"* If `CommandHandler` classes recognises a `param` from the `CommandPacket` instance, it performs a sub-operation"},{"lineNumber":431,"author":{"gitId":"kaiwen98"},"content":"associated with the `param`. For instance, `/date` will cause `CreateLedgerCommand` instance to set the date of the"},{"lineNumber":432,"author":{"gitId":"kaiwen98"},"content":"newly created ledger.  "},{"lineNumber":433,"author":{"gitId":"kaiwen98"},"content":"* `CommandHandler` in turn uses `ParamChecker` to verify validity of inputs before setting."},{"lineNumber":434,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":435,"author":{"gitId":"kaiwen98"},"content":"### Input Manager"},{"lineNumber":436,"author":{"gitId":"kaiwen98"},"content":"* Note: Refer to [Input Manager Component](#input-manager-component) above for class diagram "},{"lineNumber":437,"author":{"gitId":"kaiwen98"},"content":"illustration of the below subsections."},{"lineNumber":438,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":439,"author":{"gitId":"kaiwen98"},"content":"__Input Conventions__"},{"lineNumber":440,"author":{"gitId":"kaiwen98"},"content":"* The user input is composed of the following format:"},{"lineNumber":441,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":442,"author":{"gitId":"kaiwen98"},"content":"    \u003ccommand\u003e \u003cparam type\u003e \u003cparameter\u003e \u003cparam type\u003e \u003cparameter\u003e ..."},{"lineNumber":443,"author":{"gitId":"kaiwen98"},"content":"```"},{"lineNumber":444,"author":{"gitId":"kaiwen98"},"content":"* The ```command``` string determines the current state of the Finite State Machine, and"},{"lineNumber":445,"author":{"gitId":"kaiwen98"},"content":"hence the function executed. "},{"lineNumber":446,"author":{"gitId":"kaiwen98"},"content":"* The remainder of the string includes a series of  ```param type``` - ```param``` combinations, whereby"},{"lineNumber":447,"author":{"gitId":"kaiwen98"},"content":"```param type``` indicates the type of the parameter which is to be identified by the user class,"},{"lineNumber":448,"author":{"gitId":"kaiwen98"},"content":"and ```param``` indicates the parameter that is associated with the ```param type```. "},{"lineNumber":449,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":450,"author":{"gitId":"kaiwen98"},"content":"* Param types are restricted to two types: "},{"lineNumber":451,"author":{"gitId":"kaiwen98"},"content":"    * ```/\u003cstring\u003e```, requires a corresponding parameter."},{"lineNumber":452,"author":{"gitId":"kaiwen98"},"content":"        * Eg. ```param type```: ```/date```"},{"lineNumber":453,"author":{"gitId":"kaiwen98"},"content":"              \u003cbr\u003e  ```param``` : ```2020-04-04```"},{"lineNumber":454,"author":{"gitId":"kaiwen98"},"content":"    * ```-\u003cstring\u003e```, does not require a corresponding parameter. "},{"lineNumber":455,"author":{"gitId":"kaiwen98"},"content":"        * Reserved for param types which are used to specify a property to be true/false"},{"lineNumber":456,"author":{"gitId":"kaiwen98"},"content":"        * Eg. ```-auto```, to specify if an entry has automatic deduction. "},{"lineNumber":457,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":458,"author":{"gitId":"kaiwen98"},"content":"\u003ca name\u003d\"commandPacket\"\u003e\u003c/a\u003e __CommandPacket class__ "},{"lineNumber":459,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Contains two particular attributes to store the user input in an organised fashion."},{"lineNumber":460,"author":{"gitId":"kaiwen98"},"content":"    * ```commandString``` :  ```String``` Store the command string from the input."},{"lineNumber":461,"author":{"gitId":"kaiwen98"},"content":"    * ```paramMap``` : ```HashMap``` Store the pairs of ```param type``` and ```param``` present in the input string."},{"lineNumber":462,"author":{"gitId":"kaiwen98"},"content":"        * Key: ```param type```"},{"lineNumber":463,"author":{"gitId":"kaiwen98"},"content":"        * Value:  ```param```"},{"lineNumber":464,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":465,"author":{"gitId":"kaiwen98"},"content":"__InputParser class__"},{"lineNumber":466,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Parses the input string and returns a corresponding [```commandPacket```](#commandPacket)."},{"lineNumber":467,"author":{"gitId":"kaiwen98"},"content":"    * ```parseInput()```: "},{"lineNumber":468,"author":{"gitId":"kaiwen98"},"content":"        * Initializes a ```commandPacket``` and populates the ```commandString``` attribute."},{"lineNumber":469,"author":{"gitId":"kaiwen98"},"content":"        * Calls ParamParser instance to parse the segment of the input string"},{"lineNumber":470,"author":{"gitId":"kaiwen98"},"content":"        that corresponds with the sequence of ```param type``` - ```param``` pairs, and"},{"lineNumber":471,"author":{"gitId":"kaiwen98"},"content":"        return a HashMap populated with the aforementioned pairs."},{"lineNumber":472,"author":{"gitId":"kaiwen98"},"content":"        * Returns a fully populated ```commandPacket``` to be used by user classes."},{"lineNumber":473,"author":{"gitId":"kaiwen98"},"content":"         "},{"lineNumber":474,"author":{"gitId":"kaiwen98"},"content":"__ParamsParser class__"},{"lineNumber":475,"author":{"gitId":"kaiwen98"},"content":"* A helper class. Parses the subsequence of the input string that corresponds with sequence of "},{"lineNumber":476,"author":{"gitId":"kaiwen98"},"content":"```param type``` - ```param``` pairs."},{"lineNumber":477,"author":{"gitId":"kaiwen98"},"content":"    * Parsing of input for params via ```parseParams()```:"},{"lineNumber":478,"author":{"gitId":"kaiwen98"},"content":"        * __Step 1__: Use a regex helper class ```RegexMatcher``` to identify and extract ```param type``` that matches the "},{"lineNumber":479,"author":{"gitId":"kaiwen98"},"content":"        pattern specified in \"Input conventions\":"},{"lineNumber":480,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":481,"author":{"gitId":"kaiwen98"},"content":"            * Param types are restricted to two types: "},{"lineNumber":482,"author":{"gitId":"kaiwen98"},"content":"                * `/abcd`, requires a corresponding parameter."},{"lineNumber":483,"author":{"gitId":"kaiwen98"},"content":"                    * Example: \u003cbr\u003eparam type: `/date`, param: `2020-04-04`"},{"lineNumber":484,"author":{"gitId":"kaiwen98"},"content":"                * `-abcd`, does not require a corresponding parameter. "},{"lineNumber":485,"author":{"gitId":"kaiwen98"},"content":"                    * Reserved for param types which are used to specify a property to be true/false"},{"lineNumber":486,"author":{"gitId":"kaiwen98"},"content":"                    * Example: \u003cbr\u003e`-auto`, to specify if an entry has automatic deduction. "},{"lineNumber":487,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":488,"author":{"gitId":"kaiwen98"},"content":"        * __Step 2__: Identify the substring of the rest of the input string before the next ```param type``` or end-of-line, "},{"lineNumber":489,"author":{"gitId":"kaiwen98"},"content":"        as the ```param``` to the previously identified ```param type```. Extract it from the input string."},{"lineNumber":490,"author":{"gitId":"kaiwen98"},"content":"        * __Step 3__: Put the ```param type``` - ```param``` pair into a ```HashMap```."},{"lineNumber":491,"author":{"gitId":"kaiwen98"},"content":"        * __Step 4__: Repeat steps 1 to 4 until there is the input string is fully extracted."},{"lineNumber":492,"author":{"gitId":"kaiwen98"},"content":"        * __Step 5__: Return a ```HashMap``` populated with the aforementioned pairs."},{"lineNumber":493,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":494,"author":{"gitId":"kaiwen98"},"content":"### Main Menu"},{"lineNumber":495,"author":{"gitId":"kaiwen98"},"content":"- Loading up user data"},{"lineNumber":496,"author":{"gitId":"kaiwen98"},"content":"- Access to various features"},{"lineNumber":497,"author":{"gitId":"kaiwen98"},"content":"- Saving outstanding user data to respective save files"},{"lineNumber":498,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":499,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;  "},{"lineNumber":500,"author":{"gitId":"kaiwen98"},"content":"### Manual Tracker \u0026 Entry Tracker"},{"lineNumber":501,"author":{"gitId":"kaiwen98"},"content":"**Overview** \u003cbr /\u003e"},{"lineNumber":502,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":503,"author":{"gitId":"kaiwen98"},"content":"__Ledgers and Entries__"},{"lineNumber":504,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":505,"author":{"gitId":"kaiwen98"},"content":"In this feature, we represent the transactions incurred by the users as ```Entry``` instances."},{"lineNumber":506,"author":{"gitId":"kaiwen98"},"content":"Instances of ```Entry``` class are categorised by the date of origin, which is represented by"},{"lineNumber":507,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances."},{"lineNumber":508,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":509,"author":{"gitId":"kaiwen98"},"content":"```Entry``` instances are characterized by the following: "},{"lineNumber":510,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":511,"author":{"gitId":"kaiwen98"},"content":"* Type of transaction: Income/ Expense "},{"lineNumber":512,"author":{"gitId":"kaiwen98"},"content":"* Amount in transaction"},{"lineNumber":513,"author":{"gitId":"kaiwen98"},"content":"* Category of spending/ expenditure"},{"lineNumber":514,"author":{"gitId":"kaiwen98"},"content":"* Description"},{"lineNumber":515,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":516,"author":{"gitId":"kaiwen98"},"content":"```Ledger``` instances are characterized by the following: "},{"lineNumber":517,"author":{"gitId":"kaiwen98"},"content":"* Time of transaction"},{"lineNumber":518,"author":{"gitId":"kaiwen98"},"content":"* Collection of ```Entry```instances"},{"lineNumber":519,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":520,"author":{"gitId":"kaiwen98"},"content":"**Manual Tracker** \u003cbr /\u003e"},{"lineNumber":521,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":522,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is a feature that allows users to manage Ledgers with create, delete"},{"lineNumber":523,"author":{"gitId":"kaiwen98"},"content":"and open operations. Ledgers is a class that maintains a list of transactions that are "},{"lineNumber":524,"author":{"gitId":"kaiwen98"},"content":"recorded for a given date. "},{"lineNumber":525,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":526,"author":{"gitId":"kaiwen98"},"content":"The Entry Tracker is fundamentally similar to the Manual Tracker, except it manages ```Entry``` instances"},{"lineNumber":527,"author":{"gitId":"kaiwen98"},"content":"instead of ```Ledger```. Entry Tracker is initialized when a ```Ledger``` instance is \"opened\", whereby "},{"lineNumber":528,"author":{"gitId":"kaiwen98"},"content":"the Entry Tracker facilitate the manipulation of the collection of ```Entry``` instances that are associated with"},{"lineNumber":529,"author":{"gitId":"kaiwen98"},"content":"that particular ```Ledger``` instance."},{"lineNumber":530,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":531,"author":{"gitId":"kaiwen98"},"content":"For the sake of brevity, this section will focus on the discussion of the Manual Tracker. "},{"lineNumber":532,"author":{"gitId":"kaiwen98"},"content":"The edit operation of the Entry Tracker will be discussed at the [end of this section](#entryseq); it is sufficiently unique to Manual Tracker operations to merit detailed discussion."},{"lineNumber":533,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":534,"author":{"gitId":"kaiwen98"},"content":"The Manual Tracker is capable of executing the following states of operation:"},{"lineNumber":535,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":536,"author":{"gitId":"kaiwen98"},"content":"|States| Operations | "},{"lineNumber":537,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":538,"author":{"gitId":"kaiwen98"},"content":"|```MAIN_MENU```|Go to main menu for users to choose the available operations"},{"lineNumber":539,"author":{"gitId":"kaiwen98"},"content":"|```CREATE_LEDGER```|Create a ledger specified by date, and append it to ```ledgerList```."},{"lineNumber":540,"author":{"gitId":"kaiwen98"},"content":"|```DELETE_LEDGER```|Delete an existing ledger, referenced by date or index."},{"lineNumber":541,"author":{"gitId":"kaiwen98"},"content":"|```OPEN_LEDGER```|Go to subroutine \"Entry Tracker\" for the entries recorded  under the specified ledger."},{"lineNumber":542,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":543,"author":{"gitId":"kaiwen98"},"content":"**Architecture in Context** "},{"lineNumber":544,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":545,"author":{"gitId":"kaiwen98"},"content":"**Logic Manager and Parser** "},{"lineNumber":546,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":547,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler.png)"},{"lineNumber":548,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":549,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |\t"},{"lineNumber":550,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|\t"},{"lineNumber":551,"author":{"gitId":"kaiwen98"},"content":"|```InputParser```| Breaks input string by user into ```commandString``` and a sequence of ```paramTypes```-```param``` pairs. \u003cbr\u003e\u003cbr\u003e The latter subsequence of the string is passed into ParamParser for further processing. \u003cbr\u003e\u003cbr\u003e Information obtained from input parsing will be used to populate an instantiated ```CommandPacket``` instance, which will then be passed to the entity that called the parsing function.\t"},{"lineNumber":552,"author":{"gitId":"kaiwen98"},"content":"|```ParamParser```| Process the sequence of ```paramTypes```-```param``` pairs and populate the ```paramMap``` in the instantiated ```CommandPacket``` instance.\t"},{"lineNumber":553,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":554,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":555,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":556,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":557,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d logic_data\u003e\u003c/a\u003eLogic Manager and Data** \u003cbr /\u003e"},{"lineNumber":558,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":559,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_Data.png)"},{"lineNumber":560,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":561,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":562,"author":{"gitId":"kaiwen98"},"content":"|--------|--------|"},{"lineNumber":563,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| [Refer to section](#logicManager_handler)."},{"lineNumber":564,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":565,"author":{"gitId":"kaiwen98"},"content":"|```EntryList```| Omitted for brevity."},{"lineNumber":566,"author":{"gitId":"kaiwen98"},"content":"|```Entry```| Omitted for brevity."},{"lineNumber":567,"author":{"gitId":"kaiwen98"},"content":"|```LedgerList```| Extends ItemList. Refer to Ledgers and Entries section for class behavior."},{"lineNumber":568,"author":{"gitId":"kaiwen98"},"content":"|```Ledger```| Extends DateTimeItem. Refer to Ledgers and Entries section for class behavior."},{"lineNumber":569,"author":{"gitId":"kaiwen98"},"content":"|```ItemList```| Class with defined list behavior specified with helper methods such as retrieval, checking of Duplicates and deletion."},{"lineNumber":570,"author":{"gitId":"kaiwen98"},"content":"|```DateTimeItem```| Abstract class that extends ```Item``` class; instances will have ```LocalDate``` or ```LocalTime``` attributes and corresponding helper methods."},{"lineNumber":571,"author":{"gitId":"kaiwen98"},"content":"|```Item```| Abstract class to define behavior of entities that need are stored in ```ItemList``` instances."},{"lineNumber":572,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":573,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d handler_logic\u003e\u003c/a\u003eHandler and Logic** \u003cbr /\u003e"},{"lineNumber":574,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":575,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Commands_Logic.png)"},{"lineNumber":576,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":577,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":578,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":579,"author":{"gitId":"kaiwen98"},"content":"|```RetrieveLedgerHandler```| Process ```paramTypes```-```param``` pairs from the ```CommandPacket``` instance to identify specified ```Ledger``` instance, then retrieves the instance from the existing ```LedgerList```."},{"lineNumber":580,"author":{"gitId":"kaiwen98"},"content":"|```CreateLedgerHandler```| Process ```paramTypes```-```param``` pairs from the ```CommandPacket``` instance to identify specified ```Ledger``` instance to be created, then creates the instance and append to existing ```LedgerList```."},{"lineNumber":581,"author":{"gitId":"kaiwen98"},"content":"|```retrieveEntryHandler```| Omitted for brevity."},{"lineNumber":582,"author":{"gitId":"kaiwen98"},"content":"|```CreateEntryHandler```| Omitted for brevity."},{"lineNumber":583,"author":{"gitId":"kaiwen98"},"content":"|```EditEntryHandler```| Omitted for brevity."},{"lineNumber":584,"author":{"gitId":"kaiwen98"},"content":"|```ParamChecker```| Class contains a collection of methods that verify the correctness of the ```param``` supplied. \u003cbr\u003e\u003cbr\u003e For instance, ```ParamChecker.checkAndReturnIndex``` checks if the index provided is out of bounds relative to the specified list, and throws the relevant exception if the input index is invalid. "},{"lineNumber":585,"author":{"gitId":"kaiwen98"},"content":"|```ParamHandler```| Abstract class that outlines the general param handling behavior of ```commands``` instances and other classes that need to handle ```params``` in its operation.  "},{"lineNumber":586,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":587,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":588,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d logicManager_handler\u003e \u003c/a\u003eLogic Manager and Handler** \u003cbr /\u003e"},{"lineNumber":589,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":590,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/Handler_Commands.png)"},{"lineNumber":591,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":592,"author":{"gitId":"kaiwen98"},"content":"|Class| Function |"},{"lineNumber":593,"author":{"gitId":"kaiwen98"},"content":"|--------|----------|"},{"lineNumber":594,"author":{"gitId":"kaiwen98"},"content":"|```RetrieveLedgerHandler```| [Refer to section](#handler_logic)."},{"lineNumber":595,"author":{"gitId":"kaiwen98"},"content":"|```CreateLedgerHandler```| [Refer to section](#handler_logic)."},{"lineNumber":596,"author":{"gitId":"kaiwen98"},"content":"|```retrieveEntryHandler```| Omitted for brevity."},{"lineNumber":597,"author":{"gitId":"kaiwen98"},"content":"|```CreateEntryHandler```| Omitted for brevity."},{"lineNumber":598,"author":{"gitId":"kaiwen98"},"content":"|```EditEntryHandler```| Omitted for brevity."},{"lineNumber":599,"author":{"gitId":"kaiwen98"},"content":"|```ManualTracker```| Implements Manual Tracker. Contains handler methods that implements a particular operation capable by the Manual Tracker. \u003cbr\u003e\u003cbr\u003e These methods use the above ```command``` instances for param handling operations from user input."},{"lineNumber":600,"author":{"gitId":"kaiwen98"},"content":"|```EntryTracker```| Omitted for brevity."},{"lineNumber":601,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":602,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":603,"author":{"gitId":"kaiwen98"},"content":"**Functions with Sequence Diagrams** \u003cbr /\u003e"},{"lineNumber":604,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":605,"author":{"gitId":"kaiwen98"},"content":"**Creation of Ledger([Sequence Diagram](#diag1))** \u003cbr /\u003e"},{"lineNumber":606,"author":{"gitId":"kaiwen98"},"content":"1. At ```ManualTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":607,"author":{"gitId":"kaiwen98"},"content":"1. Input is parsed by ```InputParser.parseInput()```, and ```ManualTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":608,"author":{"gitId":"kaiwen98"},"content":"1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr/\u003eIn this case, ```handleCreateLedger()``` will be called."},{"lineNumber":609,"author":{"gitId":"kaiwen98"},"content":"1. At `handleCreateLedger()`, the following processes will be executed:"},{"lineNumber":610,"author":{"gitId":"kaiwen98"},"content":"    1. A new instance of ```CreateLedgerHandler``` is created. The input String array will be passed into `CreateLedgerHandler.setRequiredParams()` to set required params for a successful parse."},{"lineNumber":611,"author":{"gitId":"kaiwen98"},"content":"    1. A new instance of `Ledger` will be instantiated and set to `CreateLedgerHandler.currLedger`."},{"lineNumber":612,"author":{"gitId":"kaiwen98"},"content":"    1. ```CreateLedgerHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":613,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":614,"author":{"gitId":"kaiwen98"},"content":"        1. For `CreateLedgerHandler`, the `handleSingleParam` abstract method will be implemented as shown in the [following table](#table1)."},{"lineNumber":615,"author":{"gitId":"kaiwen98"},"content":"        "},{"lineNumber":616,"author":{"gitId":"kaiwen98"},"content":"1. From ```ManualTracker```, the configured ```Ledger``` instance will be retrieved from the ```CreateLedgerHandler``` instance"},{"lineNumber":617,"author":{"gitId":"kaiwen98"},"content":"and added into the ```LedgerList``` instance at ```ManualTracker.ledgerList```."},{"lineNumber":618,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":619,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table1\u003e\u003c/a\u003e Param Handling Behavior"},{"lineNumber":620,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":621,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":622,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":623,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DATE```|\"/date\"|Various format of date in string, eg. \"2020-03-02\"| Call ```currLedger.setDate()``` to set date for the ```Ledger``` instance. | ```ParamChecker.checkAndReturnDate(packet)```|"},{"lineNumber":624,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":625,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag1\u003e\u003c/a\u003e Sequence Diagram"},{"lineNumber":626,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":627,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/manualTrackerCreateLedgerSeqDiagram.png)"},{"lineNumber":628,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":629,"author":{"gitId":"kaiwen98"},"content":"**Deletion of Ledger ([Sequence Diagram](#diag2))** \u003cbr /\u003e"},{"lineNumber":630,"author":{"gitId":"kaiwen98"},"content":"The deletion of a specified ledger is performed in two phases: Ledger Retrieval and Ledger Delete."},{"lineNumber":631,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":632,"author":{"gitId":"kaiwen98"},"content":"    1. At ```ManualTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":633,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```ManualTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":634,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":635,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleDeleteLedger()``` will be called."},{"lineNumber":636,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Ledger retrieval__"},{"lineNumber":637,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleDeleteLedger()```, the following processes will be executed:"},{"lineNumber":638,"author":{"gitId":"kaiwen98"},"content":"        1. A new instance of ```RetrieveLedgerHandler``` is created. The input String array will be passed into "},{"lineNumber":639,"author":{"gitId":"kaiwen98"},"content":"        ```CreateLedgerHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":640,"author":{"gitId":"kaiwen98"},"content":"        1. ```RetrieveledgerHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":641,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":642,"author":{"gitId":"kaiwen98"},"content":"            1. For ```CreateLedgerHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table2):"},{"lineNumber":643,"author":{"gitId":"kaiwen98"},"content":"                * Note that only one of the two params need to be invoked from the input. "},{"lineNumber":644,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Ledger Deletion__"},{"lineNumber":645,"author":{"gitId":"kaiwen98"},"content":"    1. From ```ManualTracker```, call ```ledgerList.RemoveItemAtCurrIndex()``` to remove the ledger specified by the index set to modify earlier."},{"lineNumber":646,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":647,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table2\u003e\u003c/a\u003e Param Handling Behavior"},{"lineNumber":648,"author":{"gitId":"kaiwen98"},"content":"    "},{"lineNumber":649,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":650,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":651,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DATE```|\"/date\"|Various format of date in string, eg. \"2020-03-02\"| Call ```ledgerList.setIndexToModify()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDate(packet)```|"},{"lineNumber":652,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list from 1 onwards.|Call ```ledgerList.setIndexToModify()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":653,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":654,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag2\u003e\u003c/a\u003e Sequence Diagram"},{"lineNumber":655,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":656,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/manualTrackerDeleteLedgerSeqDiagram.png)"},{"lineNumber":657,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":658,"author":{"gitId":"kaiwen98"},"content":"**\u003ca name \u003d entryseq\u003e\u003c/a\u003eEntry Tracker: Edit of entries** \u003cbr /\u003e"},{"lineNumber":659,"author":{"gitId":"kaiwen98"},"content":"The editing of details within the entry is performed in two phases: Entry Retrieval and Entry Edit."},{"lineNumber":660,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":661,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram0.png)"},{"lineNumber":662,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":663,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 0: Instruction retrieval__ "},{"lineNumber":664,"author":{"gitId":"kaiwen98"},"content":"    1. At ```EntryTracker.handleMainMenu()```, the user\u0027s input is registered via ```java.util.Scanner``` instance."},{"lineNumber":665,"author":{"gitId":"kaiwen98"},"content":"    1. Input is parsed by ```InputParser.parseInput()```, and ```EntryTracker.packet``` is set to the returned ```CommandPacket``` instance."},{"lineNumber":666,"author":{"gitId":"kaiwen98"},"content":"    1. The ```commandString``` of the ```CommandPacket``` instance is evaluated, and the corresponding handle method() is executed.\u003cbr\u003e"},{"lineNumber":667,"author":{"gitId":"kaiwen98"},"content":"    In this case, ```handleEditEntry()``` will be called."},{"lineNumber":668,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 1: Entry retrieval([Sequence Diagram](#diag3))__"},{"lineNumber":669,"author":{"gitId":"kaiwen98"},"content":"    1. At ```handleEditEntry()```, the following processes will be executed:"},{"lineNumber":670,"author":{"gitId":"kaiwen98"},"content":"        1. A singleton instance of ```RetrieveEntryHandler``` is retrieved. The input String array will be passed into "},{"lineNumber":671,"author":{"gitId":"kaiwen98"},"content":"        ```retrieveEntryHandler.setRequiredParams()``` to set required params for a successful parse."},{"lineNumber":672,"author":{"gitId":"kaiwen98"},"content":"        1. ```retrieveEntryHandler.handlePacket(packet)``` is called to handle params in the packet."},{"lineNumber":673,"author":{"gitId":"kaiwen98"},"content":"            1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":674,"author":{"gitId":"kaiwen98"},"content":"            1. For ```retrieveEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table3)."},{"lineNumber":675,"author":{"gitId":"kaiwen98"},"content":"            1. From ```EntryTracker```, call ```entryList.getItemAtCurrIndex``` to retrieve the entry specified by the index set to modify earlier."},{"lineNumber":676,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":677,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table3\u003e\u003c/a\u003e Param Handling Behavior"},{"lineNumber":678,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":679,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":680,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":681,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INDEX```|\"/index\"|Valid index on the list \u003cbr/\u003efrom 1 onwards.|Call ```entryList.setIndexToModify()``` \u003cbr/\u003eto set index of retrieved item. | ```ParamChecker.checkAndReturnIndex(packet)```|"},{"lineNumber":682,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":683,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag3\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":684,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":685,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram2.png)"},{"lineNumber":686,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":687,"author":{"gitId":"kaiwen98"},"content":"1. __Phase 2: Entry edit ([Sequence Diagram](#diag4))__ "},{"lineNumber":688,"author":{"gitId":"kaiwen98"},"content":"    1. Following Phase 1, the following processes will be executed:"},{"lineNumber":689,"author":{"gitId":"kaiwen98"},"content":"        1. The singleton instance of ```EditEntryHandler``` is retrieved. There is no need to call ```EditEntryHandler.setRequiredParams()```"},{"lineNumber":690,"author":{"gitId":"kaiwen98"},"content":"        ; this command does not require params to modify. Instead, it acceps any params supplied and performs the edit accordingly."},{"lineNumber":691,"author":{"gitId":"kaiwen98"},"content":"        1. `editeEntryHandler.setPacket(packet)` is called to set packet."},{"lineNumber":692,"author":{"gitId":"kaiwen98"},"content":"    1. ```EditEntryHandler.handlePacket()``` is called to handle params in the packet."},{"lineNumber":693,"author":{"gitId":"kaiwen98"},"content":"        1. Refer to the section on [Param Handling](#impl_logic) for more details pertaining to general param handling. "},{"lineNumber":694,"author":{"gitId":"kaiwen98"},"content":"        1. For ```EditEntryHandler```, the ```handleSingleParam``` abstract method will be implemented as shown in the [following table](#table4)."},{"lineNumber":695,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":696,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d table4\u003e\u003c/a\u003e Param Handling Behavior           "},{"lineNumber":697,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":698,"author":{"gitId":"kaiwen98"},"content":"|ParamType|ParamType String| Expected Param | Operation | Verification method |"},{"lineNumber":699,"author":{"gitId":"kaiwen98"},"content":"|---------|----------------|----------------|-----------|---------------------|"},{"lineNumber":700,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.AMOUNT```|\"/amt\"|Positive Double in 2 decimal places|Call ```entryList.setAmount()``` to set amount | ```ParamChecker.checkAndReturnDoubleSigned(packet)```|"},{"lineNumber":701,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.TIME```|\"/time\"|Various format of time in string, eg. \"15:00\"|Call ```entryList.setTime()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnTime(packet)```|"},{"lineNumber":702,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.INC```|\"-i\"|Income entry type flag|Call ```entryList.setEntryType(EntryType.INC)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":703,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.EXP```|\"-e\"|Expense entry type flag|Call ```entryList.setEntryType(EntryType.EXP)``` to set index of retrieved item. | ```nil```|"},{"lineNumber":704,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.DESCRIPTION```|\"/desc\"|Description in string, \u0027;\u0027 character is illegal.|Call ```entryList.setDescription()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnDescription(packet)```|"},{"lineNumber":705,"author":{"gitId":"kaiwen98"},"content":"|```PARAM.CATEGORY```|\"/cat\"|A set of strings that corresponds with entry type|Call ```entryList.setCategory()``` to set index of retrieved item. | ```ParamChecker.checkAndReturnCategories(packet)```|"},{"lineNumber":706,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":707,"author":{"gitId":"kaiwen98"},"content":"#### \u003ca name \u003d diag4\u003e\u003c/a\u003e Sequence Diagram "},{"lineNumber":708,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":709,"author":{"gitId":"kaiwen98"},"content":"![](uml_images/images_updated/entryTrackerEditEntrySeqDiagram3.png)"},{"lineNumber":710,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":711,"author":{"gitId":"kaiwen98"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e"},{"lineNumber":712,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":713,"author":{"gitId":"kaiwen98"},"content":"\u0026nbsp;"}],"authorContributionMap":{"kaiwen98":713}},{"path":"src/main/java/seedu/financeit/Financeit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.goaltracker.GoalTracker;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.ManualTracker;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTracker;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.financetools.FinanceTools;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.ui.ReminderPrinter;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.LoggerCentre;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.RunHistory;"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.GoalTrackerSaver;"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.ManualTrackerSaver;"},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.RecurringTrackerSaver;"},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.SaveHandler;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.storage.SaveManager;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.Level;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":"//@@author Feudalord"},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"public class Financeit {"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"    static String prompt \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"        String input \u003d \"\";"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"        CommandPacket packet \u003d null;"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"        Level mode \u003d Level.WARNING;"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"        LoggerCentre.getInstance().setLevel(mode);"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"        LoggerCentre.createLog();"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"        LoggerCentre.loggerSystemMessages.info(\"\\n\\n\\nLogging from Load states......\\n\\n\\n\");"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"        //Grabs the System DateTime and stores it. Used for reminders"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"        RunHistory.setCurrentRunDateTime();"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"        ManualTrackerSaver.getInstance(\"./data\", \"./data/saveMt.txt\");"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"        GoalTrackerSaver.getInstance(\"./data\", \"./data/saveGt.txt\");"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"        RecurringTrackerSaver.getInstance(\"./data\", \"./data/saveAt.txt\");"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"        load();"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"        //Loads the dateTime when the program was last ran"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"        loadLastRunDateTime();"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"        //Updates last run dateTime to current dateTime"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"        saveCurrentRunDateTimeAsLastRun();"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":"        UiManager.refreshPage();"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"        UiManager.printLogo();"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"        LoggerCentre.loggerSystemMessages.info(\"\\n\\n\\nLogging from user operations......\\n\\n\\n\");"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"            while (true) {"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"                ReminderPrinter.printReminders();    //Print reminder for all upcoming recurring entries"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"                printMainMenu();"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"                input \u003d UiManager.handleInput();"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"                packet \u003d InputParser.getInstance().parseInput(input);"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"                UiManager.refreshPage();"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"                switch (packet.getCommandString()) {"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"                case \"manual\":"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"                    ManualTracker.execute();"},{"lineNumber":61,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"                case \"recur\":"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"                    RecurringTracker.execute();"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"                case \"goal\":"},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"                    GoalTracker.execute();"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"                case \"financial\":"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"                    FinanceTools.execute();"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"                case \"saver\":"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"                    SaveManager.main();"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"                case \"exit\":"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"                    save();"},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":"                            \"Exiting the program. Have a nice day!\");"},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"                    return;"},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"                default:"},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"                    prompt \u003d \"Invalid Command\";"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.loggerSystemMessages.info(\"\\n\\n\\nUnknown error......\\n\\n\\n\");"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"            System.out.println(\"An unknown error has occurred. Refer to the latest log messages.\");"},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":"    public static void status() {"},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":"        System.out.println(\"Status: \" + prompt);"},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":"        prompt \u003d \"\";"},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":98,"author":{"gitId":"Feudalord"},"content":"    public static void printMainMenu() {"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"        status();"},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.setTitle(\"Welcome to Main Menu\");"},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"No.; Feature                                           ; Commands                    \");"},{"lineNumber":102,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[1]; Manual Income/Expense Tracker; manual\");"},{"lineNumber":103,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[2]; Recurring Income/Expense Tracker; recur\");"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[3]; Goals Tracker; goal\");"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[4]; Financial Calculator; financial\");"},{"lineNumber":106,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[5]; Save Manager; saver\");"},{"lineNumber":107,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[6]; Quit The Program; exit\");"},{"lineNumber":108,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.printList();"},{"lineNumber":109,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"    public static void load() {"},{"lineNumber":112,"author":{"gitId":"Feudalord"},"content":"        GoalTrackerSaver.getInstance().load();"},{"lineNumber":113,"author":{"gitId":"Feudalord"},"content":"        ManualTrackerSaver.getInstance().load();"},{"lineNumber":114,"author":{"gitId":"Feudalord"},"content":"        RecurringTrackerSaver.getInstance().load();"},{"lineNumber":115,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":117,"author":{"gitId":"Feudalord"},"content":"    public static void save() {"},{"lineNumber":118,"author":{"gitId":"Feudalord"},"content":"        GoalTrackerSaver.getInstance().save();"},{"lineNumber":119,"author":{"gitId":"Feudalord"},"content":"        ManualTrackerSaver.getInstance().save();"},{"lineNumber":120,"author":{"gitId":"Feudalord"},"content":"        RecurringTrackerSaver.getInstance().save();"},{"lineNumber":121,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":123,"author":{"gitId":"Feudalord"},"content":"    public static void loadLastRunDateTime() {"},{"lineNumber":124,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"Feudalord"},"content":"            String lastRunDateTime \u003d SaveHandler.takeString(\"LastRunDateTime\");"},{"lineNumber":126,"author":{"gitId":"Feudalord"},"content":"            RunHistory.setLastRunDateTime(lastRunDateTime);"},{"lineNumber":127,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception m) {"},{"lineNumber":128,"author":{"gitId":"Feudalord"},"content":"            System.out.println(\"Failed to load last run time: \" + m);"},{"lineNumber":129,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":132,"author":{"gitId":"Feudalord"},"content":"    public static void saveCurrentRunDateTimeAsLastRun() {"},{"lineNumber":133,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"Feudalord"},"content":"            String currentDateTime \u003d RunHistory.getCurrentRunDateTime().toString();"},{"lineNumber":135,"author":{"gitId":"Feudalord"},"content":"            SaveHandler.putString(currentDateTime, \"LastRunDateTime\");"},{"lineNumber":136,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception m) {"},{"lineNumber":137,"author":{"gitId":"Feudalord"},"content":"            System.out.println(\"Failed to save current run time: \" + m);"},{"lineNumber":138,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":124,"Artemis-Hunt":2,"kaiwen98":14}},{"path":"src/main/java/seedu/financeit/common/CategoryMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * Bi-directional map to store transaction category and its corresponding user input shortcut."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"public class CategoryMap {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"     *  Used to parse user category input, ensures that the range of corresponding Categories to given input is"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"     *  confined to that in the CategoryMap."},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_TRANSPORT \u003d \"TRANSPORT\";"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_FOOD \u003d \"FOOD\";"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_TRAVEL \u003d \"TRAVEL\";"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_SHOPPING \u003d \"SHOPPING\";"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_BILLS \u003d \"BILLS\";"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_SALARY \u003d \"SALARY\";"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_ALLOWANCE \u003d \"ALLOWANCE\";"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    public static String CAT_OTHERS \u003d \"OTHERS\";"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_TRANSPORT \u003d \"tpt\";"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_FOOD \u003d \"fd\";"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_TRAVEL \u003d \"tvl\";"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_SHOPPING \u003d \"shp\";"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_BILLS \u003d \"bll\";"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_SALARY \u003d \"slr\";"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_ALLOWANCE \u003d \"alw\";"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    public static String INPUT_CAT_OTHERS \u003d \"oth\";"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static ArrayList\u003cString\u003e expenseCategories \u003d new ArrayList() {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_TRANSPORT);"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_FOOD);"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_TRAVEL);"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_SHOPPING);"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_BILLS);"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_OTHERS);"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"    };"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    public static ArrayList\u003cString\u003e incomeCategories \u003d new ArrayList() {"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        {"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_SALARY);"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_ALLOWANCE);"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            add(CAT_OTHERS);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"    };"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    public static HashMap\u003cString, String\u003e inputToCategoryMap \u003d new HashMap() {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        {"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_TRANSPORT, CAT_TRANSPORT);"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_FOOD, CAT_FOOD);"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_TRAVEL, CAT_TRAVEL);"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_SHOPPING, CAT_SHOPPING);"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_BILLS, CAT_BILLS);"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_SALARY, CAT_SALARY);"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_ALLOWANCE, CAT_ALLOWANCE);"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            put(INPUT_CAT_OTHERS, CAT_OTHERS);"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    };"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"     * Used by the SaveManager to convert category value in the Entry class to the"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"     * corresponding user input."},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"     * This allows the class to reconstruct the commands required to generate the"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"     * saved Entry instances."},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"    public static HashMap\u003cString, String\u003e categoryToInputMap \u003d new HashMap() {"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        {"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_TRANSPORT, INPUT_CAT_TRANSPORT);"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_FOOD, INPUT_CAT_FOOD);"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_TRAVEL, INPUT_CAT_TRAVEL);"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_SHOPPING, INPUT_CAT_SHOPPING);"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_BILLS, INPUT_CAT_BILLS);"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_SALARY, INPUT_CAT_SALARY);"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_ALLOWANCE, INPUT_CAT_ALLOWANCE);"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"            put(CAT_OTHERS, INPUT_CAT_OTHERS);"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    };"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"    public static String getInputFromCategory(String input) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        return categoryToInputMap.get(input);"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    public static String getCategoryFromInput(String input) {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"        return inputToCategoryMap.get(input);"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"    public void addNewCategory(String shortcut, String category) {"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        inputToCategoryMap.put(shortcut, category);"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"        categoryToInputMap.put(category, shortcut);"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":96}},{"path":"src/main/java/seedu/financeit/common/CommandPacket.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.Set;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":" * Organises data from input string into distinct data types and structure."},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":" * For scalability purposes, a hashmap is implemented to map param type to its corresponding params."},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"public class  CommandPacket {"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"    private String commandString;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    private HashMap paramMap;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"    // Constructors"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    public CommandPacket(String taskType, HashMap paramMap) {"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"        this.commandString \u003d taskType;"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"        this.paramMap \u003d paramMap;"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    public CommandPacket() {"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    // Param type refers to /.* (eg. /a)"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    // Param refers to string following the param type"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    public String getParam(String paramType) {"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"        if (!paramMap.containsKey(paramType)) {"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"            return null;"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"        return (String) paramMap.get(paramType);"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"    public Set\u003cString\u003e getParamTypes() {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        return paramMap.keySet();"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"    public String getCommandString() {"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.commandString.trim();"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"    public HashMap getParamMap() {"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"        return (HashMap)this.paramMap.clone();"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"%s, %s\\n\", this.commandString, this.paramMap);"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":46,"kaiwen98":4}},{"path":"src/main/java/seedu/financeit/common/Common.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"public class Common {"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"    public static final String[] DEFAULT_PARAM_TYPE_PREFIX \u003d {\"/\", \"-\"};"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"    public static final int MAX_PARTITION_LINE_LEN \u003d 60;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"    public static final int MAX_ARRAY_LEN \u003d 20;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final String[] MONTHS_LESS_THAN_31_DAYS \u003d {\"Feb\", \"Apr\", \"Jun\", \"Sept\", \"Nov\"};"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final String[] MONTHS_LESS_THAN_30_DAYS \u003d {\"Feb\"};"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"     * Types of entry, limited to Income and Expense."},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public enum EntryType {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        EXP(\"Expense\"),"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        INC(\"Income\");"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        public String literal;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        EntryType(String string) {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"            literal \u003d string;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        @Override"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        public String toString() {"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"            return literal;"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"     * Types of print messages on the console."},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    public enum PrintType {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        ERROR_MESSAGE(\"ERROR\"),"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        INSTRUCTION(\"TODO\"),"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        GOAL_STATUS(\"GOAL STATUS\"),"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        DIRECTORY(\"DIR\"),"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        SYS_MSG(\"SYSTEM MESSAGE\"),"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        REMINDER(\"REMINDER\");"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        public String literal;"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        PrintType(String string) {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"            literal \u003d string;"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        @Override"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        public String toString() {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            return literal;"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"    public static String convertVarArgsToString(String... varArgs) {"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"        String paramString \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        int count \u003d 0;"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        for (String param : varArgs) {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            paramString +\u003d param;"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            if (count \u003c varArgs.length - 1) {"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"                paramString +\u003d \", \";"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            count++;"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        return paramString;"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":5,"kaiwen98":58}},{"path":"src/main/java/seedu/financeit/common/ParamHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashSet;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":" * Defines a Logic abstract class that describes handling policies of user-inputted params."},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":" */"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"public abstract class ParamHandler {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    // Compulsory params that has to be parsed - varies based on individual subclass"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    protected HashSet\u003cString\u003e requiredParams \u003d new HashSet\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    // Params that parsed successfully"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"    protected HashSet\u003cString\u003e paramsSuccessfullyParsed \u003d new HashSet\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    // Params that are part of requiredParams yet are not present in paramsSuccessfullyParsed"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"    protected ArrayList\u003cString\u003e missingRequiredParams \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    protected boolean hasParsedAllRequiredParams \u003d false;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"     * Iteratively handles params in the packet and"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"     * evaluates if the param processing was successful."},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"     * @param packet input CommandPacket obtained from parsing user input."},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws InsufficientParamsException If not all compulsory params are successfully parsed"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ItemNotFoundException       For item retrieving cases, if params supplied does not correspond with"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"     *                                     an existing item in the list."},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    public void handleParams(CommandPacket packet)"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        // Reset Sequence"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        this.resetAllParamCollections();"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        this.hasParsedAllRequiredParams \u003d false;"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        ParamChecker.getInstance().setPacket(packet);"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"        // Handle each param using individual handleSingleParam of subclass"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        for (String paramType : packet.getParamTypes()) {"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"                handleSingleParam(packet, paramType);"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"                // ParamTypes that are parsed correctly"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"                // (i.e. no exception thrown) will be recorded"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"                this.paramsSuccessfullyParsed.add(paramType);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"                // Report paramTypes that failed to parse."},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.getInstance().getParseFailParamMessage(paramType));"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"        this.hasParsedAllRequiredParams \u003d checkParseFailedParams();"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"        if (!this.hasParsedAllRequiredParams) {"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"            throw new InsufficientParamsException(this.missingRequiredParams);"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"    public boolean getHasParsedAllRequiredParams() {"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        return this.hasParsedAllRequiredParams;"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"     * Adds given params to the set of required params."},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramTypes - all params that are required"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"    public void setRequiredParams(String... paramTypes) {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"        for (String paramType : paramTypes) {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"            this.requiredParams.add(paramType);"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"     * Clears params assigned to required params."},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"    public void resetAllParamCollections() {"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"        this.missingRequiredParams.clear();"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        this.paramsSuccessfullyParsed.clear();"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks and records any required param that is missing from successfully parsed params."},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"     * Makes use of class level HashSets to check and record."},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Whether all required params have been parsed"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"    protected boolean checkParseFailedParams() {"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String param: this.requiredParams) {"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"            boolean isRequiredParamParsed \u003d checkParamRequirementSatisfied(param);"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!isRequiredParamParsed) {"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"                this.missingRequiredParams.add(param);"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.missingRequiredParams.isEmpty();"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks whether the param has been parsed."},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"     * Can be single param or a set of params where one param satisfies the entire set"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"     * E.g. \"-i or -e\". Parsing either \"-i\" or \"-e\" will satisfy this requirement"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param param - Individual param string to check. Can be single param,"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"     *                or several params delimited by \" or \""},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Whether the param requirement has been satisfied"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"    protected boolean checkParamRequirementSatisfied(String param) {"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] paramArray \u003d param.split(\" or \");"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String paramInArray: paramArray) {"},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":"            if (this.paramsSuccessfullyParsed.contains(paramInArray)) {"},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"                return true;"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"Artemis-Hunt"},"content":"        return false;"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"     * To be implemented by children classes."},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws InsufficientParamsException If not all compulsory params are successfully parsed"},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ItemNotFoundException       For item retrieving cases, if params supplied does not correspond with"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"     *                                     an existing item in the list."},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"    public abstract void handleSingleParam(CommandPacket packet, String paramType)"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"        throws ParseFailParamException, ItemNotFoundException;"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":52,"kaiwen98":78}},{"path":"src/main/java/seedu/financeit/common/exceptions/DuplicateInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class that is thrown when the user attempts to create an item when there exists an identical"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * item previously added into the itemList."},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Case 1:"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * Ledger 200404 added"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" * Ledger 200404 added"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" * \u003c\u003c\u003c\u003c\u003c Exception thrown here"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"public class DuplicateInputException extends Exception {"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    public DuplicateInputException() {"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"        super();"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":15}},{"path":"src/main/java/seedu/financeit/common/exceptions/EmptyCommandStringException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class that is thrown when the user did not supply a command string."},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * Case 1: \"/param1 param\""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"public class EmptyCommandStringException extends Exception {"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"    public EmptyCommandStringException() {"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"        super(\"Command string cannot be empty!\");"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":11}},{"path":"src/main/java/seedu/financeit/common/exceptions/EmptyParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class is thrown when the CommandHandler requires a param to be supplied to a corresponding"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * param type, but the user did not supply any."},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Case 1: \"commandString /param \""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"public class EmptyParamException extends Exception {"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"    public EmptyParamException(String paramType) {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"        super(\"No params supplied to \" + paramType);"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":12}},{"path":"src/main/java/seedu/financeit/common/exceptions/FolderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"public class FolderNotFoundException extends Exception {"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":"    public FolderNotFoundException() {"},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"        super(\"Folder not found\");"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":7}},{"path":"src/main/java/seedu/financeit/common/exceptions/IncompatibleParamsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Exception class that is thrown when an incompatible param is supplied."},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * Whether there is a case of incompatibility will be determined by the CommandHandlers."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" * Case 1:"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" * new /cat tpt -i ......"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" * \u003c\u003c\u003c\u003c\u003c Exception is thrown, \"tpt\" is not compatible with \"-i\""},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"public class IncompatibleParamsException extends Exception {"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public IncompatibleParamsException(String... incompatibleParam) {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"        super(String.format(\"Params to \\\"%s\\\" are not compatible!\", Common.convertVarArgsToString(incompatibleParam)));"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":16}},{"path":"src/main/java/seedu/financeit/common/exceptions/InfoTextIndexOutOfRangeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"public class InfoTextIndexOutOfRangeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":"    public InfoTextIndexOutOfRangeException() {"},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"        super(\"Number does not correspond to any item on the list\");"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":7}},{"path":"src/main/java/seedu/financeit/common/exceptions/InsufficientParamsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Exception class that is thrown when a CommandHandler did not successfully parse all of the required params."},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * Case 1: Not enough valid params supplied by user."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" * Case 2: Invalid param supplied to a valid param type."},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"public class InsufficientParamsException extends Exception {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    public InsufficientParamsException(ArrayList\u003cString\u003e params) {"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"        super(\"The following params require valid input: \" + String.join(\", \", params));"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"    public InsufficientParamsException(String message) {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":5,"kaiwen98":13}},{"path":"src/main/java/seedu/financeit/common/exceptions/InvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class is thrown when the user attempts to supply a category that is"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * out of bounds."},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Case 1: \"new /cat helloworld \""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * \u003c\u003c\u003c\u003c\u003c Exception thrown, category is not recognised."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"public class InvalidCategoryException extends Exception {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    public InvalidCategoryException(String invalidParam) {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"        super(String.format(\"\\\"%s\\\" is not a valid category input!\", invalidParam));"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":13}},{"path":"src/main/java/seedu/financeit/common/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class is thrown when the user attempts to access an item"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * which does not exist in an itemList."},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Case 1: \"delete /id -5\""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * \u003c\u003c\u003c\u003c\u003c Exception thrown."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"public class ItemNotFoundException extends Exception {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    public ItemNotFoundException() {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"        super(\"The object cannot be found!\");"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":13}},{"path":"src/main/java/seedu/financeit/common/exceptions/ParseFailParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Exception class is thrown when the user supplied an invalid param to the param type."},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" * Whether a param is invalid would be determined in the ParamChecker singleton class."},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":" * Case 1: \"new /amt -1500\""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":" * \u003c\u003c\u003c\u003c\u003c Exception thrown, input amount cannot be negative."},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"public class ParseFailParamException extends Exception {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    public ParseFailParamException(String param) {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"        super(\"Failed to parse the following param: \" + param);"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":13}},{"path":"src/main/java/seedu/financeit/data/DateTimeItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.data;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.DateTimeOutputManager;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" * A children class of abstract Item."},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" * DateTimeItem classes will have LocalDate and LocalTime attributes,"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" * as well as associated methods for setting or presenting the attributes,"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":" * which can be used if it is characteristic of the item represented."},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"public abstract class DateTimeItem extends Item {"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    protected LocalTime time;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    protected DateTimeOutputManager dateTimeOutputManager \u003d new DateTimeOutputManager();"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    protected String defaultDateTimeFormat;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    public DateTimeItem() {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        this.date \u003d date;"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        this.dateTimeOutputManager \u003d new DateTimeOutputManager();"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        this.dateTimeOutputManager.setDate(date);"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    public LocalDate getDate() {"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        return this.date;"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    public void setTime(LocalTime time) {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        this.time \u003d time;"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        this.dateTimeOutputManager.setTime(time);"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    public LocalTime getTime() {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        return this.time;"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    public void setDefaultDateTimeFormat(String format) {"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        this.defaultDateTimeFormat \u003d format;"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    public String getDateFormatted() {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        return this.dateTimeOutputManager.getSingleDateFormatted(this.defaultDateTimeFormat);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    public String getTimeFormatted() {"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        return this.dateTimeOutputManager.getSingleTimeFormatted(this.defaultDateTimeFormat);"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":53}},{"path":"src/main/java/seedu/financeit/data/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.data;"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"dixoncwc"},"content":"import java.time.Month;"},{"lineNumber":4,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":5,"author":{"gitId":"dixoncwc"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":" * This is the class to set and get individual data."},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":" */"},{"lineNumber":8,"author":{"gitId":"dixoncwc"},"content":"public class Goal {"},{"lineNumber":9,"author":{"gitId":"dixoncwc"},"content":"    private int incomeGoal \u003d 0;"},{"lineNumber":10,"author":{"gitId":"dixoncwc"},"content":"    private int expenseGoal \u003d 0;"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":"    private Month incomeMonth;"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":"    private Month expenseMonth;"},{"lineNumber":13,"author":{"gitId":"dixoncwc"},"content":"    private String category;"},{"lineNumber":14,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":15,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"dixoncwc"},"content":"     * This is the function that will set the input into variable."},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":"     * @param goal     is the amount"},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":"     * @param category whether expense or income"},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":"     * @param month    states for which month the goal is for"},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":"    public Goal(int goal, String category, Month month) {"},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"        this.category \u003d category;"},{"lineNumber":24,"author":{"gitId":"dixoncwc"},"content":"        if (this.category.equals(\"Expense\")) {"},{"lineNumber":25,"author":{"gitId":"dixoncwc"},"content":"            setExpenseGoal(goal);"},{"lineNumber":26,"author":{"gitId":"dixoncwc"},"content":"            setExpenseMonth(month);"},{"lineNumber":27,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"dixoncwc"},"content":"            setIncomeGoal(goal);"},{"lineNumber":29,"author":{"gitId":"dixoncwc"},"content":"            setIncomeMonth(month);"},{"lineNumber":30,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"    public String getCategory() {"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"        return this.category;"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"     * Calling this function will output the expense month."},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"     * stored"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"     * @return"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"    public Month getExpenseMonth() {"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"        return this.expenseMonth;"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":47,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"dixoncwc"},"content":"     * This function set the expense month."},{"lineNumber":49,"author":{"gitId":"dixoncwc"},"content":"     * based on the month entered by the user"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"dixoncwc"},"content":"     * @param expenseMonth The month that for expense goal"},{"lineNumber":52,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"dixoncwc"},"content":"    public void setExpenseMonth(Month expenseMonth) {"},{"lineNumber":54,"author":{"gitId":"dixoncwc"},"content":"        this.expenseMonth \u003d expenseMonth;"},{"lineNumber":55,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":57,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"     * Calling this function will output the income month."},{"lineNumber":59,"author":{"gitId":"dixoncwc"},"content":"     * stored"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":62,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"    public Month getIncomeMonth() {"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"        return this.incomeMonth;"},{"lineNumber":65,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":67,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"dixoncwc"},"content":"     * This function set the income month."},{"lineNumber":69,"author":{"gitId":"dixoncwc"},"content":"     * based on the month entered by the user"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"dixoncwc"},"content":"     * @param incomeMonth The month that is for income goal"},{"lineNumber":72,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"dixoncwc"},"content":"    public void setIncomeMonth(Month incomeMonth) {"},{"lineNumber":74,"author":{"gitId":"dixoncwc"},"content":"        this.incomeMonth \u003d incomeMonth;"},{"lineNumber":75,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":77,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"     * Calling this function will output the."},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"     * income goal stored"},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":82,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"    public int getIncomeGoal() {"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"        return this.incomeGoal;"},{"lineNumber":85,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":87,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"dixoncwc"},"content":"     * This function will stored the income goal."},{"lineNumber":89,"author":{"gitId":"dixoncwc"},"content":"     * based on the goal being entered by the user"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"dixoncwc"},"content":"     * @param incomeGoal The amount that is set as the income goal"},{"lineNumber":92,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"dixoncwc"},"content":"    public void setIncomeGoal(int incomeGoal) {"},{"lineNumber":94,"author":{"gitId":"dixoncwc"},"content":"        assert this.incomeGoal !\u003d -1;"},{"lineNumber":95,"author":{"gitId":"dixoncwc"},"content":"        this.incomeGoal \u003d incomeGoal;"},{"lineNumber":96,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":98,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"     * Calling this function will output the expense goal."},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":"     * stored"},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":103,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"    public int getExpenseGoal() {"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"        return this.expenseGoal;"},{"lineNumber":106,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":108,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"dixoncwc"},"content":"     * This function will stored the expense goal."},{"lineNumber":110,"author":{"gitId":"dixoncwc"},"content":"     * based on the goal being entered by user"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"dixoncwc"},"content":"     * @param expenseGoal The amount that is set as the expense goal"},{"lineNumber":113,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"dixoncwc"},"content":"    public void setExpenseGoal(int expenseGoal) {"},{"lineNumber":115,"author":{"gitId":"dixoncwc"},"content":"        assert this.expenseGoal !\u003d -1;"},{"lineNumber":116,"author":{"gitId":"dixoncwc"},"content":"        this.expenseGoal \u003d expenseGoal;"},{"lineNumber":117,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"dixoncwc"},"content":"}"}],"authorContributionMap":{"dixoncwc":84,"Feudalord":33,"kaiwen98":1}},{"path":"src/main/java/seedu/financeit/data/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.data;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" * Item is a class that is element to ItemList."},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"public abstract class Item {"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"    protected int index \u003d -1;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    public Item() {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public void setIndex(int index) {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    public int getIndex() {"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        assert this.index !\u003d -1;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        return this.index;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    public abstract String getName();"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":23}},{"path":"src/main/java/seedu/financeit/data/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.data;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.Comparator;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" * List class that stores Item instances as its elements."},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":" * Extends ParamHandler so it is able to handle params from a CommandPacket."},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"public abstract class ItemList {"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    protected ArrayList\u003cItem\u003e items \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    protected int indexToModify;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    protected boolean isIndexToModifySet;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    protected String paramTypeFirst;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    public ItemList() {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    public void addItem(Item item) {"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        int index \u003d this.getListSize();"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        item.setIndex(index);"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        this.items.add(item);"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    public void setIndexToModify(int index, String paramType) throws ParseFailParamException {"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        if (index !\u003d indexToModify \u0026\u0026 isIndexToModifySet) {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"                \"Conflicting reference from two separate params!\","},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"                \"Please reference to item with one param only.\","},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"                // Add 1 to account for list index offset"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"[%s]: %s\", paramTypeFirst, indexToModify + 1),"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"[%s]: %s\", paramType, index + 1));"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"The first param, [%s] will be used instead.\", paramTypeFirst));"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            isIndexToModifySet \u003d false;"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        isIndexToModifySet \u003d true;"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        paramTypeFirst \u003d paramType;"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        this.indexToModify \u003d index;"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"    //@@author Artemis-Hunt"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"     * Add the given item and sort the list according to the given comparator."},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param item - Item to be added"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param comparator - Comparator object to determine sort order"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"    public void addItemAndSort(Item item, Comparator comparator) {"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        this.items.add(item);"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        items.sort(comparator);"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"    //@@author"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"    public int getListSize() {"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        return this.items.size();"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"    public int findIndexOfItem(Item item) {"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.items.indexOf(item);"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"    public ArrayList\u003cItem\u003e getItems() {"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.items;"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"    public boolean isItemDuplicate(Item item) {"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        for (Item i : this.items) {"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            if (i.equals(item)) {"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"                return true;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        return false;"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"    //@@author Artemis-Hunt"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"     * Provides a reference to the specified item at the zero-based index."},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"     * Requires index to have been parsed from user-input, else it will"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"     * attempt to access index -1."},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws IndexOutOfBoundsException If no index has been parsed yet and"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"     *                                   it attempts to access index -1."},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"    public Item getItemAtCurrIndex() throws IndexOutOfBoundsException {"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"        assert this.indexToModify \u003e\u003d 0;"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"        int index \u003d this.indexToModify;"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"        this.isIndexToModifySet \u003d false;"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.items.get(index);"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"    public Item popItemAtCurrIndex() throws IndexOutOfBoundsException {"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"        assert this.indexToModify \u003e\u003d 0;"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"        int index \u003d this.indexToModify;"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"        this.isIndexToModifySet \u003d false;"},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"        return this.items.remove(index);"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"    public Item getItemAtIndex(int index) throws IndexOutOfBoundsException {"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"        assert index \u003c items.size();"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"        Item item \u003d  this.items.get(index);"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"        this.isIndexToModifySet \u003d false;"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"        return item;"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":"    public void removeAllItems() {"},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"        this.items.clear();"},{"lineNumber":113,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":115,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"Artemis-Hunt"},"content":"     * Removes the specified item at the zero-based index. Requires index to"},{"lineNumber":117,"author":{"gitId":"Artemis-Hunt"},"content":"     * have been parsed from user-input, else it will attempt to access index -1."},{"lineNumber":118,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws IndexOutOfBoundsException If no index has been parsed yet and"},{"lineNumber":120,"author":{"gitId":"Artemis-Hunt"},"content":"     *                                   it attempts to access index -1."},{"lineNumber":121,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"Artemis-Hunt"},"content":"    public void removeItemAtCurrIndex() throws IndexOutOfBoundsException {"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"        assert this.indexToModify \u003e\u003d 0;"},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":"        this.items.remove(this.indexToModify);"},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"Artemis-Hunt"},"content":"     * Prints all items that are in the ItemList instance."},{"lineNumber":129,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"Artemis-Hunt"},"content":"    public abstract void printList();"},{"lineNumber":131,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Feudalord":1,"Artemis-Hunt":76,"kaiwen98":54}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.DateTimeItem;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" * Item class which represents transactions of the users."},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"public class Entry extends DateTimeItem {"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    private String description \u003d \" \";"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    private String category \u003d null;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    private Common.EntryType entryType \u003d null;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    private double amount \u003d -1;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    // Allows the entry to be have access to the date of its conception from its \"parent\" ledger."},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    private Ledger ledger \u003d null;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    public Entry() {"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"        super.setDefaultDateTimeFormat(\"\");"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    public Entry(Entry entry) {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        this();"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        this.category \u003d entry.category;"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        this.description \u003d entry.description;"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        this.amount \u003d entry.amount;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        this.entryType \u003d entry.entryType;"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        this.ledger \u003d entry.ledger;"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        this.setTime(entry.time);"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    public void setDescription(String description) {"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        return this.description;"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    public void setLedger(Ledger ledger) {"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        this.ledger \u003d ledger;"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    public void setAmount(double amount) {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        this.amount \u003d amount;"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    public double getAmount() {"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        return this.amount;"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"    public void setCategory(String category) {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"        this.category \u003d CategoryMap.getCategoryFromInput(category);"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"    public String getCategory() {"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        return this.category;"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"    public void setEntryType(Common.EntryType entryType) {"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        this.entryType \u003d entryType;"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"    public Common.EntryType getEntryType() {"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        return this.entryType;"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"    private String retrieveLastWord(String input) {"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        input \u003d input.replaceAll(\"\u003e\", \" \");"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        String[] tokens \u003d input.split(\" \");"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        return tokens[tokens.length - 1];"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"     * In certain system messages, referencing of entry type by full description can be"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"     * aesthetically unpleasing."},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"     * This method shortens the description printed."},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"     * @param description Full description of entry."},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"     * @return Shortened description of entry."},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"    private String getShortFormDesc(String description) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        int maxDescLength \u003d 20;"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        maxDescLength \u003d Math.min(maxDescLength, description.length());"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        String shortFormDescription \u003d description.substring(0, maxDescLength);"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        if (description.length() \u003e maxDescLength) {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"            shortFormDescription +\u003d \"... \";"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"            shortFormDescription +\u003d retrieveLastWord(description);"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"        return shortFormDescription;"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"    public String getName() {"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"Entry %d : [ %s ] [ %s ]\", this.getIndex() + 1,"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"            this.dateTimeOutputManager.getSingleTimeFormatted(\"\"),"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"            this.getShortFormDesc(this.description));"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"    public String toString() {"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"%s;%s;$%.2f;%s;%s\", this.entryType, this.category, this.amount,"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            this.getTimeFormatted(), this.description);"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"    public boolean equals(Object object) {"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        Entry entry \u003d (Entry) object;"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"        return (this.description.equals(entry.description))"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"            \u0026\u0026 (this.category.equals(entry.category))"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"            \u0026\u0026 (this.entryType.equals(entry.entryType))"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"            \u0026\u0026 (this.time.equals(entry.time))"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"            \u0026\u0026 (this.amount \u003d\u003d entry.amount);"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":117}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/EntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.ItemList;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" * Maintains a list of entries."},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"public class EntryList extends ItemList {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    Ledger ledger;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public EntryList(Ledger ledger) {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"        this.setLedger(ledger);"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    public void printList() {"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(String.format(\"List of Entries for Ledger [%s]\", this.ledger));"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"Entry Number;Entry Type;Category;Amount;Time;Description                    \");"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        if (super.getListSize() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"            TablePrinter.addRow(\"No entries created               \");"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"            for (int i \u003d 0; i \u003c super.getListSize(); i++) {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, super.items.get(i)));"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    public void setLedger(Ledger ledger) {"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        this.ledger \u003d ledger;"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"}"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"Artemis-Hunt":2,"kaiwen98":33}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/EntryTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.DuplicateInputException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.IncompatibleParamsException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.entrytracker.entryhandlers.CreateEntryHandler;"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.entrytracker.entryhandlers.EditEntryHandler;"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.entrytracker.entryhandlers.RetrieveEntryHandler;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.goaltracker.GoalTracker;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.ManualTrackerSaver;"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":" * LogicManager Class to handle routine for manual entry management."},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"public class EntryTracker {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    private static Ledger currLedger;"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    static EntryList entryList;"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"    private static CommandPacket packet;"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    private static boolean isUnderTest \u003d false;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    private static GoalTracker goalTracker \u003d new GoalTracker();"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    private static boolean endTracker;"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static void setTestPacket(CommandPacket inputPacket) {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        setCommandPacket(inputPacket);"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        isUnderTest \u003d true;"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"    public static void setCommandPacket(CommandPacket p) {"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"        packet \u003d p;"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"    public static void createEntry() {"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"        handleCreateEntry();"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    public static EntryList getEntryList() {"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        return entryList;"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"    public static void setCurrLedger(Ledger ledger) {"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"        currLedger \u003d ledger;"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        entryList \u003d ledger.entryList;"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"    public static void execute() {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"        endTracker \u003d false;"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"        while (!endTracker) {"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            handleMainMenu();"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"    private static void handleMainMenu() {"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        String input;"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.DIRECTORY,"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"[ MAIN_MENU -\u003e MANUAL_TRACKER_MENU -\u003e ENTRY_TRACKER (LEDGER %s)\", currLedger));"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"You are now in entry tracker for ledger [%s]!\", currLedger),"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"                \"Enter command!\","},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"                \"Input \\\"commands\\\" for list of commands.\""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        // If under test, the method should not expect any user input."},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        // Hence, skip this block of code."},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        if (!isUnderTest) {"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            UiManager.refreshPage();"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"            packet \u003d InputParser.getInstance().parseInput(input);"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        switch (packet.getCommandString()) {"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        case \"edit\":"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            handleEditEntry();"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"        case \"new\":"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            handleCreateEntry();"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        case \"list\":"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"            handleShowEntry();"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"        case \"delete\":"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"            handleDeleteEntry();"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        case \"exit\":"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            endTracker \u003d true;"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"        case \"commands\":"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"            printCommandList();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"        case \"cat\":"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"            printValidCategories();"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,\"Command not recognised. Try again.\");"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"    static void handleDeleteEntry() {"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveEntryHandler retrieveEntryHandler \u003d RetrieveEntryHandler.getInstance();"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        Entry deletedEntry;"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"            // RetrieveEntryCommand instance retrieves the corresponding entry instance"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"            // from the entryList instance."},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveEntryHandler.handlePacket(packet, entryList);"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"            deletedEntry \u003d (Entry) entryList.getItemAtCurrIndex();"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            // Deletion of entry."},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"            entryList.removeItemAtCurrIndex();"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"%s deleted!\", deletedEntry.getName()));"},{"lineNumber":122,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save();"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage());"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"    static void handleShowEntry() {"},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"        entryList.printList();"},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"    static void handleCreateEntry(Boolean... isPrintGoalInput) {"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"        boolean isPrintGoal \u003d !(isPrintGoalInput.length \u003e 0 \u0026\u0026 isPrintGoalInput[0] \u003d\u003d false);"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":141,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateEntryHandler createEntryHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"        Entry entry;"},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"            // CreateLedgerCommand instance generates a new Ledger instance"},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"            // from the params specified in the command."},{"lineNumber":147,"author":{"gitId":"Artemis-Hunt"},"content":"            createEntryHandler.handlePacket(packet);"},{"lineNumber":148,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d createEntryHandler.getCurrEntry();"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":"            // Checking of duplicates"},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"            if (entryList.isItemDuplicate(entry)) {"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"                throw new DuplicateInputException();"},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"            // Append entry to list."},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"            entryList.addItem(entry);"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"            // To allow disabling of print feature during JUnit testing."},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"            if (isPrintGoal \u003d\u003d true) {"},{"lineNumber":160,"author":{"gitId":"dixoncwc"},"content":"                goalTracker.targetGoalTracker(entry);"},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"%s created!\", entry.getName()));"},{"lineNumber":165,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save();"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | IncompatibleParamsException | ItemNotFoundException exception) {"},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage());"},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"        } catch (DuplicateInputException exception) {"},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":"                \"Duplicate item already exists in the list; not added!\");"},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":173,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!createEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"    static void handleEditEntry() {"},{"lineNumber":181,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveEntryHandler retrieveEntryHandler \u003d RetrieveEntryHandler.getInstance();"},{"lineNumber":182,"author":{"gitId":"Artemis-Hunt"},"content":"        EditEntryHandler editEntryHandler \u003d EditEntryHandler.getInstance();"},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"        Entry entry;"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"        Entry prevEntry \u003d null;"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":"            // RetrieveEntryCommand instance retrieves the corresponding entry instance"},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"            // from the entryList instance."},{"lineNumber":189,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveEntryHandler.handlePacket(packet, entryList);"},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"            // Remove the entry from the list."},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":"            entry \u003d (Entry) entryList.popItemAtCurrIndex();"},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"            prevEntry \u003d new Entry(entry);"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"            // EditEntryCommand instance edits details of the corresponding ledger instance"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"            // from the entryList instance."},{"lineNumber":195,"author":{"gitId":"Artemis-Hunt"},"content":"            editEntryHandler.setEntry(entry);"},{"lineNumber":196,"author":{"gitId":"Artemis-Hunt"},"content":"            editEntryHandler.handlePacket(packet);"},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"            // Add the edited entry back to the list."},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"            entryList.addItem(entry);"},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"%s edited!\", entry.getName()));"},{"lineNumber":202,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save();"},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | IncompatibleParamsException | ItemNotFoundException exception) {"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"            // If the edited entry is not valid, and if an entry is retrieved, add back in the previous entry."},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"            if (prevEntry !\u003d null) {"},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"                entryList.addItem(prevEntry);"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage());"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":211,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"    private static void printCommandList() {"},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(\"List of Commands\");"},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"No.;Command                 ;Input Format                                               \");"},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"1.;New entry;new /time {HHMM} /desc {string} /cat {STRING_CATEGORY} -[i/e] \""},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"            + \"/amt {DOUBLE (Positive, 2 decimal places) }\");"},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"2.;Edit entry;edit /id {INTEGER} { {PARAM_TYPE} {PARAM} }...\");"},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"3.;list entries;list\");"},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"4.;delete entry;delete /id {INTEGER}\");"},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"5.;list transaction categories;cat\");"},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"6.;exit to manual tracker;exit\");"},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":229,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":"    private static void printValidCategories() {"},{"lineNumber":232,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(\"List of Valid Categories\");"},{"lineNumber":233,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"Input shortcut;Category\");"},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"        for (String i : CategoryMap.inputToCategoryMap.keySet()) {"},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":"            TablePrinter.addRow(String.format(\"%s;%s\", i, CategoryMap.getCategoryFromInput(i)));"},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"dixoncwc":1,"Feudalord":13,"Artemis-Hunt":16,"kaiwen98":209}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/entryhandlers/CreateEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.entrytracker.entryhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.IncompatibleParamsException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.Entry;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_CATEGORY;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_TIME;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":" * CommandHandler class to create an entry instance, and populates it with parameter values."},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":" * The populated entry will be stored within the class, and can be retrieved by calling a"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":" * corresponding getter method."},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"public class CreateEntryHandler extends ParamHandler {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    Entry entry;"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    private static CreateEntryHandler handler \u003d null;"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"    private CreateEntryHandler() {"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        this.setRequiredParams("},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            PARAM_TIME,"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"            PARAM_DESCRIPTION,"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"            PARAM_CATEGORY,"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            PARAM_AMOUNT,"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            PARAM_INC + \" or \" + PARAM_EXP"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CreateEntryHandler getInstance() {"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new CreateEntryHandler();"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"    public void handlePacket(CommandPacket packet)"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, IncompatibleParamsException, ItemNotFoundException {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        this.entry \u003d new Entry();"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        this.handleParams(packet);"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"        checkCatAndEntryType();"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"    public void checkCatAndEntryType() throws IncompatibleParamsException {"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        switch (this.entry.getEntryType()) {"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"        case EXP:"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            if (!CategoryMap.expenseCategories.contains(this.entry.getCategory())) {"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"                    \"Category is not compatible with entry type!\","},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"                    \"-e : {fd, tpt, tvl, shp, bll, oth}\""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"                throw new IncompatibleParamsException(PARAM_EXP, PARAM_CATEGORY);"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"        case INC:"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            if (!CategoryMap.incomeCategories.contains(this.entry.getCategory())) {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"                    \"Category is not compatible with entry type!\","},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"                    \"-i : {slr, alw, oth}\""},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"                throw new IncompatibleParamsException(PARAM_INC, PARAM_CATEGORY);"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"            // Fall through"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        switch (paramType) {"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_TIME:"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"            LocalTime time \u003d ParamChecker.getInstance().checkAndReturnTime(paramType);"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setTime(time);"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_AMOUNT:"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"            Double amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setAmount(amount);"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_INC:"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setEntryType(Common.EntryType.INC);"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_EXP:"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setEntryType(Common.EntryType.EXP);"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_DESCRIPTION:"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"            String description \u003d ParamChecker.getInstance().checkAndReturnDescription(paramType);"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setDescription(description);"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_CATEGORY:"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"            String category \u003d ParamChecker.getInstance().checkAndReturnCategory(paramType);"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setCategory(category);"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"            String[] ignoreParams \u003d {"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                \"/id\""},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"            };"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"            if (! Arrays.asList(ignoreParams).contains(paramType)) {"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"     * Gets the entry that is generated from the command."},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"     * @return Entry instance"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"    public Entry getCurrEntry() {"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"        return this.entry;"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":11,"kaiwen98":117}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/entryhandlers/EditEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.entrytracker.entryhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.IncompatibleParamsException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.Entry;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_CATEGORY;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_TIME;"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":" * CommandHandler class to edit an existing entry instance with specified parameter values."},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":" * Entry to be edited must be referenced via the constructor argument."},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"public class EditEntryHandler extends ParamHandler {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    Entry entry;"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    String prevEntry;"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    private static EditEntryHandler handler \u003d null;"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"    // Function of constructor is to set required params"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"    // No constructor needed as there are no required params for edit entry"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    public void checkCatAndEntryType() throws IncompatibleParamsException {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        switch (this.entry.getEntryType()) {"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        case EXP:"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"            if (!CategoryMap.expenseCategories.contains(this.entry.getCategory())) {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"                    \"Category is not compatible with entry type!\","},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"                    \"-e : {fd, tpt, tvl, shp, bll, oth}\""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"                throw new IncompatibleParamsException(PARAM_EXP, PARAM_CATEGORY);"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        case INC:"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"            if (!CategoryMap.incomeCategories.contains(this.entry.getCategory())) {"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"                    \"Category is not compatible with entry type!\","},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"                    \"-i : {slr, alw, oth}\""},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"                throw new IncompatibleParamsException(PARAM_INC, PARAM_CATEGORY);"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            // Fall through"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"    public static EditEntryHandler getInstance() {"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new EditEntryHandler();"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setEntry(Entry entry) {"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        this.entry \u003d entry;"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"    public void checkIfParamToEditExists(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"        if (packet.getParamTypes().size() \u003c\u003d 1) {"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            assert packet.getParam(\"/id\") !\u003d null;"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"            throw new InsufficientParamsException(\"At least 1 param required for edit!\");"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"    public void checkIfParamToEditEffective() throws InsufficientParamsException {"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"        if (prevEntry.equals(entry.toString())) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            throw new InsufficientParamsException(\"Specified params do not differ from original information. \""},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"                + \"Entry did not change.\");"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"    public void handlePacket(CommandPacket packet)"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, ItemNotFoundException, IncompatibleParamsException {"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"        prevEntry \u003d entry.toString();"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        this.handleParams(packet);"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"        checkCatAndEntryType();"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"        checkIfParamToEditExists(packet);"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"        checkIfParamToEditEffective();"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"        switch (paramType) {"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_TIME:"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"            LocalTime time \u003d ParamChecker.getInstance().checkAndReturnTime(paramType);"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setTime(time);"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_AMOUNT:"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"            Double amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setAmount(amount);"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_INC:"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setEntryType(Common.EntryType.INC);"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_EXP:"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setEntryType(Common.EntryType.EXP);"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_DESCRIPTION:"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setDescription(packet.getParam(paramType));"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_CATEGORY:"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"            String category \u003d ParamChecker.getInstance().checkAndReturnCategory(paramType);"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"            this.entry.setCategory(category);"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"            String[] ignoreParams \u003d {"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"                PARAM_INDEX"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"            };"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"            if (!Arrays.asList(ignoreParams).contains(paramType)) {"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":15,"kaiwen98":119}},{"path":"src/main/java/seedu/financeit/datatrackers/entrytracker/entryhandlers/RetrieveEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.entrytracker.entryhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryList;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_CATEGORY;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_TIME;"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":" * CommandHandler class to reference an existing entry instance with specified parameter values."},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":" * Ledger will then be referenced for the ItemList instance as currItem."},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"public class RetrieveEntryHandler extends ParamHandler {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    EntryList entryList;"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    private static RetrieveEntryHandler handler \u003d null;"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"    private RetrieveEntryHandler() {"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        this.setRequiredParams("},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"            PARAM_INDEX"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RetrieveEntryHandler getInstance() {"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new RetrieveEntryHandler();"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    public void handlePacket(CommandPacket packet, EntryList entryList)"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        this.entryList \u003d entryList;"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        this.handleParams(packet);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType)"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        throws ParseFailParamException {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        switch (paramType) {"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"        //RetrieveEntryHandler is only concerned with index of entry."},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"        case ParamChecker.PARAM_INDEX:"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            int index \u003d ParamChecker.getInstance().checkAndReturnIndex(paramType, this.entryList.getItems());"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            this.entryList.setIndexToModify(index, paramType);"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            return;"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"            //Ignore other params, as those will be handled by EditEntryHandler"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            String[] ignoreParams \u003d {"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"                PARAM_AMOUNT,"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_CATEGORY,"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_DESCRIPTION,"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_EXP,"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"                PARAM_INC,"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_TIME,"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            };"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            if (!Arrays.asList(ignoreParams).contains(paramType)) {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":20,"kaiwen98":57}},{"path":"src/main/java/seedu/financeit/datatrackers/goaltracker/GoalTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.goaltracker;"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.Goal;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.Entry;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryList;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.LedgerList;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.ManualTracker;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.GoalTrackerSaver;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"import java.time.DateTimeException;"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"import java.time.Month;"},{"lineNumber":17,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":" * This is the class that will handle the setting of goals"},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":" * for expense and income for each and every individual months."},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":" */"},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"public class GoalTracker {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    private static String[] cmdPacket \u003d null;"},{"lineNumber":25,"author":{"gitId":"dixoncwc"},"content":"    private static String[] editPacket;"},{"lineNumber":26,"author":{"gitId":"dixoncwc"},"content":"    private static Goal goalToSet;"},{"lineNumber":27,"author":{"gitId":"dixoncwc"},"content":"    private static int expenseGoal \u003d 0;"},{"lineNumber":28,"author":{"gitId":"dixoncwc"},"content":"    private static int incomeGoal \u003d 0;"},{"lineNumber":29,"author":{"gitId":"dixoncwc"},"content":"    private static String input;"},{"lineNumber":30,"author":{"gitId":"dixoncwc"},"content":"    private static boolean exitTracker \u003d false;"},{"lineNumber":31,"author":{"gitId":"dixoncwc"},"content":"    private static TotalGoalList totalGoalList \u003d new TotalGoalList();"},{"lineNumber":32,"author":{"gitId":"dixoncwc"},"content":"    private static Entry entryData;"},{"lineNumber":33,"author":{"gitId":"dixoncwc"},"content":"    private static String entryCategory;"},{"lineNumber":34,"author":{"gitId":"dixoncwc"},"content":"    private static double totalExpenses \u003d 0.0;"},{"lineNumber":35,"author":{"gitId":"dixoncwc"},"content":"    private static double expenses \u003d 0.0;"},{"lineNumber":36,"author":{"gitId":"dixoncwc"},"content":"    private static double incomes \u003d 0.0;"},{"lineNumber":37,"author":{"gitId":"dixoncwc"},"content":"    private static double totalIncomes \u003d 0.0;"},{"lineNumber":38,"author":{"gitId":"dixoncwc"},"content":"    private static Month month;"},{"lineNumber":39,"author":{"gitId":"dixoncwc"},"content":"    private static Month ledgerMonth;"},{"lineNumber":40,"author":{"gitId":"dixoncwc"},"content":"    private static boolean isExist \u003d false;"},{"lineNumber":41,"author":{"gitId":"dixoncwc"},"content":"    private static boolean isEnd \u003d false;"},{"lineNumber":42,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":43,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"dixoncwc"},"content":"     * This main() function will handle the user input and based on the input will call out"},{"lineNumber":45,"author":{"gitId":"dixoncwc"},"content":"     * to another method/function."},{"lineNumber":46,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":48,"author":{"gitId":"dixoncwc"},"content":"    //@@author dixoncwc"},{"lineNumber":49,"author":{"gitId":"dixoncwc"},"content":"    public static void execute() {"},{"lineNumber":50,"author":{"gitId":"dixoncwc"},"content":"        exitTracker \u003d false;"},{"lineNumber":51,"author":{"gitId":"dixoncwc"},"content":"        while (!exitTracker) {"},{"lineNumber":52,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Welcome to Goals Tracker\");"},{"lineNumber":53,"author":{"gitId":"dixoncwc"},"content":"            displayCommandList();"},{"lineNumber":54,"author":{"gitId":"dixoncwc"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":55,"author":{"gitId":"dixoncwc"},"content":"            cmdPacket \u003d InputParser.getInstance().parseGoalCommand(input.toLowerCase());"},{"lineNumber":56,"author":{"gitId":"dixoncwc"},"content":"            editPacket \u003d InputParser.getInstance().parseEditCommand(input.toLowerCase());"},{"lineNumber":57,"author":{"gitId":"dixoncwc"},"content":"            switch (cmdPacket[0]) {"},{"lineNumber":58,"author":{"gitId":"dixoncwc"},"content":"            case \"expense\":"},{"lineNumber":59,"author":{"gitId":"dixoncwc"},"content":"                setExpenseGoal(cmdPacket);"},{"lineNumber":60,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":61,"author":{"gitId":"dixoncwc"},"content":"            case \"income\":"},{"lineNumber":62,"author":{"gitId":"dixoncwc"},"content":"                setIncomeGoal(cmdPacket);"},{"lineNumber":63,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"dixoncwc"},"content":"            case \"display\":"},{"lineNumber":65,"author":{"gitId":"dixoncwc"},"content":"                handleDisplayGoal();"},{"lineNumber":66,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"dixoncwc"},"content":"            case \"edit\":"},{"lineNumber":68,"author":{"gitId":"dixoncwc"},"content":"                editGoal(editPacket);"},{"lineNumber":69,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"dixoncwc"},"content":"            case \"exit\":"},{"lineNumber":71,"author":{"gitId":"dixoncwc"},"content":"                exitTracker \u003d true;"},{"lineNumber":72,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"dixoncwc"},"content":"            default:"},{"lineNumber":74,"author":{"gitId":"dixoncwc"},"content":"                System.out.println(\"Invalid Command\");"},{"lineNumber":75,"author":{"gitId":"dixoncwc"},"content":"                cmdPacket \u003d InputParser.getInstance().parseGoalCommand(input.toLowerCase());"},{"lineNumber":76,"author":{"gitId":"dixoncwc"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":81,"author":{"gitId":"dixoncwc"},"content":"    public static void displayCommandList() {"},{"lineNumber":82,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.setTitle(\"List of Commands\");"},{"lineNumber":83,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"No.;Command            ;Input Format                                                \");"},{"lineNumber":84,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"1.;Expense Goal;expense {amount} for {Month in number form (e.g 01 \u003d Jan)}\");"},{"lineNumber":85,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"2.;Income Goal;income {amount} for {Month in number form (e.g 01 \u003d Jan)}\");"},{"lineNumber":86,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"3.;Display Expense/Income goal for individual month;display expense/income for \""},{"lineNumber":87,"author":{"gitId":"dixoncwc"},"content":"                + \"{Month in number form (e.g 01 \u003d Jan)}\");"},{"lineNumber":88,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"4.;Edit Expense/Income Goal;edit expense/income {amount} for \""},{"lineNumber":89,"author":{"gitId":"dixoncwc"},"content":"                + \"{Month in number form (e.g 01 \u003d Jan)}\");"},{"lineNumber":90,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.addRow(\"5.;Exit Goals Tracker;{exit}\");"},{"lineNumber":91,"author":{"gitId":"dixoncwc"},"content":"        TablePrinter.printList();"},{"lineNumber":92,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":93,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":95,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"dixoncwc"},"content":"     * This function will parse the command to check whether it is for income."},{"lineNumber":97,"author":{"gitId":"dixoncwc"},"content":"     * or expense goal"},{"lineNumber":98,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"dixoncwc"},"content":"    public static void editGoal(String[] userInput) {"},{"lineNumber":100,"author":{"gitId":"dixoncwc"},"content":"        isExist \u003d false;"},{"lineNumber":101,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"dixoncwc"},"content":"            month \u003d Month.of(Integer.parseInt(userInput[4]));"},{"lineNumber":103,"author":{"gitId":"dixoncwc"},"content":"            if (userInput[1].equals(\"expense\")) {"},{"lineNumber":104,"author":{"gitId":"dixoncwc"},"content":"                editExpenseGoal(userInput);"},{"lineNumber":105,"author":{"gitId":"dixoncwc"},"content":"            } else if (userInput[1].equals(\"income\")) {"},{"lineNumber":106,"author":{"gitId":"dixoncwc"},"content":"                editIncomeGoal(userInput);"},{"lineNumber":107,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"dixoncwc"},"content":"            GoalTrackerSaver.getInstance().save();"},{"lineNumber":109,"author":{"gitId":"dixoncwc"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":110,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter either expense \""},{"lineNumber":111,"author":{"gitId":"dixoncwc"},"content":"                    + \"or income\");"},{"lineNumber":112,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":113,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please check that you have \""},{"lineNumber":114,"author":{"gitId":"dixoncwc"},"content":"                    + \"entered a correct int amount or int month.\");"},{"lineNumber":115,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":116,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":117,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month\");"},{"lineNumber":118,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":121,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"dixoncwc"},"content":"     * This function will edit the user\u0027s expense goal for specific months."},{"lineNumber":123,"author":{"gitId":"dixoncwc"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"dixoncwc"},"content":"    public static void editExpenseGoal(String[] userInput) {"},{"lineNumber":126,"author":{"gitId":"dixoncwc"},"content":"        expenseGoal \u003d Integer.parseInt(userInput[2]);"},{"lineNumber":127,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":128,"author":{"gitId":"dixoncwc"},"content":"            try {"},{"lineNumber":129,"author":{"gitId":"dixoncwc"},"content":"                if (totalGoalList.getGoal().get(i).getExpenseMonth().equals(month)) {"},{"lineNumber":130,"author":{"gitId":"dixoncwc"},"content":"                    isExist \u003d true;"},{"lineNumber":131,"author":{"gitId":"dixoncwc"},"content":"                    goalToSet \u003d new Goal(expenseGoal, \"Expense\", month);"},{"lineNumber":132,"author":{"gitId":"dixoncwc"},"content":"                    totalGoalList.getGoal().set(i, goalToSet);"},{"lineNumber":133,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"You have successfully\""},{"lineNumber":134,"author":{"gitId":"dixoncwc"},"content":"                            + \" edited your expense goal for \" + month + \" to $\" + expenseGoal);"},{"lineNumber":135,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":136,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":138,"author":{"gitId":"dixoncwc"},"content":"            } catch (NullPointerException e) { // This NullPointerException occurs when the first object in the"},{"lineNumber":139,"author":{"gitId":"dixoncwc"},"content":"                continue;                      // arraylist is not expense so it will continue the for loop."},{"lineNumber":140,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"dixoncwc"},"content":"        if (!isExist) {"},{"lineNumber":143,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not have \""},{"lineNumber":144,"author":{"gitId":"dixoncwc"},"content":"                    + \"any existing goal for \" + month);"},{"lineNumber":145,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":148,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"dixoncwc"},"content":"     * This function will edit the user\u0027s income goal for specific months."},{"lineNumber":150,"author":{"gitId":"dixoncwc"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"dixoncwc"},"content":"    public static void editIncomeGoal(String[] userInput) {"},{"lineNumber":153,"author":{"gitId":"dixoncwc"},"content":"        incomeGoal \u003d Integer.parseInt(userInput[2]);"},{"lineNumber":154,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":155,"author":{"gitId":"dixoncwc"},"content":"            try {"},{"lineNumber":156,"author":{"gitId":"dixoncwc"},"content":"                if (totalGoalList.getGoal().get(i).getIncomeMonth().equals(month)) {"},{"lineNumber":157,"author":{"gitId":"dixoncwc"},"content":"                    isExist \u003d true;"},{"lineNumber":158,"author":{"gitId":"dixoncwc"},"content":"                    goalToSet \u003d new Goal(incomeGoal, \"Income\", month);"},{"lineNumber":159,"author":{"gitId":"dixoncwc"},"content":"                    totalGoalList.getGoal().set(i, goalToSet);"},{"lineNumber":160,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"You have successfully\""},{"lineNumber":161,"author":{"gitId":"dixoncwc"},"content":"                            + \" edited your income goal for \" + month + \" to $\" + incomeGoal);"},{"lineNumber":162,"author":{"gitId":"dixoncwc"},"content":"                    execute();"},{"lineNumber":163,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"dixoncwc"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":165,"author":{"gitId":"dixoncwc"},"content":"                continue;"},{"lineNumber":166,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"dixoncwc"},"content":"        if (!isExist) {"},{"lineNumber":169,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not have \""},{"lineNumber":170,"author":{"gitId":"dixoncwc"},"content":"                    + \"any existing goal for \" + month);"},{"lineNumber":171,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":174,"author":{"gitId":"dixoncwc"},"content":"    public static TotalGoalList getTotalGoalList() {"},{"lineNumber":175,"author":{"gitId":"dixoncwc"},"content":"        return totalGoalList;"},{"lineNumber":176,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":178,"author":{"gitId":"Feudalord"},"content":"    //@@author Feudalord"},{"lineNumber":179,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"Feudalord"},"content":"     * This function is for save and load of the expense and income goals"},{"lineNumber":181,"author":{"gitId":"Feudalord"},"content":"     * for respective months."},{"lineNumber":182,"author":{"gitId":"Feudalord"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"Feudalord"},"content":"     * @param amount   the amount of income/expense goal"},{"lineNumber":184,"author":{"gitId":"Feudalord"},"content":"     * @param category Type of goal"},{"lineNumber":185,"author":{"gitId":"Feudalord"},"content":"     * @param mon      month of goal"},{"lineNumber":186,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"Feudalord"},"content":"    public static void setGoals(String amount, String category, String mon) {"},{"lineNumber":188,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"Feudalord"},"content":"            month \u003d Month.valueOf(mon);"},{"lineNumber":190,"author":{"gitId":"Feudalord"},"content":"            expenseGoal \u003d Integer.parseInt(amount);"},{"lineNumber":191,"author":{"gitId":"Feudalord"},"content":"            goalToSet \u003d new Goal(expenseGoal, category, month);"},{"lineNumber":192,"author":{"gitId":"Feudalord"},"content":"            totalGoalList.addGoal(goalToSet);"},{"lineNumber":193,"author":{"gitId":"Feudalord"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":194,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid input. Please enter \""},{"lineNumber":195,"author":{"gitId":"Feudalord"},"content":"                    + \" a valid month\");"},{"lineNumber":196,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":199,"author":{"gitId":"dixoncwc"},"content":"    //@@author dixoncwc"},{"lineNumber":200,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle and parser the user command to differentiate whether"},{"lineNumber":202,"author":{"gitId":"dixoncwc"},"content":"     * user want to display for expense for income."},{"lineNumber":203,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"dixoncwc"},"content":"    private static void handleDisplayGoal() {"},{"lineNumber":205,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":206,"author":{"gitId":"dixoncwc"},"content":"            if (cmdPacket[1].equals(\"expense\")) {"},{"lineNumber":207,"author":{"gitId":"dixoncwc"},"content":"                ledgerMonth \u003d null;"},{"lineNumber":208,"author":{"gitId":"dixoncwc"},"content":"                handleCurrentExpenses();"},{"lineNumber":209,"author":{"gitId":"dixoncwc"},"content":"            } else if (cmdPacket[1].equals(\"income\")) {"},{"lineNumber":210,"author":{"gitId":"dixoncwc"},"content":"                ledgerMonth \u003d null;"},{"lineNumber":211,"author":{"gitId":"dixoncwc"},"content":"                handleCurrentIncomes();"},{"lineNumber":212,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":213,"author":{"gitId":"dixoncwc"},"content":"                throw new IllegalArgumentException(\"Please enter only expense or income\");"},{"lineNumber":214,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"dixoncwc"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":216,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter either expense \""},{"lineNumber":217,"author":{"gitId":"dixoncwc"},"content":"                    + \"or income\");"},{"lineNumber":218,"author":{"gitId":"dixoncwc"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":219,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, e.getMessage());"},{"lineNumber":220,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":223,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the setting of expense goal"},{"lineNumber":225,"author":{"gitId":"dixoncwc"},"content":"     * for the indicated months."},{"lineNumber":226,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"dixoncwc"},"content":"    public static void setExpenseGoal(String[] userInput) {"},{"lineNumber":228,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":229,"author":{"gitId":"dixoncwc"},"content":"            isExist \u003d false;"},{"lineNumber":230,"author":{"gitId":"dixoncwc"},"content":"            month \u003d Month.of(Integer.parseInt(userInput[3]));"},{"lineNumber":231,"author":{"gitId":"dixoncwc"},"content":"            expenseGoal \u003d Integer.parseInt(userInput[1]);"},{"lineNumber":232,"author":{"gitId":"dixoncwc"},"content":"            if (expenseGoal \u003c 0) {"},{"lineNumber":233,"author":{"gitId":"dixoncwc"},"content":"                throw new IllegalArgumentException(\"Please enter only Positive Numbers\");"},{"lineNumber":234,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":235,"author":{"gitId":"dixoncwc"},"content":"                for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":236,"author":{"gitId":"dixoncwc"},"content":"                    try {"},{"lineNumber":237,"author":{"gitId":"dixoncwc"},"content":"                        if (totalGoalList.getGoal().get(i).getExpenseMonth().equals(month)) {"},{"lineNumber":238,"author":{"gitId":"dixoncwc"},"content":"                            isExist \u003d true;"},{"lineNumber":239,"author":{"gitId":"dixoncwc"},"content":"                            break;"},{"lineNumber":240,"author":{"gitId":"dixoncwc"},"content":"                        }"},{"lineNumber":241,"author":{"gitId":"dixoncwc"},"content":"                    } catch (NullPointerException e) {"},{"lineNumber":242,"author":{"gitId":"dixoncwc"},"content":"                        continue;"},{"lineNumber":243,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":244,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":245,"author":{"gitId":"dixoncwc"},"content":"                if (isExist \u003d\u003d true) {"},{"lineNumber":246,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You have an existing \""},{"lineNumber":247,"author":{"gitId":"dixoncwc"},"content":"                            + \"expense goal for \" + month);"},{"lineNumber":248,"author":{"gitId":"dixoncwc"},"content":"                } else {"},{"lineNumber":249,"author":{"gitId":"dixoncwc"},"content":"                    goalToSet \u003d new Goal(expenseGoal, \"Expense\", month);"},{"lineNumber":250,"author":{"gitId":"dixoncwc"},"content":"                    totalGoalList.addGoal(goalToSet);"},{"lineNumber":251,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"You have set $\" + expenseGoal"},{"lineNumber":252,"author":{"gitId":"dixoncwc"},"content":"                            + \" as your Expense Goals for \" + month);"},{"lineNumber":253,"author":{"gitId":"dixoncwc"},"content":"                    GoalTrackerSaver.getInstance().save();"},{"lineNumber":254,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":255,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":256,"author":{"gitId":"dixoncwc"},"content":"            month \u003d null;"},{"lineNumber":257,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) { // This exception occurs if they did not enter correct format for the month"},{"lineNumber":258,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid input. Please enter \""},{"lineNumber":259,"author":{"gitId":"dixoncwc"},"content":"                    + \" a valid month\");"},{"lineNumber":260,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) { // This exception occurs when there is invalid input"},{"lineNumber":261,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid input. Please enter \""},{"lineNumber":262,"author":{"gitId":"dixoncwc"},"content":"                    + \" a valid amount/date\");"},{"lineNumber":263,"author":{"gitId":"dixoncwc"},"content":"        } catch (IndexOutOfBoundsException e) { // This exception occurs when the userInput is missing params"},{"lineNumber":264,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You are missing params\");"},{"lineNumber":265,"author":{"gitId":"dixoncwc"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":266,"author":{"gitId":"dixoncwc"},"content":"            expenseGoal \u003d 0;"},{"lineNumber":267,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, e.getMessage());"},{"lineNumber":268,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":270,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":272,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":273,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the setting of income"},{"lineNumber":274,"author":{"gitId":"dixoncwc"},"content":"     * goals for indicated month."},{"lineNumber":275,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"dixoncwc"},"content":"    public static void setIncomeGoal(String[] userInput) {"},{"lineNumber":277,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":278,"author":{"gitId":"dixoncwc"},"content":"            isExist \u003d false;"},{"lineNumber":279,"author":{"gitId":"dixoncwc"},"content":"            month \u003d Month.of(Integer.parseInt(userInput[3]));"},{"lineNumber":280,"author":{"gitId":"dixoncwc"},"content":"            incomeGoal \u003d Integer.parseInt(userInput[1]);"},{"lineNumber":281,"author":{"gitId":"dixoncwc"},"content":"            if (incomeGoal \u003c 0) {"},{"lineNumber":282,"author":{"gitId":"dixoncwc"},"content":"                throw new IllegalArgumentException(\"Please enter only Positive Numbers\");"},{"lineNumber":283,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":284,"author":{"gitId":"dixoncwc"},"content":"                for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":285,"author":{"gitId":"dixoncwc"},"content":"                    try {"},{"lineNumber":286,"author":{"gitId":"dixoncwc"},"content":"                        if (totalGoalList.getGoal().get(i).getIncomeMonth().equals(month)) {"},{"lineNumber":287,"author":{"gitId":"dixoncwc"},"content":"                            isExist \u003d true;"},{"lineNumber":288,"author":{"gitId":"dixoncwc"},"content":"                            break;"},{"lineNumber":289,"author":{"gitId":"dixoncwc"},"content":"                        }"},{"lineNumber":290,"author":{"gitId":"dixoncwc"},"content":"                    } catch (NullPointerException e) {"},{"lineNumber":291,"author":{"gitId":"dixoncwc"},"content":"                        continue;"},{"lineNumber":292,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":293,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":294,"author":{"gitId":"dixoncwc"},"content":"                if (isExist \u003d\u003d true) {"},{"lineNumber":295,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You have an existing \""},{"lineNumber":296,"author":{"gitId":"dixoncwc"},"content":"                            + \"income goal for \" + month);"},{"lineNumber":297,"author":{"gitId":"dixoncwc"},"content":"                } else {"},{"lineNumber":298,"author":{"gitId":"dixoncwc"},"content":"                    goalToSet \u003d new Goal(incomeGoal, \"Income\", month);"},{"lineNumber":299,"author":{"gitId":"dixoncwc"},"content":"                    totalGoalList.addGoal(goalToSet);"},{"lineNumber":300,"author":{"gitId":"dixoncwc"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"You have set $\" + incomeGoal"},{"lineNumber":301,"author":{"gitId":"dixoncwc"},"content":"                            + \" as your Income Goals for \" + month);"},{"lineNumber":302,"author":{"gitId":"dixoncwc"},"content":"                    GoalTrackerSaver.getInstance().save();"},{"lineNumber":303,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":304,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":305,"author":{"gitId":"dixoncwc"},"content":"            month \u003d null;"},{"lineNumber":306,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) { // This exception occurs if they did not enter correct format for the month"},{"lineNumber":307,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid input. Please enter \""},{"lineNumber":308,"author":{"gitId":"dixoncwc"},"content":"                    + \" a valid month\");"},{"lineNumber":309,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) { // This exception occurs when there is invalid input"},{"lineNumber":310,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid input. Please enter \""},{"lineNumber":311,"author":{"gitId":"dixoncwc"},"content":"                    + \" a valid amount/date\");"},{"lineNumber":312,"author":{"gitId":"dixoncwc"},"content":"        } catch (IndexOutOfBoundsException e) { // This exception occurs when the command is missing params"},{"lineNumber":313,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You are missing params\");"},{"lineNumber":314,"author":{"gitId":"dixoncwc"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":315,"author":{"gitId":"dixoncwc"},"content":"            incomeGoal \u003d 0;"},{"lineNumber":316,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, e.getMessage());"},{"lineNumber":317,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":320,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"dixoncwc"},"content":"     * This function will be called in EntryTracker class when there is a"},{"lineNumber":322,"author":{"gitId":"dixoncwc"},"content":"     * new entry being stored into a ledger. The purpose is to parse the"},{"lineNumber":323,"author":{"gitId":"dixoncwc"},"content":"     * entry to categories whether it is expense or income."},{"lineNumber":324,"author":{"gitId":"dixoncwc"},"content":"     *"},{"lineNumber":325,"author":{"gitId":"dixoncwc"},"content":"     * @param entry entry that user enter into ledger"},{"lineNumber":326,"author":{"gitId":"dixoncwc"},"content":"     * @class EntryTracker is the class that handle ledger"},{"lineNumber":327,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"dixoncwc"},"content":"    public static void targetGoalTracker(Entry entry) {"},{"lineNumber":329,"author":{"gitId":"dixoncwc"},"content":"        entryData \u003d entry;"},{"lineNumber":330,"author":{"gitId":"dixoncwc"},"content":"        entryCategory \u003d entryData.getEntryType().toString();"},{"lineNumber":331,"author":{"gitId":"dixoncwc"},"content":"        if (entryCategory.equals(\"Expense\")) {"},{"lineNumber":332,"author":{"gitId":"dixoncwc"},"content":"            handleNewExpenses();"},{"lineNumber":333,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":334,"author":{"gitId":"dixoncwc"},"content":"            handleNewIncomes();"},{"lineNumber":335,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":337,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":338,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"dixoncwc"},"content":"     * This function is called when a ledger is being created"},{"lineNumber":340,"author":{"gitId":"dixoncwc"},"content":"     * or opened by date."},{"lineNumber":341,"author":{"gitId":"dixoncwc"},"content":"     * The purpose is to store the ledgerMonth which the entry is being added to"},{"lineNumber":342,"author":{"gitId":"dixoncwc"},"content":"     *"},{"lineNumber":343,"author":{"gitId":"dixoncwc"},"content":"     * @param ledger ledger that is sent from manual tracker"},{"lineNumber":344,"author":{"gitId":"dixoncwc"},"content":"     * @class ManualTracker is the class that handle ledger"},{"lineNumber":345,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":346,"author":{"gitId":"dixoncwc"},"content":"    public static void storeLedgerDate(Ledger ledger) {"},{"lineNumber":347,"author":{"gitId":"dixoncwc"},"content":"        ledgerMonth \u003d ledger.getDate().getMonth();"},{"lineNumber":348,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":350,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the total current"},{"lineNumber":352,"author":{"gitId":"dixoncwc"},"content":"     * expenses being made by the user for the month."},{"lineNumber":353,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":354,"author":{"gitId":"dixoncwc"},"content":"    public static void handleCurrentExpenses() {"},{"lineNumber":355,"author":{"gitId":"dixoncwc"},"content":"        LedgerList ledgerList \u003d ManualTracker.getLedgerList();"},{"lineNumber":356,"author":{"gitId":"dixoncwc"},"content":"        totalExpenses \u003d 0;"},{"lineNumber":357,"author":{"gitId":"dixoncwc"},"content":"        int ledgerSize \u003d ledgerList.getListSize();"},{"lineNumber":358,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c ledgerSize; i++) {"},{"lineNumber":359,"author":{"gitId":"dixoncwc"},"content":"            Ledger ledger \u003d (Ledger) ledgerList.getItemAtIndex(i);"},{"lineNumber":360,"author":{"gitId":"dixoncwc"},"content":"            month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":361,"author":{"gitId":"dixoncwc"},"content":"            if (ledger.getDate().getMonth().equals(month)) {"},{"lineNumber":362,"author":{"gitId":"dixoncwc"},"content":"                EntryList entryList \u003d ledger.entryList;"},{"lineNumber":363,"author":{"gitId":"dixoncwc"},"content":"                int entrySize \u003d entryList.getListSize();"},{"lineNumber":364,"author":{"gitId":"dixoncwc"},"content":"                for (int x \u003d 0; x \u003c entrySize; x++) {"},{"lineNumber":365,"author":{"gitId":"dixoncwc"},"content":"                    Entry entry \u003d (Entry) entryList.getItemAtIndex(x);"},{"lineNumber":366,"author":{"gitId":"dixoncwc"},"content":"                    if (entry.getEntryType().toString().equals(\"Expense\")) {"},{"lineNumber":367,"author":{"gitId":"dixoncwc"},"content":"                        expenses \u003d entry.getAmount();"},{"lineNumber":368,"author":{"gitId":"dixoncwc"},"content":"                        totalExpenses +\u003d expenses;"},{"lineNumber":369,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":370,"author":{"gitId":"dixoncwc"},"content":"                        totalExpenses +\u003d 0;"},{"lineNumber":371,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":372,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":373,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":374,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":375,"author":{"gitId":"dixoncwc"},"content":"        handleCurrentExpenseGoalStatus();"},{"lineNumber":376,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":377,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":378,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":379,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the current expense"},{"lineNumber":380,"author":{"gitId":"dixoncwc"},"content":"     * goal based on the month that user want to display."},{"lineNumber":381,"author":{"gitId":"dixoncwc"},"content":"     * Lastly calling the function to print out the current"},{"lineNumber":382,"author":{"gitId":"dixoncwc"},"content":"     * expense status."},{"lineNumber":383,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":384,"author":{"gitId":"dixoncwc"},"content":"    public static void handleCurrentExpenseGoalStatus() {"},{"lineNumber":385,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":386,"author":{"gitId":"dixoncwc"},"content":"            for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":387,"author":{"gitId":"dixoncwc"},"content":"                if (cmdPacket !\u003d null) {"},{"lineNumber":388,"author":{"gitId":"dixoncwc"},"content":"                    month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":389,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":390,"author":{"gitId":"dixoncwc"},"content":"                try {"},{"lineNumber":391,"author":{"gitId":"dixoncwc"},"content":"                    if (totalGoalList.getGoal().get(i).getExpenseMonth().equals(month)) {"},{"lineNumber":392,"author":{"gitId":"dixoncwc"},"content":"                        expenseGoal \u003d totalGoalList.getGoal().get(i).getExpenseGoal();"},{"lineNumber":393,"author":{"gitId":"dixoncwc"},"content":"                        break;"},{"lineNumber":394,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":395,"author":{"gitId":"dixoncwc"},"content":"                        expenseGoal \u003d 0;"},{"lineNumber":396,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":397,"author":{"gitId":"dixoncwc"},"content":"                } catch (NullPointerException e) {"},{"lineNumber":398,"author":{"gitId":"dixoncwc"},"content":"                    continue;"},{"lineNumber":399,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":400,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":401,"author":{"gitId":"dixoncwc"},"content":"            if (expenseGoal \u003d\u003d 0) {"},{"lineNumber":402,"author":{"gitId":"dixoncwc"},"content":"                if (cmdPacket !\u003d null) {"},{"lineNumber":403,"author":{"gitId":"dixoncwc"},"content":"                    month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":404,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":405,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not set a expense \""},{"lineNumber":406,"author":{"gitId":"dixoncwc"},"content":"                        + \"goal for \" + month);"},{"lineNumber":407,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":408,"author":{"gitId":"dixoncwc"},"content":"            printCurrentExpenseGoalStatus();"},{"lineNumber":409,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":410,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":411,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":412,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":413,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":414,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":415,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":416,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":418,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":419,"author":{"gitId":"dixoncwc"},"content":"     * This function will print out the current expense status"},{"lineNumber":420,"author":{"gitId":"dixoncwc"},"content":"     * with regards to the goal the user set."},{"lineNumber":421,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":422,"author":{"gitId":"dixoncwc"},"content":"    public static void printCurrentExpenseGoalStatus() {"},{"lineNumber":423,"author":{"gitId":"dixoncwc"},"content":"        double goalDifference \u003d expenseGoal - totalExpenses;"},{"lineNumber":424,"author":{"gitId":"dixoncwc"},"content":"        if (goalDifference \u003c 0) {"},{"lineNumber":425,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"This is your current \""},{"lineNumber":426,"author":{"gitId":"dixoncwc"},"content":"                    + \"expense goal status for \" + month + \". You have spent $\" + totalExpenses + \" / $\""},{"lineNumber":427,"author":{"gitId":"dixoncwc"},"content":"                    + expenseGoal + \". You have exceeded your \" + \"expense budget.\");"},{"lineNumber":428,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Enter y to exit \""},{"lineNumber":429,"author":{"gitId":"dixoncwc"},"content":"                    + \"DisplayGoal. \");"},{"lineNumber":430,"author":{"gitId":"dixoncwc"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":431,"author":{"gitId":"dixoncwc"},"content":"            if (input.equals(\"y\")) {"},{"lineNumber":432,"author":{"gitId":"dixoncwc"},"content":"                return;"},{"lineNumber":433,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":434,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter y\");"},{"lineNumber":435,"author":{"gitId":"dixoncwc"},"content":"                printCurrentExpenseGoalStatus();"},{"lineNumber":436,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":437,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":438,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"This is your current \""},{"lineNumber":439,"author":{"gitId":"dixoncwc"},"content":"                    + \"expense goal status for \" + month + \". You have spent $\" + totalExpenses + \" / $\""},{"lineNumber":440,"author":{"gitId":"dixoncwc"},"content":"                    + expenseGoal + \". You still have $\" + goalDifference + \" to spend\");"},{"lineNumber":441,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Enter y to exit \""},{"lineNumber":442,"author":{"gitId":"dixoncwc"},"content":"                    + \"DisplayGoal. \");"},{"lineNumber":443,"author":{"gitId":"dixoncwc"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":444,"author":{"gitId":"dixoncwc"},"content":"            if (input.equals(\"y\")) {"},{"lineNumber":445,"author":{"gitId":"dixoncwc"},"content":"                return;"},{"lineNumber":446,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":447,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter y\");"},{"lineNumber":448,"author":{"gitId":"dixoncwc"},"content":"                printCurrentExpenseGoalStatus();"},{"lineNumber":449,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":450,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":451,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":452,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":453,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":454,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the expense by"},{"lineNumber":455,"author":{"gitId":"dixoncwc"},"content":"     * summing up the total expense being made by the"},{"lineNumber":456,"author":{"gitId":"dixoncwc"},"content":"     * user based on the indicated month. Next calling"},{"lineNumber":457,"author":{"gitId":"dixoncwc"},"content":"     * the function to handle the expense goal."},{"lineNumber":458,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":459,"author":{"gitId":"dixoncwc"},"content":"    public static void handleNewExpenses() {"},{"lineNumber":460,"author":{"gitId":"dixoncwc"},"content":"        LedgerList ledgerList \u003d ManualTracker.getLedgerList();"},{"lineNumber":461,"author":{"gitId":"dixoncwc"},"content":"        totalExpenses \u003d 0;"},{"lineNumber":462,"author":{"gitId":"dixoncwc"},"content":"        int ledgerSize \u003d ledgerList.getListSize();"},{"lineNumber":463,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c ledgerSize; i++) {"},{"lineNumber":464,"author":{"gitId":"dixoncwc"},"content":"            Ledger ledger \u003d (Ledger) ledgerList.getItemAtIndex(i);"},{"lineNumber":465,"author":{"gitId":"dixoncwc"},"content":"            if (ledger.getDate().getMonth().equals(ledgerMonth)) {"},{"lineNumber":466,"author":{"gitId":"dixoncwc"},"content":"                EntryList entryList \u003d ledger.entryList; // Get all the entry from the respective month ledger"},{"lineNumber":467,"author":{"gitId":"dixoncwc"},"content":"                int entrySize \u003d entryList.getListSize();"},{"lineNumber":468,"author":{"gitId":"dixoncwc"},"content":"                for (int x \u003d 0; x \u003c entrySize; x++) {"},{"lineNumber":469,"author":{"gitId":"dixoncwc"},"content":"                    Entry entry \u003d (Entry) entryList.getItemAtIndex(x);"},{"lineNumber":470,"author":{"gitId":"dixoncwc"},"content":"                    if (entry.getEntryType().toString().equals(\"Expense\")) {"},{"lineNumber":471,"author":{"gitId":"dixoncwc"},"content":"                        expenses \u003d entry.getAmount();"},{"lineNumber":472,"author":{"gitId":"dixoncwc"},"content":"                        totalExpenses +\u003d expenses;  // For each expenses entry we sum up the total"},{"lineNumber":473,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":474,"author":{"gitId":"dixoncwc"},"content":"                        totalExpenses +\u003d 0;"},{"lineNumber":475,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":476,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":477,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":478,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"dixoncwc"},"content":"        handleNewExpenseGoalStatus(); // call print method to display the goal status for the month"},{"lineNumber":480,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":481,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":482,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":483,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the expense goal based on"},{"lineNumber":484,"author":{"gitId":"dixoncwc"},"content":"     * the month the entry is being made. Lastly calling"},{"lineNumber":485,"author":{"gitId":"dixoncwc"},"content":"     * the function to print out the new status of the"},{"lineNumber":486,"author":{"gitId":"dixoncwc"},"content":"     * expense goal."},{"lineNumber":487,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":488,"author":{"gitId":"dixoncwc"},"content":"    public static void handleNewExpenseGoalStatus() {"},{"lineNumber":489,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":490,"author":{"gitId":"dixoncwc"},"content":"            for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":491,"author":{"gitId":"dixoncwc"},"content":"                try {"},{"lineNumber":492,"author":{"gitId":"dixoncwc"},"content":"                    if (totalGoalList.getGoal().get(i).getExpenseMonth().equals(ledgerMonth)) {"},{"lineNumber":493,"author":{"gitId":"dixoncwc"},"content":"                        expenseGoal \u003d totalGoalList.getGoal().get(i).getExpenseGoal();"},{"lineNumber":494,"author":{"gitId":"dixoncwc"},"content":"                        break;"},{"lineNumber":495,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":496,"author":{"gitId":"dixoncwc"},"content":"                        expenseGoal \u003d 0;"},{"lineNumber":497,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":498,"author":{"gitId":"dixoncwc"},"content":"                } catch (NullPointerException e) {"},{"lineNumber":499,"author":{"gitId":"dixoncwc"},"content":"                    continue;"},{"lineNumber":500,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":501,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":502,"author":{"gitId":"dixoncwc"},"content":"            if (expenseGoal \u003d\u003d 0) {"},{"lineNumber":503,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not set a expense \""},{"lineNumber":504,"author":{"gitId":"dixoncwc"},"content":"                        + \"goal for \" + ledgerMonth);"},{"lineNumber":505,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":506,"author":{"gitId":"dixoncwc"},"content":"            printNewExpenseGoalStatus();"},{"lineNumber":507,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":508,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":509,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":510,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":511,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":512,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":513,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":514,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":515,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":516,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":517,"author":{"gitId":"dixoncwc"},"content":"     * This function will print out the new expense goal"},{"lineNumber":518,"author":{"gitId":"dixoncwc"},"content":"     * status."},{"lineNumber":519,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":520,"author":{"gitId":"dixoncwc"},"content":"    public static void printNewExpenseGoalStatus() {"},{"lineNumber":521,"author":{"gitId":"dixoncwc"},"content":"        double goalDifference \u003d expenseGoal - totalExpenses;"},{"lineNumber":522,"author":{"gitId":"dixoncwc"},"content":"        if (goalDifference \u003c 0) {"},{"lineNumber":523,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"Expense Budget Updated, \""},{"lineNumber":524,"author":{"gitId":"dixoncwc"},"content":"                    + \" You have spent $\" + totalExpenses + \" / $\" + expenseGoal + \" for \" + ledgerMonth"},{"lineNumber":525,"author":{"gitId":"dixoncwc"},"content":"                    + \". You have reached/exceeded your expense budget\");"},{"lineNumber":526,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":527,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"Expense Budget Updated, \""},{"lineNumber":528,"author":{"gitId":"dixoncwc"},"content":"                    + \"You have spent $\" + totalExpenses + \" / $\" + expenseGoal + \" You have not reached your \""},{"lineNumber":529,"author":{"gitId":"dixoncwc"},"content":"                    + \"expense budget for \" + ledgerMonth + \", You still have $\" + goalDifference"},{"lineNumber":530,"author":{"gitId":"dixoncwc"},"content":"                    + \" to spend.\");"},{"lineNumber":531,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":532,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":533,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":534,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":535,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the total current"},{"lineNumber":536,"author":{"gitId":"dixoncwc"},"content":"     * income being saved by the user for the month."},{"lineNumber":537,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":538,"author":{"gitId":"dixoncwc"},"content":"    public static void handleCurrentIncomes() {"},{"lineNumber":539,"author":{"gitId":"dixoncwc"},"content":"        LedgerList ledgerList \u003d ManualTracker.getLedgerList();"},{"lineNumber":540,"author":{"gitId":"dixoncwc"},"content":"        totalIncomes \u003d 0;"},{"lineNumber":541,"author":{"gitId":"dixoncwc"},"content":"        int ledgerSize \u003d ledgerList.getListSize();"},{"lineNumber":542,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c ledgerSize; i++) {"},{"lineNumber":543,"author":{"gitId":"dixoncwc"},"content":"            Ledger ledger \u003d (Ledger) ledgerList.getItemAtIndex(i);"},{"lineNumber":544,"author":{"gitId":"dixoncwc"},"content":"            month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":545,"author":{"gitId":"dixoncwc"},"content":"            if (ledger.getDate().getMonth().equals(month)) {"},{"lineNumber":546,"author":{"gitId":"dixoncwc"},"content":"                EntryList entryList \u003d ledger.entryList;"},{"lineNumber":547,"author":{"gitId":"dixoncwc"},"content":"                int entrySize \u003d entryList.getListSize();"},{"lineNumber":548,"author":{"gitId":"dixoncwc"},"content":"                for (int x \u003d 0; x \u003c entrySize; x++) {"},{"lineNumber":549,"author":{"gitId":"dixoncwc"},"content":"                    Entry entry \u003d (Entry) entryList.getItemAtIndex(x);"},{"lineNumber":550,"author":{"gitId":"dixoncwc"},"content":"                    if (entry.getEntryType().toString().equals(\"Income\")) {"},{"lineNumber":551,"author":{"gitId":"dixoncwc"},"content":"                        incomes \u003d entry.getAmount();"},{"lineNumber":552,"author":{"gitId":"dixoncwc"},"content":"                        totalIncomes +\u003d incomes;"},{"lineNumber":553,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":554,"author":{"gitId":"dixoncwc"},"content":"                        totalIncomes +\u003d 0;"},{"lineNumber":555,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":556,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":557,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":558,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":559,"author":{"gitId":"dixoncwc"},"content":"        handleCurrentIncomeGoalStatus();"},{"lineNumber":560,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":561,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":562,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":563,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the current income"},{"lineNumber":564,"author":{"gitId":"dixoncwc"},"content":"     * goal based on the month that user want to display."},{"lineNumber":565,"author":{"gitId":"dixoncwc"},"content":"     * Lastly calling the function to print out the current"},{"lineNumber":566,"author":{"gitId":"dixoncwc"},"content":"     * income status."},{"lineNumber":567,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":568,"author":{"gitId":"dixoncwc"},"content":"    public static void handleCurrentIncomeGoalStatus() {"},{"lineNumber":569,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":570,"author":{"gitId":"dixoncwc"},"content":"            for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":571,"author":{"gitId":"dixoncwc"},"content":"                if (cmdPacket !\u003d null) {"},{"lineNumber":572,"author":{"gitId":"dixoncwc"},"content":"                    month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":573,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":574,"author":{"gitId":"dixoncwc"},"content":"                try {"},{"lineNumber":575,"author":{"gitId":"dixoncwc"},"content":"                    if (totalGoalList.getGoal().get(i).getIncomeMonth().equals(month)) {"},{"lineNumber":576,"author":{"gitId":"dixoncwc"},"content":"                        incomeGoal \u003d totalGoalList.getGoal().get(i).getIncomeGoal();"},{"lineNumber":577,"author":{"gitId":"dixoncwc"},"content":"                        break;"},{"lineNumber":578,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":579,"author":{"gitId":"dixoncwc"},"content":"                        incomeGoal \u003d 0;"},{"lineNumber":580,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":581,"author":{"gitId":"dixoncwc"},"content":"                } catch (NullPointerException e) {"},{"lineNumber":582,"author":{"gitId":"dixoncwc"},"content":"                    continue;"},{"lineNumber":583,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":584,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":585,"author":{"gitId":"dixoncwc"},"content":"            if (incomeGoal \u003d\u003d 0) {"},{"lineNumber":586,"author":{"gitId":"dixoncwc"},"content":"                if (cmdPacket !\u003d null) {"},{"lineNumber":587,"author":{"gitId":"dixoncwc"},"content":"                    month \u003d Month.of(Integer.parseInt(cmdPacket[3]));"},{"lineNumber":588,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":589,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not set a income \""},{"lineNumber":590,"author":{"gitId":"dixoncwc"},"content":"                        + \"goal for \" + month);"},{"lineNumber":591,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":592,"author":{"gitId":"dixoncwc"},"content":"            printCurrentIncomeGoalStatus();"},{"lineNumber":593,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":594,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":595,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":596,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":597,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":598,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":599,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":600,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":601,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":602,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":603,"author":{"gitId":"dixoncwc"},"content":"     * This function will print out the current income status"},{"lineNumber":604,"author":{"gitId":"dixoncwc"},"content":"     * with regards to the goal the user set."},{"lineNumber":605,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":606,"author":{"gitId":"dixoncwc"},"content":"    public static void printCurrentIncomeGoalStatus() {"},{"lineNumber":607,"author":{"gitId":"dixoncwc"},"content":"        double goalDifference \u003d incomeGoal - totalIncomes;"},{"lineNumber":608,"author":{"gitId":"dixoncwc"},"content":"        if (goalDifference \u003c 0) {"},{"lineNumber":609,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"This is your current \""},{"lineNumber":610,"author":{"gitId":"dixoncwc"},"content":"                    + \"income goal status for \" + month + \". You have saved $\" + totalIncomes + \" / $\""},{"lineNumber":611,"author":{"gitId":"dixoncwc"},"content":"                    + incomeGoal + \". You have met your \" + \"revenue goal.\");"},{"lineNumber":612,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Enter y to exit \""},{"lineNumber":613,"author":{"gitId":"dixoncwc"},"content":"                    + \"DisplayGoal. \");"},{"lineNumber":614,"author":{"gitId":"dixoncwc"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":615,"author":{"gitId":"dixoncwc"},"content":"            if (input.equals(\"y\")) {"},{"lineNumber":616,"author":{"gitId":"dixoncwc"},"content":"                return;"},{"lineNumber":617,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":618,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter y\");"},{"lineNumber":619,"author":{"gitId":"dixoncwc"},"content":"                printCurrentIncomeGoalStatus();"},{"lineNumber":620,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":621,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":622,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"This is your current \""},{"lineNumber":623,"author":{"gitId":"dixoncwc"},"content":"                    + \"income goal status for \" + month + \". You have saved $\" + totalIncomes + \" / $\""},{"lineNumber":624,"author":{"gitId":"dixoncwc"},"content":"                    + incomeGoal + \". You have not met your \" + \"revenue goal. You are $\" + goalDifference"},{"lineNumber":625,"author":{"gitId":"dixoncwc"},"content":"                    + \" away from your goal.\");"},{"lineNumber":626,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Enter y to exit \""},{"lineNumber":627,"author":{"gitId":"dixoncwc"},"content":"                    + \"DisplayGoal. \");"},{"lineNumber":628,"author":{"gitId":"dixoncwc"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":629,"author":{"gitId":"dixoncwc"},"content":"            if (input.equals(\"y\")) {"},{"lineNumber":630,"author":{"gitId":"dixoncwc"},"content":"                return;"},{"lineNumber":631,"author":{"gitId":"dixoncwc"},"content":"            } else {"},{"lineNumber":632,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter y\");"},{"lineNumber":633,"author":{"gitId":"dixoncwc"},"content":"                printCurrentIncomeGoalStatus();"},{"lineNumber":634,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":635,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":636,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":637,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":638,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":639,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the income by"},{"lineNumber":640,"author":{"gitId":"dixoncwc"},"content":"     * summing up the total income being saved by the"},{"lineNumber":641,"author":{"gitId":"dixoncwc"},"content":"     * user based on the indicated month. Next calling"},{"lineNumber":642,"author":{"gitId":"dixoncwc"},"content":"     * the function handle the income goal."},{"lineNumber":643,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":644,"author":{"gitId":"dixoncwc"},"content":"    public static void handleNewIncomes() {"},{"lineNumber":645,"author":{"gitId":"dixoncwc"},"content":"        LedgerList ledgerList \u003d ManualTracker.getLedgerList();"},{"lineNumber":646,"author":{"gitId":"dixoncwc"},"content":"        totalIncomes \u003d 0;"},{"lineNumber":647,"author":{"gitId":"dixoncwc"},"content":"        int ledgerSize \u003d ledgerList.getListSize();"},{"lineNumber":648,"author":{"gitId":"dixoncwc"},"content":"        for (int i \u003d 0; i \u003c ledgerSize; i++) {"},{"lineNumber":649,"author":{"gitId":"dixoncwc"},"content":"            Ledger ledger \u003d (Ledger) ledgerList.getItemAtIndex(i);"},{"lineNumber":650,"author":{"gitId":"dixoncwc"},"content":"            if (ledger.getDate().getMonth().equals(ledgerMonth)) {"},{"lineNumber":651,"author":{"gitId":"dixoncwc"},"content":"                EntryList entryList \u003d ledger.entryList; // Get all entry for the respective month ledger"},{"lineNumber":652,"author":{"gitId":"dixoncwc"},"content":"                int entrySize \u003d entryList.getListSize();"},{"lineNumber":653,"author":{"gitId":"dixoncwc"},"content":"                for (int x \u003d 0; x \u003c entrySize; x++) {"},{"lineNumber":654,"author":{"gitId":"dixoncwc"},"content":"                    Entry entry \u003d (Entry) entryList.getItemAtIndex(x);"},{"lineNumber":655,"author":{"gitId":"dixoncwc"},"content":"                    if (entry.getEntryType().toString().equals(\"Income\")) {"},{"lineNumber":656,"author":{"gitId":"dixoncwc"},"content":"                        incomes \u003d entry.getAmount();"},{"lineNumber":657,"author":{"gitId":"dixoncwc"},"content":"                        totalIncomes +\u003d incomes;    // For each income entry we sum up the total"},{"lineNumber":658,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":659,"author":{"gitId":"dixoncwc"},"content":"                        totalIncomes +\u003d 0;"},{"lineNumber":660,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":661,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":662,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":663,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":664,"author":{"gitId":"dixoncwc"},"content":"        handleNewIncomeGoalStatus();"},{"lineNumber":665,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":666,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":667,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":668,"author":{"gitId":"dixoncwc"},"content":"     * This function will handle the income goal based on"},{"lineNumber":669,"author":{"gitId":"dixoncwc"},"content":"     * the month the entry is being made. Lastly calling"},{"lineNumber":670,"author":{"gitId":"dixoncwc"},"content":"     * the function to print out the new status of the"},{"lineNumber":671,"author":{"gitId":"dixoncwc"},"content":"     * income goal."},{"lineNumber":672,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":673,"author":{"gitId":"dixoncwc"},"content":"    public static void handleNewIncomeGoalStatus() {"},{"lineNumber":674,"author":{"gitId":"dixoncwc"},"content":"        try {"},{"lineNumber":675,"author":{"gitId":"dixoncwc"},"content":"            for (int i \u003d 0; i \u003c totalGoalList.getListSize(); i++) {"},{"lineNumber":676,"author":{"gitId":"dixoncwc"},"content":"                try {"},{"lineNumber":677,"author":{"gitId":"dixoncwc"},"content":"                    if (totalGoalList.getGoal().get(i).getIncomeMonth().equals(ledgerMonth)) {"},{"lineNumber":678,"author":{"gitId":"dixoncwc"},"content":"                        incomeGoal \u003d totalGoalList.getGoal().get(i).getIncomeGoal();"},{"lineNumber":679,"author":{"gitId":"dixoncwc"},"content":"                        break;"},{"lineNumber":680,"author":{"gitId":"dixoncwc"},"content":"                    } else {"},{"lineNumber":681,"author":{"gitId":"dixoncwc"},"content":"                        incomeGoal \u003d 0;"},{"lineNumber":682,"author":{"gitId":"dixoncwc"},"content":"                    }"},{"lineNumber":683,"author":{"gitId":"dixoncwc"},"content":"                } catch (NullPointerException e) {"},{"lineNumber":684,"author":{"gitId":"dixoncwc"},"content":"                    continue;"},{"lineNumber":685,"author":{"gitId":"dixoncwc"},"content":"                }"},{"lineNumber":686,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":687,"author":{"gitId":"dixoncwc"},"content":"            if (incomeGoal \u003d\u003d 0) {"},{"lineNumber":688,"author":{"gitId":"dixoncwc"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"You did not set a income \""},{"lineNumber":689,"author":{"gitId":"dixoncwc"},"content":"                        + \"goal for \" + ledgerMonth);"},{"lineNumber":690,"author":{"gitId":"dixoncwc"},"content":"            }"},{"lineNumber":691,"author":{"gitId":"dixoncwc"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":692,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":693,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":694,"author":{"gitId":"dixoncwc"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":695,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Please enter a valid \""},{"lineNumber":696,"author":{"gitId":"dixoncwc"},"content":"                    + \"int month \");"},{"lineNumber":697,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":698,"author":{"gitId":"dixoncwc"},"content":"        printNewIncomeGoalStatus();"},{"lineNumber":699,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":700,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":701,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":702,"author":{"gitId":"dixoncwc"},"content":"     * This function will print out the new income goal"},{"lineNumber":703,"author":{"gitId":"dixoncwc"},"content":"     * status."},{"lineNumber":704,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":705,"author":{"gitId":"dixoncwc"},"content":"    public static void printNewIncomeGoalStatus() {"},{"lineNumber":706,"author":{"gitId":"dixoncwc"},"content":"        double goalDifference \u003d incomeGoal - totalIncomes;"},{"lineNumber":707,"author":{"gitId":"dixoncwc"},"content":"        if (goalDifference \u003c 0) {"},{"lineNumber":708,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"Revenue Goal Updated, \""},{"lineNumber":709,"author":{"gitId":"dixoncwc"},"content":"                    + \" You have saved $\" + totalIncomes + \" / $\" + incomeGoal + \" for \" + ledgerMonth"},{"lineNumber":710,"author":{"gitId":"dixoncwc"},"content":"                    + \". You have met your revenue goal.\");"},{"lineNumber":711,"author":{"gitId":"dixoncwc"},"content":"        } else {"},{"lineNumber":712,"author":{"gitId":"dixoncwc"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.GOAL_STATUS, \"Revenue Goal Updated, \""},{"lineNumber":713,"author":{"gitId":"dixoncwc"},"content":"                    + \"You have saved $\" + totalIncomes + \" / $\" + incomeGoal + \" You have not met your \""},{"lineNumber":714,"author":{"gitId":"dixoncwc"},"content":"                    + \"revenue goal. for \" + ledgerMonth + \" You are $\" + goalDifference"},{"lineNumber":715,"author":{"gitId":"dixoncwc"},"content":"                    + \" away from your goal.\");"},{"lineNumber":716,"author":{"gitId":"dixoncwc"},"content":"        }"},{"lineNumber":717,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":718,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":719,"author":{"gitId":"dixoncwc"},"content":"}"}],"authorContributionMap":{"dixoncwc":684,"Feudalord":24,"kaiwen98":11}},{"path":"src/main/java/seedu/financeit/datatrackers/goaltracker/TotalGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.goaltracker;"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"dixoncwc"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.Goal;"},{"lineNumber":5,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":" * This class is the arraylist of the class Goal."},{"lineNumber":8,"author":{"gitId":"dixoncwc"},"content":" * @class Goal"},{"lineNumber":9,"author":{"gitId":"dixoncwc"},"content":" */"},{"lineNumber":10,"author":{"gitId":"dixoncwc"},"content":"public class TotalGoalList {"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":"    private ArrayList\u003cGoal\u003e goals \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":13,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"dixoncwc"},"content":"     * This will add new goal to the arraylist."},{"lineNumber":15,"author":{"gitId":"dixoncwc"},"content":"     * @param newGoal new Goal contains (amt,cat,month)"},{"lineNumber":16,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"dixoncwc"},"content":"    public void addGoal(Goal newGoal) {"},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":"        this.goals.add(newGoal);"},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":"     * This will return the whole arraylist."},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":24,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"dixoncwc"},"content":"    public ArrayList\u003cGoal\u003e getGoal() {"},{"lineNumber":26,"author":{"gitId":"dixoncwc"},"content":"        return this.goals;"},{"lineNumber":27,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":29,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"dixoncwc"},"content":"     * This is to get the total size of the arraylist."},{"lineNumber":31,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":32,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"dixoncwc"},"content":"    public int getListSize() {"},{"lineNumber":34,"author":{"gitId":"dixoncwc"},"content":"        return this.goals.size();"},{"lineNumber":35,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":37,"author":{"gitId":"dixoncwc"},"content":"}"}],"authorContributionMap":{"dixoncwc":35,"kaiwen98":2}},{"path":"src/main/java/seedu/financeit/datatrackers/manualtracker/Ledger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.DateTimeItem;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryList;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" * Represents a list of entries with common date."},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"public class Ledger extends DateTimeItem {"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    protected LocalDate date \u003d null;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public EntryList entryList \u003d new EntryList(this);"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public Ledger() {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        super.setDefaultDateTimeFormat(\"date\");"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    public String getName() {"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"Ledger %d : [ %s ]\", this.index + 1,"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            this.dateTimeOutputManager.getSingleDateFormatted(\"date\"));"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    public boolean equals(Object object) {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        Ledger entry \u003d (Ledger) object;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        return (this.getDate().equals(entry.getDate()));"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"%s\", this.getDate());"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":36}},{"path":"src/main/java/seedu/financeit/datatrackers/manualtracker/LedgerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.ItemList;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" * Maintains a list of ledgers."},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"public class LedgerList extends ItemList {"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public LedgerList() {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"     * Given a date, returns the zero-based index of the ledger for that date."},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param date Date of ledger"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Zero-based index of ledger"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ItemNotFoundException When there is no ledger for that date"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    public int getIndexFromDate(LocalDate date) throws ItemNotFoundException {"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        for (int i \u003d 0; i \u003c super.getListSize(); i++) {"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"            Ledger ledger \u003d (Ledger) super.items.get(i);"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"            if (ledger.getDate().equals(date)) {"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"                return i;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        throw new ItemNotFoundException();"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    public void printList() {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(\"List of Ledgers\");"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"Ledger Number;Ledger Date\");"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        if (super.getListSize() \u003d\u003d 0) {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            TablePrinter.addRow(\"No ledgers created;               \");"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"            for (int i \u003d 0; i \u003c super.getListSize(); i++) {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, this.items.get(i)));"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":14,"kaiwen98":33}},{"path":"src/main/java/seedu/financeit/datatrackers/manualtracker/ManualTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.DuplicateInputException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryTracker;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.goaltracker.GoalTracker;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.manualtracker.ledgerhandlers.CreateLedgerHandler;"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.manualtracker.ledgerhandlers.RetrieveLedgerHandler;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.ManualTrackerSaver;"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":" * Class to handle routine for manual ledger management."},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"public class ManualTracker {"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    static LedgerList ledgerList \u003d new LedgerList();"},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":"    private static CommandPacket packet;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    private static boolean isUnderTest \u003d false;"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    private static boolean endTracker;"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    public static void setTestPacket(CommandPacket inputPacket) {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        packet \u003d inputPacket;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        isUnderTest \u003d true;"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static void execute() {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        endTracker \u003d false;"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Welcome to Manual Tracker!\");"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        while (!endTracker) {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            handleMainMenu();"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    public static LedgerList getLedgerList() {"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        return ledgerList;"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"    public static void setCommandPacket(CommandPacket p) {"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"        packet \u003d p;"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    // Allow Save Manager to use the method."},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"    public static void createLedger() {"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"        handleCreateLedger();"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"    private static void handleMainMenu() {"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.DIRECTORY, \"[ MAIN_MENU -\u003e MANUAL_TRACKER_MENU ]\");"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        UiManager.printInputPromptMessage();"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"        String input;"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"        if (!isUnderTest) {"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            input \u003d UiManager.handleInput();"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            packet \u003d InputParser.getInstance().parseInput(input);"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"        UiManager.refreshPage();"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        switch (packet.getCommandString()) {"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"        case \"open\":"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"            handleOpenLedger();"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        case \"new\":"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"            handleCreateLedger();"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"        case \"list\":"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"            handleShowLedger();"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        case \"delete\":"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"            handleDeleteLedger();"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"        case \"exit\":"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            endTracker \u003d true;"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        case \"commands\":"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            printCommandList();"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Command failed. Try again.\");"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"    static void handleCreateLedger() {"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateLedgerHandler createLedgerHandler \u003d CreateLedgerHandler.getInstance();"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"        Ledger ledger;"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            // CreateLedgerCommand instance generates a new Ledger instance"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            // from the params specified in the command."},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"            createLedgerHandler.handlePacket(packet);"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"            ledger \u003d createLedgerHandler.getCurrLedger();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"            // Checking of duplicates"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"            if (ledgerList.isItemDuplicate(ledger)) {"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"                throw new DuplicateInputException();"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            // Append ledger to list."},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            ledgerList.addItem(ledger);"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"            GoalTracker.storeLedgerDate(ledger);"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"%s created!\", ledger.getName()));"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save();"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage());"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"        } catch (DuplicateInputException exception) {"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"                \"Duplicate item already exists in the list; not added!\");"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":119,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!createLedgerHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"    static void handleDeleteLedger() {"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"        Ledger deletedLedger;"},{"lineNumber":128,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveLedgerHandler retrieveLedgerHandler \u003d RetrieveLedgerHandler.getInstance();"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"            // RetrieveLedgerCommand instance retrieves the corresponding ledger instance"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"            // from the ledgerList instance."},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveLedgerHandler.handlePacket(packet, ledgerList);"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"            deletedLedger \u003d (Ledger) ledgerList.getItemAtCurrIndex();"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"            // Deletion of ledger."},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"            ledgerList.removeItemAtCurrIndex();"},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"%s deleted!\", deletedLedger.getName()));"},{"lineNumber":139,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save();"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage());"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":144,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveLedgerHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"    private static void handleShowLedger() {"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"        ledgerList.printList();"},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"    private static void handleOpenLedger() {"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"        Ledger ledger;"},{"lineNumber":157,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveLedgerHandler retrieveLedgerHandler \u003d RetrieveLedgerHandler.getInstance();"},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"            // RetrieveLedgerCommand instance retrieves the corresponding ledger instance"},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":"            // from the ledgerList instance."},{"lineNumber":161,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveLedgerHandler.handlePacket(packet, ledgerList);"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":"            ledger \u003d (Ledger) ledgerList.getItemAtCurrIndex();"},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"            // Set EntryTracker to access entries stored under this particular ledger instance."},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.setCurrLedger(ledger);"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"            GoalTracker.storeLedgerDate(ledger);"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"%s opened!\", ledger.getName()));"},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.execute();"},{"lineNumber":173,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage());"},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"            return;"},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage());"},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"            // If the ledger specified does not exist, a new ledger instance with the corresponding"},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"            // date will be generated and \"opened\"."},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"                \"Generating new ledger...\");"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"            handleCreateLedger();"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"            handleOpenLedger();"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":188,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveLedgerHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"    private static void printCommandList() {"},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(\"List of Commands\");"},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"No.;Command            ;Input Format                  \");"},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"1.;Open ledger;open /date {YYMMDD} or open /id {INTEGER}\");"},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"2.;New ledger;new /date {YYMMDD}\");"},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"3.;list ledgers;list\");"},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"4.;delete ledgers;delete /date {YYMMDD} or delete /id {INTEGER}\");"},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"5.;exit to main menu;exit\");"},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Feudalord":15,"Artemis-Hunt":13,"kaiwen98":177}},{"path":"src/main/java/seedu/financeit/datatrackers/manualtracker/ledgerhandlers/CreateLedgerHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.manualtracker.ledgerhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DATE;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":" * CommandHandler class to create a ledger instance, and populates it with parameter values."},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":" * The populated ledger will be stored within the class, and can be retrieved by calling a"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":" * corresponding getter method."},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"public class CreateLedgerHandler extends ParamHandler {"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    Ledger ledger;"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    private static CreateLedgerHandler handler \u003d null;"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    private CreateLedgerHandler() {"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        this.setRequiredParams("},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            PARAM_DATE"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CreateLedgerHandler getInstance() {"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new CreateLedgerHandler();"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    public void handlePacket(CommandPacket packet)"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        this.ledger \u003d new Ledger();"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        this.handleParams(packet);"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        switch (paramType) {"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        case PARAM_DATE:"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"            LocalDate date \u003d ParamChecker.getInstance().checkAndReturnDate(paramType);"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"            ledger.setDate(date);"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"    public Ledger getCurrLedger() {"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"        return this.ledger;"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":11,"kaiwen98":51}},{"path":"src/main/java/seedu/financeit/datatrackers/manualtracker/ledgerhandlers/RetrieveLedgerHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.manualtracker.ledgerhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.LedgerList;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DATE;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":" * CommandHandler class to create an entry instance, and populates it with parameter values."},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":" * The populated entry will be stored within the class, and can be retrieved by calling a"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":" * corresponding getter method."},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"public class RetrieveLedgerHandler extends ParamHandler {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    LedgerList ledgerList;"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    private static RetrieveLedgerHandler handler \u003d null;"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    private RetrieveLedgerHandler() {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        this.setRequiredParams("},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            PARAM_DATE + \" or \" + PARAM_INDEX"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RetrieveLedgerHandler getInstance() {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new RetrieveLedgerHandler();"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    public void handlePacket(CommandPacket packet, LedgerList ledgerList)"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        this.ledgerList \u003d ledgerList;"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        this.handleParams(packet);"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType)"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        throws ParseFailParamException, ItemNotFoundException {"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        int index;"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"        switch (paramType) {"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        case ParamChecker.PARAM_DATE:"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            LocalDate date \u003d ParamChecker.getInstance().checkAndReturnDate(paramType);"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"            index \u003d this.ledgerList.getIndexFromDate(date);"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"            this.ledgerList.setIndexToModify(index, paramType);"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            return;"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"        case ParamChecker.PARAM_INDEX:"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            index \u003d ParamChecker.getInstance().checkAndReturnIndex(paramType, this.ledgerList.getItems());"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            this.ledgerList.setIndexToModify(index, paramType);"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            return;"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":11,"kaiwen98":55}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/RecurringEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.recurringtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.Item;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.DateTimeHelper;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import java.time.Month;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"public class RecurringEntry extends Item {"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    int day;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"    String description \u003d \"\";"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"    Common.EntryType entryType;"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    double amount;"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    Month start \u003d Month.of(1);"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"    Month end \u003d Month.of(12);"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    boolean isAuto \u003d false;"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"    String notes \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"    //Attributes in String form, for table printing"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    String expenditureAmount \u003d null;"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    String incomeAmount;"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    String duration;"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    String payment;"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    public RecurringEntry() {"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        super();"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setAmount(double amount) {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        assert amount \u003e 0;"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        this.amount \u003d amount;"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        convertAttributesToString();"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setEntryType(Common.EntryType entryType) {"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        this.entryType \u003d entryType;"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setAuto(boolean isAuto) {"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"        this.isAuto \u003d isAuto;"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setNotes(String notes) {"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        this.notes \u003d notes;"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setDescription(String description) {"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        this.description \u003d description;"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"    public String getName() {"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"Entry: [ %s ] on day [ %s ] \","},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"                description, day);"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"    public int getDay() {"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"        return day;"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setDay(int day) {"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"        this.day \u003d day;"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"    public Object getParamFromParamType(String paramType) {"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"        switch (paramType) {"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DAY:"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"            return day;"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AMOUNT:"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            return amount;"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_INC:"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_EXP:"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"            return \"\";"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DESCRIPTION:"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"            return description;"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AUTO:"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"            return isAuto;"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_NOTES:"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"            return notes;"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"        default: return null;"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"    public boolean equals(Object object) {"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d (RecurringEntry) object;"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"        if (entry \u003d\u003d this) {"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"            return true;"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"        return (this.day \u003d\u003d entry.day)"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"                \u0026\u0026 (this.description.equals(entry.description))"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"                \u0026\u0026 (this.entryType.equals(entry.entryType))"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"                \u0026\u0026 (this.amount \u003d\u003d entry.amount)"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"                \u0026\u0026 (this.isAuto \u003d\u003d entry.isAuto);"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"     * Get entry details necessary for printing a reminder."},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":"     * Remember to do appropriate downcasting when accessing attributes."},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return HashMap of details, with key being the attribute name and value"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"     *         being the attribute itself, upcasted to Object."},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"    public HashMap\u003cString, Object\u003e getDetailsForReminder() {"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"        HashMap\u003cString, Object\u003e details \u003d new HashMap\u003c\u003e();"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"        details.put(\"day\", day);"},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":"        details.put(\"description\", description);"},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"        details.put(\"entryType\", entryType);"},{"lineNumber":113,"author":{"gitId":"Artemis-Hunt"},"content":"        details.put(\"isAuto\", isAuto);"},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":115,"author":{"gitId":"Artemis-Hunt"},"content":"        return details;"},{"lineNumber":116,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":118,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":119,"author":{"gitId":"Artemis-Hunt"},"content":"    public void convertAttributesToString() {"},{"lineNumber":120,"author":{"gitId":"Artemis-Hunt"},"content":"        //One string is filled and the other is left blank, based on whether the entry is income or expenditure"},{"lineNumber":121,"author":{"gitId":"Artemis-Hunt"},"content":"        expenditureAmount \u003d entryType \u003d\u003d Common.EntryType.EXP ? \"-$\""},{"lineNumber":122,"author":{"gitId":"Artemis-Hunt"},"content":"                + String.format(\"%.2f\", this.amount) : \"\";"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"        incomeAmount \u003d entryType \u003d\u003d Common.EntryType.INC ? \"+$\""},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":"                + String.format(\"%.2f\", this.amount) : \"\";"},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] monthsWithoutDay \u003d DateTimeHelper.monthsWithoutDayOfMonth(day);"},{"lineNumber":126,"author":{"gitId":"Artemis-Hunt"},"content":"        duration \u003d \"Every month\";"},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"        if (monthsWithoutDay.length \u003e\u003d 1) {"},{"lineNumber":128,"author":{"gitId":"Artemis-Hunt"},"content":"            duration +\u003d \" except \" + String.join(\",\", monthsWithoutDay);"},{"lineNumber":129,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Artemis-Hunt"},"content":"        payment \u003d isAuto ? \"Auto deduction\" : \"Manual payment\";"},{"lineNumber":131,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":133,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":134,"author":{"gitId":"Artemis-Hunt"},"content":"    public String toString() {"},{"lineNumber":135,"author":{"gitId":"Artemis-Hunt"},"content":"        if (expenditureAmount \u003d\u003d null) {"},{"lineNumber":136,"author":{"gitId":"Artemis-Hunt"},"content":"            convertAttributesToString();"},{"lineNumber":137,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":139,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"%s;%s;%s;%s;%s;%s;%s\", day, description, expenditureAmount,"},{"lineNumber":140,"author":{"gitId":"Artemis-Hunt"},"content":"                incomeAmount, duration, payment, notes);"},{"lineNumber":141,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":143,"author":{"gitId":"Artemis-Hunt"},"content":"    public String toSave() {"},{"lineNumber":144,"author":{"gitId":"Artemis-Hunt"},"content":"        if (expenditureAmount \u003d\u003d null) {"},{"lineNumber":145,"author":{"gitId":"Artemis-Hunt"},"content":"            convertAttributesToString();"},{"lineNumber":146,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":148,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"%s\u003e\u0026@#\u003c%s\u003e\u0026@#\u003c%s\u003e\u0026@#\u003c%s\u003e\u0026@#\u003c%s\u003e\u0026@#\u003c%s\u003e\u0026@#\u003c%s\", day, description,"},{"lineNumber":149,"author":{"gitId":"Artemis-Hunt"},"content":"                expenditureAmount, incomeAmount, duration, payment, notes);"},{"lineNumber":150,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":152,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":145,"kaiwen98":7}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/RecurringEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.recurringtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.Item;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.ItemList;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.comparators.SortByDay;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"public class RecurringEntryList extends ItemList {"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"    public void addItem(Item item) {"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"        super.addItemAndSort(item, new SortByDay());"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    public void printList() {"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.setTitle(String.format(\"List of Recurring entries\"));"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"No.;Day;Description;Expenditure amount;Income amount;\""},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"                + \"Duration;Payment type;Notes                    \");"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"        if (super.items.isEmpty()) {"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"            TablePrinter.addRow(\"No entries created; \");"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"            for (int i \u003d 0; i \u003c super.items.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"                RecurringEntry entry \u003d (RecurringEntry) super.items.get(i);"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, entry.toString()));"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.printList();"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"     * Returns an ArrayList of all RecurringEntry with"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"     * day of month between X and Y  (both inclusive)"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"     * i.e. Y \u003e\u003d day \u003e\u003d X (inequality)"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param startDay - X"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param endDay - Y"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return ArrayList of RecurringEntry"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    public ArrayList\u003cRecurringEntry\u003e getEntriesFromDayXtoY(int startDay, int endDay) {"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cRecurringEntry\u003e entries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"        for (Item item : super.items) {"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringEntry entry \u003d (RecurringEntry) item;"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"            int dayOfEntry \u003d entry.getDay();"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"            if (dayOfEntry \u003e\u003d startDay \u0026\u0026 dayOfEntry \u003c\u003d endDay) {"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"                entries.add(entry);"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        return entries;"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"}"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":""}],"authorContributionMap":{"Artemis-Hunt":49,"kaiwen98":7}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/RecurringTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.recurringtracker;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.exceptions.DuplicateInputException;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.RetrieveEntryHandler;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.CreateEntryHandler;"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.EditEntryHandler;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.storage.RecurringTrackerSaver;"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"public class RecurringTracker {"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    static String WelcomeMessage \u003d \"Welcome to Recurring Tracker!\";"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"    static String DirectoryMainMenu \u003d \"[ MAIN_MENU -\u003e RECURRING_TRACKER ]\";"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    static RecurringEntryList entries \u003d new RecurringEntryList();"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RecurringEntryList getEntries() {"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        return entries;"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void loadEntry(CommandPacket packet) {"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"        handleNewEntry(packet);"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void execute() {"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean endTracker \u003d false;"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, WelcomeMessage);"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        do {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.DIRECTORY, DirectoryMainMenu);"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printInputPromptMessage();"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"            String input \u003d UiManager.handleInput();"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"            CommandPacket packet \u003d InputParser.getInstance().parseInput(input);"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.refreshPage();"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"            switch (packet.getCommandString()) {"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"new\":"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"                handleNewEntry(packet);"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"list\":"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"                showEntries();"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"edit\":"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"                handleEditEntry(packet);"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"delete\":"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"                handleDeleteEntry(packet);"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"commands\":"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"                showHelp();"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"            case \"exit\":"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"                endTracker \u003d true;"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"            default:"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"                handleInvalidCommand();"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"        } while (!endTracker);"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RecurringEntry handleNewEntry(CommandPacket packet) {"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d null;"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateEntryHandler createEntryHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"            //Create and retrieve entry created"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"            createEntryHandler.handlePacket(packet);"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d createEntryHandler.getEntry();"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            // Checking of duplicates"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            if (entries.isItemDuplicate(entry)) {"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"                throw new DuplicateInputException();"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"            entries.addItem(entry);"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"            String entryName \u003d entry.getName();"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"                    String.format(\"%s created!\", entryName));"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringTrackerSaver.getInstance().save();"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"                    exception.getMessage());"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (DuplicateInputException exception) {"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"Duplicate item already exists in the list; not added!\","},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"At least one of description, expenditure/income type, \","},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"auto/manual, amount or day must be different.\");"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"        } finally {"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!createEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"        return entry;"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"    static RecurringEntry handleDeleteEntry(CommandPacket packet) {"},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d null;"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveEntryHandler retrieveEntryHandler \u003d RetrieveEntryHandler.getInstance();"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"            //Set the index of the item to be deleted as"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"            //an attribute of entries"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveEntryHandler.handlePacket(packet, entries);"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d (RecurringEntry) entries.getItemAtCurrIndex();"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"            String entryName \u003d entry.getName();"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"            entries.removeItemAtCurrIndex();"},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"                    String.format(\"%s deleted!\", entryName));"},{"lineNumber":113,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringTrackerSaver.getInstance().save();"},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":115,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":116,"author":{"gitId":"Artemis-Hunt"},"content":"                    exception.getMessage());"},{"lineNumber":117,"author":{"gitId":"Artemis-Hunt"},"content":"        } finally {"},{"lineNumber":118,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":119,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":120,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":121,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":"        return entry;"},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RecurringEntry handleEditEntry(CommandPacket packet) {"},{"lineNumber":128,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d null;"},{"lineNumber":129,"author":{"gitId":"Artemis-Hunt"},"content":"        RetrieveEntryHandler retrieveEntryHandler \u003d RetrieveEntryHandler.getInstance();"},{"lineNumber":130,"author":{"gitId":"Artemis-Hunt"},"content":"        EditEntryHandler editEntryHandler \u003d EditEntryHandler.getInstance();"},{"lineNumber":131,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":133,"author":{"gitId":"Artemis-Hunt"},"content":"            //Set the index of the item to be edited as"},{"lineNumber":134,"author":{"gitId":"Artemis-Hunt"},"content":"            //an attribute of entries"},{"lineNumber":135,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveEntryHandler.handlePacket(packet, entries);"},{"lineNumber":136,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d (RecurringEntry) entries.getItemAtCurrIndex();"},{"lineNumber":137,"author":{"gitId":"Artemis-Hunt"},"content":"            editEntryHandler.setEntry(entry);"},{"lineNumber":138,"author":{"gitId":"Artemis-Hunt"},"content":"            editEntryHandler.handlePacket(packet);"},{"lineNumber":139,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG,"},{"lineNumber":140,"author":{"gitId":"Artemis-Hunt"},"content":"                    String.format(\"%s edited!\", entry.getName()));"},{"lineNumber":141,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringTrackerSaver.getInstance().save();"},{"lineNumber":142,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (InsufficientParamsException | ItemNotFoundException exception) {"},{"lineNumber":143,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":144,"author":{"gitId":"Artemis-Hunt"},"content":"                    exception.getMessage());"},{"lineNumber":145,"author":{"gitId":"Artemis-Hunt"},"content":"        } finally {"},{"lineNumber":146,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!retrieveEntryHandler.getHasParsedAllRequiredParams()) {"},{"lineNumber":147,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":148,"author":{"gitId":"Artemis-Hunt"},"content":"                        \"Input failed due to param error.\");"},{"lineNumber":149,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"Artemis-Hunt"},"content":"        return entry;"},{"lineNumber":152,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":154,"author":{"gitId":"Artemis-Hunt"},"content":"    static void showEntries() {"},{"lineNumber":155,"author":{"gitId":"Artemis-Hunt"},"content":"        entries.printList();"},{"lineNumber":156,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":158,"author":{"gitId":"Artemis-Hunt"},"content":"    static void showHelp() {"},{"lineNumber":159,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.setTitle(\"List of Commands\");"},{"lineNumber":160,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"No.;Command                 ;Input Format                ;\""},{"lineNumber":161,"author":{"gitId":"Artemis-Hunt"},"content":"                            + \"Notes                           \");"},{"lineNumber":162,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"1.;New expenditure (-e) or income (-i).;new -[e/i] [-auto] \u003e/desc {DESCRIPTION} \""},{"lineNumber":163,"author":{"gitId":"Artemis-Hunt"},"content":"                            + \"\u003e/amt {AMOUNT} \u003e/day {DAY_OF_MONTH} \u003e[/notes {NOTES}];Use -auto for \""},{"lineNumber":164,"author":{"gitId":"Artemis-Hunt"},"content":"                            + \"income/expenses that are auto-credited into/auto-deducted from bank \""},{"lineNumber":165,"author":{"gitId":"Artemis-Hunt"},"content":"                            + \"account/credit card\");"},{"lineNumber":166,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"2.;Edit entry;edit /id {INDEX} {parameter to edit};At least 1 param to edit required. \""},{"lineNumber":167,"author":{"gitId":"Artemis-Hunt"},"content":"                            + \"Will overwrite previous value\");"},{"lineNumber":168,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":169,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"3.;List entries;list; \");"},{"lineNumber":170,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"4.;Delete entry;delete /id {INDEX}; \");"},{"lineNumber":171,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"5.;Exit to main menu;exit; \");"},{"lineNumber":172,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.printList();"},{"lineNumber":173,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":175,"author":{"gitId":"Artemis-Hunt"},"content":"    static void handleInvalidCommand() {"},{"lineNumber":176,"author":{"gitId":"Artemis-Hunt"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE, \"Invalid command. Try again.\");"},{"lineNumber":177,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":177,"kaiwen98":1}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/comparators/SortByDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.recurringtracker.comparators;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.Comparator;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"public class SortByDay implements Comparator\u003cRecurringEntry\u003e {"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"    public int compare(RecurringEntry a, RecurringEntry b) {"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"        return a.getDay() - b.getDay();"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":10,"kaiwen98":2}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/recurringhandlers/CreateEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.recurringtracker.recurringhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DAY;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":" * Command class to create an entry instance, and populates it with parameter values."},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":" * The populated entry will be stored within the class, and can be retrieved by calling a"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":" * corresponding getter method."},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":" */"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"public class CreateEntryHandler extends ParamHandler {"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    RecurringEntry recurringEntry;"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    private static CreateEntryHandler handler \u003d null;"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    private CreateEntryHandler() {"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        setRequiredParams("},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"            PARAM_DAY,"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"            PARAM_DESCRIPTION,"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"            PARAM_AMOUNT,"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"            PARAM_INC + \" or \" + PARAM_EXP"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CreateEntryHandler getInstance() {"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new CreateEntryHandler();"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"    public RecurringEntry getEntry() {"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"        return recurringEntry;"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handlePacket(CommandPacket packet)"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"            throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"        recurringEntry \u003d new RecurringEntry();"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        handleParams(packet);"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        switch (paramType) {"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DAY:"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"            int day \u003d ParamChecker.getInstance().checkAndReturnDayOfMonth(paramType);"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setDay(day);"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AMOUNT:"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"            double amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setAmount(amount);"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_INC:"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setEntryType(Common.EntryType.INC);"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_EXP:"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setEntryType(Common.EntryType.EXP);"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DESCRIPTION:"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            String description \u003d ParamChecker.getInstance().checkAndReturnDescription(paramType);"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setDescription(description);"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AUTO:"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setAuto(true);"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_NOTES:"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"            String notes \u003d ParamChecker.getInstance().checkAndReturnDescription(paramType);"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setNotes(notes);"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":72,"kaiwen98":17}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/recurringhandlers/EditEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.recurringtracker.recurringhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":" * Command class to edit an existing entry instance with specified parameter values."},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":" * Entry to be edited must be referenced via the constructor argument."},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"public class EditEntryHandler extends ParamHandler {"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    RecurringEntry recurringEntry;"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    String prevEntry;"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    private static EditEntryHandler handler \u003d null;"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    // Function of constructor is to set required params"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"    // No constructor needed as there are no required params for edit entry"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"    public static EditEntryHandler getInstance() {"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new EditEntryHandler();"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    public void setEntry(RecurringEntry recurringEntry) {"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        this.recurringEntry \u003d recurringEntry;"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    public RecurringEntry getEntry() {"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"        return recurringEntry;"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"    public void checkIfParamToEditExists(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"        if (packet.getParamTypes().size() \u003c\u003d 1) {"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"            assert packet.getParam(\"/id\") !\u003d null;"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"            throw new InsufficientParamsException(\"At least 1 param required for edit!\");"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"    public void checkIfParamToEditEffective() throws InsufficientParamsException {"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"        if (prevEntry.equals(recurringEntry.toString())) {"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"            throw new InsufficientParamsException(\"Specified params do not differ from original information. \""},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"                + \"Entry did not change.\");"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handlePacket(CommandPacket packet)"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"            throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"        prevEntry \u003d recurringEntry.toString();"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"        handleParams(packet);"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"        //If only param provided is /id or no params provided"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"        checkIfParamToEditExists(packet);"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"        checkIfParamToEditEffective();"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"        switch (paramType) {"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DAY:"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"            int day \u003d ParamChecker.getInstance().checkAndReturnDayOfMonth(paramType);"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setDay(day);"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AMOUNT:"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"            double amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setAmount(amount);"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_INC:"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setEntryType(Common.EntryType.INC);"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"            //Need to update expenditureAmount and incomeAmount, since type has changed."},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.convertAttributesToString();"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_EXP:"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setEntryType(Common.EntryType.EXP);"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"            //Need to update expenditureAmount and incomeAmount, since type has changed."},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.convertAttributesToString();"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_DESCRIPTION:"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"            String description \u003d ParamChecker.getInstance().checkAndReturnDescription(paramType);"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setDescription(description);"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_AUTO:"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setAuto(true);"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_NOTES:"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"            String notes \u003d ParamChecker.getInstance().checkAndReturnDescription(paramType);"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"            recurringEntry.setNotes(notes);"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"        default:"},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"            String[] ignoreParams \u003d {"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_INDEX"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":"            };"},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!Arrays.asList(ignoreParams).contains(paramType)) {"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":97,"kaiwen98":13}},{"path":"src/main/java/seedu/financeit/datatrackers/recurringtracker/recurringhandlers/RetrieveEntryHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.recurringtracker.recurringhandlers;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntryList;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AUTO;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DAY;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":" * Command class to reference an existing entry instance with specified parameter values."},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":" * Entry will then be referenced for the ItemList instance as currItem."},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":" */"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"public class RetrieveEntryHandler extends ParamHandler {"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    RecurringEntryList entryList;"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"    private static RetrieveEntryHandler handler \u003d null;"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    private RetrieveEntryHandler() {"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        setRequiredParams("},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"            PARAM_INDEX"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"    public static RetrieveEntryHandler getInstance() {"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        if (handler \u003d\u003d null) {"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"            handler \u003d new RetrieveEntryHandler();"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"        return handler;"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handlePacket(CommandPacket packet, RecurringEntryList entryList)"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"        throws InsufficientParamsException, ItemNotFoundException {"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"        this.entryList \u003d entryList;"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        handleParams(packet);"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType)"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"        throws ParseFailParamException {"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"        switch (paramType) {"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        //RetrieveEntryHandler is only concerned with index of entry."},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        case ParamChecker.PARAM_INDEX:"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"            int index \u003d ParamChecker.getInstance().checkAndReturnIndex(paramType, entryList.getItems());"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"            entryList.setIndexToModify(index, paramType);"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"            return;"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"        default:"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"            //Ignore other params, as those will be handled by EditEntryHandler"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"            String[] ignoreParams \u003d {"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_DAY,"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_AUTO,"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_AMOUNT,"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_DESCRIPTION,"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_EXP,"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"                PARAM_INC"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"            };"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!Arrays.asList(ignoreParams).contains(paramType)) {"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":56,"kaiwen98":21}},{"path":"src/main/java/seedu/financeit/financetools/AccountStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InfoTextIndexOutOfRangeException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.storage.AccountSaver;"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"import java.text.DecimalFormat;"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Account Storage feature."},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"public class AccountStorage extends ParamHandler {"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    String nameLabel;"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"    String otherLabel;"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"    double interestRate;"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"    double cashbackRate;"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"    double monthlyCap;"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    int deleteIndex;"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"    boolean activateDelete \u003d false;"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     * Constructor for AccountStorage object."},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"    public AccountStorage() {"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"            this.handleParams(packet);"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"     * Format text from data inputted by user to be stored into txt file."},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"     * @param nameLabel description of account name."},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"     * @param interestRate value of interest rate."},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"     * @param cashbackRate value of cashback rate."},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"     * @param monthlyCap value of monthly cap for cashback."},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"     * @param otherLabel any other notes related to account."},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"     * @return formatted text to be stored."},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"    public String formatText(String nameLabel, double interestRate, double cashbackRate, double monthlyCap,"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"                             String otherLabel) {"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#\");"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"        df.setMaximumFractionDigits(8);"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"        if (nameLabel \u003d\u003d null) {"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"            nameLabel \u003d \"BLANK_NAME\";"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"        if (otherLabel \u003d\u003d null) {"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"            otherLabel \u003d \"BLANK_NOTES\";"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"        String nameInfo \u003d \"Name: \" + nameLabel + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"        String interestRateInfo \u003d \"Interest: \" + df.format(interestRate) + \"%\\n\";"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"        String cashbackRateInfo \u003d \"Cashback: \" + df.format(cashbackRate) + \"%\\n\";"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"        String monthlyCapInfo \u003d \"Cashback Cap: $\" + df.format(monthlyCap) + \"\\n\";"},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"        String otherInfo \u003d \"Notes: \" + otherLabel + \"\\n\";"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"        String textToAdd \u003d nameInfo + interestRateInfo + cashbackRateInfo + monthlyCapInfo + otherInfo;"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"        return textToAdd;"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"     * Handles information updates for account and deletion of account."},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path of txt file."},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"     * @param infoText arraylist of account data."},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"     * @throws InfoTextIndexOutOfRangeException if user input account number is not available."},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"    public void handleInfoStorage(String filePath, ArrayList\u003cString\u003e infoText) throws InfoTextIndexOutOfRangeException {"},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"        assert this.interestRate \u003e\u003d 0 : \"Interest rate should not be a negative number\";"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"        assert this.cashbackRate \u003e\u003d 0 : \"Cashback rate should not be a negative number\";"},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"        assert this.monthlyCap \u003e\u003d 0 : \"Monthly cap for cashback should not be a negative number\";"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"        if (activateDelete \u003d\u003d true) {"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"            if (this.deleteIndex \u003e 0 \u0026\u0026 this.deleteIndex \u003c\u003d infoText.size()) {"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"                infoText.remove(this.deleteIndex - 1);"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"                throw new InfoTextIndexOutOfRangeException();"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"            try {"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"                AccountSaver.updateFile(infoText, filePath);"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"bqxy"},"content":"            return;"},{"lineNumber":112,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":114,"author":{"gitId":"bqxy"},"content":"        String textToAdd \u003d formatText(this.nameLabel, this.interestRate, this.cashbackRate, this.monthlyCap,"},{"lineNumber":115,"author":{"gitId":"bqxy"},"content":"                this.otherLabel);"},{"lineNumber":116,"author":{"gitId":"bqxy"},"content":"        infoText.add(textToAdd);"},{"lineNumber":117,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"bqxy"},"content":"            AccountSaver.updateFile(infoText, filePath);"},{"lineNumber":119,"author":{"gitId":"bqxy"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":120,"author":{"gitId":"bqxy"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":121,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":124,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":126,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":128,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":129,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":130,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":132,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":133,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":134,"author":{"gitId":"bqxy"},"content":"        case \"/n\":"},{"lineNumber":135,"author":{"gitId":"bqxy"},"content":"            this.nameLabel \u003d packet.getParam(paramType);"},{"lineNumber":136,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":137,"author":{"gitId":"bqxy"},"content":"        case \"/ir\":"},{"lineNumber":138,"author":{"gitId":"bqxy"},"content":"            this.interestRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":139,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":141,"author":{"gitId":"bqxy"},"content":"            this.cashbackRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":142,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"bqxy"},"content":"        case \"/c\":"},{"lineNumber":144,"author":{"gitId":"bqxy"},"content":"            this.monthlyCap \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":145,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":146,"author":{"gitId":"bqxy"},"content":"        case \"/rm\":"},{"lineNumber":147,"author":{"gitId":"bqxy"},"content":"            this.deleteIndex \u003d ParamChecker.getInstance().checkAndReturnIntSigned(paramType);"},{"lineNumber":148,"author":{"gitId":"bqxy"},"content":"            this.activateDelete \u003d true;"},{"lineNumber":149,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":150,"author":{"gitId":"bqxy"},"content":"        case \"/o\":"},{"lineNumber":151,"author":{"gitId":"bqxy"},"content":"            this.otherLabel \u003d packet.getParam(paramType);"},{"lineNumber":152,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":153,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":154,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":155,"author":{"gitId":"bqxy"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":156,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":157,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":159}},{"path":"src/main/java/seedu/financeit/financetools/Cashback.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Cashback Calculator feature."},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"public class Cashback extends ParamHandler {"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private double amount \u003d -1;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private double cashbackRate \u003d -1;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"    private double monthlyCap \u003d -1;"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"     * Constructor for Cashback object."},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"    public Cashback() {"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"            this.handleParams(packet);"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"     * Calculates cashback interest earned."},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"     * @return cashback interest earned."},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"    public double calculateCashback() {"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"        assert this.amount \u003e\u003d 0 : \"Amount should not be a negative number\";"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"        assert this.cashbackRate \u003e\u003d 0 : \"Cashback rate should not be a negative number\";"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"        assert this.monthlyCap \u003e\u003d 0 : \"Monthly cap should not be a negative number\";"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"        Double cashbackEarned \u003d Math.round((this.amount * (this.cashbackRate / 100)) * 100.00) / 100.00;"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"        if (cashbackEarned \u003e this.monthlyCap) {"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"            cashbackEarned \u003d this.monthlyCap;"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"        return cashbackEarned;"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"        case \"/a\":"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"            this.amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"            this.cashbackRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"        case \"/c\":"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"            this.monthlyCap \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":86}},{"path":"src/main/java/seedu/financeit/financetools/FinanceTools.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.FolderNotFoundException;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.storage.AccountSaver;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" * Represents all features in FinanceTools."},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"public abstract class FinanceTools {"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    public static void execute() {"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        ArrayList\u003cString\u003e commands \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"        ArrayList\u003cString\u003e infoText \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"        String filePath \u003d \"./data/info.txt\";"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"        // Retrieve account data"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"            AccountSaver.readFileContents(filePath, infoText);"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"            System.out.println(\"File not found\");"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"        } catch (FolderNotFoundException e) {"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"        boolean continueProgram \u003d true;"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"        String outputAmount;"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, \"Welcome to Finance Tools!\");"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        while (continueProgram) {"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.DIRECTORY, \"[ MAIN_MENU -\u003e FINANCE_TOOLS_MENU ]\");"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"            UiManager.printInputPromptMessage();"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"            String input \u003d UiManager.handleInput();"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"            CommandPacket packet \u003d InputParser.getInstance().parseInput(input);"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"            commands.add(input);"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"            switch (packet.getCommandString()) {"},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"            case \"simple\":"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"                outputAmount \u003d Double.toString(Math.round(Handler.handleSimpleInterest(packet) * 100.00) / 100.00);"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"                commands.add(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"            case \"cashb\":"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"                outputAmount \u003d Double.toString(Math.round(Handler.handleCashback(packet) * 100.00) / 100.00);"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Total Cashback Earned: $\" + outputAmount);"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"                commands.add(\"Total Cashback Earned: $\" + outputAmount);"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"            case \"miles\":"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"                outputAmount \u003d Double.toString(Math.round(Handler.handleMilesCredit(packet) * 100.00) / 100.00);"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Total Miles Earned: \" + outputAmount);"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"                commands.add(\"Total Miles Earned: \" + outputAmount);"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"            case \"cyearly\":"},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"                outputAmount \u003d Double.toString(Math.round(Handler.handleYearlyCompoundInterest(packet)"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"                        * 100.00) / 100.00);"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"                commands.add(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"            case \"cmonthly\":"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"                outputAmount \u003d Double.toString(Math.round(Handler.handleMonthlyCompoundInterest(packet)"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"                        * 100.00) / 100.00);"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"                commands.add(\"Total Interest Earned: $\" + outputAmount);"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"            case \"store\":"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"                Handler.handleAccountStorage(packet, filePath, infoText);"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Information Updated\");"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"            case \"commands\":"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"                Handler.printCommandList();"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"            case \"history\":"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"                for (int i \u003d 0; i \u003c commands.size(); i++) {"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"                    System.out.printf(\"%d) \", i + 1);"},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"                    System.out.println(commands.get(i));"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"            case \"info\":"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"                if (infoText.size() \u003d\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"                    System.out.println(\"There is no account in the list\");"},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"                for (int i \u003d 0; i \u003c infoText.size(); i++) {"},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"                    System.out.printf(\"\u003d\u003d\u003d\u003dAccount No.\" + \"%d\" + \"\u003d\u003d\u003d\u003d\\n\", i + 1);"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"                    System.out.println(infoText.get(i));"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"            case \"clearinfo\":"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"                infoText.removeAll(infoText);"},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"                try {"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"                    AccountSaver.updateFile(infoText, filePath);"},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"                } catch (FileNotFoundException e) {"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"All account(s) cleared in list\");"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            case \"exit\":"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Exiting Finance Tools ...\");"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"                continueProgram \u003d false;"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"            default:"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"Invalid Command\");"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"                break;"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":113}},{"path":"src/main/java/seedu/financeit/financetools/Handler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InfoTextIndexOutOfRangeException;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":" * Represents all handlers for FinanceTools features."},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"public abstract class Handler {"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private static Logger logger \u003d Logger.getLogger(\"FinanceTools\");"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"     * Handles Simple Interest Calculator feature."},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"     * @return computation result of Simple Interest Calculator."},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"    public static double handleSimpleInterest(CommandPacket packet) {"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"        SimpleInterest tool \u003d new SimpleInterest();"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams("},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"            \"/a\","},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"            \"/r\""},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"        );"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Simple Interest Calculator\");"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start computing results\");"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"            double computeResult \u003d tool.calculateSimpleInterest();"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of computation\");"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"            return computeResult;"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"        }  finally {"},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"            if (!tool.getHasParsedAllRequiredParams()) {"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"        return 0;"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"     * Handles Cashback Calculator feature."},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"     * @return computation result of Cashback Calculator."},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"    public static double handleCashback(CommandPacket packet) {"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"        Cashback tool \u003d new Cashback();"},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams("},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"            \"/a\","},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"            \"/r\","},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"            \"/c\""},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"        );"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Cashback Calculator\");"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start computing results\");"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"            double computeResult \u003d tool.calculateCashback();"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of computation\");"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"            return computeResult;"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"        } finally {"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"            if (!tool.getHasParsedAllRequiredParams()) {"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"        return 0;"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"     * Handles Miles Credit Calculator feature."},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"     * @return computation result of Miles Credit Calculator."},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"    public static double handleMilesCredit(CommandPacket packet) {"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"        MilesCredit tool \u003d new MilesCredit();"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams("},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"            \"/a\","},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"            \"/r\""},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"        );"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Miles Credit Calculator\");"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start computing results\");"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"            double computeResult \u003d tool.calculateMiles();"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of computation\");"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            return computeResult;"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"        } finally {"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"            if (!tool.getHasParsedAllRequiredParams()) {"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":111,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"bqxy"},"content":"        return 0;"},{"lineNumber":114,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":116,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"bqxy"},"content":"     * Handles Account Storage feature."},{"lineNumber":118,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":120,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path that contains all the data in text format."},{"lineNumber":121,"author":{"gitId":"bqxy"},"content":"     * @param infoText arraylist that stores all data in text format."},{"lineNumber":122,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"bqxy"},"content":"    public static void handleAccountStorage(CommandPacket packet, String filePath, ArrayList\u003cString\u003e infoText) {"},{"lineNumber":124,"author":{"gitId":"bqxy"},"content":"        AccountStorage tool \u003d new AccountStorage();"},{"lineNumber":125,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams();"},{"lineNumber":126,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":127,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Account Storage\");"},{"lineNumber":129,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":130,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start saving data into txt file\");"},{"lineNumber":131,"author":{"gitId":"bqxy"},"content":"            tool.handleInfoStorage(filePath, infoText);"},{"lineNumber":132,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of processing\");"},{"lineNumber":133,"author":{"gitId":"bqxy"},"content":"        } catch (AssertionError error) {"},{"lineNumber":134,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":135,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":136,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":137,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":138,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":139,"author":{"gitId":"bqxy"},"content":"        } catch (InfoTextIndexOutOfRangeException e) {"},{"lineNumber":140,"author":{"gitId":"bqxy"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":141,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":144,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"bqxy"},"content":"     * Handles Monthly Compound Interest Calculator feature."},{"lineNumber":146,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":148,"author":{"gitId":"bqxy"},"content":"     * @return computation result of Monthly Compound Interest Calculator."},{"lineNumber":149,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"bqxy"},"content":"    public static double handleMonthlyCompoundInterest(CommandPacket packet) {"},{"lineNumber":151,"author":{"gitId":"bqxy"},"content":"        MonthlyCompoundInterest tool \u003d new MonthlyCompoundInterest();"},{"lineNumber":152,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams("},{"lineNumber":153,"author":{"gitId":"bqxy"},"content":"                \"/a\","},{"lineNumber":154,"author":{"gitId":"bqxy"},"content":"                \"/r\","},{"lineNumber":155,"author":{"gitId":"bqxy"},"content":"                \"/p\""},{"lineNumber":156,"author":{"gitId":"bqxy"},"content":"        );"},{"lineNumber":157,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Monthly Compound Interest Calculator\");"},{"lineNumber":159,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":160,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start computing results\");"},{"lineNumber":161,"author":{"gitId":"bqxy"},"content":"            double computeResult \u003d tool.calculateCompoundInterest();"},{"lineNumber":162,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of computation\");"},{"lineNumber":163,"author":{"gitId":"bqxy"},"content":"            return computeResult;"},{"lineNumber":164,"author":{"gitId":"bqxy"},"content":"        } catch (AssertionError error) {"},{"lineNumber":165,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":166,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":167,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":168,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":169,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":170,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"bqxy"},"content":"        return 0;"},{"lineNumber":172,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":174,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"bqxy"},"content":"     * Handles Yearly Compound Interest Calculator feature."},{"lineNumber":176,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"bqxy"},"content":"     * @param packet contains input params by user."},{"lineNumber":178,"author":{"gitId":"bqxy"},"content":"     * @return computation result of Yearly Compound Interest Calculator."},{"lineNumber":179,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"bqxy"},"content":"    public static double handleYearlyCompoundInterest(CommandPacket packet) {"},{"lineNumber":181,"author":{"gitId":"bqxy"},"content":"        YearlyCompoundInterest tool \u003d new YearlyCompoundInterest();"},{"lineNumber":182,"author":{"gitId":"bqxy"},"content":"        tool.setRequiredParams("},{"lineNumber":183,"author":{"gitId":"bqxy"},"content":"                \"/a\","},{"lineNumber":184,"author":{"gitId":"bqxy"},"content":"                \"/r\","},{"lineNumber":185,"author":{"gitId":"bqxy"},"content":"                \"/p\""},{"lineNumber":186,"author":{"gitId":"bqxy"},"content":"        );"},{"lineNumber":187,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":188,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start handling params for Yearly Compound Interest Calculator\");"},{"lineNumber":189,"author":{"gitId":"bqxy"},"content":"            tool.handlePacket(packet);"},{"lineNumber":190,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO, \"going to start computing results\");"},{"lineNumber":191,"author":{"gitId":"bqxy"},"content":"            double computeResult \u003d tool.calculateCompoundInterest();"},{"lineNumber":192,"author":{"gitId":"bqxy"},"content":"            logger.log(Level.INFO,\"end of computation\");"},{"lineNumber":193,"author":{"gitId":"bqxy"},"content":"            return computeResult;"},{"lineNumber":194,"author":{"gitId":"bqxy"},"content":"        } catch (AssertionError error) {"},{"lineNumber":195,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":196,"author":{"gitId":"bqxy"},"content":"                    \"Input failed due to param error.\");"},{"lineNumber":197,"author":{"gitId":"bqxy"},"content":"        } catch (InsufficientParamsException exception) {"},{"lineNumber":198,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":199,"author":{"gitId":"bqxy"},"content":"                    exception.getMessage());"},{"lineNumber":200,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"bqxy"},"content":"        return 0;"},{"lineNumber":202,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":204,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":205,"author":{"gitId":"bqxy"},"content":"     * Prints all commands in FinanceTools."},{"lineNumber":206,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"bqxy"},"content":"    public static void printCommandList() {"},{"lineNumber":208,"author":{"gitId":"bqxy"},"content":"        TablePrinter.setTitle(\"List of Commands\");"},{"lineNumber":209,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"No;Finance Tool             ;Input Format                                         \");"},{"lineNumber":210,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"1;Simple Interest Calculator;simple /a {AMOUNT} /r {INTEREST_RATE}\");"},{"lineNumber":211,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"2;Yearly Compound Interest Calculator;cyearly /a {AMOUNT} /r {INTEREST_RATE}\""},{"lineNumber":212,"author":{"gitId":"bqxy"},"content":"                + \" /p {YEARS} /d {YEARLY_DEPOSIT}\");"},{"lineNumber":213,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"3;Monthly Compound Interest Calculator;cmonthly /a {AMOUNT} /r {INTEREST_RATE}\""},{"lineNumber":214,"author":{"gitId":"bqxy"},"content":"                + \" /p {MONTHS} /d {MONTHLY_DEPOSIT}\");"},{"lineNumber":215,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"4;Cashback Calculator;cashb /a {AMOUNT} /r {CASHBACK_RATE} /c {CASHBACK_CAP}\");"},{"lineNumber":216,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"5;Miles Credit Calculator;miles /a {AMOUNT} /r {MILES_RATE}\");"},{"lineNumber":217,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"6;Account Storage;store /n {ACCOUNT_NAME} /ir {INTEREST_RATE} /r {CASHBACK_RATE}\""},{"lineNumber":218,"author":{"gitId":"bqxy"},"content":"                + \" /c {CASHBACK_CAP} /o {OTHER_NOTES}\");"},{"lineNumber":219,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"7;Delete Account;store /rm {ACCOUNT_NO}\");"},{"lineNumber":220,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"8;Delete All Account Information;clearinfo\");"},{"lineNumber":221,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"9;Show Account Information;info\");"},{"lineNumber":222,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"10;Show Command and Calculation History;history\");"},{"lineNumber":223,"author":{"gitId":"bqxy"},"content":"        TablePrinter.addRow(\"11;Exit FinanceTools;exit\");"},{"lineNumber":224,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":225,"author":{"gitId":"bqxy"},"content":"        TablePrinter.printList();"},{"lineNumber":226,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":227}},{"path":"src/main/java/seedu/financeit/financetools/MilesCredit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Miles Credit Calculator feature."},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"public class MilesCredit extends ParamHandler {"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private double amount \u003d -1;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private double milesRate \u003d -1;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"     * Constructor for Miles Credit object."},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    public MilesCredit() {"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"            handleParams(packet);"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"     * Calculates miles credit earned."},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"     * @return miles credit earned."},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"    public double calculateMiles() {"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"        assert this.amount \u003e\u003d 0 : \"Amount should not be a negative number\";"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"        assert this.milesRate \u003e\u003d 0 : \"Miles rate should not be a negative number\";"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"        return Math.round((this.amount * this.milesRate) * 100.00) / 100.00;"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"        case \"/a\":"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"            this.amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"            this.milesRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"                    ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":77}},{"path":"src/main/java/seedu/financeit/financetools/MonthlyCompoundInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Monthly Compound Interest Calculator feature."},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"public class MonthlyCompoundInterest extends ParamHandler {"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private double amount \u003d 0;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private double interestRate \u003d 0;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"    private int calculationPeriod \u003d 0;"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    private double monthlyDeposit \u003d 0;"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"     * Constructor for Monthly Compound Interest object."},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"    public MonthlyCompoundInterest() {"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            handleParams(packet);"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"     * Calculates compound interest earned."},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"     * @return compound interest earned."},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"    public double calculateCompoundInterest() {"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"        assert this.amount \u003e\u003d 0 : \"Amount should not be a negative number\";"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"        assert this.interestRate \u003e\u003d 0 : \"Interest rate should not be a negative number\";"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"        assert this.calculationPeriod \u003e\u003d 0 : \"Calculation period (in years) should not be a negative number\";"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"        assert this.monthlyDeposit \u003e\u003d 0 : \"Monthly deposit should not be a negative number\";"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"        double interestRate \u003d (this.interestRate / 100) / 12;"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"        int period \u003d this.calculationPeriod;"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"        int compoundInterval \u003d this.calculationPeriod;"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"        double totalAmount;"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"        double interestEarned;"},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"        double totalInterestEarned \u003d 0;"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"        System.out.println(\"Compound Interval: Monthly\\n\");"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"        if (monthlyDeposit \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"            totalAmount \u003d this.amount * Math.pow((1 + interestRate / compoundInterval), compoundInterval * period);"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"            totalInterestEarned \u003d totalAmount - this.amount;"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"            for (int i \u003d 0; i \u003c calculationPeriod; i++) {"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"                this.amount +\u003d monthlyDeposit;"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"                totalAmount \u003d this.amount * Math.pow((1 + interestRate / 1), 1);"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"                interestEarned \u003d totalAmount - this.amount;"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"                System.out.printf(\"Total Interest earned in Month \" + \"%d\", i + 1);"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"                System.out.printf(\": $%.2f\\n\", interestEarned);"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"                totalInterestEarned +\u003d interestEarned;"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"                this.amount +\u003d interestEarned;"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"        return Math.round(totalInterestEarned * 100.00) / 100.00;"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"        case \"/a\":"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"            this.amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"            this.interestRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"        case \"/p\":"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"            this.calculationPeriod \u003d ParamChecker.getInstance().checkAndReturnIntSigned(paramType);"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"        case \"/d\":"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"            this.monthlyDeposit \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":110}},{"path":"src/main/java/seedu/financeit/financetools/SimpleInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Simple Interest Calculator feature."},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"public class SimpleInterest extends ParamHandler {"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private double amount \u003d -1;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private double interestRate \u003d -1;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"     * Constructor for Simple Interest object."},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    public SimpleInterest() {"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"            this.handleParams(packet);"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"     * Calculates simple interest earned."},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"     * @return simple interest earned."},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"    public double calculateSimpleInterest() {"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"        assert this.amount \u003e\u003d 0 : \"Amount should not be a negative number\";"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"        assert this.interestRate \u003e\u003d 0 : \"Interest rate should not be a negative number\";"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"        return Math.round((this.amount * (this.interestRate / 100)) * 100.00) / 100.00;"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"        case \"/a\":"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"            this.amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"            this.interestRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":77}},{"path":"src/main/java/seedu/financeit/financetools/YearlyCompoundInterest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.ParamHandler;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":" * Represents all operations for Yearly Compound Interest Calculator feature."},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"public class YearlyCompoundInterest extends ParamHandler {"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private double amount \u003d 0;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private double interestRate \u003d 0;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"    private int calculationPeriod \u003d 0;"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    private double yearlyDeposit \u003d 0;"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"     * Constructor for Yearly Compound Interest object."},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"    public YearlyCompoundInterest() {"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"        super();"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"     * Handles parameters inputted by user."},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"     * @param packet each packet contains different inputs from user."},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"     * @throws InsufficientParamsException if there are missing params."},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"    public void handlePacket(CommandPacket packet) throws InsufficientParamsException {"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"            handleParams(packet);"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"        } catch (ItemNotFoundException exception) {"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"            // Fall-through"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"     * Calculates compound interest earned."},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"     * @return compound interest earned."},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"    public double calculateCompoundInterest() {"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"        assert this.amount \u003e\u003d 0 : \"Amount should not be a negative number\";"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"        assert this.interestRate \u003e\u003d 0 : \"Interest rate should not be a negative number\";"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"        assert this.calculationPeriod \u003e\u003d 0 : \"Calculation period (in years) should not be a negative number\";"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"        assert this.yearlyDeposit \u003e\u003d 0 : \"Yearly deposit should not be a negative number\";"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"        double interestRate \u003d this.interestRate / 100;"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"        int period \u003d this.calculationPeriod;"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"        int compoundInterval \u003d 1;"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"        double totalAmount;"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":"        double interestEarned;"},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"        double totalInterestEarned \u003d 0;"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"        System.out.println(\"Compound Interval: Yearly\\n\");"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"        if (yearlyDeposit \u003d\u003d 0) {"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"            totalAmount \u003d this.amount * Math.pow((1 + interestRate / compoundInterval), compoundInterval * period);"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"            totalInterestEarned \u003d totalAmount - this.amount;"},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"            for (int i \u003d 0; i \u003c calculationPeriod; i++) {"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"                this.amount +\u003d yearlyDeposit;"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"                totalAmount \u003d this.amount * Math.pow((1 + interestRate / compoundInterval), compoundInterval);"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"                interestEarned \u003d totalAmount - this.amount;"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"                System.out.printf(\"Total Interest earned in Year \" + \"%d\", i + 1);"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"                System.out.printf(\": $%.2f\\n\", interestEarned);"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":"                totalInterestEarned +\u003d interestEarned;"},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"                this.amount +\u003d interestEarned;"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"        return Math.round(totalInterestEarned * 100.00) / 100.00;"},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"     * Handles user inputted param."},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"     * @param packet    input CommandPacket obtained from parsing user input."},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"     * @param paramType paramType of param that is currently being validated and processed."},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"     * @throws ParseFailParamException if param does not fulfil conditions for a proper input param."},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"        switch (paramType) {"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"        case \"/a\":"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":"            this.amount \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"        case \"/r\":"},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"            this.interestRate \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"        case \"/p\":"},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"            this.calculationPeriod \u003d ParamChecker.getInstance().checkAndReturnIntSigned(paramType);"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"        case \"/d\":"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"            this.yearlyDeposit \u003d ParamChecker.getInstance().checkAndReturnDoubleSigned(paramType);"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"        default:"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"                ParamChecker.getInstance().getUnrecognizedParamMessage(paramType));"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":110}},{"path":"src/main/java/seedu/financeit/parser/DateTimeOutputManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.parser;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" * Class that stores and manages the output of Datetime classes."},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"public class DateTimeOutputManager {"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    private LocalDate date;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    private LocalTime time;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    public DateTimeOutputManager(){"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    public void setTime(LocalTime time) {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        this.time \u003d time;"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"     * Takes in one format specifier string and outputs datetime string with the corresponding format."},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"     * @param whichFormat Format to determine output of dateTime."},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"     * @return Formatted dateTime string"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    public String getSingleDateFormatted(String whichFormat) {"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        switch (whichFormat) {"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        case \"date\":"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            // May 27 2020"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            output \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"));"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        case \"day\":"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"            // Tuesday"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"            output \u003d this.date.getDayOfWeek().toString();"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        case \"month\":"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            // May"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            output \u003d this.date.getMonth().toString();"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"        case \"year\":"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"            // 2020"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            output \u003d Integer.toString(date.getYear());"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            // Show all information"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            output \u003d this.date.format(DateTimeFormatter.ofPattern(\"YYYY/MM/dd\"));"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"    public String getSingleTimeFormatted(String whichFormat) {"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d \"\";"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"        switch (whichFormat) {"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        case \"time\":"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            // 2020"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            output \u003d time.toString();"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"        default:"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"            // Show all information"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"            output \u003d this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"     * Handles a String array of format specifiers"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"     * and arranges the tokens of formatted datetime substrings in a proper order."},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"     * @param whichFormat Format to determine output of dateTime"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"     * @return Formatted dateTime string"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"    public String getDateTimeFormatted(String[] whichFormat) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        String[] token \u003d new String[Common.MAX_ARRAY_LEN];"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        String outputDate;"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        String outputTime;"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"        if (whichFormat \u003d\u003d null) {"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"            return getSingleDateFormatted(\" \")"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"                + getSingleTimeFormatted(\" \");"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"        for (String format : whichFormat) {"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"            outputDate \u003d getSingleDateFormatted(format);"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"            outputTime \u003d getSingleTimeFormatted(format);"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"            switch (format) {"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"            case \"day\":"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"                token[0] \u003d outputDate;"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"            case \"month\":"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"                token[2] \u003d outputDate;"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            case \"year\":"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"                token[3] \u003d outputDate;"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"            case \"time\":"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"                token[4] \u003d outputTime;"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"            default:"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                // Fall-through"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            if (token[i] !\u003d null) {"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"                output +\u003d token[i] + \" \";"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"        return output.trim();"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"}"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"kaiwen98":124}},{"path":"src/main/java/seedu/financeit/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.parser;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.RegexMatcher;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.security.InvalidParameterException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.time.DateTimeException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" * Class parses date and time inputs to output corresponding LocalDate and LocalTime."},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"public class DateTimeParser {"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public static LocalDate parseLocalDate(String input) throws InvalidParameterException,"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"        NullPointerException, DateTimeException {"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        if (RegexMatcher.alphabetMatcher(input).find() | !RegexMatcher.numberMatcher(input).find()) {"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"            throw new InvalidParameterException();"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"            String formattedString \u003d getFormatStringForLocalDateParse(input);"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"            return LocalDate.parse(formattedString);"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    public static LocalTime parseLocalTime(String input) throws InvalidParameterException,"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        NullPointerException, DateTimeException {"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        if (RegexMatcher.alphabetMatcher(input).find() | !RegexMatcher.numberMatcher(input).find()) {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            throw new InvalidParameterException();"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"            String formattedString \u003d getFormatStringForLocalTimeParse(input);"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"            return LocalTime.parse(formattedString);"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    public static String getFormatStringForLocalDateParse(String input) {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        final String partition \u003d \"-\";"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        if (input.matches(\"[0-9]{6}\")) {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            // If input date format is XXXXXX, replace with XX,XX,XX. Eg: 200404"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input.substring(0,2) + \",\" + input.substring(2, 4) + \",\" + input.substring(4);"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        } else if (input.matches(\"[0-9]{8}\")) {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"            // If input date format is XXXXXXXX, replace with XXXX,XX,XX. Eg: 20200404"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input.substring(0,4) + \",\" + input.substring(4, 6) + \",\" + input.substring(6);"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        input \u003d input.replaceAll(\"[\\\\D]+\", \"c\");"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        String[] tokens \u003d input.split(\"c\");"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c output.length; i++) {"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"            if (i \u003e tokens.length - 1) {"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"                // If subsequent pair of digits is undefined by simplified input, set to 01 (Jan, 1)."},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d \"01\";"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            } else if (tokens[i].length() \u003c 2) {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"                // If token is 1 or 0 digits long, fill the remaining space with 0 such that a 2 digit number is formed."},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d \"0\" + tokens[i];"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            } else if (i \u003d\u003d 0 \u0026\u0026 tokens[i].matches(\"[0-9]{2}\")) {"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"                // If year given is YY"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d \"20\" + tokens[i].substring(0,2);"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d tokens[i];"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        return String.join(partition, output);"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    public static String getFormatStringForLocalTimeParse(String input) {"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        final String partition \u003d \":\";"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"        String[] output \u003d new String[3];"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        if (input.matches(\"[0-9]{4}\")) {"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"            // If input time format is XXXX, replace with XX:XX:00."},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input.substring(0,2) + \",\" + input.substring(2) + \",00\";"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        input \u003d input.replaceAll(\"[\\\\D]+\", \"c\");"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        String[] tokens \u003d input.split(\"c\");"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c output.length; i++) {"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"            if (i \u003e tokens.length - 1) {"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"                // If subsequent pair of digits is undefined by simplified input, set to 01 (Jan, 1)."},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d \"01\";"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            } else if (tokens[i].length() \u003c 2) {"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"                // If token is 1 or 0 digits long, fill the remaining space with 0 such that a 2 digit number is formed."},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d \"0\" + tokens[i];"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"                output[i] \u003d tokens[i];"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        return String.join(partition, output);"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":87}},{"path":"src/main/java/seedu/financeit/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.parser;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.EmptyCommandStringException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.LoggerCentre;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.RegexMatcher;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import java.util.regex.Matcher;"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":"import java.util.regex.PatternSyntaxException;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"public class InputParser {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    private Matcher matcher;"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    private static InputParser inputParser \u003d null;"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    private InputParser() {"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"    public static InputParser getInstance() {"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"        if (inputParser \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"            inputParser \u003d new InputParser();"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"        return inputParser;"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"     * This will parse the command into 4 small parts."},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"     * Example: expense 5000 for 08"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"     * Output: expense;5000;for;08"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param userCommand the command user enter"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":37,"author":{"gitId":"dixoncwc"},"content":"    //@@author dixoncwc"},{"lineNumber":38,"author":{"gitId":"dixoncwc"},"content":"    public String[] parseGoalCommand(String userCommand) {"},{"lineNumber":39,"author":{"gitId":"dixoncwc"},"content":"        String[] newCommand \u003d userCommand.split(\" \", 4);"},{"lineNumber":40,"author":{"gitId":"dixoncwc"},"content":"        return newCommand;"},{"lineNumber":41,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":43,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"dixoncwc"},"content":"     * This will parse the edit command into 5 small parts."},{"lineNumber":45,"author":{"gitId":"dixoncwc"},"content":"     * Example: edit expense 2000 for 08"},{"lineNumber":46,"author":{"gitId":"dixoncwc"},"content":"     * Output: edit;expense;2000;for;08"},{"lineNumber":47,"author":{"gitId":"dixoncwc"},"content":"     * @param userCommand command user entered"},{"lineNumber":48,"author":{"gitId":"dixoncwc"},"content":"     * @return"},{"lineNumber":49,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"dixoncwc"},"content":"    public String[] parseEditCommand(String userCommand) {"},{"lineNumber":51,"author":{"gitId":"dixoncwc"},"content":"        String[] newCommand \u003d userCommand.split(\" \", 5);"},{"lineNumber":52,"author":{"gitId":"dixoncwc"},"content":"        return newCommand;"},{"lineNumber":53,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":55,"author":{"gitId":"dixoncwc"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"dixoncwc"},"content":"     * Example input: deadline /by tomorrow /note skip page 70."},{"lineNumber":57,"author":{"gitId":"dixoncwc"},"content":"     * commandString: \"deadline\""},{"lineNumber":58,"author":{"gitId":"dixoncwc"},"content":"     * CommandPacket created:"},{"lineNumber":59,"author":{"gitId":"dixoncwc"},"content":"     * {"},{"lineNumber":60,"author":{"gitId":"dixoncwc"},"content":"     *  commandType: ADD_DEADLINE"},{"lineNumber":61,"author":{"gitId":"dixoncwc"},"content":"     *  params: HashMap\u003c String, String \u003e"},{"lineNumber":62,"author":{"gitId":"dixoncwc"},"content":"     *  {"},{"lineNumber":63,"author":{"gitId":"dixoncwc"},"content":"     *   \"by\": \"tomorrow\""},{"lineNumber":64,"author":{"gitId":"dixoncwc"},"content":"     *   \"note\": \"skip page 70\""},{"lineNumber":65,"author":{"gitId":"dixoncwc"},"content":"     *  }"},{"lineNumber":66,"author":{"gitId":"dixoncwc"},"content":"     * }"},{"lineNumber":67,"author":{"gitId":"dixoncwc"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"    //@@author kaiwen98"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"    public CommandPacket parseInput(String input) {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"        String commandString \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        String[] buffer;"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        String separator \u003d \"\";"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        boolean paramsExist \u003d false;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"        //Split into [command, rest of input]"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        //Check for existence of command title"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input.trim();"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input + \" \";"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            // If no param is found, an exception will be thrown."},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            matcher \u003d RegexMatcher.paramMatcher(input);"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            separator \u003d getSeparator(input);"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        } catch (java.lang.IllegalStateException exception) {"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"            //No params provided"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"            commandString \u003d input.toLowerCase().trim();"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"            return new CommandPacket(commandString, params);"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"        // Param substring is found, need to parse."},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            //Split into [\u003ccommand\u003e, \u003cparams string\u003e]"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            buffer \u003d input.split(separator, 2);"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"            if (buffer[0].equals(\" \")) {"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"                throw new EmptyCommandStringException();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"            commandString \u003d buffer[0].toLowerCase().trim();"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"            String paramSubstring \u003d separator + buffer[1];"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"            paramSubstring \u003d paramSubstring.trim();"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"            params \u003d ParamsParser.getInstance().parseParams(paramSubstring);"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"        } catch (EmptyCommandStringException e) {"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.SYS_MSG, e.getMessage());"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket packet \u003d new CommandPacket(commandString, params);"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerInputParser.info(packet.toString());"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"        return packet;"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"    public String getSeparator(String input) {"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"        //Matcher matches \u003cspace\u003e\u003cseparator\u003e\u003cparamType\u003e\u003cspace\u003e, so (matched index + 1) gives the separator"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"        int separatorIndex \u003d matcher.start() + 1;"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"        return String.valueOf(input.charAt(separatorIndex));"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"dixoncwc":32,"Artemis-Hunt":23,"kaiwen98":61}},{"path":"src/main/java/seedu/financeit/parser/ParamsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.parser;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.RegexMatcher;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"//@@author Artemis-Hunt"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"public class ParamsParser {"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"    protected Matcher matcher;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    private static ParamsParser paramsParser;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"    private ParamsParser() {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"    public static ParamsParser getInstance() {"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"        if (paramsParser \u003d\u003d null) {"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"            paramsParser \u003d new ParamsParser();"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"        return paramsParser;"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    public String getSeparator(String input) {"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"        //Matcher matches \u003cspace\u003e\u003cseparator\u003e\u003cparamType\u003e\u003cspace\u003e, so (matched index + 1) gives the separator"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"        int separatorIndex \u003d matcher.start() + 1;"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.valueOf(input.charAt(separatorIndex));"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"    public String getNextParamType(String input) {"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        //Matcher gives index of space before the param, so (matched index + 1) gives the separator"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        int separatorIndex \u003d -1;"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            separatorIndex \u003d RegexMatcher.paramMatcher(input).start();"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (IllegalStateException e) {"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"            return input;"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        int nextSpaceIndex \u003d input.indexOf(\" \", separatorIndex + 1);"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        return input.substring(separatorIndex, nextSpaceIndex);"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"     * Example input: deadline do homework /by tomorrow /note skip page 70"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"     * --First iteration--"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramSubstring: \"by tomorrow /note skip page 70\""},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramType: \"by\""},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramArgument: \"tomorrow\""},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"     * --Next iteration--"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramSubstring: \"note skip page 70\""},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramType: \"note\""},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"     * paramArgument: \"skip page 70\""},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"     * etc."},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"    public HashMap\u003cString, String\u003e parseParams(String paramSubstring) {"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        HashMap\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] buffer;"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramArgument \u003d \"\";"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean paramArgumentExist;"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"        do {"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"            paramSubstring +\u003d \" \";"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"            paramArgument \u003d \"\";"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"            //Separate into [paramType, rest of string]"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"            buffer \u003d paramSubstring.split(\" \", 2);"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"            String paramType \u003d buffer[0].trim();"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"            paramSubstring \u003d buffer[1].trim();"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"            /*"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"            * Process param argument and check whether more params exist"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"            */"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"            boolean isRestOfStringEmpty \u003d paramSubstring.length() \u003d\u003d 0;"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            if (isRestOfStringEmpty) {"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"                //No param argument, no further params"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"                putParamIntoParamMap(paramType, paramSubstring, paramMap);"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"            //Matcher requires a leading and trailing blank space to successfully match a param"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"            paramSubstring \u003d \" \" + paramSubstring + \" \";"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"            matcher \u003d RegexMatcher.paramMatcher(paramSubstring);"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"                //Attempts to look for the start of the next param. If found, everything before start of next"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"                //param is the paramArgument belonging to the current param."},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"                paramArgumentExist \u003d matcher.start() \u003e\u003d 0;"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (java.lang.IllegalStateException e) {"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"                //If no more params are present after current param"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"                //Only thing in paramSubstring is the paramArgument"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"                paramArgument \u003d paramSubstring.trim();"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"                putParamIntoParamMap(paramType, paramArgument, paramMap);"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"                break;"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"            if (paramArgumentExist) {"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"                //Split into [paramArgument, rest of string]"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"                //Separator character \u003d \u0027/\u0027 or \u0027-\u0027"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"                //String separator \u003d getSeparator(paramSubstring);"},{"lineNumber":100,"author":{"gitId":"Artemis-Hunt"},"content":"                String separator \u003d getNextParamType(paramSubstring);"},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"                buffer \u003d paramSubstring.split(separator, 2);"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"                buffer[1] \u003d separator + buffer[1];"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"                paramArgument \u003d buffer[0].trim();"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"                paramSubstring \u003d buffer[1].trim();"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"            } else {"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"                //Nothing more to process for current param"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"                paramSubstring \u003d paramSubstring.trim();"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"            putParamIntoParamMap(paramType, paramArgument, paramMap);"},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"        } while (true);"},{"lineNumber":113,"author":{"gitId":"Artemis-Hunt"},"content":"        return paramMap;"},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":116,"author":{"gitId":"Artemis-Hunt"},"content":"    public void putParamIntoParamMap(String paramType, String param, HashMap paramMap) {"},{"lineNumber":117,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"Artemis-Hunt"},"content":"            ParamChecker.getInstance().checkForDuplicateParamTypes(paramType, paramMap);"},{"lineNumber":119,"author":{"gitId":"Artemis-Hunt"},"content":"            paramMap.put(paramType, param);"},{"lineNumber":120,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (ParseFailParamException exception) {"},{"lineNumber":121,"author":{"gitId":"Artemis-Hunt"},"content":"            // Fall through"},{"lineNumber":122,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":116,"kaiwen98":9}},{"path":"src/main/java/seedu/financeit/ui/MenuPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.ui;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"public class MenuPrinter {"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"    public static String prompt \u003d \"\";"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"    public static void printMainMenu() {"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"        status();"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.setTitle(\"Welcome to Main Menu\");"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"No.; Feature                                           ; Commands                    \");"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"[1]; Manual Income/Expense Tracker; manual\");"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"        TablePrinter.addRow(\"[2]; Recurring Income/Expense Tracker; recur\");"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"[3]; Account Summary; acc\");"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"[4]; Goals Tracker; goal\");"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.addRow(\"[5]; Financial Calculator; financial\");"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[6]; Save Manager; saver\");"},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[7]; Toggle Log On or Off; logger\");"},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[8]; Quit The Program; exit\");"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        TablePrinter.printList();"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    public static void status() {"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(\"Status: \" + prompt);"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        prompt \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Feudalord":3,"Artemis-Hunt":3,"kaiwen98":21}},{"path":"src/main/java/seedu/financeit/ui/ReminderPrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.ui;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.ReminderGenerator;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"public class ReminderPrinter {"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"     * Prints a list of reminders for recurring entries that are"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"     * upcoming 5 days from the current date."},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void printReminders() {"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e remindersToPrint \u003d ReminderGenerator.generateListOfRemindersAsStrings();"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printWithStatusIcon(Common.PrintType.REMINDER,"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"                remindersToPrint.toArray(new String[0]));"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":17,"kaiwen98":2}},{"path":"src/main/java/seedu/financeit/ui/TablePrinter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.ui;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.RegexMatcher;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"public class TablePrinter {"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"    private static ArrayList\u003cString\u003e listContents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    private static String title \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    private static final int DEFAULT_COL_WIDTH \u003d 15;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    private static int[] colWidth;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    private static int pad \u003d 0;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public static String formatTitle(String input) {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d UiManager.getLineWithSymbol(input.length() + 4, \"\u003d\");"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        output +\u003d \"\\n\" + String.format(\"\u003d %s \u003d\", input);"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        output +\u003d \"\\n\" + UiManager.getLineWithSymbol(input.length() + 4, \"\u003d\");"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    public static String formatTitle(String input, int width) {"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d UiManager.getLineWithSymbol(width, \"\u003d\");"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        output +\u003d \"\\n\" + String.format(\"\u003d %s %s\u003d\", input, UiManager.getLineWithSymbol(width - 4 - input.length(), \" \"));"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        output +\u003d \"\\n\" + UiManager.getLineWithSymbol(width, \"\u003d\");"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    public static void setTitle(String input) {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        title \u003d input;"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    public static void addRow(String row) {"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        listContents.add(row);"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    public static void printRow(String[] row) {"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(getPrintListRow(row) + \"|\");"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"     * Main table printing function."},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"     * @param input Input rows to print table contents."},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    public static void printList(ArrayList\u003cString\u003e input) {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        String[] header \u003d input.get(0).split(\";\");"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        //Set the width of the column based on the length of column header"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        setColWidth(header);"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(formatTitle(title, getHeaderRowWidth(header)));"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"        printRowHeader(header);"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        printHorizontalHeaderPartition(getHeaderRowWidth(header));"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            String[] buffer \u003d input.get(i).split(\";\");"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            printRow(buffer);"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            printHorizontalPartition(getHeaderRowWidth(header));"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"    public static void printList() {"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        printList(listContents);"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"        listContents.clear();"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        title \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"    public static int getColWidth(int length) {"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        return length \u003e DEFAULT_COL_WIDTH ? length : DEFAULT_COL_WIDTH;"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"    public static ArrayList\u003cString\u003e adjustWordToColWidth(String rawInput, int maxLength) {"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        maxLength \u003d maxLength - 1;"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        String[] inputs \u003d rawInput.split(\"[\u003e]\");"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        for (String input: inputs) {"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            Matcher matcher \u003d RegexMatcher.regexMatcher(input, String.format(\".{%s}|.{1,}$\", maxLength));"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"            while (matcher.find()) {"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"                output.add(matcher.group());"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"    public static ArrayList\u003cString\u003e adjustContentToColWidth(String rawInput, int maxLength) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        String[] inputs \u003d rawInput.split(\"[\u003e]\");"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        String[] buffer;"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        String feed \u003d \"\";"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"        boolean hasParsedLongWord;"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"        for (String input: inputs) {"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"            // Break down input line into word tokens"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            buffer \u003d input.split(\" \");"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"            int scannedWordCount \u003d 0;"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            // While the input line is not fully visited"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            while (scannedWordCount + 1  \u003c\u003d buffer.length) {"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"                hasParsedLongWord \u003d false;"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"                feed \u003d \"\";"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"                // Acquire segment of buffer right before line feed exceeds the char limit"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"                if (buffer[scannedWordCount].length() \u003e maxLength) {"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"                    //System.out.println(\"if: \" + buffer[scannedWordCount]);"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"                    ArrayList\u003cString\u003e tokens \u003d adjustWordToColWidth(buffer[scannedWordCount], maxLength);"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"                    for (int i \u003d 0; i \u003c tokens.size(); i++) {"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"                        feed \u003d tokens.get(i);"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"                        if (i \u003c tokens.size() - 1) {"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"                            feed +\u003d \"-\";"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"                        }"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"                        output.add(feed);"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"                    scannedWordCount++;"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                } else {"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"                    //System.out.println(\"else: \" + buffer[scannedWordCount]);"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                    do {"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"                        feed +\u003d buffer[scannedWordCount] + \" \";"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"                        scannedWordCount++;"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"                    } while ((scannedWordCount \u003c buffer.length)"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"                        \u0026\u0026 (feed.length() + 1 + buffer[scannedWordCount].length() \u003c maxLength - pad));"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"                    output.add(feed);"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"     * Handles printing of each row for all columns."},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"     * @param input Input table row to print."},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"    public static String getPrintListRow(String[] input) {"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"        int maxLines \u003d 0;"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e();"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"        String entry \u003d \"\";"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"        ArrayList\u003cString\u003e[] token \u003d new ArrayList[input.length];"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"        // Determine how many lines needed for each column, and also segmenting"},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"        // the contents of each box to each line."},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":"        // This allows for warping of lines that would normally overflow from"},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"        // the default column width."},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"        for (int col \u003d 0; col \u003c input.length; col++) {"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"            token[col] \u003d adjustContentToColWidth(input[col], getColWidth(colWidth[col]));"},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"            if (token[col].size() \u003e maxLines) {"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"                maxLines \u003d token[col].size();"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"        for (int line \u003d 0; line \u003c maxLines; line++) {"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"            buffer.clear();"},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":"            for (int col \u003d 0; col \u003c input.length; col++) {"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"                // If the content of the box is fully printed,"},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":"                // no need to access it anymore"},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"                if (line + 1 \u003e token[col].size()) {"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"                    entry \u003d getPrintFormat(\" \", getColWidth(colWidth[col]));"},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"                } else {"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"                    entry \u003d getPrintFormat(token[col].get(line), getColWidth(colWidth[col]));"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"                buffer.add(entry);"},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"            output +\u003d String.join(\"\", buffer);"},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"            output +\u003d (line \u003c maxLines - 1) ? \"|\\n\" : \"\";"},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"    public static String getPrintFormat(String s, int width) {"},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"        String format \u003d \"| %-\" + width + \"s\";"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"        return String.format(format, s);"},{"lineNumber":167,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":169,"author":{"gitId":"kaiwen98"},"content":"    public static void printRowHeader(String[] row) {"},{"lineNumber":170,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":171,"author":{"gitId":"kaiwen98"},"content":"        String header \u003d getPrintListRow(row);"},{"lineNumber":172,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(header + \"|\");"},{"lineNumber":173,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":175,"author":{"gitId":"kaiwen98"},"content":"    public static void printHorizontalPartition(int rowWidth) {"},{"lineNumber":176,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(UiManager.getLineWithSymbol(rowWidth / 2, \" -\"));"},{"lineNumber":177,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":179,"author":{"gitId":"kaiwen98"},"content":"    public static void printHorizontalHeaderPartition(int rowWidth) {"},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(UiManager.getLineWithSymbol(rowWidth, \"-\"));"},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":"    public static void setColWidth(String[] row) {"},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"        colWidth \u003d new int[row.length];"},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c row.length; i++) {"},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"            colWidth[i] \u003d row[i].length();"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"    public static int getHeaderRowWidth(String[] row) {"},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":"        String header \u003d getPrintListRow(row);"},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"        String[] output \u003d header.split(\"\\\\n\");"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"        return output[0].length();"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":195}},{"path":"src/main/java/seedu/financeit/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.ui;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"public class UiManager {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    public static String getLineWithSymbol(int width, String symbol) {"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"        // return new String(new char[width]).replace(\"\\0\", symbol);"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"        return symbol.repeat(width);"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    public static void printLineWithSymbol(int width, String symbol) {"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(getLineWithSymbol(width, symbol));"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    public static void drawPartition() {"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        printLineWithSymbol(Common.MAX_PARTITION_LINE_LEN, \"_\");"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    public static String getPrintListRow(String[] input) {"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        Arrays.stream(input)"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"                .forEach(s -\u003e buffer.add(getPrintFormat(s)));"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        return String.join(\"\", buffer);"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static String getPrintFormat(String s) {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"| %-15s\", s);"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    public static void printRowHeader(String[] row) {"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        String header \u003d getPrintListRow(row);"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(header);"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(new String(new char[header.length()]).replace(\"\", \"-\"));"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    public static void printInputPrompt() {"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        drawPartition();"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        System.out.print(\"\u003e\u003e\u003e \");"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String handleInput() {"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        String input \u003d scanner.nextLine();"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"        return input;"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"    public static void printWithStatusIcon(Common.PrintType printType, String... messages) {"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"                System.out.println(String.format(\"[ %-15s]: %s\", printType, messages[i]));"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"                System.out.println(String.format(\"%-20s%s\", \" \", messages[i]));"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    public static String getStringPrintWithStatusIcon(Common.PrintType printType, String... messages) {"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"        String message \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"                message +\u003d String.format(\"[ %-15s]: %s\\n\", printType, messages[i]);"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"                message +\u003d String.format(\"%-20s%s\\n\", \" \", messages[i]);"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"        return message;"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void printInputPromptMessage() {"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"        printWithStatusIcon(Common.PrintType.INSTRUCTION,"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"                \"Enter a command! \","},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"                \"Input \\\"commands\\\" for list of commands.\""},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    public static void refreshPage() {"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c 1; i++) {"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            System.out.println();"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    public static void printLogo() {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"        String logo \u003d"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"            \"   ||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||\\n\""},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$||||\\n\""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d|     Welcome to       |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||\\n\""},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||||$||        ~         \u0027------\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d--------\u0027                ||$||||\\n\""},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||\u003c\u003c |        |$|              || ____ ||                         | \u003e\u003e||\\n\""},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||\u003e\u003e|  12    ||L||            || ///..) ||         L38036133B   12 |\u003c\u003c||\\n\""},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||\u003c\u003c|        || ||           || \u003c||  \u003e)  ||                        |\u003e\u003e||\\n\""},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"                + \"   ||\u003e\u003e|         |$|            ||  $$ --)  ||        One Hundred     |\u003c\u003c||\\n\""},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||\u003e||\\n\""},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"                + \"||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$||||\u003e||\\n\""},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"                + \"||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d|     FinanceIt!       |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||\u003e||\\n\""},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"                + \"||||$||        ~         \u0027------\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d--------\u0027                ||$||||\u003e||\\n\""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003c\u003c |        |$|              || ____ ||                         | \u003e\u003e||)||\\n\""},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003e\u003e|  12    ||L||            || ///..) ||         L38036133B   12 |\u003c\u003c||/||\\n\""},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003c\u003c|        || ||           || \u003c||  \u003e)  ||                        |\u003e\u003e||\u003d||\\n\""},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003e\u003e|         |$|            ||  $$ --)  ||        One Hundred     |\u003c\u003c||\\n\""},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003c\u003c|      L38036133B        *||  |(_)  ||* series                 |\u003e\u003e||\\n\""},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003e\u003e|  12                     *||(___)_||*   1989                  |\u003c\u003c||\\n\""},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003c\u003c|      Treasurer     ______(  V2.0   )________     Secretary 12 |\u003e\u003e||\\n\""},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"                + \"||||$|                 ~| A finanace tracking app |~               |$||||\\n\""},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                + \"||(100)\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d  ONE HUNDRED DOLLARS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(100)||\\n\""},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"                + \"||||$||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||$//||\\n\""},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                + \"||\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d||\\n\";"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"        System.out.print(logo);"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":10,"kaiwen98":105}},{"path":"src/main/java/seedu/financeit/utils/DateTimeHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"public class DateTimeHelper {"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"     * Returns day as an ordinal number e.g. 1st, 23rd"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param day integer"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Formatted string"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String dayAsOrdinal(int day) {"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"        int lastDigit \u003d day % 10;"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"        int firstDigit \u003d day / 10;"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"        if (firstDigit \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"            return day + \"th\";"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        switch (lastDigit) {"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"        case 1: return day + \"st\";"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"        case 2: return day + \"nd\";"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        case 3: return day + \"rd\";"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        default: return day + \"th\";"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String[] monthsWithoutDayOfMonth(int dayOfMonth) {"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        if (dayOfMonth \u003c\u003d 28) {"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"            return new String[0];"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        } else if (dayOfMonth \u003c 30) {"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"            return Common.MONTHS_LESS_THAN_30_DAYS;"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            return Common.MONTHS_LESS_THAN_31_DAYS;"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":38}},{"path":"src/main/java/seedu/financeit/utils/LoggerCentre.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.utils.storage.SaveHandler;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import java.io.StringWriter;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.LogManager;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.Logger;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import java.util.logging.StreamHandler;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":" * Logs messages into logs/*.txt."},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"public class LoggerCentre {"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    public static Logger loggerParamChecker \u003d Logger.getLogger(ParamChecker.class.getName());"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    public static Logger loggerInputParser \u003d Logger.getLogger(InputParser.class.getName());"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    public static Logger loggerSystemMessages \u003d Logger.getLogger(LoggerCentre.class.getName());"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    public static ArrayList\u003cLogger\u003e loggers \u003d new ArrayList\u003c\u003e() {"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            add(loggerParamChecker);"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            add(loggerInputParser);"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"            add(loggerSystemMessages);"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    private static LoggerCentre loggerCentre \u003d null;"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    private LoggerCentre() {"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    private void init() {"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    public static LoggerCentre getInstance() {"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        if (loggerCentre \u003d\u003d null) {"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"            loggerCentre \u003d new LoggerCentre();"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        return loggerCentre;"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"    public static void createLog() {"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            // Setting name for the log file"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"            LogManager.getLogManager().reset();"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"            LocalDateTime dateTime \u003d RunHistory.getCurrentRunDateTime();"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"uuuu_MM_dd_HH_mm_ss\");"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"            String paramLog \u003d \"./logs/\" + dateTime.format(format) + \".log\";"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            SaveHandler.buildFile(\"./logs\", paramLog);"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            // Disabling console output"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            ConsoleHandler consoleHandler \u003d new ConsoleHandler();"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"            consoleHandler.setLevel(Level.OFF);"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"            addHandler(consoleHandler);"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"            // Setting file logger to log only warning messages"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"            FileHandler fileHandler \u003d new FileHandler(paramLog);"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            fileHandler.setLevel(Level.ALL);"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"            SimpleFormatter formatter \u003d new SimpleFormatter();"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            fileHandler.setFormatter(formatter);"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"            addHandler(fileHandler);"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"            e.printStackTrace();"},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"    public static void writeStackTraceToLog(Exception e) {"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        StringWriter sw \u003d new StringWriter();"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"        PrintWriter pw \u003d new PrintWriter(sw);"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        e.printStackTrace(pw);"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerSystemMessages.severe(sw.toString());"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"    public static void addHandler(StreamHandler consoleHandler) {"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        for (Logger logger : loggers) {"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            logger.addHandler(consoleHandler);"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"    public void setLevel(Level level) {"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"        for (Logger logger : loggers) {"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            logger.setLevel(level);"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Feudalord":13,"kaiwen98":82}},{"path":"src/main/java/seedu/financeit/utils/ParamChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.EmptyParamException;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InvalidCategoryException;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.DateTimeParser;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import java.math.RoundingMode;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import java.security.InvalidParameterException;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import java.text.DecimalFormat;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import java.time.DateTimeException;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalTime;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.Arrays;"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":" * Class that handles error handling of params"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":" * and throws only ParseFailParamsException to be handled in"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":" * the user classes."},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"public class ParamChecker {"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_DATE \u003d \"/date\";"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final String PARAM_DAY \u003d \"/day\";"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_TIME \u003d \"/time\";"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_INDEX \u003d \"/id\";"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_DESCRIPTION \u003d \"/desc\";"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_CATEGORY \u003d \"/cat\";"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_AMOUNT \u003d \"/amt\";"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final String PARAM_NOTES \u003d \"/notes\";"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_INC \u003d \"-i\";"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"    public static final String PARAM_EXP \u003d \"-e\";"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final String PARAM_AUTO \u003d \"-auto\";"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    // Maximum amount of money that can be inputed: 100 digits including floating point + 1 char for decimal point"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"    private static final int MAX_INPUT_DOUBLE_LENGTH \u003d 101;"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    private static CommandPacket packet;"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    private static String errorMessage;"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    private static ParamChecker paramChecker \u003d null;"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"    private ParamChecker() {"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    public static ParamChecker getInstance() {"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        if (paramChecker \u003d\u003d null) {"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            paramChecker \u003d new ParamChecker();"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        return paramChecker;"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"    public void setPacket(CommandPacket packet) {"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"        this.packet \u003d packet;"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"    private void printErrorMessage() {"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"        System.out.print(errorMessage);"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    public String getErrorMessage() {"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        return errorMessage;"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"    private void clearErrorMessage() {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"        errorMessage \u003d \"\";"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"    public LocalDate checkAndReturnDate(String paramType)"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        throws ParseFailParamException {"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        LocalDate date \u003d null;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking date...\");"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            String rawDate \u003d packet.getParam(paramType);"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            if (rawDate.trim().length() \u003d\u003d 0) {"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"                throw new EmptyParamException(paramType);"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            date \u003d DateTimeParser.parseLocalDate(rawDate);"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        } catch (DateTimeException exception) {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Date parsed but not valid... Err: %s\", exception.getMessage()));"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageDateDateTimeException();"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        } catch (InvalidParameterException exception) {"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Date input cannot be parsed... Err: %s\", exception.getMessage()));"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageDateInvalidFormat();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"        } catch (EmptyParamException exception) {"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"No date input supplied... Err: %s\", exception.getMessage()));"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage(),"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"                \"Enter \\\"commands\\\" to check format!\");"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"        return date;"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"    public LocalTime checkAndReturnTime(String paramType)"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"        throws ParseFailParamException {"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"        LocalTime time \u003d null;"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking time...\");"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"            String rawTime \u003d packet.getParam(paramType);"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"            if (rawTime.trim().length() \u003d\u003d 0) {"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"                throw new EmptyParamException(paramType);"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"            time \u003d DateTimeParser.parseLocalTime(rawTime);"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"        } catch (DateTimeException exception) {"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Time parsed but not valid... Err: %s\", exception.getMessage()));"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageTimeDateTimeException();"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"        } catch (InvalidParameterException exception) {"},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Time input cannot be parsed... Err: %s\", exception.getMessage()));"},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageTimeInvalidFormat();"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"        } catch (EmptyParamException exception) {"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"No time input supplied... Err: %s\", exception.getMessage()));"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage(),"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"                \"Enter \\\"commands\\\" to check format!\");"},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"        return time;"},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":155,"author":{"gitId":"Artemis-Hunt"},"content":"    public int checkAndReturnDayOfMonth(String paramType) throws ParseFailParamException {"},{"lineNumber":156,"author":{"gitId":"Artemis-Hunt"},"content":"        int dayOfMonth \u003d -1;"},{"lineNumber":157,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":158,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":159,"author":{"gitId":"Artemis-Hunt"},"content":"        clearErrorMessage();"},{"lineNumber":160,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":161,"author":{"gitId":"Artemis-Hunt"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking day of month...\");"},{"lineNumber":162,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":163,"author":{"gitId":"Artemis-Hunt"},"content":"            dayOfMonth \u003d checkAndReturnInt(paramType);"},{"lineNumber":164,"author":{"gitId":"Artemis-Hunt"},"content":"            if (dayOfMonth \u003c 1 || dayOfMonth \u003e 31) {"},{"lineNumber":165,"author":{"gitId":"Artemis-Hunt"},"content":"                throw new NumberFormatException();"},{"lineNumber":166,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":168,"author":{"gitId":"Artemis-Hunt"},"content":"            /*"},{"lineNumber":169,"author":{"gitId":"Artemis-Hunt"},"content":"            Checks if there are any months that do not have the specified dayOfMonth"},{"lineNumber":170,"author":{"gitId":"Artemis-Hunt"},"content":"            e.g. Feb does not have day 29, 30 or 31."},{"lineNumber":171,"author":{"gitId":"Artemis-Hunt"},"content":"             */"},{"lineNumber":172,"author":{"gitId":"Artemis-Hunt"},"content":"            String[] monthsWithoutDay \u003d DateTimeHelper.monthsWithoutDayOfMonth(dayOfMonth);"},{"lineNumber":173,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":174,"author":{"gitId":"Artemis-Hunt"},"content":"            if (monthsWithoutDay.length \u003e\u003d 1) {"},{"lineNumber":175,"author":{"gitId":"Artemis-Hunt"},"content":"                String monthMaxDayReminder \u003d String.format(\"The following month(s) do not have day %s: \""},{"lineNumber":176,"author":{"gitId":"Artemis-Hunt"},"content":"                        + Arrays.toString(monthsWithoutDay), dayOfMonth);"},{"lineNumber":177,"author":{"gitId":"Artemis-Hunt"},"content":"                String noReminderMessage \u003d \"There will NOT be any reminder for this entry during these month(s).\";"},{"lineNumber":178,"author":{"gitId":"Artemis-Hunt"},"content":"                UiManager.printWithStatusIcon(Common.PrintType.REMINDER,"},{"lineNumber":179,"author":{"gitId":"Artemis-Hunt"},"content":"                        monthMaxDayReminder, noReminderMessage);"},{"lineNumber":180,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":182,"author":{"gitId":"Artemis-Hunt"},"content":"            parseSuccess \u003d true;"},{"lineNumber":183,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (NumberFormatException exception) {"},{"lineNumber":184,"author":{"gitId":"Artemis-Hunt"},"content":"            LoggerCentre.loggerParamChecker.warning(\"Day of month supplied is not between 1 and 31!\");"},{"lineNumber":185,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":186,"author":{"gitId":"Artemis-Hunt"},"content":"            errorMessage \u003d getErrorMessageDayOfMonthOutOfBounds();"},{"lineNumber":187,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":188,"author":{"gitId":"Artemis-Hunt"},"content":"            /*"},{"lineNumber":189,"author":{"gitId":"Artemis-Hunt"},"content":"            Print error message here instead of in a finally block."},{"lineNumber":190,"author":{"gitId":"Artemis-Hunt"},"content":"            This is to prevent double printing of error message,"},{"lineNumber":191,"author":{"gitId":"Artemis-Hunt"},"content":"            in case checkAndReturnInt encounters an error."},{"lineNumber":192,"author":{"gitId":"Artemis-Hunt"},"content":"             */"},{"lineNumber":193,"author":{"gitId":"Artemis-Hunt"},"content":"            printErrorMessage();"},{"lineNumber":194,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":196,"author":{"gitId":"Artemis-Hunt"},"content":"        if (!parseSuccess) {"},{"lineNumber":197,"author":{"gitId":"Artemis-Hunt"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":198,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"Artemis-Hunt"},"content":"        return dayOfMonth;"},{"lineNumber":200,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":202,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks if user-inputted index is valid, and converts it to zero-based index form."},{"lineNumber":204,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramType - paramType that has index as paramArgument"},{"lineNumber":205,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param list - list of items to select from"},{"lineNumber":206,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return zero-based index (i.e. user-inputted index - 1)"},{"lineNumber":207,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ParseFailParamException If index was not parsed successfully,"},{"lineNumber":208,"author":{"gitId":"Artemis-Hunt"},"content":"     *                                 for example due to error thrown"},{"lineNumber":209,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"    public int checkAndReturnIndex(String paramType, ArrayList list) throws ParseFailParamException {"},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":"        String message;"},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"        int index \u003d -1;"},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking index validity...\");"},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"            message \u003d getMessageNoItemsInList();"},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":"        } else if (list.size() \u003d\u003d 1) {"},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"            message \u003d getMessageOneItemInList();"},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"            message \u003d getMessageListRangeIndex(list.size());"},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"            index \u003d Integer.parseInt(packet.getParam(paramType));"},{"lineNumber":229,"author":{"gitId":"Artemis-Hunt"},"content":"            if (index \u003c 1 || index \u003e list.size()) {"},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":232,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":233,"author":{"gitId":"kaiwen98"},"content":"        } catch (IndexOutOfBoundsException exception) {"},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Index out of bounds... Err: %s\", exception.getMessage()));"},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageListIndexOutOfBounds(message);"},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":"        } catch (NumberFormatException exception) {"},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":240,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Index cannot be parsed... Err: %s\", exception.getMessage()));"},{"lineNumber":241,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":242,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageListNumberFormatException(message);"},{"lineNumber":243,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":244,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":245,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":247,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":248,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":249,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":251,"author":{"gitId":"Artemis-Hunt"},"content":"        return index - 1;"},{"lineNumber":252,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":254,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"kaiwen98"},"content":"     * Checks if input is a positive Double."},{"lineNumber":256,"author":{"gitId":"kaiwen98"},"content":"     * @param paramType Param Type to acquire from packet."},{"lineNumber":257,"author":{"gitId":"kaiwen98"},"content":"     * @return input if it is valid."},{"lineNumber":258,"author":{"gitId":"kaiwen98"},"content":"     * @throws ParseFailParamException If user entered an invalid input"},{"lineNumber":259,"author":{"gitId":"kaiwen98"},"content":"     *                                 e.g. negative integer, alphabets, decimal"},{"lineNumber":260,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"kaiwen98"},"content":"    public double checkAndReturnDoubleSigned(String paramType) throws ParseFailParamException {"},{"lineNumber":262,"author":{"gitId":"kaiwen98"},"content":"        String input \u003d packet.getParam(paramType);"},{"lineNumber":263,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":264,"author":{"gitId":"kaiwen98"},"content":"        double output \u003d -1;"},{"lineNumber":265,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":266,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":267,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking input Double...\");"},{"lineNumber":268,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":269,"author":{"gitId":"kaiwen98"},"content":"            // checks for alphabet inputs."},{"lineNumber":270,"author":{"gitId":"kaiwen98"},"content":"            if (RegexMatcher.alphabetMatcher(input).find()) {"},{"lineNumber":271,"author":{"gitId":"kaiwen98"},"content":"                throw new NumberFormatException();"},{"lineNumber":272,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":273,"author":{"gitId":"kaiwen98"},"content":"            // Converts String to Decimal."},{"lineNumber":274,"author":{"gitId":"kaiwen98"},"content":"            // Removes Currency characters if any."},{"lineNumber":275,"author":{"gitId":"kaiwen98"},"content":"            input \u003d input.replaceAll(\"[^\\\\w | [-.]]\", \"\");"},{"lineNumber":276,"author":{"gitId":"kaiwen98"},"content":"            if (input.length() \u003e MAX_INPUT_DOUBLE_LENGTH) {"},{"lineNumber":277,"author":{"gitId":"kaiwen98"},"content":"                throw new NumberFormatException();"},{"lineNumber":278,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":279,"author":{"gitId":"Artemis-Hunt"},"content":"            output \u003d Double.parseDouble(input);"},{"lineNumber":280,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":281,"author":{"gitId":"Artemis-Hunt"},"content":"            // Truncate double to 2 d.p."},{"lineNumber":282,"author":{"gitId":"kaiwen98"},"content":"            DecimalFormat bd \u003d new DecimalFormat(\"#.##\");"},{"lineNumber":283,"author":{"gitId":"kaiwen98"},"content":"            bd.setRoundingMode(RoundingMode.CEILING);"},{"lineNumber":284,"author":{"gitId":"Artemis-Hunt"},"content":"            output \u003d Double.parseDouble(bd.format(output));"},{"lineNumber":285,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":286,"author":{"gitId":"kaiwen98"},"content":"            // Checks for negative values."},{"lineNumber":287,"author":{"gitId":"kaiwen98"},"content":"            if (output \u003c 0) {"},{"lineNumber":288,"author":{"gitId":"kaiwen98"},"content":"                throw new NumberFormatException();"},{"lineNumber":289,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":291,"author":{"gitId":"kaiwen98"},"content":"        } catch (NumberFormatException | NullPointerException exception) {"},{"lineNumber":292,"author":{"gitId":"kaiwen98"},"content":"            if (input.length() \u003e MAX_INPUT_DOUBLE_LENGTH) {"},{"lineNumber":293,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":294,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Expected input out of bounds... Err: %s\", exception.getMessage()));"},{"lineNumber":295,"author":{"gitId":"kaiwen98"},"content":"                errorMessage \u003d \"Amount provided is too long in length! \""},{"lineNumber":296,"author":{"gitId":"Artemis-Hunt"},"content":"                    + \"Maximum amount is of 100 digits long.\";"},{"lineNumber":297,"author":{"gitId":"kaiwen98"},"content":"            } else if (output \u003c 0) {"},{"lineNumber":298,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":299,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Expected positive double... Err: %s\", exception.getMessage()));"},{"lineNumber":300,"author":{"gitId":"Artemis-Hunt"},"content":"                errorMessage \u003d \"Expected a positive number.\";"},{"lineNumber":301,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":302,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":303,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Double not recognised... Err: %s\", exception.getMessage()));"},{"lineNumber":304,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":305,"author":{"gitId":"Artemis-Hunt"},"content":"            errorMessage \u003d getErrorMessageDoubleNumberFormatException(input, errorMessage);"},{"lineNumber":306,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":307,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":308,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":310,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":311,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":312,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":314,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":316,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks if user-inputted value is indeed an integer."},{"lineNumber":318,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":319,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramType Param type that expects an integer"},{"lineNumber":320,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return int entered by user, if it is a valid integer."},{"lineNumber":321,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ParseFailParamException If user entered an invalid integer e.g. with alphabets or decimal places"},{"lineNumber":322,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"Artemis-Hunt"},"content":"    public int checkAndReturnInt(String paramType) throws ParseFailParamException {"},{"lineNumber":324,"author":{"gitId":"Artemis-Hunt"},"content":"        String input \u003d packet.getParam(paramType);"},{"lineNumber":325,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":326,"author":{"gitId":"Artemis-Hunt"},"content":"        int output \u003d -1;"},{"lineNumber":327,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":328,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":329,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":330,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking input Integer...\");"},{"lineNumber":331,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":332,"author":{"gitId":"Artemis-Hunt"},"content":"            output \u003d Integer.parseInt(input);"},{"lineNumber":333,"author":{"gitId":"Artemis-Hunt"},"content":"            parseSuccess \u003d true;"},{"lineNumber":334,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (NumberFormatException | NullPointerException exception) {"},{"lineNumber":335,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":336,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Int not recognised... Err: %s\", exception.getMessage()));"},{"lineNumber":337,"author":{"gitId":"Artemis-Hunt"},"content":"            errorMessage \u003d getErrorMessageNumberFormatException(input, errorMessage);"},{"lineNumber":338,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":339,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":340,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":341,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":342,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":343,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":344,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":346,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":348,"author":{"gitId":"kaiwen98"},"content":"    public String checkAndReturnDescription(String paramType) throws ParseFailParamException {"},{"lineNumber":349,"author":{"gitId":"kaiwen98"},"content":"        String input \u003d packet.getParam(paramType);"},{"lineNumber":350,"author":{"gitId":"kaiwen98"},"content":"        if (input.contains(\";\")) {"},{"lineNumber":351,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d \"\\n\\\"; is an illegal character in this program. Try again without the character.\\\"\\n\";"},{"lineNumber":352,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":353,"author":{"gitId":"kaiwen98"},"content":"                errorMessage);"},{"lineNumber":354,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":355,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"kaiwen98"},"content":"        return input;"},{"lineNumber":357,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":358,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":359,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":360,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks if user-inputted value is a valid positive integer."},{"lineNumber":361,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":362,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramType Param type that expects a positive integer"},{"lineNumber":363,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return int entered by user, if it is a valid positive integer."},{"lineNumber":364,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ParseFailParamException If user entered an invalid input"},{"lineNumber":365,"author":{"gitId":"Artemis-Hunt"},"content":"     *                                 e.g. negative integer, alphabets, decimal"},{"lineNumber":366,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":367,"author":{"gitId":"kaiwen98"},"content":"    public int checkAndReturnIntSigned(String paramType) throws ParseFailParamException {"},{"lineNumber":368,"author":{"gitId":"kaiwen98"},"content":"        String input \u003d packet.getParam(paramType);"},{"lineNumber":369,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":370,"author":{"gitId":"kaiwen98"},"content":"        int output \u003d -1;"},{"lineNumber":371,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":372,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":373,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":374,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking input Integer...\");"},{"lineNumber":375,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":376,"author":{"gitId":"kaiwen98"},"content":"            output \u003d Integer.parseInt(input);"},{"lineNumber":377,"author":{"gitId":"kaiwen98"},"content":"            if (output \u003c 0) {"},{"lineNumber":378,"author":{"gitId":"kaiwen98"},"content":"                throw new NumberFormatException();"},{"lineNumber":379,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":380,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":381,"author":{"gitId":"kaiwen98"},"content":"        } catch (NumberFormatException | NullPointerException exception) {"},{"lineNumber":382,"author":{"gitId":"kaiwen98"},"content":"            if (paramType.length() \u003e (int)Math.log(Long.MAX_VALUE) + 1) {"},{"lineNumber":383,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":384,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Int format is too long... Err: %s\", exception.getMessage()));"},{"lineNumber":385,"author":{"gitId":"kaiwen98"},"content":"                errorMessage \u003d \"\\nInput value is too out of range: 9,223,372,036,854,775,807\\n\";"},{"lineNumber":386,"author":{"gitId":"kaiwen98"},"content":"            } else if (output \u003c 0) {"},{"lineNumber":387,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":388,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Expected positive integer... Err: %s\", exception.getMessage()));"},{"lineNumber":389,"author":{"gitId":"kaiwen98"},"content":"                errorMessage \u003d \"\\nExpected Positive integer!\\n\";"},{"lineNumber":390,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":391,"author":{"gitId":"kaiwen98"},"content":"                LoggerCentre.loggerParamChecker.warning("},{"lineNumber":392,"author":{"gitId":"kaiwen98"},"content":"                    String.format(\"Int not recognised... Err: %s\", exception.getMessage()));"},{"lineNumber":393,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":394,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":395,"author":{"gitId":"Artemis-Hunt"},"content":"            errorMessage \u003d getErrorMessageNumberFormatException(input, errorMessage);"},{"lineNumber":396,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":397,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":398,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":399,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":400,"author":{"gitId":"Artemis-Hunt"},"content":"        if (!parseSuccess) {"},{"lineNumber":401,"author":{"gitId":"Artemis-Hunt"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":402,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":403,"author":{"gitId":"Artemis-Hunt"},"content":"        return output;"},{"lineNumber":404,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":406,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":407,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":408,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks if user entered a param type twice e.g. /desc Description 1 /desc Description 2"},{"lineNumber":409,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramType param type to check for duplicates"},{"lineNumber":410,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramMap set of params parsed so far to check against"},{"lineNumber":411,"author":{"gitId":"Artemis-Hunt"},"content":"     * @throws ParseFailParamException If duplicates are found"},{"lineNumber":412,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":413,"author":{"gitId":"Artemis-Hunt"},"content":"    public void checkForDuplicateParamTypes(String paramType, HashMap paramMap)"},{"lineNumber":414,"author":{"gitId":"kaiwen98"},"content":"        throws ParseFailParamException {"},{"lineNumber":415,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Params: \" + paramMap);"},{"lineNumber":416,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"ParamType: \" + paramType);"},{"lineNumber":417,"author":{"gitId":"kaiwen98"},"content":"        if (paramMap.containsKey(paramType)) {"},{"lineNumber":418,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning("},{"lineNumber":419,"author":{"gitId":"kaiwen98"},"content":"                String.format(\"Duplicate param detected...\"));"},{"lineNumber":420,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getMessageMultipleParamToParamType(paramType, paramMap);"},{"lineNumber":421,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":422,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":423,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":424,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":426,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":427,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":428,"author":{"gitId":"kaiwen98"},"content":"    public String checkAndReturnCategory(String paramType) throws ParseFailParamException {"},{"lineNumber":429,"author":{"gitId":"kaiwen98"},"content":"        boolean parseSuccess \u003d false;"},{"lineNumber":430,"author":{"gitId":"kaiwen98"},"content":"        String category \u003d packet.getParam(paramType);"},{"lineNumber":431,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":432,"author":{"gitId":"kaiwen98"},"content":"        clearErrorMessage();"},{"lineNumber":433,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":434,"author":{"gitId":"kaiwen98"},"content":"        LoggerCentre.loggerParamChecker.info(\"Checking input Category...\");"},{"lineNumber":435,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":436,"author":{"gitId":"kaiwen98"},"content":"            if (! CategoryMap.inputToCategoryMap.containsKey(category)) {"},{"lineNumber":437,"author":{"gitId":"kaiwen98"},"content":"                throw new InvalidCategoryException(category);"},{"lineNumber":438,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":439,"author":{"gitId":"kaiwen98"},"content":"            parseSuccess \u003d true;"},{"lineNumber":440,"author":{"gitId":"kaiwen98"},"content":"        } catch (InvalidCategoryException exception) {"},{"lineNumber":441,"author":{"gitId":"kaiwen98"},"content":"            LoggerCentre.loggerParamChecker.warning(\"Category not recognised...\");"},{"lineNumber":442,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":443,"author":{"gitId":"kaiwen98"},"content":"            errorMessage \u003d getErrorMessageInvalidCategoryException(exception);"},{"lineNumber":444,"author":{"gitId":"kaiwen98"},"content":"        } finally {"},{"lineNumber":445,"author":{"gitId":"kaiwen98"},"content":"            printErrorMessage();"},{"lineNumber":446,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":448,"author":{"gitId":"kaiwen98"},"content":"        if (!parseSuccess) {"},{"lineNumber":449,"author":{"gitId":"kaiwen98"},"content":"            throw new ParseFailParamException(paramType);"},{"lineNumber":450,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":451,"author":{"gitId":"kaiwen98"},"content":"        return category;"},{"lineNumber":452,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":453,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":454,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":455,"author":{"gitId":"kaiwen98"},"content":"     * List of error messages that are referenced in the above functions."},{"lineNumber":456,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":457,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":458,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageDateDateTimeException() {"},{"lineNumber":459,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":460,"author":{"gitId":"kaiwen98"},"content":"            \"Not a valid date on the Gregorian Calendar!\","},{"lineNumber":461,"author":{"gitId":"kaiwen98"},"content":"            \"Check your input again against the following format!\","},{"lineNumber":462,"author":{"gitId":"kaiwen98"},"content":"            \"Date format: YYMMDD\");"},{"lineNumber":463,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":464,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":465,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageDateInvalidFormat() {"},{"lineNumber":466,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":467,"author":{"gitId":"kaiwen98"},"content":"            \"Input format is not recognised.\","},{"lineNumber":468,"author":{"gitId":"kaiwen98"},"content":"            \"Check your input again against the following format!\","},{"lineNumber":469,"author":{"gitId":"kaiwen98"},"content":"            \"Date format: YYMMDD\");"},{"lineNumber":470,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":471,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":472,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageTimeInvalidFormat() {"},{"lineNumber":473,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":474,"author":{"gitId":"kaiwen98"},"content":"            \"Input format is not recognised.\","},{"lineNumber":475,"author":{"gitId":"kaiwen98"},"content":"            \"Check your input again against the following format!\","},{"lineNumber":476,"author":{"gitId":"kaiwen98"},"content":"            \"Time format: HHMM\");"},{"lineNumber":477,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":479,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageTimeDateTimeException() {"},{"lineNumber":480,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":481,"author":{"gitId":"kaiwen98"},"content":"            \"Time is out of range!\","},{"lineNumber":482,"author":{"gitId":"kaiwen98"},"content":"            \"Check your input again against the following format!\","},{"lineNumber":483,"author":{"gitId":"kaiwen98"},"content":"            \"Time format: HHMM\");"},{"lineNumber":484,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":485,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":486,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String getErrorMessageDayOfMonthOutOfBounds() {"},{"lineNumber":487,"author":{"gitId":"Artemis-Hunt"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":488,"author":{"gitId":"Artemis-Hunt"},"content":"                \"Day of month is out of range! Please enter an integer between 1 and 31\");"},{"lineNumber":489,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":490,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":491,"author":{"gitId":"kaiwen98"},"content":"    public static String getMessageListRangeIndex(int size) {"},{"lineNumber":492,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"Valid range is from 1 to %d\", size);"},{"lineNumber":493,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":495,"author":{"gitId":"kaiwen98"},"content":"    public String getMessageOneItemInList() {"},{"lineNumber":496,"author":{"gitId":"kaiwen98"},"content":"        return \"The only valid item index is 1.\";"},{"lineNumber":497,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":498,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":499,"author":{"gitId":"kaiwen98"},"content":"    public String getMessageNoItemsInList() {"},{"lineNumber":500,"author":{"gitId":"kaiwen98"},"content":"        return \"There are no items in the list.\";"},{"lineNumber":501,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":502,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":503,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageListNumberFormatException(String message) {"},{"lineNumber":504,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":505,"author":{"gitId":"kaiwen98"},"content":"            \"Cannot parse your input. Please enter a positive integer!\","},{"lineNumber":506,"author":{"gitId":"kaiwen98"},"content":"            message);"},{"lineNumber":507,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":508,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":509,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageListIndexOutOfBounds(String message) {"},{"lineNumber":510,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":511,"author":{"gitId":"kaiwen98"},"content":"            message);"},{"lineNumber":512,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":513,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":514,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":515,"author":{"gitId":"Artemis-Hunt"},"content":"     * Error message for invalid double inputs."},{"lineNumber":516,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param input Raw input"},{"lineNumber":517,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param message Pre-existing error messages to print. Pass in empty string if none."},{"lineNumber":518,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Error message in a formatted string for printing"},{"lineNumber":519,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":520,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String getErrorMessageDoubleNumberFormatException(String input, String message) {"},{"lineNumber":521,"author":{"gitId":"Artemis-Hunt"},"content":"        String errorToPrint \u003d String.format(\"Invalid input: \\\"%s\\\". Please enter a valid number!\", input);"},{"lineNumber":522,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":523,"author":{"gitId":"Artemis-Hunt"},"content":"            errorToPrint, message);"},{"lineNumber":524,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":526,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":527,"author":{"gitId":"Artemis-Hunt"},"content":"     * Error message for invalid integer inputs."},{"lineNumber":528,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param input Raw input"},{"lineNumber":529,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param message Pre-existing error messages to print. Pass in empty string if none."},{"lineNumber":530,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return Error message in a formatted string for printing"},{"lineNumber":531,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":532,"author":{"gitId":"Artemis-Hunt"},"content":"    public static String getErrorMessageNumberFormatException(String input, String message) {"},{"lineNumber":533,"author":{"gitId":"Artemis-Hunt"},"content":"        String errorToPrint \u003d String.format(\"Invalid input: \\\"%s\\\". Please enter a valid integer!\", input);"},{"lineNumber":534,"author":{"gitId":"kaiwen98"},"content":"        return UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":535,"author":{"gitId":"Artemis-Hunt"},"content":"            errorToPrint, message);"},{"lineNumber":536,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":538,"author":{"gitId":"kaiwen98"},"content":"    public static String getErrorMessageInvalidCategoryException(InvalidCategoryException exception) {"},{"lineNumber":539,"author":{"gitId":"kaiwen98"},"content":"        return errorMessage \u003d UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":540,"author":{"gitId":"kaiwen98"},"content":"            exception.getMessage(),"},{"lineNumber":541,"author":{"gitId":"kaiwen98"},"content":"            \"Input \\\"exp cat\\\" to show valid categories!\");"},{"lineNumber":542,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":543,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":544,"author":{"gitId":"kaiwen98"},"content":"    public static String getMessageMultipleParamToParamType(String paramType, HashMap params) {"},{"lineNumber":545,"author":{"gitId":"kaiwen98"},"content":"        return errorMessage \u003d UiManager.getStringPrintWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":546,"author":{"gitId":"kaiwen98"},"content":"            \"Multiple params supplied to the same paramType is not allowed!\","},{"lineNumber":547,"author":{"gitId":"kaiwen98"},"content":"            \"The first instance of the param is accepted: \" + params.get(paramType));"},{"lineNumber":548,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":549,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":550,"author":{"gitId":"kaiwen98"},"content":"    public String getUnrecognizedParamMessage(String paramType) {"},{"lineNumber":551,"author":{"gitId":"Artemis-Hunt"},"content":"        return String.format(\"The param type is not recognized: \\\"%s\\\". \""},{"lineNumber":552,"author":{"gitId":"Artemis-Hunt"},"content":"                + \"paramArgument (if any) for this param will be ignored.\", paramType);"},{"lineNumber":553,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":555,"author":{"gitId":"kaiwen98"},"content":"    public String getParseFailParamMessage(String paramType) {"},{"lineNumber":556,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"The param type cannot be parsed: \\\"%s\\\"\", paramType);"},{"lineNumber":557,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":558,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":137,"kaiwen98":421}},{"path":"src/main/java/seedu/financeit/utils/RegexMatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.util.regex.Matcher;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.util.regex.Pattern;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"public class RegexMatcher {"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"    public static Matcher regexMatcher(String inputString, String regex) {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"        Pattern pattern \u003d Pattern.compile(regex);"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"        Matcher matcher \u003d pattern.matcher(inputString);"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"        return matcher;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    public static Matcher paramMatcher(String inputString) {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"        //Matches \u003cspace\u003e\u003cPARAMS_PREFIX\u003e\u003cstring\u003e\u003cspace\u003e"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        String regex \u003d String.format(\"\\\\s+[%s]{1}[a-zA-Z]+\\\\s+\","},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"                String.join(\"\", Common.DEFAULT_PARAM_TYPE_PREFIX));"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"        Matcher matcher \u003d regexMatcher(inputString, regex);"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        matcher.find();"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"        return matcher;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    public static Matcher alphabetMatcher(String inputString) {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        String regex \u003d \"[a-zA-Z]+\";"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        Matcher matcher \u003d regexMatcher(inputString, regex);"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        return matcher;"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    public static Matcher numberMatcher(String inputString) {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        String regex \u003d \"[0-9]+\";"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        Matcher matcher \u003d regexMatcher(inputString, regex);"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        return matcher;"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":1,"kaiwen98":34}},{"path":"src/main/java/seedu/financeit/utils/ReminderGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntryList;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTracker;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"public class ReminderGenerator {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"    private static final int REMIND_DAYS_IN_ADVANCE \u003d 5;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"     * Prints a reminder for upcoming recurring entries, within X days from"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"     * current system date. X is currently set to 5."},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"    public static ArrayList\u003cString\u003e generateListOfRemindersAsStrings() {"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"        int currentDay \u003d RunHistory.getCurrentDayOfMonth();"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"        int lastDayOfMonth \u003d RunHistory.getNumOfDaysInCurrentMonth();"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"        int dayToRemindUntil \u003d currentDay + REMIND_DAYS_IN_ADVANCE;"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean isOverflowToNextMonth \u003d false;"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        //If REMIND_DAYS_IN_ADVANCE days from now is next month,"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        //it is an overflow to start of next month"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"        if (dayToRemindUntil \u003e lastDayOfMonth) {"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"            //Day of next month that reminder should cover until"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"            dayToRemindUntil -\u003d lastDayOfMonth;"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"            isOverflowToNextMonth \u003d true;"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        //All entries that should be put in the reminder based on date"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cRecurringEntry\u003e entriesToRemind \u003d filterEntriesToRemind(currentDay,"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"                lastDayOfMonth, dayToRemindUntil, isOverflowToNextMonth);"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        //Strings that are directly printed by UiManager"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e remindersToPrint \u003d generateRemindersToPrint("},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"                entriesToRemind, dayToRemindUntil, isOverflowToNextMonth);"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        return remindersToPrint;"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    static ArrayList\u003cRecurringEntry\u003e filterEntriesToRemind("},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"            int currentDay, int lastDayOfMonth, int dayToRemindUntil, boolean isOverflowToNextMonth) {"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"        //Grab a reference to recurring entry list so we can filter"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntryList allRecurringEntries \u003d RecurringTracker.getEntries();"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cRecurringEntry\u003e entriesToRemind;"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"        if (isOverflowToNextMonth) {"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"            //Add entries from current day until end of this month"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"            entriesToRemind \u003d allRecurringEntries.getEntriesFromDayXtoY(currentDay, lastDayOfMonth);"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"            //Add entries from start of next month until last day to remind until"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"            entriesToRemind.addAll(allRecurringEntries.getEntriesFromDayXtoY(1, dayToRemindUntil));"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"            //Add entries from this month only"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"            entriesToRemind \u003d allRecurringEntries.getEntriesFromDayXtoY(currentDay, dayToRemindUntil);"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        return entriesToRemind;"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"    static ArrayList\u003cString\u003e generateRemindersToPrint("},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"            ArrayList\u003cRecurringEntry\u003e entriesToRemind, int dayToRemindUntil,"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"            boolean isOverflowToNextMonth) {"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"        //Strings that should be printed by UiManager"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e remindersToPrint \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"        String untilNextMonth \u003d isOverflowToNextMonth ? \"of next month\" : \"\";"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"        //Top level entry - status message"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"        remindersToPrint.add(\"Recurring entries coming up in 5 days\u0027 time, from today until \""},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"                + DateTimeHelper.dayAsOrdinal(dayToRemindUntil) + untilNextMonth);"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":"        if (entriesToRemind.size() \u003d\u003d 0) {"},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"            remindersToPrint.add(\"No upcoming entries!\");"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"        for (RecurringEntry entry: entriesToRemind) {"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"            String reminderString \u003d convertEntryToReminderString(entry);"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"            remindersToPrint.add(reminderString);"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"        return remindersToPrint;"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"     * Converts a RecurringEntry into a reminder String."},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param entry RecurringEntry to convert"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return A formatted String containing the necessary details to"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"     *         display as a reminder on the Main Menu"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"    static String convertEntryToReminderString(RecurringEntry entry) {"},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"        HashMap\u003cString,Object\u003e details \u003d entry.getDetailsForReminder();"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"        int dayOfEntry \u003d (int) details.get(\"day\");"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        Common.EntryType entryType \u003d (Common.EntryType) details.get(\"entryType\");"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"        boolean isAuto \u003d (boolean) details.get(\"isAuto\");"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"        String description \u003d (String) details.get(\"description\");"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"        String describeWhetherAuto \u003d isAuto ? \"Automatic\" : \"Manual\";"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"        //Different phrases depending on whether entry is an expenditure or income"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"        String phraseForEntryType \u003d entryType.equals(Common.EntryType.EXP)"},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"                ? \" payment \""},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"                : \" transfer into account\";"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"        String reminderString \u003d DateTimeHelper.dayAsOrdinal(dayOfEntry) + \" | \" + describeWhetherAuto"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"                + phraseForEntryType + \" | \" + description;"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"        return reminderString;"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":106,"bqxy":1,"kaiwen98":3}},{"path":"src/main/java/seedu/financeit/utils/RunHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"public class RunHistory {"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"    private static LocalDateTime lastRunDateTime;"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"    private static LocalDateTime currentRunDateTime;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void setLastRunDateTime(String dateTimeString) {"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString);"},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"        RunHistory.lastRunDateTime \u003d dateTime;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"    public static LocalDateTime getLastRunDateTime() {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"        return lastRunDateTime;"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    public static void setCurrentRunDateTime() {"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"        RunHistory.currentRunDateTime \u003d LocalDateTime.now();"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    public static LocalDateTime getCurrentRunDateTime() {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        setCurrentRunDateTime();"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        return RunHistory.currentRunDateTime;"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"    public static int getCurrentDayOfMonth() {"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"        assert currentRunDateTime !\u003d null;"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        return RunHistory.currentRunDateTime.getDayOfMonth();"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    public static int getCurrentMonthAsInt() {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        return RunHistory.currentRunDateTime.getMonthValue();"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"    public static int getNumOfDaysInCurrentMonth() {"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        assert currentRunDateTime !\u003d null;"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        Month currentMonth \u003d RunHistory.currentRunDateTime.getMonth();"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        return currentMonth.length(false);"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"     * Checks if it is currently a new month since user last opened the program."},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"     * Assumes no changes have been made to system date or time"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return boolean to indicate whether it has been a new month"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    public boolean isNewMonth() {"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"        int lastRunMonth \u003d lastRunDateTime.getMonthValue();"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"        int lastRunYear \u003d lastRunDateTime.getYear();"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        int currentRunMonth \u003d currentRunDateTime.getMonthValue();"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"        int currentRunYear \u003d currentRunDateTime.getYear();"},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        if (currentRunYear \u003d\u003d lastRunYear) {"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"            return currentRunMonth \u003e lastRunMonth;"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"        //If the year is not the same, then user is definitely opening in a new month"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"        return true;"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":61,"kaiwen98":1}},{"path":"src/main/java/seedu/financeit/utils/storage/AccountSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.exceptions.FolderNotFoundException;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import java.io.PrintWriter;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":" * Deals with loading data from the file and saving data in the file."},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"public abstract class AccountSaver {"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    private static final int LINES_IN_AN_ACCOUNT \u003d 5;"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"    private static final int LAST_LINE_IN_AN_ACCOUNT \u003d 4;"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"     * Reads file content whenever FinanceTools starts up."},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path that contains all the data in text format."},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"     * @param infoText array that stores all data in text format."},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"     * @throws FileNotFoundException if file that contains data is not found."},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"     * @throws FolderNotFoundException if folder not found."},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    public static void readFileContents(String filePath, ArrayList\u003cString\u003e infoText)"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"            throws FileNotFoundException, FolderNotFoundException {"},{"lineNumber":32,"author":{"gitId":"bqxy"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"bqxy"},"content":"            createFile(filePath);"},{"lineNumber":34,"author":{"gitId":"bqxy"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"bqxy"},"content":"            System.out.println(\"IO Error\");"},{"lineNumber":36,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"bqxy"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":38,"author":{"gitId":"bqxy"},"content":"        File folder \u003d new File(\"./data/\"); // folder directory for duke.txt"},{"lineNumber":39,"author":{"gitId":"bqxy"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":40,"author":{"gitId":"bqxy"},"content":"        // Check if folder exist"},{"lineNumber":41,"author":{"gitId":"bqxy"},"content":"        if (folder.isDirectory() \u003d\u003d false) {"},{"lineNumber":42,"author":{"gitId":"bqxy"},"content":"            throw new FolderNotFoundException();"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"        // Read data into FinanceTools"},{"lineNumber":45,"author":{"gitId":"bqxy"},"content":"        while (s.hasNext()) {"},{"lineNumber":46,"author":{"gitId":"bqxy"},"content":"            String line \u003d s.nextLine().trim();"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"            int countLines \u003d 0;"},{"lineNumber":48,"author":{"gitId":"bqxy"},"content":"            String textToAdd \u003d line + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"bqxy"},"content":"            while (countLines \u003c LINES_IN_AN_ACCOUNT \u0026\u0026 s.hasNext()) {"},{"lineNumber":50,"author":{"gitId":"bqxy"},"content":"                line \u003d s.nextLine();"},{"lineNumber":51,"author":{"gitId":"bqxy"},"content":"                textToAdd +\u003d line;"},{"lineNumber":52,"author":{"gitId":"bqxy"},"content":"                if (countLines !\u003d LAST_LINE_IN_AN_ACCOUNT) {"},{"lineNumber":53,"author":{"gitId":"bqxy"},"content":"                    textToAdd +\u003d \"\\n\";"},{"lineNumber":54,"author":{"gitId":"bqxy"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"bqxy"},"content":"                countLines++;"},{"lineNumber":56,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"bqxy"},"content":"            infoText.add(textToAdd);"},{"lineNumber":58,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":61,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"bqxy"},"content":"     * Writes data to text file."},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path that contains all the data in text format."},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"     * @param textToAdd string that would be added to the text file."},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"     * @throws IOException if there are issues with input or output operations."},{"lineNumber":67,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"bqxy"},"content":"    public static void writeToFile(String filePath, String textToAdd) throws IOException {"},{"lineNumber":69,"author":{"gitId":"bqxy"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":70,"author":{"gitId":"bqxy"},"content":"        fw.write(textToAdd);"},{"lineNumber":71,"author":{"gitId":"bqxy"},"content":"        fw.write(System.getProperty(\"line.separator\"));"},{"lineNumber":72,"author":{"gitId":"bqxy"},"content":"        fw.close();"},{"lineNumber":73,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":75,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"bqxy"},"content":"     * Updates text file whenever an operation is done."},{"lineNumber":77,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"bqxy"},"content":"     * @param infoText arraylist that stores all data in text format."},{"lineNumber":79,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path that contains all the data in text format."},{"lineNumber":80,"author":{"gitId":"bqxy"},"content":"     * @throws FileNotFoundException if file that contains data is not found."},{"lineNumber":81,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"bqxy"},"content":"    public static void updateFile(ArrayList\u003cString\u003e infoText, String filePath) throws FileNotFoundException {"},{"lineNumber":83,"author":{"gitId":"bqxy"},"content":"        PrintWriter pw \u003d new PrintWriter(filePath); // reset .txt file"},{"lineNumber":84,"author":{"gitId":"bqxy"},"content":"        int count \u003d 0;"},{"lineNumber":85,"author":{"gitId":"bqxy"},"content":"        for (int i \u003d 0; i \u003c infoText.size(); i++) {"},{"lineNumber":86,"author":{"gitId":"bqxy"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"bqxy"},"content":"                writeToFile(filePath, infoText.get(i));"},{"lineNumber":88,"author":{"gitId":"bqxy"},"content":"            } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"bqxy"},"content":"                System.out.println(\"IO Error\");"},{"lineNumber":90,"author":{"gitId":"bqxy"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":94,"author":{"gitId":"bqxy"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"bqxy"},"content":"     * Creates file if existing file is not available."},{"lineNumber":96,"author":{"gitId":"bqxy"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"bqxy"},"content":"     * @param filePath file path that contains all the data in text format."},{"lineNumber":98,"author":{"gitId":"bqxy"},"content":"     * @throws IOException if there are issues with input or output operations."},{"lineNumber":99,"author":{"gitId":"bqxy"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"bqxy"},"content":"    public static void createFile(String filePath) throws IOException {"},{"lineNumber":101,"author":{"gitId":"bqxy"},"content":"        File storageFile \u003d new File(filePath);"},{"lineNumber":102,"author":{"gitId":"bqxy"},"content":"        if (storageFile.exists()) {"},{"lineNumber":103,"author":{"gitId":"bqxy"},"content":"            return;"},{"lineNumber":104,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"bqxy"},"content":"        if (!storageFile.getParentFile().exists()) {"},{"lineNumber":106,"author":{"gitId":"bqxy"},"content":"            storageFile.getParentFile().mkdirs();"},{"lineNumber":107,"author":{"gitId":"bqxy"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"bqxy"},"content":"        storageFile.createNewFile();"},{"lineNumber":109,"author":{"gitId":"bqxy"},"content":"        System.out.println(storageFile.getAbsolutePath());"},{"lineNumber":110,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":111}},{"path":"src/main/java/seedu/financeit/utils/storage/GoalTrackerSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.data.Goal;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.goaltracker.GoalTracker;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.goaltracker.TotalGoalList;"},{"lineNumber":7,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.LoggerCentre;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":"//@@author Feudalord"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"public class GoalTrackerSaver extends SaveHandler {"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":"    private static GoalTrackerSaver saver;"},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":"    private GoalTrackerSaver() {"},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":"    private GoalTrackerSaver(String directory, String filepath) {"},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"        super(directory, filepath);"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"    public static GoalTrackerSaver getInstance(String... paths) {"},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"        if (saver \u003d\u003d null) {"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new GoalTrackerSaver(paths[0], paths[1]);"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new GoalTrackerSaver();"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"        return saver;"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"    public static void clear() {"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"        GoalTracker.getTotalGoalList().getGoal().clear();"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"     * This method reads items in TotalGoaList onto a text file from the default or specified"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"     * file path."},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":"    public void save(String... paths) {"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"            StringBuilder saveString \u003d new StringBuilder();"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"            TotalGoalList goalList \u003d GoalTracker.getTotalGoalList();"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"            String cat;"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"            Goal go;"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"            for (int i \u003d 0; i \u003c goalList.getListSize(); i++) {"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"                go \u003d goalList.getGoal().get(i);"},{"lineNumber":61,"author":{"gitId":"Feudalord"},"content":"                cat \u003d go.getCategory();"},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"                if (cat.equals(\"Expense\")) {"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"                    saveString.append(cat + \";\" + go.getExpenseGoal() + \";\" + go.getExpenseMonth() + \"\\n\");"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"                } else {"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"                    saveString.append(cat + \";\" + go.getIncomeGoal() + \";\" + go.getIncomeMonth() + \"\\n\");"},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"            FileWriter fileWriter \u003d new FileWriter(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"            fileWriter.write(String.valueOf(saveString));"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"            fileWriter.close();"},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"                    \"Goal Tracker dynamic save failed: \" + e);"},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"     * This method read from default or specified file and pass the contents into setGoals()."},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"    public void load(String... paths) {"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":"            String[] classContents;"},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":"            int line \u003d 0;"},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":"                try {"},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"                    String saveString \u003d scanner.nextLine().trim();"},{"lineNumber":97,"author":{"gitId":"Feudalord"},"content":"                    line++;"},{"lineNumber":98,"author":{"gitId":"Feudalord"},"content":"                    classContents \u003d saveString.split(\";\");"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"                    GoalTracker.setGoals(classContents[1], classContents[0], classContents[2]);"},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":"                } catch (Exception e) {"},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":102,"author":{"gitId":"Feudalord"},"content":"                            \"saveGt.txt line \" + line + \" failed to load: \" + e);"},{"lineNumber":103,"author":{"gitId":"Feudalord"},"content":"                    LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":107,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":108,"author":{"gitId":"Feudalord"},"content":"                    \"Goal Tracker load failed: \" + e);"},{"lineNumber":109,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":110,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":107,"kaiwen98":5}},{"path":"src/main/java/seedu/financeit/utils/storage/ManualTrackerSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CategoryMap;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.Entry;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryList;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryTracker;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.datatrackers.manualtracker.Ledger;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.datatrackers.manualtracker.LedgerList;"},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.datatrackers.manualtracker.ManualTracker;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.LoggerCentre;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"import java.io.File;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"import java.io.FileWriter;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"import java.util.Scanner;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":"//@@author Feudalord"},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"public class ManualTrackerSaver extends SaveHandler {"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":"    private static ManualTrackerSaver saver;"},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"    private ManualTrackerSaver() {"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"        super();"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"    private ManualTrackerSaver(String directory, String filepath) {"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"        super(directory, filepath);"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"    public static ManualTrackerSaver getInstance(String... paths) {"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"        if (saver \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new ManualTrackerSaver(paths[0], paths[1]);"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new ManualTrackerSaver();"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"        return saver;"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"    public static void clear() {"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"        ManualTracker.getLedgerList().removeAllItems();"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":"     * This method obtains ledger list from manual tracker and use this list to capture all objects"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"     * in the list in String format and store them in ./data/saveMt.txt"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"    public void save(String... paths) {"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"            LedgerList ledList \u003d ManualTracker.getLedgerList();"},{"lineNumber":61,"author":{"gitId":"Feudalord"},"content":"            StringBuilder saveString \u003d new StringBuilder();"},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"            int size \u003d ledList.getListSize();"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"                Ledger ledger \u003d (Ledger) ledList.getItemAtIndex(i);"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"                saveString.append(getSaveString(ledger));"},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"                EntryList entryList \u003d ledger.entryList;"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":"                int entryListSize \u003d entryList.getListSize();"},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"                for (int x \u003d 0; x \u003c entryListSize; x++) {"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"                    Entry ent \u003d (Entry) entryList.getItemAtIndex(x);"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"                    saveString.append(getSaveString(ent));"},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"            FileWriter fileWriter \u003d new FileWriter(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"            fileWriter.write(String.valueOf(saveString));"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"            fileWriter.close();"},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"                    \"Manual Tracker dynamic save failed: \" + e);"},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"     * This method reads from default or specified save file and rearrange the inputs from each line"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"     * into the correct format to be parsed by parseInput(). parseInput() will provide command packet"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"     * that is used to create each entry or ledger."},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"    public void load(String... paths) {"},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d null;"},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":97,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"            scanner \u003d new Scanner(file);"},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"            String[] classContents;"},{"lineNumber":102,"author":{"gitId":"Feudalord"},"content":"            String inputString \u003d \"\";"},{"lineNumber":103,"author":{"gitId":"Feudalord"},"content":"            int ledgerIndex \u003d -1;"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"            int line \u003d 0;"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"Feudalord"},"content":"                try {"},{"lineNumber":107,"author":{"gitId":"Feudalord"},"content":"                    String saveString \u003d scanner.nextLine().trim();"},{"lineNumber":108,"author":{"gitId":"Feudalord"},"content":"                    line++;"},{"lineNumber":109,"author":{"gitId":"Feudalord"},"content":"                    classContents \u003d saveString.split(\";\");"},{"lineNumber":110,"author":{"gitId":"Feudalord"},"content":"                    switch (classContents[0]) {"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"                    case \"Entry\":"},{"lineNumber":112,"author":{"gitId":"Feudalord"},"content":"                        if (classContents[1].equals(\"Expense\")) {"},{"lineNumber":113,"author":{"gitId":"Feudalord"},"content":"                            classContents[1] \u003d \" -e\";"},{"lineNumber":114,"author":{"gitId":"Feudalord"},"content":"                        } else if (classContents[1].equals(\"Income\")) {"},{"lineNumber":115,"author":{"gitId":"Feudalord"},"content":"                            classContents[1] \u003d \" -i\";"},{"lineNumber":116,"author":{"gitId":"Feudalord"},"content":"                        }"},{"lineNumber":117,"author":{"gitId":"Feudalord"},"content":"                        classContents[2] \u003d CategoryMap.categoryToInputMap.get(classContents[2]);"},{"lineNumber":118,"author":{"gitId":"Feudalord"},"content":"                        EntryTracker.setCurrLedger((Ledger) ManualTracker.getLedgerList().getItemAtIndex(ledgerIndex));"},{"lineNumber":119,"author":{"gitId":"Feudalord"},"content":"                        inputString \u003d \"new /time \" + classContents[4] + \" /cat \""},{"lineNumber":120,"author":{"gitId":"Feudalord"},"content":"                                + classContents[2] + \" /desc \" + classContents[5] + \" /amt \""},{"lineNumber":121,"author":{"gitId":"Feudalord"},"content":"                                + classContents[3] + classContents[1];"},{"lineNumber":122,"author":{"gitId":"Feudalord"},"content":"                        EntryTracker.setCommandPacket(InputParser.getInstance().parseInput(inputString));"},{"lineNumber":123,"author":{"gitId":"Feudalord"},"content":"                        EntryTracker.createEntry();"},{"lineNumber":124,"author":{"gitId":"Feudalord"},"content":"                        break;"},{"lineNumber":125,"author":{"gitId":"Feudalord"},"content":"                    case \"Ledger\":"},{"lineNumber":126,"author":{"gitId":"Feudalord"},"content":"                        inputString \u003d \"new /date \" + classContents[1];"},{"lineNumber":127,"author":{"gitId":"Feudalord"},"content":"                        ManualTracker.setCommandPacket(InputParser.getInstance().parseInput(inputString));"},{"lineNumber":128,"author":{"gitId":"Feudalord"},"content":"                        ManualTracker.createLedger();"},{"lineNumber":129,"author":{"gitId":"Feudalord"},"content":"                        ledgerIndex++;"},{"lineNumber":130,"author":{"gitId":"Feudalord"},"content":"                        break;"},{"lineNumber":131,"author":{"gitId":"Feudalord"},"content":"                    default:"},{"lineNumber":132,"author":{"gitId":"Feudalord"},"content":"                        UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":133,"author":{"gitId":"Feudalord"},"content":"                                \"Class is not recognised to load.\");"},{"lineNumber":134,"author":{"gitId":"Feudalord"},"content":"                        break;"},{"lineNumber":135,"author":{"gitId":"Feudalord"},"content":"                    }"},{"lineNumber":136,"author":{"gitId":"Feudalord"},"content":"                } catch (Exception e) {"},{"lineNumber":137,"author":{"gitId":"Feudalord"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":138,"author":{"gitId":"Feudalord"},"content":"                            \"saveMt.txt line \" + line + \" failed to load: \" + e);"},{"lineNumber":139,"author":{"gitId":"Feudalord"},"content":"                    LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":140,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":141,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":143,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":144,"author":{"gitId":"Feudalord"},"content":"                    \"Manual Tracker load failed: \" + e);"},{"lineNumber":145,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":146,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":133,"kaiwen98":15}},{"path":"src/main/java/seedu/financeit/utils/storage/RecurringTrackerSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntryList;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTracker;"},{"lineNumber":7,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.LoggerCentre;"},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"//@@author Feudalord"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"public class RecurringTrackerSaver extends SaveHandler {"},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"    private static RecurringTrackerSaver saver;"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"    private RecurringTrackerSaver() {"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"        super();"},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"    private RecurringTrackerSaver(String directory, String filepath) {"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"        super(directory, filepath);"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"    public static RecurringTrackerSaver getInstance(String... paths) {"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"        if (saver \u003d\u003d null) {"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new RecurringTrackerSaver(paths[0], paths[1]);"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"                saver \u003d new RecurringTrackerSaver();"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":"        return saver;"},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"    public static void clear() {"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"        RecurringTracker.getEntries().removeAllItems();"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"     * This method obtains RecurringEntryList from RecurringTracker and use that to get a list of"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"     * entries to be stored onto a text file from the default or specified location."},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"    public void save(String... paths) {"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"            RecurringEntryList entries \u003d RecurringTracker.getEntries();"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"            StringBuilder saveString \u003d new StringBuilder();"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"            int size \u003d entries.getListSize();"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"                RecurringEntry entry \u003d (RecurringEntry) entries.getItemAtIndex(i);"},{"lineNumber":61,"author":{"gitId":"Feudalord"},"content":"                saveString.append(entry.toSave() + System.lineSeparator());"},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"            FileWriter fileWriter \u003d new FileWriter(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"            fileWriter.write(String.valueOf(saveString));"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"            fileWriter.close();"},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"                    \"Recurring Tracker dynamic save failed: \" + e);"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"     * This method reads from default or specified text file and the contents are converted into"},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"     * the correct format to be parsed by parseInput and the resulting command packet is used to"},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":"     * load each entry."},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"     * @param paths Can be called with no param or 2 params depending on whether you wish to specify"},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"     *              a directory path and a file path or use the default paths."},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"    public void load(String... paths) {"},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"            if (paths.length \u003d\u003d 2) {"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"                buildFile(paths[0], paths[1]);"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"            } else {"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"                buildFile();"},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(paths.length \u003d\u003d 2 ? paths[1] : fullPath);"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"            String[] classContents;"},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":"            String inputString;"},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":"            String incomeExpense;"},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":"            int line \u003d 0;"},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":"                try {"},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"                    String saveString \u003d scanner.nextLine().trim();"},{"lineNumber":97,"author":{"gitId":"Feudalord"},"content":"                    line++;"},{"lineNumber":98,"author":{"gitId":"Feudalord"},"content":"                    classContents \u003d saveString.split(\"\u003e\u0026@#\u003c\");"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"                    if (!classContents[2].equals(\"\")) {"},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":"                        classContents[2] \u003d classContents[2].substring(2, classContents[2].length() - 2);"},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"                        incomeExpense \u003d \"-e \";"},{"lineNumber":102,"author":{"gitId":"Feudalord"},"content":"                    } else {"},{"lineNumber":103,"author":{"gitId":"Feudalord"},"content":"                        classContents[3] \u003d classContents[3].substring(2, classContents[3].length() - 2);"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"                        incomeExpense \u003d \"-i \";"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"                    }"},{"lineNumber":106,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":107,"author":{"gitId":"Feudalord"},"content":"                    if (classContents[5].equals(\"Auto deduction\")) {"},{"lineNumber":108,"author":{"gitId":"Feudalord"},"content":"                        classContents[5] \u003d \"-auto \";"},{"lineNumber":109,"author":{"gitId":"Feudalord"},"content":"                    } else {"},{"lineNumber":110,"author":{"gitId":"Feudalord"},"content":"                        classContents[5] \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":"                    }"},{"lineNumber":112,"author":{"gitId":"Feudalord"},"content":"                    inputString \u003d \"add \" + incomeExpense + classContents[5] + \"/desc \" + classContents[1]"},{"lineNumber":113,"author":{"gitId":"Feudalord"},"content":"                            + \" /amt \" + classContents[2] + classContents[3] + \" /day \" + classContents[0];"},{"lineNumber":114,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":115,"author":{"gitId":"Feudalord"},"content":"                    if (classContents.length \u003d\u003d 7) {"},{"lineNumber":116,"author":{"gitId":"Feudalord"},"content":"                        inputString +\u003d \" /notes \" + classContents[6];"},{"lineNumber":117,"author":{"gitId":"Feudalord"},"content":"                    }"},{"lineNumber":118,"author":{"gitId":"Feudalord"},"content":"                    RecurringTracker.loadEntry(InputParser.getInstance().parseInput(inputString));"},{"lineNumber":119,"author":{"gitId":"Feudalord"},"content":"                } catch (Exception e) {"},{"lineNumber":120,"author":{"gitId":"Feudalord"},"content":"                    UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":121,"author":{"gitId":"Feudalord"},"content":"                            \"saveAt.txt line \" + line + \" failed to load: \" + e);"},{"lineNumber":122,"author":{"gitId":"Feudalord"},"content":"                    LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":123,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":126,"author":{"gitId":"Feudalord"},"content":"            UiManager.printWithStatusIcon(Common.PrintType.ERROR_MESSAGE,"},{"lineNumber":127,"author":{"gitId":"Feudalord"},"content":"                    \"Recurring Tracker load failed: \" + e);"},{"lineNumber":128,"author":{"gitId":"Feudalord"},"content":"            LoggerCentre.writeStackTraceToLog(e);"},{"lineNumber":129,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":126,"kaiwen98":5}},{"path":"src/main/java/seedu/financeit/utils/storage/SaveHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Feudalord"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Feudalord"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"Feudalord"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"//@@author Feudalord"},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":"public abstract class SaveHandler {"},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":"    protected String fullPath;"},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":"    protected String dirPath;"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"    protected SaveHandler() {"},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"    protected SaveHandler(String directory, String filepath) {"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"        fullPath \u003d filepath;"},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":"        dirPath \u003d directory;"},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"    protected void buildFile() throws IOException {"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":"        if (!Files.exists(Paths.get(dirPath))) {"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"            Files.createDirectory(Paths.get(dirPath));"},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"        if (!Files.exists(Paths.get(fullPath))) {"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"            Files.createFile(Paths.get(fullPath));"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"     * Checks if given directory or file exist. Create them if they do not exist."},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":"     * @param dirPath directory where the file to be created is located"},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"     * @param fullPath full path of the file to be created"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"     * @throws IOException File creation may throw IO exception if given path is invalid"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"    public static void buildFile(String dirPath, String fullPath) throws IOException {"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"        if (!Files.exists(Paths.get(dirPath))) {"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"            Files.createDirectory(Paths.get(dirPath));"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"        if (!Files.exists(Paths.get(fullPath))) {"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"            Files.createFile(Paths.get(fullPath));"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"     * General purpose function used to store some String to a text file in ./data directory."},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"     * @param input The String to be stored"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"     * @param fileName The name of the file to be stored to"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"     * @throws IOException File creation may throw IO exception if given path is invalid"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"    public static void putString(String input, String fileName) throws IOException {"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"        buildFile(\"./data\", \"./data/\" + fileName + \".txt\");"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"./data/\" + fileName + \".txt\");"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"        fileWriter.write(input);"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"        fileWriter.close();"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"     * General purpose function used to return some String from a text file in ./data directory."},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"     * @param fileName The name of the file to be read from"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"     * @return The output String from the specified text file."},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"     * @throws IOException File creation may throw IO exception if given path is invalid"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"    public static String takeString(String fileName) throws IOException {"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"        buildFile(\"./data\", \"./data/\" + fileName + \".txt\");"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":"        File file \u003d new File(\"./data/\" + fileName + \".txt\");"},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"        return scanner.nextLine();"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"     * Appends a simple header to the Save String to differentiate the type of save."},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":"     * @param object Ledger or entry to add a header to."},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"     * @return Save string generated."},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"    public static String getSaveString(Object object) {"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"        return object.getClass().getSimpleName() + \";\" + object + System.lineSeparator();"},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"    public static String charRemoveAt(String str, int p) {"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"        return str.substring(0, p) + str.substring(p + 1);"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"    public void save(String... paths) throws IOException {"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":"    public void load(String... paths) throws IOException {"},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":95,"kaiwen98":1}},{"path":"src/main/java/seedu/financeit/utils/storage/SaveManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.Financeit;"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.entrytracker.EntryTracker;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.ManualTracker;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTracker;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.ui.TablePrinter;"},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":"import java.io.FileInputStream;"},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":"import java.io.FileOutputStream;"},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"import java.io.FileWriter;"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":"import java.nio.channels.FileChannel;"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"import java.nio.file.Files;"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"import java.nio.file.Paths;"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":"import java.util.Scanner;"},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"import java.util.regex.Matcher;"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"import java.util.regex.Pattern;"},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"public class SaveManager {"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"    public static final String fullPath \u003d \"./data/backup/names.txt\";"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":"    public static final String dirPath \u003d \"./data/backup\";"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":"    private static String prompt \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"Feudalord"},"content":"    private static boolean menu \u003d true;"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"    public static void main() {"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"        while (true) {"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":"            if (menu \u003d\u003d true) {"},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"                helpMenu();"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"            InputParser parser \u003d InputParser.getInstance();"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            CommandPacket packet \u003d parser.parseInput(UiManager.handleInput());"},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"            menu \u003d true;"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"            switch (packet.getCommandString()) {"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"            case \"list\":"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":"                listSaves(packet);"},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"            case \"add\":"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"                if (checkValidity(packet) \u003d\u003d true) {"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"                    addSave(packet);"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"            case \"load\":"},{"lineNumber":48,"author":{"gitId":"Feudalord"},"content":"                if (checkValidity(packet) \u003d\u003d true) {"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"                    loadSave(packet);"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"            case \"reset\":"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"                resetSave();"},{"lineNumber":54,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"Feudalord"},"content":"            case \"delete\":"},{"lineNumber":56,"author":{"gitId":"Feudalord"},"content":"                if (checkValidity(packet) \u003d\u003d true) {"},{"lineNumber":57,"author":{"gitId":"Feudalord"},"content":"                    deleteSave(packet);"},{"lineNumber":58,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"Feudalord"},"content":"            case \"help\":"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"                menu \u003d true;"},{"lineNumber":62,"author":{"gitId":"Feudalord"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"Feudalord"},"content":"            case \"exit\":"},{"lineNumber":64,"author":{"gitId":"Feudalord"},"content":"                return;"},{"lineNumber":65,"author":{"gitId":"Feudalord"},"content":"            default:"},{"lineNumber":66,"author":{"gitId":"Feudalord"},"content":"                prompt \u003d \"Invalid Command\";"},{"lineNumber":67,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":71,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"Feudalord"},"content":"     * This method checks if the entered command is valid and adds the"},{"lineNumber":73,"author":{"gitId":"Feudalord"},"content":"     * appropriate prompt to the status bar."},{"lineNumber":74,"author":{"gitId":"Feudalord"},"content":"     * @param packet packet containing parsed command from user"},{"lineNumber":75,"author":{"gitId":"Feudalord"},"content":"     * @return If true, run the command, if false, report status to the user and don\u0027t run the command."},{"lineNumber":76,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Feudalord"},"content":"    private static boolean checkValidity(CommandPacket packet) {"},{"lineNumber":78,"author":{"gitId":"Feudalord"},"content":"        if (packet.getParam(\"/name\") \u003d\u003d null) {"},{"lineNumber":79,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d \"Invalid Command\";"},{"lineNumber":80,"author":{"gitId":"Feudalord"},"content":"            return false;"},{"lineNumber":81,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":83,"author":{"gitId":"Feudalord"},"content":"        if (packet.getParam(\"/name\").trim().equals(\"\")) {"},{"lineNumber":84,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d \"Name cannot be empty!\";"},{"lineNumber":85,"author":{"gitId":"Feudalord"},"content":"            return false;"},{"lineNumber":86,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":88,"author":{"gitId":"Feudalord"},"content":"        Pattern p \u003d Pattern.compile(\"[^A-Za-z0-9]\");"},{"lineNumber":89,"author":{"gitId":"Feudalord"},"content":"        Matcher m \u003d p.matcher(packet.getParam(\"/name\"));"},{"lineNumber":90,"author":{"gitId":"Feudalord"},"content":"        if (m.find()) {"},{"lineNumber":91,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d \"No spaces or special characters allowed! Alphanumeric only!\";"},{"lineNumber":92,"author":{"gitId":"Feudalord"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":95,"author":{"gitId":"Feudalord"},"content":"        return true;"},{"lineNumber":96,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":98,"author":{"gitId":"Feudalord"},"content":"    private static void helpMenu() {"},{"lineNumber":99,"author":{"gitId":"Feudalord"},"content":"        UiManager.refreshPage();"},{"lineNumber":100,"author":{"gitId":"Feudalord"},"content":"        status();"},{"lineNumber":101,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.setTitle(\"Welcome to Save Manager\");"},{"lineNumber":102,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"No.; Commands                                           ; Syntax                    \");"},{"lineNumber":103,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[1]; List local saves; list\");"},{"lineNumber":104,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[2]; Add/Overwrite save; add /name\");"},{"lineNumber":105,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[3]; Load save; load /name\");"},{"lineNumber":106,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[4]; Delete save; delete /name\");"},{"lineNumber":107,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[5]; Reset program; reset\");"},{"lineNumber":108,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.addRow(\"[6]; Quit to main; exit\");"},{"lineNumber":109,"author":{"gitId":"Feudalord"},"content":"        TablePrinter.printList();"},{"lineNumber":110,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":112,"author":{"gitId":"Feudalord"},"content":"    private static void status() {"},{"lineNumber":113,"author":{"gitId":"Feudalord"},"content":"        System.out.println(\"Status: \" + prompt);"},{"lineNumber":114,"author":{"gitId":"Feudalord"},"content":"        prompt \u003d \"\";"},{"lineNumber":115,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":117,"author":{"gitId":"Feudalord"},"content":"    private static void helpMsg() {"},{"lineNumber":118,"author":{"gitId":"Feudalord"},"content":"        System.out.println(\"Enter \u003chelp\u003e for a list of commands\");"},{"lineNumber":119,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":121,"author":{"gitId":"Feudalord"},"content":"    private static void resetSave() {"},{"lineNumber":122,"author":{"gitId":"Feudalord"},"content":"        GoalTrackerSaver.clear();"},{"lineNumber":123,"author":{"gitId":"Feudalord"},"content":"        RecurringTrackerSaver.clear();"},{"lineNumber":124,"author":{"gitId":"Feudalord"},"content":"        ManualTrackerSaver.clear();"},{"lineNumber":125,"author":{"gitId":"Feudalord"},"content":"        prompt \u003d \"Program has been reset\";"},{"lineNumber":126,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"    public static void resetAllLists() {"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"        System.out.println(ManualTracker.getLedgerList());"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.getLedgerList().removeAllItems();"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.getEntryList().removeAllItems();"},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringTracker.getEntries().removeAllItems();"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":135,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"Feudalord"},"content":"     * This method prints a list of backup saves using the names provided"},{"lineNumber":137,"author":{"gitId":"Feudalord"},"content":"     * in text file names.txt"},{"lineNumber":138,"author":{"gitId":"Feudalord"},"content":"     * @param packet packet containing parsed command from user"},{"lineNumber":139,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"Feudalord"},"content":"    private static void listSaves(CommandPacket packet) {"},{"lineNumber":141,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"Feudalord"},"content":"            menu \u003d false;"},{"lineNumber":143,"author":{"gitId":"Feudalord"},"content":"            UiManager.refreshPage();"},{"lineNumber":144,"author":{"gitId":"Feudalord"},"content":"            helpMsg();"},{"lineNumber":145,"author":{"gitId":"Feudalord"},"content":"            TablePrinter.setTitle(\"List Saves\");"},{"lineNumber":146,"author":{"gitId":"Feudalord"},"content":"            TablePrinter.addRow(\"No.; Names                                           \");"},{"lineNumber":147,"author":{"gitId":"Feudalord"},"content":"            SaveHandler.buildFile(dirPath, fullPath);"},{"lineNumber":148,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":149,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":150,"author":{"gitId":"Feudalord"},"content":"            for (int i \u003d 1; scanner.hasNext(); ) {"},{"lineNumber":151,"author":{"gitId":"Feudalord"},"content":"                String name \u003d scanner.nextLine();"},{"lineNumber":152,"author":{"gitId":"Feudalord"},"content":"                if (!name.equals(\"\")) {"},{"lineNumber":153,"author":{"gitId":"Feudalord"},"content":"                    TablePrinter.addRow(\"[\" + i + \"]; \" + name);"},{"lineNumber":154,"author":{"gitId":"Feudalord"},"content":"                    i++;"},{"lineNumber":155,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"Feudalord"},"content":"            TablePrinter.printList();"},{"lineNumber":158,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":159,"author":{"gitId":"Feudalord"},"content":"            menu \u003d true;"},{"lineNumber":160,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d e.toString();"},{"lineNumber":161,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":164,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"Feudalord"},"content":"     * This method creates a backup save in data/backup directory. This save consists of"},{"lineNumber":166,"author":{"gitId":"Feudalord"},"content":"     * 3 text files ending with _gt, _mt, _at and an entry in the names.txt file. If entered"},{"lineNumber":167,"author":{"gitId":"Feudalord"},"content":"     * name already exist, then the function overwrites the existing save, otherwise, new"},{"lineNumber":168,"author":{"gitId":"Feudalord"},"content":"     * save will be created."},{"lineNumber":169,"author":{"gitId":"Feudalord"},"content":"     * @param packet packet containing parsed command from user"},{"lineNumber":170,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"Feudalord"},"content":"    public static void addSave(CommandPacket packet) {"},{"lineNumber":172,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":173,"author":{"gitId":"Feudalord"},"content":"            String name \u003d packet.getParam(\"/name\");"},{"lineNumber":174,"author":{"gitId":"Feudalord"},"content":"            String path \u003d dirPath + \"/\" + name;"},{"lineNumber":175,"author":{"gitId":"Feudalord"},"content":"            GoalTrackerSaver.getInstance().save(dirPath, path + \"_gt.txt\");"},{"lineNumber":176,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().save(dirPath, path + \"_mt.txt\");"},{"lineNumber":177,"author":{"gitId":"Feudalord"},"content":"            RecurringTrackerSaver.getInstance().save(dirPath, path + \"_at.txt\");"},{"lineNumber":178,"author":{"gitId":"Feudalord"},"content":"            SaveHandler.buildFile(dirPath, fullPath);"},{"lineNumber":179,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":180,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":181,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":182,"author":{"gitId":"Feudalord"},"content":"                String saveString \u003d scanner.nextLine();"},{"lineNumber":183,"author":{"gitId":"Feudalord"},"content":"                if (saveString.equals(name)) {"},{"lineNumber":184,"author":{"gitId":"Feudalord"},"content":"                    prompt \u003d name + \" has been overwritten!\";"},{"lineNumber":185,"author":{"gitId":"Feudalord"},"content":"                    return;"},{"lineNumber":186,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":187,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":188,"author":{"gitId":"Feudalord"},"content":"            FileWriter fileWriter \u003d new FileWriter(fullPath, true);"},{"lineNumber":189,"author":{"gitId":"Feudalord"},"content":"            fileWriter.write(name + \"\\n\");"},{"lineNumber":190,"author":{"gitId":"Feudalord"},"content":"            fileWriter.close();"},{"lineNumber":191,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d name + \" has been added!\";"},{"lineNumber":192,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":193,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":194,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d e.toString();"},{"lineNumber":195,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":198,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"Feudalord"},"content":"     * This method searches for a matching name entry in names.txt. Once found, it will"},{"lineNumber":200,"author":{"gitId":"Feudalord"},"content":"     * use this name to access contents of 3 text files containing saved data for Goal"},{"lineNumber":201,"author":{"gitId":"Feudalord"},"content":"     * Tracker, Manual Tracker and Auto Tracker respectively. The 3 text files in ./data/backup"},{"lineNumber":202,"author":{"gitId":"Feudalord"},"content":"     * directory is subsequently copied to the main save found in ./data directory where it"},{"lineNumber":203,"author":{"gitId":"Feudalord"},"content":"     * is then loaded using the load method."},{"lineNumber":204,"author":{"gitId":"Feudalord"},"content":"     * @param packet packet containing parsed command from user"},{"lineNumber":205,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"Feudalord"},"content":"    public static void loadSave(CommandPacket packet) {"},{"lineNumber":207,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":208,"author":{"gitId":"Feudalord"},"content":"            String name \u003d packet.getParam(\"/name\");"},{"lineNumber":209,"author":{"gitId":"Feudalord"},"content":"            String path \u003d dirPath + \"/\" + name;"},{"lineNumber":210,"author":{"gitId":"Feudalord"},"content":"            String desAuto \u003d RecurringTrackerSaver.getInstance().fullPath;"},{"lineNumber":211,"author":{"gitId":"Feudalord"},"content":"            String desGoal \u003d GoalTrackerSaver.getInstance().fullPath;"},{"lineNumber":212,"author":{"gitId":"Feudalord"},"content":"            String desManual \u003d ManualTrackerSaver.getInstance().fullPath;"},{"lineNumber":213,"author":{"gitId":"Feudalord"},"content":"            RecurringTrackerSaver.getInstance().buildFile();"},{"lineNumber":214,"author":{"gitId":"Feudalord"},"content":"            GoalTrackerSaver.getInstance().buildFile();"},{"lineNumber":215,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().buildFile();"},{"lineNumber":216,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":217,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":218,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":219,"author":{"gitId":"Feudalord"},"content":"                String saveString \u003d scanner.nextLine();"},{"lineNumber":220,"author":{"gitId":"Feudalord"},"content":"                if (saveString.equals(name)) {"},{"lineNumber":221,"author":{"gitId":"Feudalord"},"content":"                    FileInputStream inGt \u003d new FileInputStream(path + \"_gt.txt\");"},{"lineNumber":222,"author":{"gitId":"Feudalord"},"content":"                    FileOutputStream outGt \u003d new FileOutputStream(desGoal);"},{"lineNumber":223,"author":{"gitId":"Feudalord"},"content":"                    FileChannel sourceChannel \u003d inGt.getChannel();"},{"lineNumber":224,"author":{"gitId":"Feudalord"},"content":"                    FileChannel destChannel \u003d outGt.getChannel();"},{"lineNumber":225,"author":{"gitId":"Feudalord"},"content":"                    destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());"},{"lineNumber":226,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":227,"author":{"gitId":"Feudalord"},"content":"                    FileInputStream inMt \u003d new FileInputStream(path + \"_mt.txt\");"},{"lineNumber":228,"author":{"gitId":"Feudalord"},"content":"                    FileOutputStream outMt \u003d new FileOutputStream(desManual);"},{"lineNumber":229,"author":{"gitId":"Feudalord"},"content":"                    sourceChannel \u003d inMt.getChannel();"},{"lineNumber":230,"author":{"gitId":"Feudalord"},"content":"                    destChannel \u003d outMt.getChannel();"},{"lineNumber":231,"author":{"gitId":"Feudalord"},"content":"                    destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());"},{"lineNumber":232,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":233,"author":{"gitId":"Feudalord"},"content":"                    FileInputStream inAt \u003d new FileInputStream(path + \"_at.txt\");"},{"lineNumber":234,"author":{"gitId":"Feudalord"},"content":"                    FileOutputStream outAt \u003d new FileOutputStream(desAuto);"},{"lineNumber":235,"author":{"gitId":"Feudalord"},"content":"                    sourceChannel \u003d inAt.getChannel();"},{"lineNumber":236,"author":{"gitId":"Feudalord"},"content":"                    destChannel \u003d outAt.getChannel();"},{"lineNumber":237,"author":{"gitId":"Feudalord"},"content":"                    destChannel.transferFrom(sourceChannel, 0, sourceChannel.size());"},{"lineNumber":238,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":239,"author":{"gitId":"Feudalord"},"content":"                    inGt.close();"},{"lineNumber":240,"author":{"gitId":"Feudalord"},"content":"                    inMt.close();"},{"lineNumber":241,"author":{"gitId":"Feudalord"},"content":"                    inAt.close();"},{"lineNumber":242,"author":{"gitId":"Feudalord"},"content":"                    outMt.close();"},{"lineNumber":243,"author":{"gitId":"Feudalord"},"content":"                    outGt.close();"},{"lineNumber":244,"author":{"gitId":"Feudalord"},"content":"                    outAt.close();"},{"lineNumber":245,"author":{"gitId":"Feudalord"},"content":"                    clear();"},{"lineNumber":246,"author":{"gitId":"Feudalord"},"content":"                    Financeit.load();"},{"lineNumber":247,"author":{"gitId":"Feudalord"},"content":"                    prompt \u003d name + \" has been loaded!\";"},{"lineNumber":248,"author":{"gitId":"Feudalord"},"content":"                    return;"},{"lineNumber":249,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":250,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":251,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d name + \" cannot be found!\";"},{"lineNumber":252,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":253,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d e.toString();"},{"lineNumber":254,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":257,"author":{"gitId":"Feudalord"},"content":"    public static void clear() {"},{"lineNumber":258,"author":{"gitId":"Feudalord"},"content":"        GoalTrackerSaver.clear();"},{"lineNumber":259,"author":{"gitId":"Feudalord"},"content":"        RecurringTrackerSaver.clear();"},{"lineNumber":260,"author":{"gitId":"Feudalord"},"content":"        ManualTrackerSaver.clear();"},{"lineNumber":261,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":263,"author":{"gitId":"Feudalord"},"content":"    /**"},{"lineNumber":264,"author":{"gitId":"Feudalord"},"content":"     * This method deletes the given entry in names.txt as well as the save files"},{"lineNumber":265,"author":{"gitId":"Feudalord"},"content":"     * associated with that name."},{"lineNumber":266,"author":{"gitId":"Feudalord"},"content":"     * @param packet packet containing parsed command from user"},{"lineNumber":267,"author":{"gitId":"Feudalord"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"Feudalord"},"content":"    public static void deleteSave(CommandPacket packet) {"},{"lineNumber":269,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":270,"author":{"gitId":"Feudalord"},"content":"            String name \u003d packet.getParam(\"/name\");"},{"lineNumber":271,"author":{"gitId":"Feudalord"},"content":"            StringBuilder nameList \u003d new StringBuilder();"},{"lineNumber":272,"author":{"gitId":"Feudalord"},"content":"            File file \u003d new File(fullPath);"},{"lineNumber":273,"author":{"gitId":"Feudalord"},"content":"            Scanner scanner \u003d new Scanner(file);"},{"lineNumber":274,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d name + \" is not found!\";"},{"lineNumber":275,"author":{"gitId":"Feudalord"},"content":"            while (scanner.hasNext()) {"},{"lineNumber":276,"author":{"gitId":"Feudalord"},"content":"                String saveString \u003d scanner.nextLine();"},{"lineNumber":277,"author":{"gitId":"Feudalord"},"content":"                if (!saveString.equals(name)) {"},{"lineNumber":278,"author":{"gitId":"Feudalord"},"content":"                    nameList.append(saveString + \"\\n\");"},{"lineNumber":279,"author":{"gitId":"Feudalord"},"content":"                } else {"},{"lineNumber":280,"author":{"gitId":"Feudalord"},"content":"                    String path \u003d dirPath + \"/\" + name;"},{"lineNumber":281,"author":{"gitId":"Feudalord"},"content":"                    Files.deleteIfExists(Paths.get(path + \"_gt.txt\"));"},{"lineNumber":282,"author":{"gitId":"Feudalord"},"content":"                    Files.deleteIfExists(Paths.get(path + \"_mt.txt\"));"},{"lineNumber":283,"author":{"gitId":"Feudalord"},"content":"                    Files.deleteIfExists(Paths.get(path + \"_at.txt\"));"},{"lineNumber":284,"author":{"gitId":"Feudalord"},"content":"                    prompt \u003d name + \" has been removed!\";"},{"lineNumber":285,"author":{"gitId":"Feudalord"},"content":"                }"},{"lineNumber":286,"author":{"gitId":"Feudalord"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"Feudalord"},"content":"            FileWriter fileWriter \u003d new FileWriter(fullPath, false);"},{"lineNumber":288,"author":{"gitId":"Feudalord"},"content":"            fileWriter.write(nameList.toString());"},{"lineNumber":289,"author":{"gitId":"Feudalord"},"content":"            fileWriter.close();"},{"lineNumber":290,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":291,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":292,"author":{"gitId":"Feudalord"},"content":"            prompt \u003d e.toString();"},{"lineNumber":293,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":294,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":281,"bqxy":2,"Artemis-Hunt":1,"kaiwen98":11}},{"path":"src/test/java/seedu/financeit/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":9,"kaiwen98":3}},{"path":"src/test/java/seedu/financeit/common/CommandPacketTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.common; /**"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":" * Organises data from input string into distinct data types and structure."},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":" * For scalability purposes, a hash table is implemented to map param type to its corresponding params."},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"public class CommandPacketTest {"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"    private String commandString \u003d null;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"    private HashMap paramMap \u003d null;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    private String rawInput;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    // Constructors"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    public CommandPacketTest(String taskType, HashMap paramMap) {"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"        this.commandString \u003d taskType;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"        this.paramMap \u003d paramMap;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    // Param type refers to /.* (eg. /a)"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    // Param refers to string following the param type"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    public String getParam(String paramType) {"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        if (!paramMap.containsKey(paramType)) {"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            return null;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            return (String) paramMap.get(paramType);"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"    public String[] getParamTypes() {"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        return (String[]) paramMap.keySet().toArray(new String[0]);"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"    public String getCommandString() {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        return this.commandString.trim();"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    public HashMap getParamMap() {"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        return (HashMap)this.paramMap.clone();"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"    public void addParamToMap(String paramType, String paramString) {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        this.paramMap.put(paramType, paramString);"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        return String.format(\"%s, %s\\n\", this.commandString, this.paramMap);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":49}},{"path":"src/test/java/seedu/financeit/datatrackers/entrytracker/EntryTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.datatrackers.manualtracker.TypicalLedgerEntries;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateCreateEntryCorrectCommand;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateCreateEntryErrorCommand;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateDeleteEntryByIdCorrectCommand;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateDeleteEntryByIdErrorCommand;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateEditEntryCorrectCommand;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"public class EntryTrackerTest {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    private static final int FREQUENCY_ERROR_ENTRY \u003d 3;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    private static final int NUM_ENTRIES \u003d 50;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"     * Function sets up the \"opened\" ledger whereby entry operations will be performed upon."},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    @BeforeEach"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    void setup() {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.setCurrLedger(TypicalLedgerEntries.getInstance().generateTypicalLedger1());"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"     * Test handleCreateEntry that evaluates if valid entries are added into the list, and"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"     * invalid are not added into the list."},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public void testEntryTrackerByList() {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket;"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"        int count \u003d 0;"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        int numCorrectEntries \u003d 0;"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        // Illegal Params that will be generated with the Entry for negative test."},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        String[] wrongParams \u003d {"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"            \"time\","},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            \"cat\","},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            \"amt\""},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        };"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"        String wrongParam;"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d NUM_ENTRIES; i++) {"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"            if (i % FREQUENCY_ERROR_ENTRY \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"                wrongParam \u003d wrongParams[count % 3];"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateEntryErrorCommand(wrongParam);"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"                count++;"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateEntryCorrectCommand(i);"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"                numCorrectEntries++;"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.setTestPacket(testPacket);"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.handleCreateEntry(false);"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(numCorrectEntries, EntryTracker.entryList.getListSize());"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.entryList.removeAllItems();"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"    public void testEntryTrackerByDelete() {"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d null;"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d NUM_ENTRIES; i++) {"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d generateCreateEntryCorrectCommand(i);"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.setTestPacket(testPacket);"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.handleCreateEntry(false);"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"        int actualListNum \u003d EntryTracker.entryList.getListSize();"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d 20; i++) {"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"            switch (i % 4) {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            case 0:"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                //Fall through"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"            case 1:"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteEntryByIdCorrectCommand();"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"                actualListNum -\u003d 1;"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"            case 2:"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"                //Fall through"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            case 3:"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteEntryByIdErrorCommand();"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"                // Fall- through"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.setTestPacket(testPacket);"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.handleDeleteEntry();"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"        int expectedListNum \u003d EntryTracker.entryList.getListSize();"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        assertEquals(actualListNum, expectedListNum);"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"    public void testEntryTrackerByEditEntries() {"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        int commonSeed \u003d 3;"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"        TypicalEntryEntries.getInstance().setSeed(commonSeed);"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"        final Entry expectedEntry \u003d TypicalEntryEntries.getInstance().generateTypicalEntryFromSeed();"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"        // Create a fodder entry to overwrite using edit operation."},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"        TypicalEntryEntries.getInstance().generateTypicalEntry1();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.setTestPacket(TypicalEntryEntries.getInstance().packet);"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.handleCreateEntry(false);"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"        // Create command packet to invoke edit operation."},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d generateEditEntryCorrectCommand(commonSeed);"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.setTestPacket(testPacket);"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.handleEditEntry();"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"        Entry actualEntry \u003d (Entry) EntryTracker.entryList.getItemAtIndex(0);"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"        assertEquals(actualEntry, expectedEntry);"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.entryList.removeAllItems();"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"    public void testEntryTrackerByDuplicateEntries() {"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket;"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c NUM_ENTRIES; i++) {"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"            if (i % 2 \u003d\u003d 0) {"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateEntryCorrectCommand(4);"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateEntryCorrectCommand(3);"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.setTestPacket(testPacket);"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"            EntryTracker.handleCreateEntry(false);"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(2, EntryTracker.entryList.getListSize());"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"        EntryTracker.entryList.removeAllItems();"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":5,"kaiwen98":121}},{"path":"src/test/java/seedu/financeit/datatrackers/entrytracker/TestCommands.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.RandomGenerator;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_CATEGORY;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_TIME;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":" * Generates command packets to simulate various circumstances to put the software under test."},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"public class TestCommands {"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateCreateEntryErrorCommand(String wrongParam) {"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        int seed \u003d RandomGenerator.generateRandomPositiveIntUntilLimit(3);"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"        String paramTime \u003d (wrongParam \u003d\u003d \"time\")"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"            ? (seed \u003d\u003d 0) ? \"5600\""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"            : (seed \u003d\u003d 1) ? \"-1200\""},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"            : \" -\u0026\u0026*\u0026*(-\""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            : \"1500\";"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        String paramCat \u003d (wrongParam \u003d\u003d \"cat\")"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            ? \"wrong\""},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            : \"oth\";"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        String paramAmt \u003d (wrongParam \u003d\u003d \"amt\")"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"            ? (seed \u003d\u003d 0) ? String.format(\"%f\", (Double.MAX_VALUE - 1))"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"            : (seed \u003d\u003d 1) ? \"-1200\""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            : (seed \u003d\u003d 2) ? \" -\u0026\u0026*\u0026*(-\""},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"            : \"4e2\""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            : \"5600\";"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            \"new\","},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_TIME,"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"                    paramTime"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_CATEGORY,"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"                    paramCat"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_INC,"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"                    \"\""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_DESCRIPTION,"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"                    \"test description\""},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_AMOUNT,"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"                    paramAmt"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteEntryByIdCorrectCommand() {"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INDEX,"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"                    \"1\""},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteEntryByIdErrorCommand() {"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"        int seed \u003d RandomGenerator.generateRandomPositiveIntUntilLimit(3);"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"        String wrongInput \u003d (seed \u003d\u003d 1) ? \"-1000000000000\""},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            : (seed \u003d\u003d 2) ? \"100000000000000\""},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            : (seed \u003d\u003d 3) ? \"-5\""},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            : \"4e2\";"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INDEX,"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"                    wrongInput"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateCreateEntryCorrectCommand(int seed) {"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"        // Generates entries with time range from 0000 to 2400 in 24-h intervals."},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"        String paramTime \u003d \"1500\";"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"        String paramCat \u003d \"oth\";"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"        String paramAmt \u003d String.valueOf(1500 + seed);"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"            \"edit\","},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_TIME,"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"                    paramTime"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_CATEGORY,"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"                    paramCat"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_INC,"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"                    \"\""},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_DESCRIPTION,"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"                    \"test description\""},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_AMOUNT,"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"                    paramAmt"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateEditEntryCorrectCommand(int seed) {"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"        // Generates entries with time range from 0000 to 2400 in 24-h intervals."},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"        String paramTime \u003d \"1500\";"},{"lineNumber":133,"author":{"gitId":"kaiwen98"},"content":"        String paramCat \u003d \"oth\";"},{"lineNumber":134,"author":{"gitId":"kaiwen98"},"content":"        String paramAmt \u003d String.valueOf(1500 + seed);"},{"lineNumber":135,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":136,"author":{"gitId":"kaiwen98"},"content":"            \"edit\","},{"lineNumber":137,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":138,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":139,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INDEX,"},{"lineNumber":140,"author":{"gitId":"kaiwen98"},"content":"                    \"1\""},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":142,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":143,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_TIME,"},{"lineNumber":144,"author":{"gitId":"kaiwen98"},"content":"                    paramTime"},{"lineNumber":145,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":146,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":147,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_CATEGORY,"},{"lineNumber":148,"author":{"gitId":"kaiwen98"},"content":"                    paramCat"},{"lineNumber":149,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":150,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":151,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INC,"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"                    \"\""},{"lineNumber":153,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":154,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":155,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_DESCRIPTION,"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"                    \"test description\""},{"lineNumber":157,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":158,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":159,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_AMOUNT,"},{"lineNumber":160,"author":{"gitId":"kaiwen98"},"content":"                    paramAmt"},{"lineNumber":161,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":164,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":165,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":166}},{"path":"src/test/java/seedu/financeit/datatrackers/entrytracker/TypicalEntryEntries.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.entrytracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.IncompatibleParamsException;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.InsufficientParamsException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ItemNotFoundException;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.entrytracker.entryhandlers.CreateEntryHandler;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.utils.ParamChecker;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.entrytracker.TestCommands.generateCreateEntryCorrectCommand;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":" * Generates instances of the Entry class for testing purposes."},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"public class TypicalEntryEntries {"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    static CommandPacket packet;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"    // Seed used to generate an entry with a particular set of parameters. Entries generated with the same seed"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    // are identical."},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    static int seed;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"    private static TypicalEntryEntries typicalEntryEntries \u003d null;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    private TypicalEntryEntries() {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"    public void setSeed(int seed) {"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        this.seed \u003d seed;"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"        this.packet \u003d generateCreateEntryCorrectCommand(seed);"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"    public static TypicalEntryEntries getInstance() {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"        if (typicalEntryEntries \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            typicalEntryEntries \u003d new TypicalEntryEntries();"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        return typicalEntryEntries;"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"     * Generates an entry populated with values generated from an integer seed."},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"     * @return populated Entry."},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    public Entry generateTypicalEntryFromSeed() {"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateEntryHandler createEntryHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"            createEntryHandler.handlePacket(this.packet);"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        } catch (InsufficientParamsException | IncompatibleParamsException | ItemNotFoundException exception) {"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            //Fall through"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"        return createEntryHandler.getCurrEntry();"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"     * Generates an entry with manually-specified parameters."},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"     * @return Populated entry."},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"    public Entry generateTypicalEntry1() {"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateEntryHandler createEntryHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket packet \u003d TestUtil.createCommandPacket("},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            \"new\","},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            new String[][]{"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_TIME,"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"                    \"1500\""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_CATEGORY,"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"                    \"oth\""},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_INC,"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"                    \"-i\""},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_DESCRIPTION,"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"                    \"test description1\""},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_AMOUNT,"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"                    \"1600.56\""},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":"            createEntryHandler.handlePacket(packet);"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            this.packet \u003d packet;"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        } catch (Exception exception) {"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"            //Fall through"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":"        return createEntryHandler.getCurrEntry();"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"     * Generates an entry with manually-specified parameters."},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"     * @return Populated entry."},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    public Entry generateTypicalEntry2() {"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateEntryHandler createEntryHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket packet \u003d TestUtil.createCommandPacket("},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"            \"new\","},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"            new String[][]{"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_TIME,"},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"                    \"1620\""},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_CATEGORY,"},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"                    \"oth\""},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_INC,"},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                    \"-e\""},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_DESCRIPTION,"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"                    \"test description2\""},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"                },"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.PARAM_AMOUNT,"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"                    \"567.00\""},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":"            createEntryHandler.handlePacket(packet);"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"            this.packet \u003d packet;"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"        } catch (Exception exception) {"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"            //Fall through"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"Artemis-Hunt"},"content":"        return createEntryHandler.getCurrEntry();"},{"lineNumber":131,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":10,"kaiwen98":122}},{"path":"src/test/java/seedu/financeit/datatrackers/goaltracker/EditGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dixoncwc"},"content":"package seedu.financeit.datatrackers.goaltracker;"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"dixoncwc"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":4,"author":{"gitId":"dixoncwc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":8,"author":{"gitId":"dixoncwc"},"content":"public class EditGoalTest {"},{"lineNumber":9,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":10,"author":{"gitId":"dixoncwc"},"content":"    public static String[] handleInput(String input) {"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":"        return InputParser.getInstance().parseGoalCommand(input.toLowerCase());"},{"lineNumber":13,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":15,"author":{"gitId":"dixoncwc"},"content":"    @BeforeEach"},{"lineNumber":16,"author":{"gitId":"dixoncwc"},"content":"    void setup() {"},{"lineNumber":17,"author":{"gitId":"dixoncwc"},"content":"        String[] goalCommand \u003d handleInput(\"expense 1000 for 08\");"},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":"        GoalTracker.setExpenseGoal(goalCommand);"},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":"    public static String[] handleEditInput(String input) {"},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"        return InputParser.getInstance().parseEditCommand(input.toLowerCase());"},{"lineNumber":24,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":26,"author":{"gitId":"dixoncwc"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"dixoncwc"},"content":"    void editExpenseGoalSuccessfully() {"},{"lineNumber":28,"author":{"gitId":"dixoncwc"},"content":"        String[] editCommand \u003d handleEditInput(\"edit expense 2000 for 08\");"},{"lineNumber":29,"author":{"gitId":"dixoncwc"},"content":"        GoalTracker.editGoal(editCommand);"},{"lineNumber":30,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"dixoncwc"},"content":"}"}],"authorContributionMap":{"dixoncwc":31}},{"path":"src/test/java/seedu/financeit/datatrackers/goaltracker/SetGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.goaltracker;"},{"lineNumber":2,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":3,"author":{"gitId":"dixoncwc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":5,"author":{"gitId":"dixoncwc"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":6,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":7,"author":{"gitId":"dixoncwc"},"content":"public class SetGoalTest {"},{"lineNumber":8,"author":{"gitId":"dixoncwc"},"content":"    public static String[] handleInput(String input) {"},{"lineNumber":9,"author":{"gitId":"dixoncwc"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"        return InputParser.getInstance().parseGoalCommand(input.toLowerCase());"},{"lineNumber":11,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":13,"author":{"gitId":"dixoncwc"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"dixoncwc"},"content":"    void setExpenseGoalSuccessfully() {"},{"lineNumber":15,"author":{"gitId":"dixoncwc"},"content":"        String[] command \u003d handleInput(\"expense 5000 for 08\");"},{"lineNumber":16,"author":{"gitId":"dixoncwc"},"content":"        GoalTracker.setExpenseGoal(command);"},{"lineNumber":17,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"dixoncwc"},"content":""},{"lineNumber":19,"author":{"gitId":"dixoncwc"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"dixoncwc"},"content":"    void setIncomeGoalSuccessfully() {"},{"lineNumber":21,"author":{"gitId":"dixoncwc"},"content":"        String[] command \u003d handleInput(\"income 2000 for 07\");"},{"lineNumber":22,"author":{"gitId":"dixoncwc"},"content":"        GoalTracker.setIncomeGoal(command);"},{"lineNumber":23,"author":{"gitId":"dixoncwc"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"dixoncwc"},"content":"}"}],"authorContributionMap":{"dixoncwc":22,"kaiwen98":2}},{"path":"src/test/java/seedu/financeit/datatrackers/manualtracker/ManualTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateCreateLedgerCorrectCommand;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateCreateLedgerErrorCommand;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateDeleteLedgerByDateCorrectCommand;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateDeleteLedgerByDateErrorCommand;"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateDeleteLedgerByIdCorrectCommand;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateDeleteLedgerByIdErrorCommand;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"public class ManualTrackerTest {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"    private static final int FREQUENCY_ERROR_ENTRY \u003d 3;"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    private static final int NUM_ENTRIES \u003d 20;"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    public void testManualTrackerByList() {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket;"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        int correctListNum \u003d 0;"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d NUM_ENTRIES; i++) {"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"            if (i % FREQUENCY_ERROR_ENTRY \u003d\u003d 0) {"},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateLedgerErrorCommand();"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"                System.out.print(\"error!: \");"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateLedgerCorrectCommand(i);"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"                correctListNum++;"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"            System.out.println(testPacket);"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.setTestPacket(testPacket);"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.handleCreateLedger();"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        System.out.println(ManualTracker.ledgerList.getListSize());"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(correctListNum, ManualTracker.ledgerList.getListSize());"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"    public void testManualTrackerByDelete() {"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket;"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d NUM_ENTRIES; i++) {"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d generateCreateLedgerCorrectCommand(i);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.setTestPacket(testPacket);"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.handleCreateLedger();"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"        int correctListNum \u003d NUM_ENTRIES;"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 1; i \u003c\u003d 4; i++) {"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"            switch (i) {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            case 1:"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteLedgerByDateCorrectCommand();"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"                correctListNum--;"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"            case 2:"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteLedgerByIdCorrectCommand();"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"                correctListNum--;"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"            case 3:"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteLedgerByIdErrorCommand();"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"                System.out.print(\"error!: \");"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateDeleteLedgerByDateErrorCommand();"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"                System.out.print(\"error!: \");"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"            System.out.println(testPacket);"},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.setTestPacket(testPacket);"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.handleDeleteLedger();"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"        System.out.println(ManualTracker.ledgerList.getListSize());"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(correctListNum, ManualTracker.ledgerList.getListSize());"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"    public void testManualTrackerByDuplicateLedgers() {"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket;"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c NUM_ENTRIES; i++) {"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            if (i % 2 \u003d\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateLedgerCorrectCommand(4);"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"                testPacket \u003d generateCreateLedgerCorrectCommand(3);"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.setTestPacket(testPacket);"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"            ManualTracker.handleCreateLedger();"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"            System.out.println(testPacket);"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(2, ManualTracker.ledgerList.getListSize());"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"        ManualTracker.ledgerList.removeAllItems();"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":5,"kaiwen98":94}},{"path":"src/test/java/seedu/financeit/datatrackers/manualtracker/TestCommands.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DATE;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INDEX;"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":" * Generates command packets to simulate various circumstances to put the software under test."},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"public class TestCommands {"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateCreateLedgerErrorCommand() {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"            \"new\","},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_DATE,"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"                    \"2020-25-4\""},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteLedgerByDateCorrectCommand() {"},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_DATE,"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"                    \"2020-5-5\""},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteLedgerByDateErrorCommand() {"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_DATE,"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"                    \"2020-5-400\""},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteLedgerByIdCorrectCommand() {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INDEX,"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"                    \"1\""},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateDeleteLedgerByIdErrorCommand() {"},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"            \"delete\","},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_INDEX,"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"                    \"100000000000000\""},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket generateCreateLedgerCorrectCommand(int seed) {"},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"            \"new\","},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"            new String[][] {"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"                {"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"                    PARAM_DATE,"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"                    (\"2020-\".concat(String.valueOf(1 + seed % 12) + \"-\" + String.valueOf(1 + seed % 31)))"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"        return testPacket;"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"}"},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"kaiwen98":91}},{"path":"src/test/java/seedu/financeit/datatrackers/manualtracker/TypicalLedgerEntries.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.manualtracker;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.manualtracker.ledgerhandlers.CreateLedgerHandler;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"import static seedu.financeit.datatrackers.manualtracker.TestCommands.generateCreateLedgerCorrectCommand;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"public class TypicalLedgerEntries {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    static CommandPacket packet;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"    static int seed;"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"    private static TypicalLedgerEntries typicalLedgerEntries \u003d null;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"    private TypicalLedgerEntries() {"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    public static TypicalLedgerEntries getInstance() {"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"        if (typicalLedgerEntries \u003d\u003d null) {"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":"            typicalLedgerEntries \u003d new TypicalLedgerEntries();"},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"        return typicalLedgerEntries;"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"    public Ledger generateTypicalLedgerFromSeed() {"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"        CreateLedgerHandler createLedgerHandler \u003d CreateLedgerHandler.getInstance();"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"            createLedgerHandler.handlePacket(packet);"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        } catch (Exception exception) {"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"            //Fall through"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        return createLedgerHandler.getCurrLedger();"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"    public Ledger generateTypicalLedger1() {"},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"        Ledger ledger \u003d new Ledger();"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"        LocalDate date \u003d LocalDate.parse(\"2020-05-05\");"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"        ledger.setDate(date);"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        this.packet \u003d packet;"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        return ledger;"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    public Ledger generateTypicalLedger2() {"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        Ledger ledger \u003d new Ledger();"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        LocalDate date \u003d LocalDate.parse(\"2020-06-06\");"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        ledger.setDate(date);"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"        this.packet \u003d packet;"},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"        return ledger;"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"    public void setSeed(int seed) {"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        this.seed \u003d seed;"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        this.packet \u003d generateCreateLedgerCorrectCommand(seed);"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":4,"kaiwen98":52}},{"path":"src/test/java/seedu/financeit/datatrackers/recurringtracker/RecurringTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.datatrackers.recurringtracker;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.Common;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.CreateEntryHandler;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.EditEntryHandler;"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.recurringhandlers.RetrieveEntryHandler;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"public class RecurringTrackerTest {"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    CommandPacket testPacket;"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":"    public static final int ENTRIES_TO_CREATE \u003d 15;"},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    final String[] sampleCompulsoryParams \u003d new String[] {\"-i or -e\", \"/desc\", \"/amt\", \"day\"};"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"    CreateEntryHandler createHandler \u003d CreateEntryHandler.getInstance();"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"    EditEntryHandler editHandler \u003d EditEntryHandler.getInstance();"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"    RetrieveEntryHandler retrieveHandler \u003d RetrieveEntryHandler.getInstance();"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"    public RecurringEntry createEntryHandler_validInput_validEntryCreated() {"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] validParamTypes \u003d new String[] {\"-e\", \"/desc\", \"/amt\", \"/day\", \"/notes\"};"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] validParamArguments \u003d new String[] {\"\", \"Test23123//\u003e?\u003e_+_~#$#@\","},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"            \"3490.34\", \"15\", \"OIYH(*^(*ot9w3848(*\u0026(*~~||///\"};"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        clearEntries();"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"        testPacket \u003d TestUtil.createCommandPacket(\"new\", validParamTypes, validParamArguments);"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            createHandler.handlePacket(testPacket);"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (Exception exception) {"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"            fail(\"Unexpected exception! \" + exception.getMessage());"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d createHandler.getEntry();"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        assertEquals(Common.EntryType.EXP, entry.entryType);"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validParamArguments[1], entry.description);"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validParamArguments[2], String.valueOf(entry.amount));"},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validParamArguments[3], String.valueOf(entry.day));"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validParamArguments[4], entry.notes);"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"        assertFalse(entry.isAuto);"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"        return entry;"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"    public void editEntryHandler_oneParamToEdit_entryEdited() {"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] validEditParamTypes \u003d new String[] {\"-e\", \"/desc\", \"/amt\", \"/day\", \"/notes\"};"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":"        String[] validEditParamArguments \u003d new String[] {\"\", \"NewDescription)*(\u0026)(908945\","},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"            \"1999.99\", \"27\", \"HP08709HN*^*D?:L[]``]/\u003c\u003e\"};"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        int i \u003d 0;"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d new RecurringEntry();"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        clearEntries();"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"        testPacket \u003d TestCommands.generateCreateCorrectEntryCommandAutoIncome();"},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"            createHandler.handlePacket(testPacket);"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d createHandler.getEntry();"},{"lineNumber":63,"author":{"gitId":"Artemis-Hunt"},"content":"            editHandler.setEntry(entry);"},{"lineNumber":64,"author":{"gitId":"Artemis-Hunt"},"content":"            for (i \u003d 0; i \u003c validEditParamTypes.length; i++) {"},{"lineNumber":65,"author":{"gitId":"Artemis-Hunt"},"content":"                testPacket \u003d TestUtil.createCommandPacket(\"edit\","},{"lineNumber":66,"author":{"gitId":"Artemis-Hunt"},"content":"                        new String[]{\"/id\", validEditParamTypes[i]},"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"                        new String[]{\"1\", validEditParamArguments[i]});"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"                editHandler.handlePacket(testPacket);"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"            entry \u003d editHandler.getEntry();"},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (Exception exception) {"},{"lineNumber":73,"author":{"gitId":"Artemis-Hunt"},"content":"            String oldValue \u003d (String) entry.getParamFromParamType(validEditParamTypes[i]);"},{"lineNumber":74,"author":{"gitId":"Artemis-Hunt"},"content":"            if (!oldValue.equals(validEditParamArguments[i])) {"},{"lineNumber":75,"author":{"gitId":"Artemis-Hunt"},"content":"                fail(\"Unexpected exception! \" + exception.getMessage());"},{"lineNumber":76,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(Common.EntryType.EXP, entry.entryType);"},{"lineNumber":79,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validEditParamArguments[1], entry.description);"},{"lineNumber":80,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validEditParamArguments[2], String.valueOf(entry.amount));"},{"lineNumber":81,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validEditParamArguments[3], String.valueOf(entry.day));"},{"lineNumber":82,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(validEditParamArguments[4], entry.notes);"},{"lineNumber":83,"author":{"gitId":"Artemis-Hunt"},"content":"        assertTrue(entry.isAuto);"},{"lineNumber":84,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":86,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"Artemis-Hunt"},"content":"    public void editEntryHandler_noParamToEdit_errorThrown() {"},{"lineNumber":88,"author":{"gitId":"Artemis-Hunt"},"content":"        clearEntries();"},{"lineNumber":89,"author":{"gitId":"Artemis-Hunt"},"content":"        EditEntryHandler editHandler \u003d EditEntryHandler.getInstance();"},{"lineNumber":90,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":91,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d createEntryHandler_validInput_validEntryCreated();"},{"lineNumber":92,"author":{"gitId":"Artemis-Hunt"},"content":"        editHandler.setEntry(entry);"},{"lineNumber":93,"author":{"gitId":"Artemis-Hunt"},"content":"        testPacket \u003d TestUtil.createCommandPacket(\"edit\", new String[]{\"/id\"}, new String[]{\"1\"});"},{"lineNumber":94,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"Artemis-Hunt"},"content":"            editHandler.handlePacket(testPacket);"},{"lineNumber":96,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (Exception exception) {"},{"lineNumber":97,"author":{"gitId":"Artemis-Hunt"},"content":"            assertEquals(\"At least 1 param required for edit!\", exception.getMessage());"},{"lineNumber":98,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":101,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":102,"author":{"gitId":"Artemis-Hunt"},"content":"    public void retrieveEntryHandler_validIndex_entryRetrieved() {"},{"lineNumber":103,"author":{"gitId":"Artemis-Hunt"},"content":"        clearEntries();"},{"lineNumber":104,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntryList entries \u003d new RecurringEntryList();"},{"lineNumber":105,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d createEntryHandler_validInput_validEntryCreated();"},{"lineNumber":106,"author":{"gitId":"Artemis-Hunt"},"content":"        entries.addItem(entry);"},{"lineNumber":107,"author":{"gitId":"Artemis-Hunt"},"content":"        testPacket \u003d TestUtil.createCommandPacket(\"edit\", new String[]{\"/id\"}, new String[]{\"1\"});"},{"lineNumber":108,"author":{"gitId":"Artemis-Hunt"},"content":"        try {"},{"lineNumber":109,"author":{"gitId":"Artemis-Hunt"},"content":"            retrieveHandler.handlePacket(testPacket, entries);"},{"lineNumber":110,"author":{"gitId":"Artemis-Hunt"},"content":"            entries.getItemAtCurrIndex();"},{"lineNumber":111,"author":{"gitId":"Artemis-Hunt"},"content":"        } catch (Exception exception) {"},{"lineNumber":112,"author":{"gitId":"Artemis-Hunt"},"content":"            assertEquals(\"At least 1 param required for edit!\", exception.getMessage());"},{"lineNumber":113,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":116,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleNewEntry_noMissingParams_entriesCreated() {"},{"lineNumber":118,"author":{"gitId":"Artemis-Hunt"},"content":"        clearEntries();"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c ENTRIES_TO_CREATE; i++) {"},{"lineNumber":120,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestCommands.generateCreateCorrectEntryCommandAutoIncome();"},{"lineNumber":121,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringTracker.handleNewEntry(testPacket);"},{"lineNumber":122,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(ENTRIES_TO_CREATE, RecurringTracker.getEntries().getListSize());"},{"lineNumber":124,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":126,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":127,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleNewEntry_missingParams_entryNotCreated() {"},{"lineNumber":128,"author":{"gitId":"Artemis-Hunt"},"content":"        CommandPacket[] packets \u003d TestCommands.generateCreateEntryMissingParamsCommands();"},{"lineNumber":129,"author":{"gitId":"Artemis-Hunt"},"content":"        //Do a for loop to vary which params are missing"},{"lineNumber":130,"author":{"gitId":"Artemis-Hunt"},"content":"        //Only loop 4 times, as there are 4 compulsory params"},{"lineNumber":131,"author":{"gitId":"Artemis-Hunt"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":133,"author":{"gitId":"Artemis-Hunt"},"content":"                testPacket \u003d packets[i];"},{"lineNumber":134,"author":{"gitId":"Artemis-Hunt"},"content":"                RecurringEntry entry \u003d RecurringTracker.handleNewEntry(testPacket);"},{"lineNumber":135,"author":{"gitId":"Artemis-Hunt"},"content":"                assertNull(entry);"},{"lineNumber":136,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (Exception exception) {"},{"lineNumber":137,"author":{"gitId":"Artemis-Hunt"},"content":"                String expectedErrorMessage \u003d \"The following params require valid input: \" + sampleCompulsoryParams[i];"},{"lineNumber":138,"author":{"gitId":"Artemis-Hunt"},"content":"                assertEquals(expectedErrorMessage, exception.getMessage());"},{"lineNumber":139,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":143,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":144,"author":{"gitId":"Artemis-Hunt"},"content":"    public void handleEditEntry_oneParamToEdit_entryEdited() {"},{"lineNumber":145,"author":{"gitId":"Artemis-Hunt"},"content":"        handleNewEntry_noMissingParams_entriesCreated();"},{"lineNumber":146,"author":{"gitId":"Artemis-Hunt"},"content":"        testPacket \u003d TestUtil.createCommandPacket(\"edit\","},{"lineNumber":147,"author":{"gitId":"Artemis-Hunt"},"content":"                new String[]{\"/id\", \"/desc\"},"},{"lineNumber":148,"author":{"gitId":"Artemis-Hunt"},"content":"                new String[]{\"5\", \"Edited description!!!!!!!\"});"},{"lineNumber":149,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringTracker.handleEditEntry(testPacket);"},{"lineNumber":150,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringEntry entry \u003d (RecurringEntry) RecurringTracker.getEntries().getItemAtIndex(4);"},{"lineNumber":151,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(\"Edited description!!!!!!!\", entry.description);"},{"lineNumber":152,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":154,"author":{"gitId":"Artemis-Hunt"},"content":"    public void clearEntries() {"},{"lineNumber":155,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringTracker.getEntries().removeAllItems();"},{"lineNumber":156,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":158,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":145,"kaiwen98":13}},{"path":"src/test/java/seedu/financeit/datatrackers/recurringtracker/TestCommands.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.datatrackers.recurringtracker;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.utils.RandomGenerator;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DAY;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_INC;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AUTO;"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"import static seedu.financeit.utils.ParamChecker.PARAM_NOTES;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"public class TestCommands {"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":"    static final String[] sampleValidParamTypes \u003d new String[] {\"-e\", \"/desc\", \"/amt\", \"/day\", \"/notes\"};"},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"    static final String[] sampleValidParamArguments \u003d new String[] {\"\", \"Test23123//\u003e?\u003e_+_~#$#@\","},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"        \"3490.34\", \"15\", \"OIYH(*^(*ot9w3848(*\u0026(*~~||///\"};"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CommandPacket[] generateCreateEntryMissingParamsCommands() {"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"        CommandPacket[] packets \u003d new CommandPacket[4];"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"        //Do a for loop to vary which params are missing"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        //Only loop 4 times, as there are 4 compulsory params"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"            String[] paramTypes \u003d sampleValidParamTypes.clone();"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"            String[] paramArguments \u003d sampleValidParamArguments.clone();"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"            paramTypes[i] \u003d \"missingParam\";"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"            paramArguments[i] \u003d \"missingArgument\";"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"            packets[i] \u003d TestUtil.createCommandPacket(\"new\", paramTypes, paramArguments);"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        return packets;"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CommandPacket generateCreateCorrectEntryCommandAutoIncome() {"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramDay \u003d String.valueOf(RandomGenerator.generateRandomDayOfMonth());"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramDescription \u003d RandomGenerator.generateRandomString();"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramAmt \u003d String.valueOf(RandomGenerator.generateRandomPositiveDouble());"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramNotes \u003d RandomGenerator.generateRandomString();"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"                \"new\","},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":"                new String[][] {"},{"lineNumber":43,"author":{"gitId":"bqxy"},"content":"                        { PARAM_INC, \"\" },"},{"lineNumber":44,"author":{"gitId":"bqxy"},"content":"                        { PARAM_AUTO, \"\" },"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"                        { PARAM_DAY, paramDay },"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"                        { PARAM_DESCRIPTION, paramDescription },"},{"lineNumber":47,"author":{"gitId":"bqxy"},"content":"                        { PARAM_AMOUNT, paramAmt },"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"                        { PARAM_NOTES, paramNotes }"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"        return testPacket;"},{"lineNumber":52,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":54,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CommandPacket generateCreateCorrectEntryCommandManualExpenditure() {"},{"lineNumber":55,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramDay \u003d String.valueOf(RandomGenerator.generateRandomPositiveIntUntilLimit(31));"},{"lineNumber":56,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramDescription \u003d RandomGenerator.generateRandomString();"},{"lineNumber":57,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramAmt \u003d String.valueOf(RandomGenerator.generateRandomPositiveDouble());"},{"lineNumber":58,"author":{"gitId":"Artemis-Hunt"},"content":"        String paramNotes \u003d RandomGenerator.generateRandomString();"},{"lineNumber":59,"author":{"gitId":"Artemis-Hunt"},"content":"        CommandPacket testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":60,"author":{"gitId":"Artemis-Hunt"},"content":"                \"new\","},{"lineNumber":61,"author":{"gitId":"Artemis-Hunt"},"content":"                new String[][] {"},{"lineNumber":62,"author":{"gitId":"Artemis-Hunt"},"content":"                        { PARAM_EXP, \"\" },"},{"lineNumber":63,"author":{"gitId":"bqxy"},"content":"                        { PARAM_DAY, paramDay },"},{"lineNumber":64,"author":{"gitId":"bqxy"},"content":"                        { PARAM_DESCRIPTION, paramDescription },"},{"lineNumber":65,"author":{"gitId":"bqxy"},"content":"                        { PARAM_AMOUNT, paramAmt },"},{"lineNumber":66,"author":{"gitId":"bqxy"},"content":"                        { PARAM_NOTES, paramNotes }"},{"lineNumber":67,"author":{"gitId":"Artemis-Hunt"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"Artemis-Hunt"},"content":"        return testPacket;"},{"lineNumber":70,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":72,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":59,"bqxy":13}},{"path":"src/test/java/seedu/financeit/financetools/CashbackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"public class CashbackTest {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"    public static CommandPacket handleInput(String input) {"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"        return InputParser.getInstance().parseInput(input.toLowerCase());"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    void calculateCashback_inputAmount_expectCorrectCashbackEarned() {"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cashb /a 1000 /r 5 /c 1000\");"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        Double cashbackEarned \u003d Handler.handleCashback(packet);"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"        assertEquals(50.0, cashbackEarned);"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"    void calculateCashback_inputAmountWithValidCap_expectCorrectCashbackEarned() {"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cashb /a 1000 /r 5 /c 10\");"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"        Double cashbackEarned \u003d Handler.handleCashback(packet);"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"        assertEquals(10.0, cashbackEarned);"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":31}},{"path":"src/test/java/seedu/financeit/financetools/MilesCreditTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"public class MilesCreditTest {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":"    public static CommandPacket handleInput(String input) {"},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"        return InputParser.getInstance().parseInput(input.toLowerCase());"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"    void calculateMilesCredit_inputAmount_expectCorrectMilesEarned() {"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"miles /a 1000 /r 5\");"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"        Double milesEarned \u003d Handler.handleMilesCredit(packet);"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        assertEquals(5000.0, milesEarned);"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":23}},{"path":"src/test/java/seedu/financeit/financetools/MonthlyCompoundInterestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"public class MonthlyCompoundInterestTest {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"    public static CommandPacket handleInput(String input) {"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"        return InputParser.getInstance().parseInput(input.toLowerCase());"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    void calculateCompoundInterest_inputAmount_expectCorrectInterestEarned() {"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cmonthly /a 1000 /r 3 /p 2\");"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        Double interestEarned \u003d Handler.handleMonthlyCompoundInterest(packet);"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"        assertEquals(5.01, interestEarned);"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"    void calculateCompoundInterest_inputAmountWithDeposit_expectCorrectInterestEarned() {"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cmonthly /a 1000 /r 3 /p 2 /d 100\");"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"        Double interestEarned \u003d Handler.handleMonthlyCompoundInterest(packet);"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"        assertEquals(5.76, interestEarned);"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":31}},{"path":"src/test/java/seedu/financeit/financetools/SimpleInterestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"public class SimpleInterestTest {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"    public static CommandPacket handleInput(String input) {"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"        return InputParser.getInstance().parseInput(input.toLowerCase());"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    void calculateSimpleInterest_inputAmount_expectCorrectInterestEarned() {"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"simple /a 1000 /r 5\");"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        Double interestEarned \u003d Handler.handleSimpleInterest(packet);"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"        assertEquals(50.0, interestEarned);"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":24}},{"path":"src/test/java/seedu/financeit/financetools/YearlyCompoundInterestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bqxy"},"content":"//@@author bqxy"},{"lineNumber":2,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":3,"author":{"gitId":"bqxy"},"content":"package seedu.financeit.financetools;"},{"lineNumber":4,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":5,"author":{"gitId":"bqxy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":8,"author":{"gitId":"bqxy"},"content":"import seedu.financeit.ui.UiManager;"},{"lineNumber":9,"author":{"gitId":"bqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":11,"author":{"gitId":"bqxy"},"content":"public class YearlyCompoundInterestTest {"},{"lineNumber":12,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":13,"author":{"gitId":"bqxy"},"content":"    public static CommandPacket handleInput(String input) {"},{"lineNumber":14,"author":{"gitId":"bqxy"},"content":"        UiManager.printInputPrompt();"},{"lineNumber":15,"author":{"gitId":"bqxy"},"content":"        return InputParser.getInstance().parseInput(input.toLowerCase());"},{"lineNumber":16,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":18,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"bqxy"},"content":"    void calculateCompoundInterest_inputAmount_expectCorrectInterestEarned() {"},{"lineNumber":20,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cyearly /a 1000 /r 3 /p 2\");"},{"lineNumber":21,"author":{"gitId":"bqxy"},"content":"        Double interestEarned \u003d Handler.handleYearlyCompoundInterest(packet);"},{"lineNumber":22,"author":{"gitId":"bqxy"},"content":"        assertEquals(60.9, interestEarned);"},{"lineNumber":23,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"bqxy"},"content":""},{"lineNumber":25,"author":{"gitId":"bqxy"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"bqxy"},"content":"    void calculateCompoundInterest_inputAmountWithDeposit_expectCorrectInterestEarned() {"},{"lineNumber":27,"author":{"gitId":"bqxy"},"content":"        CommandPacket packet \u003d handleInput(\"cyearly /a 1000 /r 3 /p 2 /d 1200\");"},{"lineNumber":28,"author":{"gitId":"bqxy"},"content":"        Double interestEarned \u003d Handler.handleYearlyCompoundInterest(packet);"},{"lineNumber":29,"author":{"gitId":"bqxy"},"content":"        assertEquals(169.98, interestEarned);"},{"lineNumber":30,"author":{"gitId":"bqxy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"bqxy"},"content":"}"}],"authorContributionMap":{"bqxy":31}},{"path":"src/test/java/seedu/financeit/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.testutil;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":" * Class that curates utility functions that assist the test methods throughout the test classes."},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"public class TestUtil {"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"    public static CommandPacket createCommandPacket(String commandString, String[][] paramInput) {"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"        HashMap\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"        if (paramInput !\u003d null) {"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"            for (String[] paramSet : paramInput) {"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"                paramMap.put(paramSet[0], paramSet[1]);"},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":"        return new CommandPacket(commandString, paramMap);"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"     * Creates a command packet. Assumes that paramTypes and paramArguments are of the same length."},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param commandString command to execute e.g. \"new\" or \"edit\""},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramTypes Array of param types e.g. [\"/desc\", \"/amt\"]"},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramArguments Array of param arguments associated with paramTypes"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"     * @return CommandPacket created"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"    public static CommandPacket createCommandPacket(String commandString,"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"                                                    String[] paramTypes, String[] paramArguments) {"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":"        HashMap\u003cString, String\u003e paramMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"        if (paramTypes !\u003d null) {"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"            for (int i \u003d 0; i \u003c paramTypes.length; i++) {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"                paramMap.put(paramTypes[i], paramArguments[i]);"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        return new CommandPacket(commandString, paramMap);"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":19,"kaiwen98":20}},{"path":"src/test/java/seedu/financeit/utils/ParamCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.common.exceptions.ParseFailParamException;"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import java.lang.reflect.Array;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":16,"author":{"gitId":"kaiwen98"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"kaiwen98"},"content":" * Test class to verify param checking capability of the ParamChecker class."},{"lineNumber":18,"author":{"gitId":"kaiwen98"},"content":" */"},{"lineNumber":19,"author":{"gitId":"kaiwen98"},"content":"public class ParamCheckerTest {"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":"    CommandPacket testPacket;"},{"lineNumber":21,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":22,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"kaiwen98"},"content":"    public void testDateCorrectParseWrongDate() {"},{"lineNumber":24,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/date\";"},{"lineNumber":25,"author":{"gitId":"kaiwen98"},"content":"        testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":26,"author":{"gitId":"kaiwen98"},"content":"            \"\","},{"lineNumber":27,"author":{"gitId":"kaiwen98"},"content":"            new String[][]{"},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"                new String[]{testParam, \"202020\"}"},{"lineNumber":29,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":31,"author":{"gitId":"kaiwen98"},"content":"        ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":32,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().checkAndReturnDate(testParam);"},{"lineNumber":34,"author":{"gitId":"kaiwen98"},"content":"            fail();"},{"lineNumber":35,"author":{"gitId":"kaiwen98"},"content":"        } catch (ParseFailParamException exception) {"},{"lineNumber":36,"author":{"gitId":"kaiwen98"},"content":"            assertEquals("},{"lineNumber":37,"author":{"gitId":"kaiwen98"},"content":"                \"Failed to parse the following param: \" + testParam,"},{"lineNumber":38,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage()"},{"lineNumber":39,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":40,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"kaiwen98"},"content":"        assertCorrectErrorMessage(ParamChecker.getInstance(), ParamChecker.getErrorMessageDateDateTimeException());"},{"lineNumber":42,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":44,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"kaiwen98"},"content":"    public void testTimeCorrectParseWrongTime() {"},{"lineNumber":46,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/time\";"},{"lineNumber":47,"author":{"gitId":"kaiwen98"},"content":"        testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            \"\","},{"lineNumber":49,"author":{"gitId":"kaiwen98"},"content":"            new String[][]{"},{"lineNumber":50,"author":{"gitId":"kaiwen98"},"content":"                new String[]{testParam, \"2500\"}"},{"lineNumber":51,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"kaiwen98"},"content":"        ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":54,"author":{"gitId":"kaiwen98"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().checkAndReturnTime(testParam);"},{"lineNumber":56,"author":{"gitId":"kaiwen98"},"content":"            fail();"},{"lineNumber":57,"author":{"gitId":"kaiwen98"},"content":"        } catch (ParseFailParamException exception) {"},{"lineNumber":58,"author":{"gitId":"kaiwen98"},"content":"            assertEquals("},{"lineNumber":59,"author":{"gitId":"kaiwen98"},"content":"                \"Failed to parse the following param: \" + testParam,"},{"lineNumber":60,"author":{"gitId":"kaiwen98"},"content":"                exception.getMessage()"},{"lineNumber":61,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":62,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"kaiwen98"},"content":"        assertCorrectErrorMessage(ParamChecker.getInstance(), ParamChecker.getErrorMessageTimeDateTimeException());"},{"lineNumber":64,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":66,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"kaiwen98"},"content":"    public void testTimeWrongParse() {"},{"lineNumber":68,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/time\";"},{"lineNumber":69,"author":{"gitId":"kaiwen98"},"content":"        String[] errorInput \u003d {"},{"lineNumber":70,"author":{"gitId":"kaiwen98"},"content":"            \"abcd\","},{"lineNumber":71,"author":{"gitId":"kaiwen98"},"content":"            \".,/-\u003d\","},{"lineNumber":72,"author":{"gitId":"kaiwen98"},"content":"            \"this is a test\","},{"lineNumber":73,"author":{"gitId":"kaiwen98"},"content":"            \"d d d d d \","},{"lineNumber":74,"author":{"gitId":"kaiwen98"},"content":"            \"sdffds\","},{"lineNumber":75,"author":{"gitId":"kaiwen98"},"content":"        };"},{"lineNumber":76,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":77,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c errorInput.length; i++) {"},{"lineNumber":78,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":79,"author":{"gitId":"kaiwen98"},"content":"                \"\","},{"lineNumber":80,"author":{"gitId":"kaiwen98"},"content":"                new String[][]{"},{"lineNumber":81,"author":{"gitId":"kaiwen98"},"content":"                    new String[]{testParam, errorInput[i]}"},{"lineNumber":82,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":84,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":85,"author":{"gitId":"kaiwen98"},"content":"            try {"},{"lineNumber":86,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance().checkAndReturnTime(testParam);"},{"lineNumber":87,"author":{"gitId":"kaiwen98"},"content":"                fail();"},{"lineNumber":88,"author":{"gitId":"kaiwen98"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":89,"author":{"gitId":"kaiwen98"},"content":"                System.out.println(errorInput[i]);"},{"lineNumber":90,"author":{"gitId":"kaiwen98"},"content":"                assertEquals("},{"lineNumber":91,"author":{"gitId":"kaiwen98"},"content":"                    \"Failed to parse the following param: \" + testParam,"},{"lineNumber":92,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage()"},{"lineNumber":93,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":94,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"kaiwen98"},"content":"            assertCorrectErrorMessage(ParamChecker.getInstance(), ParamChecker.getErrorMessageTimeInvalidFormat());"},{"lineNumber":96,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":99,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"kaiwen98"},"content":"    public void testDateWrongParse() {"},{"lineNumber":101,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/date\";"},{"lineNumber":102,"author":{"gitId":"kaiwen98"},"content":"        String[] errorInput \u003d {"},{"lineNumber":103,"author":{"gitId":"kaiwen98"},"content":"            \"abcd\","},{"lineNumber":104,"author":{"gitId":"kaiwen98"},"content":"            \".,/-\u003d\","},{"lineNumber":105,"author":{"gitId":"kaiwen98"},"content":"            \"this is a test\","},{"lineNumber":106,"author":{"gitId":"kaiwen98"},"content":"            \"d d d d d \","},{"lineNumber":107,"author":{"gitId":"kaiwen98"},"content":"            \"sdffds\""},{"lineNumber":108,"author":{"gitId":"kaiwen98"},"content":"        };"},{"lineNumber":109,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":110,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c errorInput.length; i++) {"},{"lineNumber":111,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":112,"author":{"gitId":"kaiwen98"},"content":"                \"\","},{"lineNumber":113,"author":{"gitId":"kaiwen98"},"content":"                new String[][]{"},{"lineNumber":114,"author":{"gitId":"kaiwen98"},"content":"                    new String[]{testParam, errorInput[i]}"},{"lineNumber":115,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":117,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":118,"author":{"gitId":"kaiwen98"},"content":"            try {"},{"lineNumber":119,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance().checkAndReturnDate(testParam);"},{"lineNumber":120,"author":{"gitId":"kaiwen98"},"content":"                fail();"},{"lineNumber":121,"author":{"gitId":"kaiwen98"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":122,"author":{"gitId":"kaiwen98"},"content":"                assertEquals("},{"lineNumber":123,"author":{"gitId":"kaiwen98"},"content":"                    \"Failed to parse the following param: \" + testParam,"},{"lineNumber":124,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage()"},{"lineNumber":125,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":126,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"kaiwen98"},"content":"            assertCorrectErrorMessage(ParamChecker.getInstance(), ParamChecker.getErrorMessageDateInvalidFormat());"},{"lineNumber":128,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":131,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":132,"author":{"gitId":"Artemis-Hunt"},"content":"    public void testInvalidDayOfMonth() {"},{"lineNumber":133,"author":{"gitId":"Artemis-Hunt"},"content":"        String testParam \u003d \"/day\";"},{"lineNumber":134,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e invalidIntegersAsStrings \u003d new ArrayList\u003c\u003e("},{"lineNumber":135,"author":{"gitId":"Artemis-Hunt"},"content":"                List.of(\"-1\", \"0\", \"32\", String.valueOf(Integer.MAX_VALUE))"},{"lineNumber":136,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":137,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String invalidIntegerAsString: invalidIntegersAsStrings) {"},{"lineNumber":138,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":139,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"\","},{"lineNumber":140,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[][]{{testParam, invalidIntegerAsString}}"},{"lineNumber":141,"author":{"gitId":"Artemis-Hunt"},"content":"            );"},{"lineNumber":142,"author":{"gitId":"Artemis-Hunt"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":143,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":144,"author":{"gitId":"Artemis-Hunt"},"content":"                ParamChecker.getInstance().checkAndReturnDayOfMonth(testParam);"},{"lineNumber":145,"author":{"gitId":"Artemis-Hunt"},"content":"                fail(\"Input that did not throw error when it was supposed to: \" + invalidIntegerAsString);"},{"lineNumber":146,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":147,"author":{"gitId":"Artemis-Hunt"},"content":"                //Error message generated inside ParamChecker"},{"lineNumber":148,"author":{"gitId":"Artemis-Hunt"},"content":"                assertCorrectErrorMessage(ParamChecker.getInstance(),"},{"lineNumber":149,"author":{"gitId":"Artemis-Hunt"},"content":"                        ParamChecker.getErrorMessageDayOfMonthOutOfBounds());"},{"lineNumber":150,"author":{"gitId":"Artemis-Hunt"},"content":"                //Error thrown by ParamChecker, printed outside of ParamChecker"},{"lineNumber":151,"author":{"gitId":"Artemis-Hunt"},"content":"                assertEquals(\"Failed to parse the following param: \" + testParam,"},{"lineNumber":152,"author":{"gitId":"Artemis-Hunt"},"content":"                        exception.getMessage());"},{"lineNumber":153,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":157,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":158,"author":{"gitId":"Artemis-Hunt"},"content":"    public void testValidDayOfMonth() {"},{"lineNumber":159,"author":{"gitId":"Artemis-Hunt"},"content":"        String testParam \u003d \"/day\";"},{"lineNumber":160,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e validDayOfMonthAsStrings \u003d new ArrayList\u003c\u003e("},{"lineNumber":161,"author":{"gitId":"Artemis-Hunt"},"content":"                List.of(\"1\", \"29\", \"31\")"},{"lineNumber":162,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":163,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String validDayOfMonthAsString: validDayOfMonthAsStrings) {"},{"lineNumber":164,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":165,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"\","},{"lineNumber":166,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[][]{"},{"lineNumber":167,"author":{"gitId":"Artemis-Hunt"},"content":"                            {testParam, validDayOfMonthAsString}"},{"lineNumber":168,"author":{"gitId":"Artemis-Hunt"},"content":"                    }"},{"lineNumber":169,"author":{"gitId":"Artemis-Hunt"},"content":"            );"},{"lineNumber":170,"author":{"gitId":"Artemis-Hunt"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":171,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":172,"author":{"gitId":"Artemis-Hunt"},"content":"                int dayOfMonth \u003d ParamChecker.getInstance().checkAndReturnDayOfMonth(testParam);"},{"lineNumber":173,"author":{"gitId":"Artemis-Hunt"},"content":"                assertEquals(validDayOfMonthAsString, String.valueOf(dayOfMonth));"},{"lineNumber":174,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (Exception exception) {"},{"lineNumber":175,"author":{"gitId":"Artemis-Hunt"},"content":"                fail(\"Exception occurred when there shouldn\u0027t be! \" + exception.getMessage());"},{"lineNumber":176,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":180,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":181,"author":{"gitId":"kaiwen98"},"content":"    public void testIndexOutOfBoundsList() {"},{"lineNumber":182,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/id\";"},{"lineNumber":183,"author":{"gitId":"kaiwen98"},"content":"        String[] errorInput \u003d {"},{"lineNumber":184,"author":{"gitId":"kaiwen98"},"content":"            \"-1\","},{"lineNumber":185,"author":{"gitId":"kaiwen98"},"content":"            \"23\","},{"lineNumber":186,"author":{"gitId":"kaiwen98"},"content":"        };"},{"lineNumber":187,"author":{"gitId":"kaiwen98"},"content":"        ArrayList testList \u003d new ArrayList(Arrays.asList(errorInput));"},{"lineNumber":188,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":189,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c errorInput.length; i++) {"},{"lineNumber":190,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":191,"author":{"gitId":"kaiwen98"},"content":"                \"\","},{"lineNumber":192,"author":{"gitId":"kaiwen98"},"content":"                new String[][]{"},{"lineNumber":193,"author":{"gitId":"kaiwen98"},"content":"                    new String[]{testParam, errorInput[i]}"},{"lineNumber":194,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":195,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":196,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":197,"author":{"gitId":"kaiwen98"},"content":"            try {"},{"lineNumber":198,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance().checkAndReturnIndex(testParam, testList);"},{"lineNumber":199,"author":{"gitId":"kaiwen98"},"content":"                fail();"},{"lineNumber":200,"author":{"gitId":"kaiwen98"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":201,"author":{"gitId":"kaiwen98"},"content":"                assertEquals("},{"lineNumber":202,"author":{"gitId":"kaiwen98"},"content":"                    \"Failed to parse the following param: \" + testParam,"},{"lineNumber":203,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage()"},{"lineNumber":204,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":205,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"kaiwen98"},"content":"            int index \u003d Integer.parseInt(errorInput[i]);"},{"lineNumber":207,"author":{"gitId":"kaiwen98"},"content":"            assertCorrectErrorMessage("},{"lineNumber":208,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance(),"},{"lineNumber":209,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getErrorMessageListIndexOutOfBounds("},{"lineNumber":210,"author":{"gitId":"kaiwen98"},"content":"                    ParamChecker.getMessageListRangeIndex(testList.size())));"},{"lineNumber":211,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":214,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":215,"author":{"gitId":"kaiwen98"},"content":"    public void testDuplicateEntryTypes() {"},{"lineNumber":216,"author":{"gitId":"kaiwen98"},"content":"        String testParam \u003d \"/id\";"},{"lineNumber":217,"author":{"gitId":"kaiwen98"},"content":"        String[] errorInput \u003d {"},{"lineNumber":218,"author":{"gitId":"kaiwen98"},"content":"            \"1\","},{"lineNumber":219,"author":{"gitId":"kaiwen98"},"content":"            \"2\","},{"lineNumber":220,"author":{"gitId":"kaiwen98"},"content":"        };"},{"lineNumber":221,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":222,"author":{"gitId":"kaiwen98"},"content":"        for (int i \u003d 0; i \u003c errorInput.length; i++) {"},{"lineNumber":223,"author":{"gitId":"kaiwen98"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":224,"author":{"gitId":"kaiwen98"},"content":"                \"\","},{"lineNumber":225,"author":{"gitId":"kaiwen98"},"content":"                new String[][]{"},{"lineNumber":226,"author":{"gitId":"kaiwen98"},"content":"                    new String[]{testParam, errorInput[i]},"},{"lineNumber":227,"author":{"gitId":"kaiwen98"},"content":"                    // Second input to testParam \"/id\""},{"lineNumber":228,"author":{"gitId":"kaiwen98"},"content":"                    new String[]{testParam, errorInput[i] + 2}"},{"lineNumber":229,"author":{"gitId":"kaiwen98"},"content":"                }"},{"lineNumber":230,"author":{"gitId":"kaiwen98"},"content":"            );"},{"lineNumber":231,"author":{"gitId":"kaiwen98"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":232,"author":{"gitId":"kaiwen98"},"content":"            try {"},{"lineNumber":233,"author":{"gitId":"Artemis-Hunt"},"content":"                ParamChecker.getInstance().checkForDuplicateParamTypes(testParam, testPacket.getParamMap());"},{"lineNumber":234,"author":{"gitId":"kaiwen98"},"content":"                fail();"},{"lineNumber":235,"author":{"gitId":"kaiwen98"},"content":"            } catch (ParseFailParamException exception) {"},{"lineNumber":236,"author":{"gitId":"kaiwen98"},"content":"                assertEquals("},{"lineNumber":237,"author":{"gitId":"kaiwen98"},"content":"                    \"Failed to parse the following param: \" + testParam,"},{"lineNumber":238,"author":{"gitId":"kaiwen98"},"content":"                    exception.getMessage()"},{"lineNumber":239,"author":{"gitId":"kaiwen98"},"content":"                );"},{"lineNumber":240,"author":{"gitId":"kaiwen98"},"content":"            }"},{"lineNumber":241,"author":{"gitId":"kaiwen98"},"content":"            assertCorrectErrorMessage("},{"lineNumber":242,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getInstance(),"},{"lineNumber":243,"author":{"gitId":"kaiwen98"},"content":"                ParamChecker.getMessageMultipleParamToParamType(testParam, testPacket.getParamMap()));"},{"lineNumber":244,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":247,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":248,"author":{"gitId":"Artemis-Hunt"},"content":"    public void testValidInteger() {"},{"lineNumber":249,"author":{"gitId":"Artemis-Hunt"},"content":"        String testParam \u003d \"/test\";"},{"lineNumber":250,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e validIntegersAsStrings \u003d new ArrayList\u003c\u003e("},{"lineNumber":251,"author":{"gitId":"Artemis-Hunt"},"content":"                List.of(String.valueOf(Integer.MIN_VALUE), \"-1\", \"0\", \"1\", String.valueOf(Integer.MAX_VALUE))"},{"lineNumber":252,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":253,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":254,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String validIntegerAsString: validIntegersAsStrings) {"},{"lineNumber":255,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":256,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"\","},{"lineNumber":257,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[][]{"},{"lineNumber":258,"author":{"gitId":"Artemis-Hunt"},"content":"                            {testParam, validIntegerAsString},"},{"lineNumber":259,"author":{"gitId":"Artemis-Hunt"},"content":"                    }"},{"lineNumber":260,"author":{"gitId":"Artemis-Hunt"},"content":"            );"},{"lineNumber":261,"author":{"gitId":"Artemis-Hunt"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":262,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":263,"author":{"gitId":"Artemis-Hunt"},"content":"                int intChecked \u003d ParamChecker.getInstance().checkAndReturnInt(testParam);"},{"lineNumber":264,"author":{"gitId":"Artemis-Hunt"},"content":"                assertEquals(validIntegerAsString, String.valueOf(intChecked));"},{"lineNumber":265,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (Exception exception) {"},{"lineNumber":266,"author":{"gitId":"Artemis-Hunt"},"content":"                fail(\"Exception occurred when there shouldn\u0027t be! \" + exception.getMessage());"},{"lineNumber":267,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":268,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":271,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":272,"author":{"gitId":"Artemis-Hunt"},"content":"    public void testInvalidInteger() {"},{"lineNumber":273,"author":{"gitId":"Artemis-Hunt"},"content":"        String testParam \u003d \"/test\";"},{"lineNumber":274,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cString\u003e invalidInputsAsStrings \u003d new ArrayList\u003c\u003e("},{"lineNumber":275,"author":{"gitId":"Artemis-Hunt"},"content":"                List.of(\"435.23\", \"4e5\", \"(*^_)+_+()(\", \"\", \"  \","},{"lineNumber":276,"author":{"gitId":"Artemis-Hunt"},"content":"                        \"456468456594876549867459\", \"-9823749238742983479842\")"},{"lineNumber":277,"author":{"gitId":"Artemis-Hunt"},"content":"        );"},{"lineNumber":278,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":279,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":280,"author":{"gitId":"Artemis-Hunt"},"content":"        for (String invalidInput : invalidInputsAsStrings) {"},{"lineNumber":281,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestUtil.createCommandPacket("},{"lineNumber":282,"author":{"gitId":"Artemis-Hunt"},"content":"                    \"\","},{"lineNumber":283,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[][]{"},{"lineNumber":284,"author":{"gitId":"Artemis-Hunt"},"content":"                            {testParam, invalidInput},"},{"lineNumber":285,"author":{"gitId":"Artemis-Hunt"},"content":"                    }"},{"lineNumber":286,"author":{"gitId":"Artemis-Hunt"},"content":"            );"},{"lineNumber":287,"author":{"gitId":"Artemis-Hunt"},"content":"            ParamChecker.getInstance().setPacket(testPacket);"},{"lineNumber":288,"author":{"gitId":"Artemis-Hunt"},"content":"            try {"},{"lineNumber":289,"author":{"gitId":"Artemis-Hunt"},"content":"                int intChecked \u003d ParamChecker.getInstance().checkAndReturnInt(testParam);"},{"lineNumber":290,"author":{"gitId":"Artemis-Hunt"},"content":"                fail(\"Input that did not throw error when it was supposed to: \" + invalidInput);"},{"lineNumber":291,"author":{"gitId":"Artemis-Hunt"},"content":"            } catch (Exception exception) {"},{"lineNumber":292,"author":{"gitId":"Artemis-Hunt"},"content":"                //Error message generated inside ParamChecker"},{"lineNumber":293,"author":{"gitId":"Artemis-Hunt"},"content":"                assertCorrectErrorMessage(ParamChecker.getInstance(),"},{"lineNumber":294,"author":{"gitId":"Artemis-Hunt"},"content":"                        ParamChecker.getErrorMessageNumberFormatException(invalidInput, \"\"));"},{"lineNumber":295,"author":{"gitId":"Artemis-Hunt"},"content":"                //Error thrown by ParamChecker, printed outside of ParamChecker"},{"lineNumber":296,"author":{"gitId":"Artemis-Hunt"},"content":"                assertEquals(\"Failed to parse the following param: \" + testParam,"},{"lineNumber":297,"author":{"gitId":"Artemis-Hunt"},"content":"                        exception.getMessage());"},{"lineNumber":298,"author":{"gitId":"Artemis-Hunt"},"content":"            }"},{"lineNumber":299,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":302,"author":{"gitId":"Artemis-Hunt"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"Artemis-Hunt"},"content":"     * Asserts that the correct error message has been set."},{"lineNumber":304,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param paramChecker Actual ParamChecker instance used for testing, after checking some value"},{"lineNumber":305,"author":{"gitId":"Artemis-Hunt"},"content":"     * @param expectedErrorMessage Expected error message"},{"lineNumber":306,"author":{"gitId":"Artemis-Hunt"},"content":"     */"},{"lineNumber":307,"author":{"gitId":"kaiwen98"},"content":"    public void assertCorrectErrorMessage(ParamChecker paramChecker, String expectedErrorMessage) {"},{"lineNumber":308,"author":{"gitId":"kaiwen98"},"content":"        assertEquals("},{"lineNumber":309,"author":{"gitId":"Artemis-Hunt"},"content":"            expectedErrorMessage,"},{"lineNumber":310,"author":{"gitId":"Artemis-Hunt"},"content":"            paramChecker.getErrorMessage()"},{"lineNumber":311,"author":{"gitId":"kaiwen98"},"content":"        );"},{"lineNumber":312,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":114,"kaiwen98":199}},{"path":"src/test/java/seedu/financeit/utils/RandomGenerator.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.Random;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"public class RandomGenerator {"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    //@@author Artemis-Hunt-reused"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    //Reused from https://www.baeldung.com/java-random-string with minor additions"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final int MAX_LEN \u003d 50;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Generates a random string of MAX_LEN 50."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Does not contain \";\" character in the"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * set of possible characters generated."},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return Random string containing alphanumeric characters"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *         and some special characters."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static String generateRandomString() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        int lengthOfStringGenerated \u003d (int) (Math.random() * MAX_LEN) / 2;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        int[] leftLimit \u003d new int[] {60, 32};"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        int[] rightLimit \u003d new int[] {126, 58};"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Random random \u003d new Random();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        StringBuilder buffer \u003d new StringBuilder(lengthOfStringGenerated);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c lengthOfStringGenerated; j++) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                int randomLimitedInt \u003d leftLimit[i] + (int)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        (random.nextFloat() * (rightLimit[i] - leftLimit[i] + 1));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                buffer.append((char) randomLimitedInt);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String generatedString \u003d buffer.toString();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return generatedString;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static double generateRandomPositiveDouble() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        int firstDigit \u003d (int) (Math.random() * 10);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        int multiplier \u003d (int) Math.pow(100, firstDigit % 3);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Math.random() * multiplier;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static int generateRandomPositiveIntUntilLimit(int limit) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return (int) (Math.random() * limit);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static int generateRandomDayOfMonth() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        int dayOfMonth \u003d generateRandomPositiveIntUntilLimit(31);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        while (dayOfMonth \u003d\u003d 0) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            dayOfMonth \u003d generateRandomPositiveIntUntilLimit(31);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return dayOfMonth;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":50,"Artemis-Hunt":6}},{"path":"src/test/java/seedu/financeit/utils/ReminderGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Artemis-Hunt"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":3,"author":{"gitId":"Artemis-Hunt"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":5,"author":{"gitId":"Artemis-Hunt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":7,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringEntry;"},{"lineNumber":8,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTracker;"},{"lineNumber":9,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.datatrackers.recurringtracker.RecurringTrackerTest;"},{"lineNumber":10,"author":{"gitId":"Artemis-Hunt"},"content":"import seedu.financeit.testutil.TestUtil;"},{"lineNumber":11,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":12,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":14,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":15,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":16,"author":{"gitId":"Artemis-Hunt"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":17,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":18,"author":{"gitId":"Artemis-Hunt"},"content":"public class ReminderGeneratorTest {"},{"lineNumber":19,"author":{"gitId":"Artemis-Hunt"},"content":"    CommandPacket testPacket;"},{"lineNumber":20,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":21,"author":{"gitId":"Artemis-Hunt"},"content":"    void createEntriesFromDay1To15() {"},{"lineNumber":22,"author":{"gitId":"Artemis-Hunt"},"content":"        RecurringTrackerTest test \u003d new RecurringTrackerTest();"},{"lineNumber":23,"author":{"gitId":"Artemis-Hunt"},"content":"        test.handleNewEntry_noMissingParams_entriesCreated();"},{"lineNumber":24,"author":{"gitId":"Artemis-Hunt"},"content":"        for (int i \u003d 1; i \u003c\u003d test.ENTRIES_TO_CREATE; i++) {"},{"lineNumber":25,"author":{"gitId":"Artemis-Hunt"},"content":"            testPacket \u003d TestUtil.createCommandPacket(\"edit\","},{"lineNumber":26,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[]{\"/id\", \"/day\"},"},{"lineNumber":27,"author":{"gitId":"Artemis-Hunt"},"content":"                    new String[]{String.valueOf(i), String.valueOf(i)});"},{"lineNumber":28,"author":{"gitId":"Artemis-Hunt"},"content":"            RecurringTracker.handleEditEntry(testPacket);"},{"lineNumber":29,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":32,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"Artemis-Hunt"},"content":"    public void filterEntriesToRemind_positiveTestOne_correctEntriesReturned() {"},{"lineNumber":34,"author":{"gitId":"Artemis-Hunt"},"content":"        final int numEntriesToRemind \u003d 4;"},{"lineNumber":35,"author":{"gitId":"Artemis-Hunt"},"content":"        createEntriesFromDay1To15();"},{"lineNumber":36,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cRecurringEntry\u003e entriesToRemind \u003d ReminderGenerator.filterEntriesToRemind(29, 30, 4, true);"},{"lineNumber":37,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(numEntriesToRemind, entriesToRemind.size());"},{"lineNumber":38,"author":{"gitId":"Artemis-Hunt"},"content":"        for (int i \u003d 0; i \u003c numEntriesToRemind; i++) {"},{"lineNumber":39,"author":{"gitId":"Artemis-Hunt"},"content":"            assertEquals(i + 1, entriesToRemind.get(i).getDay());"},{"lineNumber":40,"author":{"gitId":"Artemis-Hunt"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":43,"author":{"gitId":"Artemis-Hunt"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"Artemis-Hunt"},"content":"    public void filterEntriesToRemind_positiveTestTwo_correctEntriesReturned() {"},{"lineNumber":45,"author":{"gitId":"Artemis-Hunt"},"content":"        final int numEntriesToRemind \u003d 0;"},{"lineNumber":46,"author":{"gitId":"Artemis-Hunt"},"content":"        createEntriesFromDay1To15();"},{"lineNumber":47,"author":{"gitId":"Artemis-Hunt"},"content":"        ArrayList\u003cRecurringEntry\u003e entriesToRemind \u003d ReminderGenerator.filterEntriesToRemind(17, 30, 22, false);"},{"lineNumber":48,"author":{"gitId":"Artemis-Hunt"},"content":"        assertEquals(numEntriesToRemind, entriesToRemind.size());"},{"lineNumber":49,"author":{"gitId":"Artemis-Hunt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Artemis-Hunt"},"content":""},{"lineNumber":51,"author":{"gitId":"Artemis-Hunt"},"content":"}"}],"authorContributionMap":{"Artemis-Hunt":51}},{"path":"src/test/java/seedu/financeit/utils/TestInputGenerator.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"package seedu.financeit.utils;"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"public class TestInputGenerator {"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"    public static final String MANUAL_TRACKER_COMMAND_STRING_PREFIX \u003d \"ledger\";"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"    public static final String ENTRY_TRACKER_COMMAND_STRING \u003d \"entry\";"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":""},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"    public static String generateCommand(String commandStringPrefix, String commandType, String[][] params) {"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"        String output \u003d commandStringPrefix + \" \" + commandType;"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"        for (String[] param : params) {"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"            output +\u003d \" \" + param[0] + \" \";"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"            output +\u003d \" \" + param[1] + \" \";"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"        return output;"},{"lineNumber":14,"author":{"gitId":"kaiwen98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"}"}],"authorContributionMap":{"kaiwen98":15}},{"path":"src/test/java/seedu/financeit/utils/storage/SaveManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Feudalord"},"content":"package seedu.financeit.utils.storage;"},{"lineNumber":2,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.common.CommandPacket;"},{"lineNumber":5,"author":{"gitId":"Feudalord"},"content":"import seedu.financeit.parser.InputParser;"},{"lineNumber":6,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":7,"author":{"gitId":"Feudalord"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"Feudalord"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"Feudalord"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"Feudalord"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"Feudalord"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":13,"author":{"gitId":"Feudalord"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":14,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":15,"author":{"gitId":"Feudalord"},"content":"public class SaveManagerTest {"},{"lineNumber":16,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":17,"author":{"gitId":"Feudalord"},"content":"    private static boolean isEqual(Path firstFile, Path secondFile) {"},{"lineNumber":18,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Feudalord"},"content":"            List\u003cString\u003e first \u003d Files.readAllLines(firstFile);"},{"lineNumber":20,"author":{"gitId":"Feudalord"},"content":"            List\u003cString\u003e second \u003d Files.readAllLines(secondFile);"},{"lineNumber":21,"author":{"gitId":"Feudalord"},"content":"            return first.equals(second);"},{"lineNumber":22,"author":{"gitId":"Feudalord"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"Feudalord"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Feudalord"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":28,"author":{"gitId":"kaiwen98"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Feudalord"},"content":"    public void loadSaveTest() {"},{"lineNumber":30,"author":{"gitId":"Feudalord"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Feudalord"},"content":"            SaveManager.clear();"},{"lineNumber":32,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":33,"author":{"gitId":"Feudalord"},"content":"            GoalTrackerSaver.getInstance().load(\"./data/tests\", \"./data/tests/JunitTestCase_gt.txt\");"},{"lineNumber":34,"author":{"gitId":"Feudalord"},"content":"            RecurringTrackerSaver.getInstance().load(\"./data/tests\", \"./data/tests/JunitTestCase_at.txt\");"},{"lineNumber":35,"author":{"gitId":"Feudalord"},"content":"            ManualTrackerSaver.getInstance().load(\"./data/tests\", \"./data/tests/JunitTestCase_mt.txt\");"},{"lineNumber":36,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":37,"author":{"gitId":"Feudalord"},"content":"            InputParser parser \u003d InputParser.getInstance();"},{"lineNumber":38,"author":{"gitId":"Feudalord"},"content":"            CommandPacket packet \u003d parser.parseInput(\"add /name testcase2149855246427094876\");"},{"lineNumber":39,"author":{"gitId":"Feudalord"},"content":"            SaveManager.addSave(packet);"},{"lineNumber":40,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":41,"author":{"gitId":"Feudalord"},"content":"            String path \u003d SaveManager.dirPath + \"/testcase2149855246427094876\";"},{"lineNumber":42,"author":{"gitId":"Feudalord"},"content":"            assertTrue(isEqual(Paths.get(path + \"_gt.txt\"), Paths.get(\"./data/tests/JunitTestCase_gt.txt\")));"},{"lineNumber":43,"author":{"gitId":"Feudalord"},"content":"            assertTrue(isEqual(Paths.get(path + \"_mt.txt\"), Paths.get(\"./data/tests/JunitTestCase_mt.txt\")));"},{"lineNumber":44,"author":{"gitId":"Feudalord"},"content":"            assertTrue(isEqual(Paths.get(path + \"_at.txt\"), Paths.get(\"./data/tests/JunitTestCase_at.txt\")));"},{"lineNumber":45,"author":{"gitId":"Feudalord"},"content":""},{"lineNumber":46,"author":{"gitId":"Feudalord"},"content":"            SaveManager.deleteSave(packet);"},{"lineNumber":47,"author":{"gitId":"Feudalord"},"content":"            SaveManager.clear();"},{"lineNumber":48,"author":{"gitId":"kaiwen98"},"content":"            SaveManager.resetAllLists();"},{"lineNumber":49,"author":{"gitId":"Feudalord"},"content":"        } catch (Exception e) {"},{"lineNumber":50,"author":{"gitId":"Feudalord"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"Feudalord"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Feudalord"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Feudalord"},"content":"}"}],"authorContributionMap":{"Feudalord":50,"kaiwen98":3}},{"path":"text-ui-test/input.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"manual"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":"ledger new /date 200404 /date 190505"},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"ledger new /date 200404"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"ledger list"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"ledger open /date 200404"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"entry new /amt 600 /time 1500 -e /desc Lunch with friends in the middle of the ocean on the peak of the sky pillar  sdsadsadsadsadsadsadsadsadsdsadsadsadsadsadsadsadsa /cat fd -auto"},{"lineNumber":7,"author":{"gitId":"kaiwen98"},"content":"entry new /amt 400 /time 1600 -e /desc Bought ten chilli \u003eand five bell peppers \u003eand three carrots \u003eand a big bag of cheetos \u003eand diet coke, please /cat shp"},{"lineNumber":8,"author":{"gitId":"kaiwen98"},"content":"entry new /amt 500 /time 1700 -i /desc Monthly wages /cat slr"},{"lineNumber":9,"author":{"gitId":"kaiwen98"},"content":"entry edit /id 3 /amt 1000"},{"lineNumber":10,"author":{"gitId":"kaiwen98"},"content":"entry delete /id 2"},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"entry list"},{"lineNumber":12,"author":{"gitId":"kaiwen98"},"content":"exit"},{"lineNumber":13,"author":{"gitId":"kaiwen98"},"content":"exit"}],"authorContributionMap":{"kaiwen98":13}},{"path":"text-ui-test/input1.txt","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kaiwen98"},"content":"manual"},{"lineNumber":2,"author":{"gitId":"kaiwen98"},"content":"open /id 1"},{"lineNumber":3,"author":{"gitId":"kaiwen98"},"content":"new /time 1600 /desc assadad /cat tpt /amt -23243432432432434324324 -i"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"exit"},{"lineNumber":5,"author":{"gitId":"kaiwen98"},"content":"exit"},{"lineNumber":6,"author":{"gitId":"kaiwen98"},"content":"exit"}],"authorContributionMap":{"kaiwen98":6}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0"},{"lineNumber":4,"author":{"gitId":"kaiwen98"},"content":"call ..\\..\\SwitchJava.bat"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in ("},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a"},{"lineNumber":13,"author":{"gitId":"-"},"content":")"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"kaiwen98"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input1.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"},{"lineNumber":20,"author":{"gitId":"kaiwen98"},"content":""}],"authorContributionMap":{"-":17,"kaiwen98":3}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"kaiwen98"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input1.txt \u003e ACTUAL.TXT"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":22,"kaiwen98":1}}]
