[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    mainClassName \u003d \"seedu.financeit.Financeit\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    archiveBaseName \u003d \"financeit\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "kaiwen98": 2
    }
  },
  {
    "path": "data/save.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "Oct 10 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "Income;TRANSPORT;1500.0;16:00;hullo"
      }
    ],
    "authorContributionMap": {
      "Feudalord": 1,
      "kaiwen98": 1
    }
  },
  {
    "path": "docs/AboutUs.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# About us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Portfolio "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "--------|:----:|:--------------:|:---------:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Looi Kai Wen | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "kaiwen98": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "# Financeit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "{Give product intro here}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Useful links:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [User Guide](UserGuide.md)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Developer Guide](DeveloperGuide.md)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* [About Us](AboutUs.md)"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "kaiwen98": 1
    }
  },
  {
    "path": "src/main/java/seedu/financeit/Financeit.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.financetools.FinanceTools;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.goaltracker.GoalTracker;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.ManualTracker;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.MenuPrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.RegexMatcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.utils.SaveManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Financeit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(RegexMatcher.alphabetMatcher(\"abc\").find());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                SaveManager.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            } catch (Exception m) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                MenuPrinter.prompt \u003d \"An exception has occurred: \" + m;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            MenuPrinter.printMainMenu();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            CommandPacket packet \u003d new InputParser().parseInput(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.refreshPage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (packet.getCommandString()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"manual\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                ManualTracker.main();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"auto\": //AutoTracker.main();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"acc\": //AccSummary.main();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"goal\": //GoalTracker.main();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                GoalTracker.main();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"financial\": //FinancialCalculator.main();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                FinanceTools.main();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                    SaveManager.save();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                } catch (Exception m) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                    System.out.println(\"An exception has occurred: \" + m);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                MenuPrinter.prompt \u003d \"Invalid Command\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 2,
      "Feudalord": 31,
      "Artemis-Hunt": 3,
      "bqxy": 1,
      "kaiwen98": 18
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/CommandPacket.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Organises data from input string into distinct data types and structure."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * For scalability purposes, a hashmap is implemented to map param type to its corresponding params."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class   CommandPacket {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private HashMap paramMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String rawInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Constructors"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public CommandPacket(String taskType, HashMap paramMap) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.commandString \u003d taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap \u003d paramMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param type refers to /.* (eg. /a)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param refers to string following the param type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getParam(String paramType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!paramMap.containsKey(paramType)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return (String) paramMap.get(paramType);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public Set\u003cString\u003e getParamTypes() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return paramMap.keySet();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.commandString.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public HashMap getParamMap() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (HashMap)this.paramMap.clone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void addParamToMap(String paramType, String paramString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap.put(paramType, paramString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"%s, %s\\n\", this.commandString, this.paramMap);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 6,
      "kaiwen98": 44
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/Constants.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String[] DEFAULT_EXP_CAT \u003d {\"TRANSPORT\", \"FOOD\", \"TRAVEL\", \"SHOPPING\", \"BILLS\"};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String[] DEFAULT_INC_CAT \u003d {\"ALLOWANCE\", \"WAGES\", \"BONUS\"};"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String[] DEFAULT_PARAMS_PREFIX \u003d {\"/\", \"-\"};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final HashMap\u003cString, String\u003e categoryMap \u003d new HashMap() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"tpt\", \"TRANSPORT\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"fd\", \"FOOD\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"tvl\", \"TRAVEL\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"shp\", \"SHOPPING\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"bll\", \"BILLS\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"slr\", \"SALARY\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            put(\"alw\", \"ALLOWANCE\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PLACEHOLDER_DATE \u003d \"2020-01-01\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PLACEHOLDER_TIME \u003d \"00:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final int MAX_PARTITION_LINE_LEN \u003d 60;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final int MAX_ARRAY_LEN \u003d 20;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public enum EntryType {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        EXP(\"Expense\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INC(\"Income\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String literal;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        EntryType(String string) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            literal \u003d string;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return literal;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public enum PrintType {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ERROR_MESSAGE(\"ERROR\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INSTRUCTION(\"TODO\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        GOAL_STATUS(\"GOAL STATUS\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        DIRECTORY(\"DIR\"),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SYS_MSG(\"SYSTEM MESSAGE\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String literal;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        PrintType(String string) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            literal \u003d string;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return literal;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Regex detects the following: \u003cwhitespace\u003e/\u003cword\u003e\u003cwhitespace\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 61
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/DateTimeItem.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.DateTimeManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public abstract class DateTimeItem extends Item {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected DateTimeManager dateTimeManager \u003d new DateTimeManager();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected String defaultDateTimeFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public DateTimeItem() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.dateTimeManager \u003d new DateTimeManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.dateTimeManager.setDate(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.dateTimeManager \u003d new DateTimeManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.dateTimeManager.setTime(time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setDefaultDateTimeFormat(String format) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.defaultDateTimeFormat \u003d format;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getDateFormatted() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.dateTimeManager.getSingleDateFormatted(this.defaultDateTimeFormat);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.dateTimeManager.getSingleTimeFormatted(this.defaultDateTimeFormat);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 48
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/Goal.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Goal {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private int incomeGoal \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private int expenseGoal \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setIncomeGoal(int incomeGoal) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.incomeGoal \u003d incomeGoal;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int getIncomeGoal() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.incomeGoal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setExpenseGoal(int expenseGoal) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.expenseGoal \u003d expenseGoal;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int getExpenseGoal() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.expenseGoal;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 22
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/Item.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public abstract class Item extends ParamHandler {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected int index \u003d -1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Item() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public abstract String getName();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 19
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/ItemList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.DuplicateInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public abstract class ItemList extends ParamHandler {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cItem\u003e itemQueue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cItem\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ItemList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void addItem(Item item) throws DuplicateInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        checkDuplicates(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        item.setIndex(this.getItemsSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.items.add(item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setItemQueue(CommandPacket packet)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws InsufficientParamsException, ItemNotFoundException, ConflictingItemReference {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        handleParams(packet);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Item getItemQueue() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Item output \u003d  this.itemQueue.remove(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        itemQueue.clear();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public int getItemsSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.items.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Item getItemFromIndex(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.items.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void checkDuplicates(Item item) throws DuplicateInputException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (Item i : items) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (i.equals(item)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new DuplicateInputException(item.getName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void removeItem(Item item) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.items.remove(item);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public abstract void printList(String... itemName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 55
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/ParamHandler.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.ParamChecker;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public abstract class ParamHandler {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cString\u003e requiredParams \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cString\u003e parseFailParams \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cString\u003e parseSuccessParams \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ParamChecker paramChecker;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected String defaultDateTimeFormat \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void handleParams(CommandPacket packet)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws AssertionError, InsufficientParamsException, ItemNotFoundException, ConflictingItemReference {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramChecker \u003d new ParamChecker(packet);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String paramType : packet.getParamTypes()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                handleSingleParam(packet, paramType);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (ParseFailParamException exception) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    paramChecker.getParseFailParamMessage(paramType));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.parseFailParams \u003d checkParseFailParams(this.requiredParams, this.parseSuccessParams);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!isValidItem()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new InsufficientParamsException(this.parseFailParams);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected ArrayList\u003cString\u003e checkParseFailParams(ArrayList\u003cString\u003e requiredParams,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                                                     ArrayList\u003cString\u003e parseSuccessParams) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e(requiredParams);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String i : parseSuccessParams) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer.remove(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return buffer;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public abstract boolean isValidItem();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public abstract void handleSingleParam(CommandPacket packet, String paramType)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException, ItemNotFoundException, ConflictingItemReference;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 2,
      "kaiwen98": 50
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/User.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static ArrayList\u003cString\u003e customCat \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/ConflictingItemReference.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ConflictingItemReference extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ConflictingItemReference(Collection items) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (Object item : items) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message +\u003d ((Item)item).getName() + \", \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \"Multiple conflicting item references. Stick to one reference!\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 19
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/DuplicateInputException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class DuplicateInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public DuplicateInputException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/EmptyCommandStringException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class EmptyCommandStringException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public EmptyCommandStringException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(\"Command string cannot be empty!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/EmptyParamException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class EmptyParamException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public EmptyParamException(String paramType) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(\"No params supplied to \" + paramType);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/InsufficientParamsException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class InsufficientParamsException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public InsufficientParamsException(ArrayList\u003cString\u003e params) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(\"The following params require input: \" + String.join(\", \", params));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 9
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/InvalidCategoryException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class InvalidCategoryException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public InvalidCategoryException(String invalidParam) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(String.format(\"\\\"%s\\\" is not a valid category input!\", invalidParam));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/ItemNotFoundException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ItemNotFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ItemNotFoundException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(\"The object cannot be found!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/common/exceptions/ParseFailParamException.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ParseFailParamException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ParseFailParamException(String param) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(\"Failed to parse the following param: \" + param);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 7
    }
  },
  {
    "path": "src/main/java/seedu/financeit/financetools/FinanceTools.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package seedu.financeit.financetools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.ui.MenuPrinter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class FinanceTools {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static double handleSimpleInterest(CommandPacket packet) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            SimpleInterest tool \u003d new SimpleInterest(packet);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return (tool.calculateSimpleInterest());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (InsufficientParamsException exception) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static void main() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            printMenu();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            CommandPacket packet \u003d new InputParser().parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            switch (packet.getCommandString()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            case \"simplecalc\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.print(\"Total Interest Earned: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\u0027$\u0027 + Double.toString(handleSimpleInterest(packet)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                MenuPrinter.prompt \u003d \"Invalid Command\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static void printMenu() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        TablePrinter.setTitle(\"Welcome to finance\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        TablePrinter.addRow(\"No; Finance Tool                  \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        TablePrinter.addRow(\"1; Simple Interest Calculator\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 48,
      "kaiwen98": 3
    }
  },
  {
    "path": "src/main/java/seedu/financeit/financetools/SimpleInterest.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package seedu.financeit.financetools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.ParamHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class SimpleInterest extends ParamHandler {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    private double amount \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    private double interestRate \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public SimpleInterest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super.requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                add(\"/amount\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                add(\"/ir\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public SimpleInterest(CommandPacket packet) throws InsufficientParamsException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            handleParams(packet);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Fall-through"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public void setAmount(Double amount) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public void setInterestRate(Double interestRate) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.interestRate \u003d interestRate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public double calculateSimpleInterest() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return this.amount * (this.interestRate / 100);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return ((amount !\u003d -1) \u0026\u0026 (interestRate !\u003d -1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            ItemNotFoundException, ConflictingItemReference {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        case \"/amount\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            this.amount \u003d paramChecker.checkAndReturnDouble(paramType);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        case \"/ir\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            this.interestRate \u003d paramChecker.checkAndReturnDouble(paramType);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (!super.requiredParams.contains(paramType)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                        paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 72,
      "kaiwen98": 1
    }
  },
  {
    "path": "src/main/java/seedu/financeit/goaltracker/GoalTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "package seedu.financeit.goaltracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.common.Goal;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class GoalTracker {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static CommandPacket cmdPacket;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static Goal goalSetter \u003d new Goal();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static int expenseGoal \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static int incomeGoal \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static String input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static boolean backToMenu \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static boolean exitTracker \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static TotalGoal totalGoal \u003d new TotalGoal();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public static void main() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, \"Welcome to Goals Tracker\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"[1]. Set goals for Expenses\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"[2]. Set goals for Income\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.INSTRUCTION, \"Input either expense/income \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                + \"to set goals for it.\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        cmdPacket \u003d new InputParser().parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        while (!exitTracker) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            switch (cmdPacket.getCommandString()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            case \"expense\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                setExpenseGoal();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            case \"income\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                setIncomeGoal();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                exitTracker \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                System.out.println(\"Invalid Command\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                cmdPacket \u003d new InputParser().parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static void setExpenseGoal() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        backToMenu \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        while (!backToMenu \u0026\u0026 exitTracker \u003d\u003d false) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Please enter your goals for your expenses.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"However if you wish to go back to Main Menu. Please enter \u003cback\u003e\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if (scanner.hasNextInt()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                expenseGoal \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                System.out.println(\"You have set $\" + expenseGoal + \" as your Expense Goals\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                goalSetter.setExpenseGoal(expenseGoal);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                backToMenu \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                if (input.equals(\"back\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    backToMenu \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    main();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, \"Invalid input. Please enter \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                            + \"\u003cback\u003e to go Main Menu or enter a number\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        if (backToMenu \u003d\u003d true \u0026\u0026 exitTracker \u003d\u003d false) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Do you want to exit Expense Goal Tracker? y/n \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            cmdPacket \u003d new InputParser().parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if (cmdPacket.getCommandString().equals(\"y\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                main();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                setExpenseGoal();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static void setIncomeGoal() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        backToMenu \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        while (!backToMenu \u0026\u0026 exitTracker \u003d\u003d false) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Please enter your goals for your income\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"However if you wish to go back to Main Menu. Please enter \u003cback\u003e\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if (scanner.hasNextInt()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                incomeGoal \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                System.out.println(\"You have set $\" + incomeGoal + \" as your Income Goals\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                goalSetter.setIncomeGoal(incomeGoal);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                backToMenu \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                if (input.equals(\"back\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    backToMenu \u003d true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    main();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, \"Invalid input. Please enter \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                            + \"\u003cback\u003e to go Main Menu or enter a number\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        if (backToMenu \u003d\u003d true \u0026\u0026 exitTracker \u003d\u003d false) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Do you want to exit Income Goal Tracker? y/n \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            cmdPacket \u003d cmdPacket \u003d new InputParser().parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if (cmdPacket.getCommandString().equals(\"y\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                main();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                setIncomeGoal();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 109,
      "kaiwen98": 11
    }
  },
  {
    "path": "src/main/java/seedu/financeit/goaltracker/TotalGoal.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "package seedu.financeit.goaltracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.Entry;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class TotalGoal {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    Entry entryData \u003d new Entry();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private Constants.EntryType entryCategory;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setTotalGoal() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        entryCategory \u003d entryData.getEntryType();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(entryCategory);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 16
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/Ledger.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.DateTimeItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.EntryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.ParamChecker;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Ledger extends DateTimeItem {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public EntryList entryList \u003d new EntryList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private ParamChecker paramChecker;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Ledger() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/date\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/id\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.setDefaultDateTimeFormat(\"date\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Ledger(CommandPacket packet) throws AssertionError, InsufficientParamsException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramChecker \u003d new ParamChecker(packet);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.handleParams(packet);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall-through"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Ledger %d : [ %s ]\", this.index + 1,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.dateTimeManager.getSingleDateFormatted(\"date\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Ledger entry \u003d (Ledger) object;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.date.equals(entry.date));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return super.getDateFormatted();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.date !\u003d null);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case ParamChecker.PARAM_DATE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            date \u003d paramChecker.checkAndReturnDate(paramType);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setDate(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (!super.requiredParams.contains(paramType)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1,
      "kaiwen98": 81
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/LedgerList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.ItemList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.ParamChecker;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class LedgerList extends ItemList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public LedgerList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        defaultDateTimeFormat \u003d \"date\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/date\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/id\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Ledger getItemFromDate(LocalDate date) throws ItemNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Ledger output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (Item i : this.items) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d (Ledger)i;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if ((output.getDate().equals(date))) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throw new ItemNotFoundException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void printList(String... ledgerName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(\"List of Ledgers\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"Ledger Number;Ledger Date\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (super.getItemsSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            TablePrinter.addRow(\"No ledgers created;               \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            for (int i \u003d 0; i \u003c super.getItemsSize(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, this.items.get(i)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.itemQueue.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException, ItemNotFoundException, ConflictingItemReference {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case ParamChecker.PARAM_DATE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            LocalDate date \u003d paramChecker.checkAndReturnDate(paramType);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.itemQueue.add(this.getItemFromDate(date));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(\"/date\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(\"/id\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case ParamChecker.PARAM_INDEX:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            int index \u003d paramChecker.checkAndReturnIndex(paramType, this.items);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.itemQueue.add(this.getItemFromIndex(index));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(\"/date\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(\"/id\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (!super.requiredParams.contains(paramType)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (itemQueue.size() \u003e 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ConflictingItemReference(itemQueue);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1,
      "kaiwen98": 85
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/ManualTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.DuplicateInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.EntryTracker;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.FiniteStateMachine;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ManualTracker {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static Ledger currLedger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static LedgerList ledgerList \u003d new LedgerList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    private static CommandPacket packet;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void main() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean endTracker \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine fsm \u003d new FiniteStateMachine(FiniteStateMachine.State.MAIN_MENU);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, \"Welcome to Manual Tracker!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        while (!endTracker) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (fsm.getCurrState()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case MAIN_MENU:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleMainMenu());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case CREATE_LEDGER:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleCreateLedger());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case OPEN_LEDGER:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleOpenLedger());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case DELETE_LEDGER:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleDeleteLedger());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case SHOW_LEDGER:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleShowLedger());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case INVALID_STATE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleInvalidState());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case EXIT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, \"Exiting from ManualTracker\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                endTracker \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case END_TRACKER:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                endTracker \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            fsm.transitionState();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static LedgerList getLedgerList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return ledgerList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    public static void setCommandPacket(CommandPacket p) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        packet \u003d p;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void createLedger() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        handleCreateLedger();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleMainMenu() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printSpace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.DIRECTORY, \"[ MAIN_MENU -\u003e MANUAL_TRACKER_MENU ]\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        UiManager.printInputPromptMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        packet \u003d new InputParser().parseInput(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // System.out.println(packet);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.refreshPage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (packet.getCommandString()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"ledger open\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"open\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.OPEN_LEDGER;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"ledger new\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"new\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.CREATE_LEDGER;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"ledger list\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.SHOW_LEDGER;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"ledger delete\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.DELETE_LEDGER;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.EXIT;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"commands\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            printCommandList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE, \"Command failed. Try again.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    private static FiniteStateMachine.State handleCreateLedger() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Ledger ledger \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledger \u003d new Ledger(packet);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledgerList.addItem(ledger);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"%s created!\", ledger.getName()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (DuplicateInputException | InsufficientParamsException exception) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleDeleteLedger() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Ledger ledger;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledgerList.setItemQueue(packet);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledger \u003d (Ledger) ledgerList.getItemQueue();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            System.out.println(ledger.getName());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledgerList.removeItem(ledger);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"%s deleted!\", ledger.getName()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InsufficientParamsException | ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleShowLedger() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ledgerList.printList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleInvalidState() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(\"You dun goof bro uwu\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleOpenLedger() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Ledger ledger;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledgerList.setItemQueue(packet);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            ledger \u003d (Ledger) ledgerList.getItemQueue();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            EntryTracker.setCurrLedger(ledger);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"%s opened!\", ledger.getName()));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return state;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InsufficientParamsException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return state;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (ItemNotFoundException exception) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Generating new ledger...\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            handleCreateLedger();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            state \u003d FiniteStateMachine.State.OPEN_LEDGER;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return state;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return EntryTracker.main();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void printCommandList() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(\"List of Commands\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"No.;Command            ;Input Format                  \");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"1.;Open ledger;ledger open /date \u003cYYMMDD\u003e\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"2.;New ledger;ledger new /date \u003cYYMMDD\u003e\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"3.;list ledgers;ledger list\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"4.;delete ledgers;ledger delete /date \u003cYYMMDD\u003e\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"5.;exit to main menu;exit\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Feudalord": 12,
      "Artemis-Hunt": 3,
      "kaiwen98": 182
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/subroutine/Entry.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker.subroutine;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.DateTimeItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.Ledger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_CATEGORY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_INC;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_TIME;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Entry extends DateTimeItem {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String description \u003d \" \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String category \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private Constants.EntryType entryType \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private double amount \u003d -1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private Ledger ledger \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Entry() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/time\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/cat\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/amt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"-i\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"-e\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/id\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/desc\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        };"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.setDefaultDateTimeFormat(\"time\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Entry(CommandPacket packet) throws AssertionError, InsufficientParamsException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.handleParams(packet);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall-through"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setLedger(Ledger ledger) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.ledger \u003d ledger;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.amount;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setCategory(String category) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.category \u003d Constants.categoryMap.get(category);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.category;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setEntryType(Constants.EntryType entryType) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.entryType \u003d entryType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.EntryType getEntryType() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.entryType;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_TIME:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            LocalTime time \u003d paramChecker.checkAndReturnTime(paramType);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            super.setTime(time);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_AMOUNT:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            Double amount \u003d paramChecker.checkAndReturnDouble(paramType);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setAmount(amount);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_INC:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setEntryType(Constants.EntryType.INC);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_EXP:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setEntryType(Constants.EntryType.EXP);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_DESCRIPTION:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setDescription(packet.getParam(paramType));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PARAM_CATEGORY:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String category \u003d paramChecker.checkAndReturnCategory(paramType);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setCategory(category);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (!super.requiredParams.contains(paramType)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Entry %d : [ %s ] [ %s ]\", this.getIndex() + 1,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.dateTimeManager.getSingleTimeFormatted(\"time\"), this.description);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"%s;%s;%s;%s;%s\", this.entryType, this.category, this.amount,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.getTimeFormatted(), this.description);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Entry entry \u003d (Entry) object;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.description.equals(entry.description))"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.category.equals(entry.category))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.entryType.equals(entry.entryType))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.time.equals(entry.time))"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.amount \u003d\u003d entry.amount);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.category !\u003d null)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.entryType !\u003d null)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.time !\u003d null)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            \u0026\u0026 (this.amount !\u003d -1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1,
      "kaiwen98": 158
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/subroutine/EntryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker.subroutine;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.ItemList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.ParamChecker;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class EntryList extends ItemList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public EntryList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        defaultDateTimeFormat \u003d \"time\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/time\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/cat\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/amt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"-i\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"-e\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/id\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                add(\"/desc\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void printList(String... ledgerDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(String.format(\"List of Entries for Ledger [%s]\", ledgerDate[0]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"Entry Number;Entry Type;Category;Amount;Time;Description                    \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (super.getItemsSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            TablePrinter.addRow(\"No entries created               \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            for (int i \u003d 0; i \u003c super.getItemsSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, super.items.get(i)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (this.itemQueue.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Entry getItemFromTime(LocalTime time) throws ItemNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Entry output;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (Object i : this.items) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d (Entry)i;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if ((output.getTime().equals(time))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throw new ItemNotFoundException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case ParamChecker.PARAM_INDEX:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            int index \u003d paramChecker.checkAndReturnIndex(paramType, this.items);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.itemQueue.add(super.getItemFromIndex(index));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (!super.requiredParams.contains(paramType)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1,
      "kaiwen98": 78
    }
  },
  {
    "path": "src/main/java/seedu/financeit/manualtracker/subroutine/EntryTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.manualtracker.subroutine;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.DuplicateInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import seedu.financeit.goaltracker.TotalGoal;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.Ledger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.FiniteStateMachine;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class EntryTracker {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static Ledger currLedger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static EntryList entryList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    private static CommandPacket packet;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    public static void setCommandPacket(CommandPacket p) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        packet \u003d p;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void createEntry() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        handleCreateEntry();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static TotalGoal totalGoal \u003d new TotalGoal();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void setCurrLedger(Ledger ledger) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        currLedger \u003d ledger;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        entryList \u003d ledger.entryList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static FiniteStateMachine.State main() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean endTracker \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine fsm \u003d new FiniteStateMachine(FiniteStateMachine.State.MAIN_MENU);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        while (!endTracker) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (fsm.getCurrState()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case MAIN_MENU:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleMainMenu());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case CREATE_ENTRY:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleCreateEntry());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case EDIT_ENTRY:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleEditEntry());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case DELETE_ENTRY:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleDeleteEntry());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case SHOW_ENTRY:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleShowEntry());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case INVALID_STATE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                fsm.setNextState(handleInvalidState());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case EXIT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                System.out.println(\"Exiting subroutine...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                endTracker \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case END_TRACKER:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                endTracker \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // Fall through"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            fsm.transitionState();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static EntryList getEntryList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return entryList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleMainMenu() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printSpace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.DIRECTORY,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"[ MAIN_MENU -\u003e MANUAL_TRACKER_MENU -\u003e ENTRY_TRACKER (LEDGER %s)\", currLedger));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"You are now in entry tracker for ledger [%s]!\", currLedger),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Enter command!\","
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input \\\"commands\\\" for list of commands.\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        packet \u003d new InputParser().parseInput(input);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.refreshPage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (packet.getCommandString()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"entry edit\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.EDIT_ENTRY;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"entry new\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"new\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.CREATE_ENTRY;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"entry list\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.SHOW_ENTRY;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"entry delete\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.DELETE_ENTRY;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.EXIT;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"commands\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            printCommandList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"cat\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            printValidCategories();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            System.out.println(\"Command not recognised. Try again.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleDeleteEntry() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Entry entry;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entryList.setItemQueue(packet);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entry \u003d (Entry) entryList.getItemQueue();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entryList.removeItem(entry);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    String.format(\"%s deleted!\", entry.getName()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InsufficientParamsException | ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleShowEntry() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        entryList.printList(currLedger.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static Constants.EntryType getEntryType() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String paramType : packet.getParamTypes()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (paramType) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"-i\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return Constants.EntryType.INC;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"-e\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return Constants.EntryType.EXP;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                System.out.println(\"Command failed.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    private static FiniteStateMachine.State handleCreateEntry() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Entry entry;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entry \u003d new Entry(packet);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entryList.addItem(entry);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    String.format(\"%s created!\", entry.getName()));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (DuplicateInputException exception) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    \"Entry specified already exists in the list!\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InsufficientParamsException exception) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleEditEntry() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        FiniteStateMachine.State state \u003d FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Entry entry;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entryList.setItemQueue(packet);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entry \u003d (Entry) entryList.getItemQueue();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            entry.handleParams(packet);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    String.format(\"%s edited!\", entry.getName()));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (AssertionError error) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    \"Input failed due to param error.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InsufficientParamsException | ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return state;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void printCommandList() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(\"List of Commands\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"No.;Command                 ;Input Format                                               \");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"1.;New entry;entry new /time \u003cHHMM\u003e /info \u003cstring\u003e /cat \u003ccategory\u003e -[i/e]\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"2.;Edit entry;entry edit \u003cparameter to edit\u003e\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"3.;list entries;entry list\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"4.;delete entry;entry delete /time \u003cHHMM\u003e\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"5.;exit to manual tracker;exit\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void printValidCategories() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(\"List of Valid Categories\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"Category;Input\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String i : Constants.categoryMap.keySet()) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            TablePrinter.addRow(String.format(\"%s;%s\", i, Constants.categoryMap.get(i)));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static FiniteStateMachine.State handleInvalidState() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(\"You dun goof bro uwuuuuuuu\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return FiniteStateMachine.State.MAIN_MENU;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 2,
      "Feudalord": 10,
      "Artemis-Hunt": 2,
      "kaiwen98": 216
    }
  },
  {
    "path": "src/main/java/seedu/financeit/parser/DateTimeManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class that stores and manages the output of Datetime classes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class DateTimeManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public DateTimeManager(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public DateTimeManager(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.time \u003d dateTime.toLocalTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.date \u003d dateTime.toLocalDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Takes in one format specifier string and outputs datetime string with the corresponding format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param whichFormat Format to determine output of dateTime."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return Formatted dateTime string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getSingleDateFormatted(String whichFormat) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (whichFormat) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // May 27 2020"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d YYYY\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"day\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Tuesday"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d this.date.getDayOfWeek().toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"month\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // May"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d this.date.getMonth().toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"year\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // 2020"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d Integer.toString(date.getYear());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Show all information"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d this.date.format(DateTimeFormatter.ofPattern(\"YYYY/MM/dd\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getSingleTimeFormatted(String whichFormat) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (whichFormat) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"time\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // 2020"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d time.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Show all information"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d this.time.format(DateTimeFormatter.ofPattern(\"HH:mm:ss\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Handles a String array of format specifiers"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * and arranges the tokens of formatted datetime substrings in a proper order."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param whichFormat Format to determine output of dateTime"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return Formatted dateTime string"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getDateTimeFormatted(String[] whichFormat) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] token \u003d new String[Constants.MAX_ARRAY_LEN];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String outputDate;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String outputTime;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (whichFormat \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return getSingleDateFormatted(\" \")"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                + getSingleTimeFormatted(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String format : whichFormat) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            outputDate \u003d getSingleDateFormatted(format);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            outputTime \u003d getSingleTimeFormatted(format);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (format) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"day\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token[0] \u003d outputDate;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"month\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token[2] \u003d outputDate;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"year\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token[3] \u003d outputDate;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"time\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token[4] \u003d outputTime;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // Fall-through"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (token[i] !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output +\u003d token[i] + \" \";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 130
    }
  },
  {
    "path": "src/main/java/seedu/financeit/parser/DateTimeParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.RegexMatcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static LocalDate parseLocalDate(String input) throws InvalidParameterException,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        NullPointerException, DateTimeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (RegexMatcher.alphabetMatcher(input).find()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new InvalidParameterException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String formattedString \u003d getFormatStringForLocalDateParse(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return LocalDate.parse(formattedString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static LocalTime parseLocalTime(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (RegexMatcher.alphabetMatcher(input).find()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new InvalidParameterException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String formattedString \u003d getFormatStringForLocalTimeParse(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return LocalTime.parse(formattedString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getFormatStringForLocalDateParse(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        final String partition \u003d \"-\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (input.matches(\"[0-9]{6}\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // If input date format is XXXXXX, replace with XX,XX,XX. Eg: 200404"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d input.substring(0,2) + \",\" + input.substring(2, 4) + \",\" + input.substring(4);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else if (input.matches(\"[0-9]{8}\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // If input date format is XXXXXXXX, replace with XXXX,XX,XX. Eg: 20200404"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d input.substring(0,4) + \",\" + input.substring(4, 6) + \",\" + input.substring(6);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        input \u003d input.replaceAll(\"[\\\\D]+\", \"c\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] tokens \u003d input.split(\"c\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c output.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (i \u003e tokens.length - 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If subsequent pair of digits is undefined by simplified input, set to 01 (Jan, 1)."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d \"01\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else if (tokens[i].length() \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If token is 1 or 0 digits long, fill the remaining space with 0 such that a 2 digit number is formed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d \"0\" + tokens[i];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else if (i \u003d\u003d 0 \u0026\u0026 tokens[i].matches(\"[0-9]{2}\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If year given is YY"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d \"20\" + tokens[i].substring(0,2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d tokens[i];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.join(partition, output);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getFormatStringForLocalTimeParse(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        final String partition \u003d \":\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (input.matches(\"[0-9]{4}\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // If input time format is XXXX, replace with XX:XX:00."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d input.substring(0,2) + \",\" + input.substring(2) + \",00\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        input \u003d input.replaceAll(\"[\\\\D]+\", \"c\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] tokens \u003d input.split(\"c\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c output.length; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (i \u003e tokens.length - 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If subsequent pair of digits is undefined by simplified input, set to 01 (Jan, 1)."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d \"01\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else if (tokens[i].length() \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If token is 1 or 0 digits long, fill the remaining space with 0 such that a 2 digit number is formed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d \"0\" + tokens[i];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output[i] \u003d tokens[i];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.join(partition, output);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 82
    }
  },
  {
    "path": "src/main/java/seedu/financeit/parser/InputParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.EmptyCommandStringException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.RegexMatcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class InputParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Matcher matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public InputParser() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getSeparator(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Matcher matches \u003cspace\u003e\u003cseparator\u003e\u003cparamType\u003e\u003cspace\u003e, so (matched index + 1) gives the separator"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        int separatorIndex \u003d matcher.start() + 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return String.valueOf(input.charAt(separatorIndex));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Example input: deadline /by tomorrow /note skip page 70."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * commandString: \"deadline\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * CommandPacket created:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *  commandType: ADD_DEADLINE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *  params: HashMap\u003c String, String \u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *  {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *   \"by\": \"tomorrow\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *   \"note\": \"skip page 70\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public CommandPacket parseInput(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String commandString \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String[] buffer;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String separator \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean paramsExist \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        //Split into [command, rest of input]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        //Check for existence of command title"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d \" \" + input + \" \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            matcher \u003d RegexMatcher.paramMatcher(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            separator \u003d getSeparator(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (java.lang.IllegalStateException exception) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //No params provided"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            commandString \u003d input;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return new CommandPacket(commandString, params);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Split into [\u003ccommand\u003e, \u003cparams string\u003e]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer \u003d input.split(separator, 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (buffer[0].equals(\" \")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new EmptyCommandStringException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            commandString \u003d buffer[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String paramSubstring \u003d separator + buffer[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            params \u003d new ParamsParser(paramSubstring).parseParams();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } catch (EmptyCommandStringException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return new CommandPacket(commandString, params);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 12,
      "kaiwen98": 59
    }
  },
  {
    "path": "src/main/java/seedu/financeit/parser/ParamsParser.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.RegexMatcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ParamsParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected String paramSubstring;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Matcher matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ParamsParser(String paramSubstring) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramSubstring \u003d paramSubstring;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getSeparator(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Matcher gives index of space before the param, so (matched index + 1) gives the separator"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        int separatorIndex \u003d matcher.start() + 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return String.valueOf(input.charAt(separatorIndex));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    String prependAppendSpaces(String str) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return \" \" + str + \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Example input: deadline do homework /by tomorrow /note skip page 70"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * --First iteration--"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramSubstring: \"by tomorrow /note skip page 70\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramType: \"by\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramArgument: \"tomorrow\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * --Next iteration--"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramSubstring: \"note skip page 70\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramType: \"note\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * paramArgument: \"skip page 70\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * etc."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public HashMap\u003cString, String\u003e parseParams() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] buffer;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String paramArgument \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean paramArgumentExist;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            paramSubstring +\u003d \" \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            paramArgument \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            //Separate into [paramType, rest of string]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer \u003d paramSubstring.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String paramType \u003d buffer[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            buffer[1] \u003d buffer[1].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            * Process param argument and check whether more params exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            boolean isRestOfStringEmpty \u003d buffer[1].length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if (isRestOfStringEmpty) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                //No param argument, no further params"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                params.put(paramType, paramArgument);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Matcher requires a leading and trailing blank space to successfully match a param"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            paramSubstring \u003d \" \" + buffer[1] + \" \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            matcher \u003d RegexMatcher.paramMatcher(paramSubstring);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                //Throws IllegalStateException if no more params are present after current param"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                paramArgumentExist \u003d matcher.start() \u003e 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            } catch (java.lang.IllegalStateException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                //No further params"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                paramArgument \u003d paramSubstring.trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                params.put(paramType, paramArgument);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if (paramArgumentExist) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                //Split into [paramArgument, rest of string]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String separator \u003d getSeparator(paramSubstring);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                buffer \u003d paramSubstring.trim().split(separator, 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                buffer[1] \u003d separator + buffer[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                paramArgument \u003d buffer[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                paramSubstring \u003d buffer[1].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                //Nothing more to process for current param"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                paramSubstring \u003d paramSubstring.trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            params.put(paramType, paramArgument);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } while (true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 34,
      "kaiwen98": 59
    }
  },
  {
    "path": "src/main/java/seedu/financeit/recurringtracker/RecurringEntry.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package seedu.financeit.recurringtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.exceptions.InsufficientParamsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_AMOUNT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_AUTO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_DAY;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_DESCRIPTION;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_EXP;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static seedu.financeit.utils.ParamChecker.PARAM_INC;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class RecurringEntry extends Item {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private Constants.EntryType entryType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private String notes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private boolean auto \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public RecurringEntry() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        requiredParams \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                add(\"/day\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                add(\"/desc\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                add(\"/amt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public RecurringEntry(CommandPacket packet) throws AssertionError, InsufficientParamsException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            handleParams(packet);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } catch (ItemNotFoundException | ConflictingItemReference exception) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            // Fall-through"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean validParam \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        switch (paramType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_DAY:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            day \u003d paramChecker.checkAndReturnInt(paramType);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_AMOUNT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            amount \u003d paramChecker.checkAndReturnInt(paramType);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_INC:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            entryType \u003d Constants.EntryType.INC;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_EXP:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            entryType \u003d Constants.EntryType.EXP;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_DESCRIPTION:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            description \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PARAM_AUTO:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            auto \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            validParam \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                    paramChecker.getUnrecognizedParamMessage(paramType));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if (validParam) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            parseSuccessParams.add(paramType);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return String.format(\"Entry: [ %s ] [ %s ]\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                day, description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return (entryType !\u003d null)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                \u0026\u0026 (this.amount !\u003d -1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 84,
      "kaiwen98": 6
    }
  },
  {
    "path": "src/main/java/seedu/financeit/recurringtracker/RecurringEntryList.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package seedu.financeit.recurringtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.ItemList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ConflictingItemReference;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ItemNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.ui.TablePrinter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class RecurringEntryList extends ItemList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public RecurringEntryList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void printList(String... itemName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        TablePrinter.setTitle(String.format(\"List of Recurring entries\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        TablePrinter.addRow(\"Day;Description;Expenditure amount;Income amount;Payment;Notes                    \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if (getItemsSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            TablePrinter.addRow(\"No entries created               \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            for (int i \u003d 0; i \u003c getItemsSize(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                TablePrinter.addRow(String.format(\"%s;%s\", i + 1, items.get(i)));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public boolean isValidItem() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void handleSingleParam(CommandPacket packet, String paramType) throws ParseFailParamException,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ItemNotFoundException, ConflictingItemReference {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 23,
      "kaiwen98": 19
    }
  },
  {
    "path": "src/main/java/seedu/financeit/recurringtracker/RecurringTracker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package seedu.financeit.recurringtracker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class RecurringTracker {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String WelcomeMessage \u003d \"Welcome to Auto Tracker!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String DirectoryMainMenu \u003d \"[ MAIN_MENU -\u003e AUTO_TRACKER ]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void main() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean endTracker \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.SYS_MSG, WelcomeMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        UiManager.printInputPromptMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String input \u003d UiManager.handleInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            CommandPacket packet \u003d new InputParser().parseInput(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            UiManager.refreshPage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            switch (packet.getCommandString()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                handleAddEntry();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                handleShowEntries();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                endTracker \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                handleInvalidCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } while (!endTracker);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static void handleAddEntry() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static void handleShowEntries() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static void handleInvalidCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE, \"Invalid command. Try again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 47
    }
  },
  {
    "path": "src/main/java/seedu/financeit/ui/MenuPrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class MenuPrinter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String prompt \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printMainMenu() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.refreshPage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        status();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.setTitle(\"Welcome to Main Menu\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"No.; Feature                                           ; Commands                    \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[1]; Manual Income/Expense Tracker; manual\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[2]; Auto Income/Expense Tracker; auto\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[3]; Account Summary; acc\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[4]; Goals Tracker; goal\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[5]; Financial Calculator; financial\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.addRow(\"[6]; Quit The Program; exit\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TablePrinter.printList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void status() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(\"Status: \" + prompt);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        prompt \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 24
    }
  },
  {
    "path": "src/main/java/seedu/financeit/ui/TablePrinter.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.utils.RegexMatcher;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class TablePrinter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static ArrayList\u003cString\u003e listContents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static String title \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static final int DEFAULT_COL_WIDTH \u003d 15;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static int[] colWidth;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static int pad \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String formatTitle(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d UiManager.getLineWithSymbol(input.length() + 4, \"\u003d\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        output +\u003d \"\\n\" + String.format(\"\u003d %s \u003d\", input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        output +\u003d \"\\n\" + UiManager.getLineWithSymbol(input.length() + 4, \"\u003d\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String formatTitle(String input, int width) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d UiManager.getLineWithSymbol(width, \"\u003d\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        output +\u003d \"\\n\" + String.format(\"\u003d %s %s\u003d\", input, UiManager.getLineWithSymbol(width - 4 - input.length(), \" \"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        output +\u003d \"\\n\" + UiManager.getLineWithSymbol(width, \"\u003d\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void setTitle(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        title \u003d input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void addRow(String row) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        listContents.add(row);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printRow(String[] row) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(getPrintListRow(row) + \"|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Main table printing function."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param input Input rows to print table contents."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printList(ArrayList\u003cString\u003e input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] header \u003d input.get(0).split(\";\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        //Set the width of the column based on the length of column header"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        setColWidth(header);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(formatTitle(title, getHeaderRowWidth(header)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        printRowHeader(header);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        printHorizontalHeaderPartition(getHeaderRowWidth(header));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 1; i \u003c input.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String[] buffer \u003d input.get(i).split(\";\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            printRow(buffer);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            printHorizontalPartition(getHeaderRowWidth(header));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        printList(listContents);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        listContents.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        title \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static int getColWidth(int length) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return length \u003e DEFAULT_COL_WIDTH ? length : DEFAULT_COL_WIDTH;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static ArrayList\u003cString\u003e adjustWordToColWidth(String rawInput, int maxLength) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        maxLength \u003d maxLength - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] inputs \u003d rawInput.split(\"[\u003e]\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String input: inputs) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            Matcher matcher \u003d RegexMatcher.regexMatcher(input, String.format(\".{%s}|.{1,}$\", maxLength));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            while (matcher.find()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output.add(matcher.group());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static ArrayList\u003cString\u003e adjustContentToColWidth(String rawInput, int maxLength) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] inputs \u003d rawInput.split(\"[\u003e]\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] buffer;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String feed \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean hasParsedLongWord;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String input: inputs) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Break down input line into word tokens"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer \u003d input.split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            int scannedWordCount \u003d 0;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // While the input line is not fully visited"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            while (scannedWordCount + 1  \u003c\u003d buffer.length) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                hasParsedLongWord \u003d false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                feed \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // Acquire segment of buffer right before line feed exceeds the char limit"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (buffer[scannedWordCount].length() \u003e maxLength) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    //System.out.println(\"if: \" + buffer[scannedWordCount]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    ArrayList\u003cString\u003e tokens \u003d adjustWordToColWidth(buffer[scannedWordCount], maxLength);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    for (int i \u003d 0; i \u003c tokens.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        feed \u003d tokens.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        if (i \u003c tokens.size() - 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                            feed +\u003d \"-\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        output.add(feed);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    scannedWordCount++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    //System.out.println(\"else: \" + buffer[scannedWordCount]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    do {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        feed +\u003d buffer[scannedWordCount] + \" \";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        scannedWordCount++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    } while ((scannedWordCount \u003c buffer.length)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        \u0026\u0026 (feed.length() + 1 + buffer[scannedWordCount].length() \u003c maxLength - pad));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    output.add(feed);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Handles printing of each row for all columns."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param input Input table row to print."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getPrintListRow(String[] input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        int maxLines \u003d 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String entry \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e[] token \u003d new ArrayList[input.length];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // Determine how many lines needed for each column, and also segmenting"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // the contents of each box to each line."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // This allows for warping of lines that would normally overflow from"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // the default column width."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int col \u003d 0; col \u003c input.length; col++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            token[col] \u003d adjustContentToColWidth(input[col], getColWidth(colWidth[col]));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (token[col].size() \u003e maxLines) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                maxLines \u003d token[col].size();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int line \u003d 0; line \u003c maxLines; line++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer.clear();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            for (int col \u003d 0; col \u003c input.length; col++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If the content of the box is fully printed,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // no need to access it anymore"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (line + 1 \u003e token[col].size()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    entry \u003d getPrintFormat(\" \", getColWidth(colWidth[col]));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    entry \u003d getPrintFormat(token[col].get(line), getColWidth(colWidth[col]));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                buffer.add(entry);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d String.join(\"\", buffer);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d (line \u003c maxLines - 1) ? \"|\\n\" : \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getPrintFormat(String s, int width) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String format \u003d \"| %-\" + width + \"s\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(format, s);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printRowHeader(String[] row) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String header \u003d getPrintListRow(row);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(header + \"|\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printHorizontalPartition(int rowWidth) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(UiManager.getLineWithSymbol(rowWidth / 2, \" -\"));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printHorizontalHeaderPartition(int rowWidth) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(UiManager.getLineWithSymbol(rowWidth, \"-\"));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void setColWidth(String[] row) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        colWidth \u003d new int[row.length];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c row.length; i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            colWidth[i] \u003d row[i].length();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static int getHeaderRowWidth(String[] row) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String header \u003d getPrintListRow(row);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] output \u003d header.split(\"\\\\n\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output[0].length();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 195
    }
  },
  {
    "path": "src/main/java/seedu/financeit/ui/UiManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class UiManager {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static InputParser inputParser \u003d new InputParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getLineWithSymbol(int width, String symbol) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        // return new String(new char[width]).replace(\"\\0\", symbol);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return symbol.repeat(width);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printLineWithSymbol(int width, String symbol) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(getLineWithSymbol(width, symbol));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void drawPartition() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        printLineWithSymbol(Constants.MAX_PARTITION_LINE_LEN, \"_\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getPrintListRow(String[] input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Arrays.stream(input)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                .forEach(s -\u003e buffer.add(getPrintFormat(s)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.join(\"\", buffer);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getPrintFormat(String s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"| %-15s\", s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printRowHeader(String[] row) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String header \u003d getPrintListRow(row);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(header);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(new String(new char[header.length()]).replace(\"\", \"-\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printInputPrompt() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        drawPartition();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.print(\"\u003e\u003e\u003e \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static String handleInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return handleInput(\"echo\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static String handleInput(String mode) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.printInputPrompt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (mode.equals(\"echo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return input.toLowerCase();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printWithStatusIcon(Constants.PrintType printType, String... messages) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c messages.length; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                System.out.println(String.format(\"[ %-15s]: %s\", printType, messages[i]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                System.out.println(String.format(\"%-20s%s\", \" \", messages[i]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printInputPromptMessage() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printWithStatusIcon(Constants.PrintType.INSTRUCTION,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                \"Enter a command! \","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                \"Input \\\"commands\\\" for list of commands.\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printSpace() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void refreshPage() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 12,
      "kaiwen98": 76
    }
  },
  {
    "path": "src/main/java/seedu/financeit/utils/FiniteStateMachine.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class FiniteStateMachine {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public enum State {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        MAIN_MENU,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        CREATE_LEDGER,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        OPEN_LEDGER,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        DELETE_LEDGER,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SHOW_LEDGER,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        CREATE_ENTRY,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SHOW_ENTRY,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        DELETE_ENTRY,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        END_TRACKER,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INVALID_STATE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        EXIT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        EDIT_ENTRY"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private State currState;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private State nextState;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public FiniteStateMachine(State currState) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.currState \u003d currState;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.nextState \u003d State.INVALID_STATE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public State getCurrState() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.currState;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setNextState(State state) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.nextState \u003d state;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void transitionState(State nexState) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.currState \u003d nextState;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        setNextState(nexState);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void transitionState() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.currState \u003d nextState;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        setNextState(State.INVALID_STATE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 44
    }
  },
  {
    "path": "src/main/java/seedu/financeit/utils/ParamChecker.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.ItemList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.EmptyParamException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.InvalidCategoryException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.exceptions.ParseFailParamException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.parser.DateTimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ParamChecker {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_DATE \u003d \"/date\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final String PARAM_DAY \u003d \"/day\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_TIME \u003d \"/time\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_INDEX \u003d \"/id\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_DESCRIPTION \u003d \"/desc\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_CATEGORY \u003d \"/cat\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_AMOUNT \u003d \"/amt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_INC \u003d \"-i\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String PARAM_EXP \u003d \"-e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final String PARAM_AUTO \u003d \"-auto\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    CommandPacket packet;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ParamChecker(CommandPacket packet) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.packet \u003d packet;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public LocalDate checkAndReturnDate(String paramType)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String rawDate \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (rawDate.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new EmptyParamException(paramType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            date \u003d DateTimeParser.parseLocalDate(rawDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (DateTimeException exception) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Not a valid date on the Gregorian Calendar!\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Check your input again against the following format!\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Date format: YYMMDD\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Time format: HHMM\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InvalidParameterException exception) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input format is not recognised.\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Check your input again against the following format!\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Date format: YYMMDD\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Time format: HHMM\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (EmptyParamException exception) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Enter \\\"commands\\\" to check format!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public LocalTime checkAndReturnTime(String paramType)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        LocalTime time \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String rawTime \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (rawTime.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new EmptyParamException(paramType);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            time \u003d DateTimeParser.parseLocalTime(rawTime);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (DateTimeException exception) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Not a valid time on the Gregorian Calendar!\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Check your input again against the following format!\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Date format: YYMMDD\","
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Time format: HHMM\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InvalidParameterException exception) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input format is not recognised.\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Check your input again against the following format!\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Date format: YYMMDD\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Time format: HHMM\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (EmptyParamException exception) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Enter \\\"commands\\\" to check format!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public int checkAndReturnIndex(String paramType, ItemList list)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        throws ParseFailParamException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (list.getItemsSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d \"There are no items in the list.\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else if (list.getItemsSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d \"The only valid item index is 1.\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d String.format(\"The range is from 1 to %d\", list.getItemsSize());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            index \u003d Integer.parseInt(packet.getParam(paramType));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            index -\u003d 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (index \u003c 0 || index \u003e\u003d list.getItemsSize()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"Index input \\\"%s\\\" is out of bounds!\", index),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                message);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Cannot parse your input. Please enter a positive integer!\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                message);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public int checkAndReturnIndex(String paramType, ArrayList list) throws ParseFailParamException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d \"There are no items in the list.\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else if (list.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d \"The only valid item index is 1.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            message \u003d String.format(\"The range is from 1 to %d\", list.size());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            index \u003d Integer.parseInt(packet.getParam(paramType));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            index \u003d index - 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (index \u003c 0 || index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.format(\"Index input \\\"%s\\\" is out of bounds!\", index),"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                message);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Cannot parse your input. Please enter a positive integer!\","
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                message);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public double checkAndReturnDouble(String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String input \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        double output \u003d -1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d Double.parseDouble(input);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (NumberFormatException | NullPointerException exception) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Cannot parse your input. Please enter valid 2 d.p input!\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public int checkAndReturnInt(String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String input \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        int output \u003d -1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            output \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } catch (NumberFormatException | NullPointerException exception) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                    \"Cannot parse your input. Please enter valid integer input!\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String checkAndReturnCategory(String paramType) throws ParseFailParamException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean parseSuccess \u003d false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String category \u003d packet.getParam(paramType);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (!Constants.categoryMap.containsKey(category)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                throw new InvalidCategoryException(category);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            parseSuccess \u003d true;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } catch (InvalidCategoryException exception) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.printWithStatusIcon(Constants.PrintType.ERROR_MESSAGE,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                exception.getMessage(),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                \"Input \\\"exp cat\\\" to show valid categories!\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!parseSuccess) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new ParseFailParamException(paramType);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getUnrecognizedParamMessage(String paramType) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"The param type is not recognized: \\\"%s\\\"\", paramType);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getParseFailParamMessage(String paramType) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"The param type cannot be parsed: \\\"%s\\\"\", paramType);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 20,
      "kaiwen98": 222
    }
  },
  {
    "path": "src/main/java/seedu/financeit/utils/RegexMatcher.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class RegexMatcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static Matcher regexMatcher(String inputString, String regex) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(regex);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(inputString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static Matcher paramMatcher(String inputString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Matches \u003cspace\u003e\u003cPARAMS_PREFIX\u003e\u003cstring\u003e\u003cspace\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String regex \u003d String.format(\"(\\\\s)([%s]{1})(\\\\w+)(\\\\s)\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String.join(\"\", Constants.DEFAULT_PARAMS_PREFIX));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Matcher matcher \u003d regexMatcher(inputString, regex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        matcher.find();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return matcher;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static Matcher alphabetMatcher(String inputString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String regex \u003d \"[a-zA-Z]+\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Matcher matcher \u003d regexMatcher(inputString, regex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return matcher;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1,
      "kaiwen98": 28
    }
  },
  {
    "path": "src/main/java/seedu/financeit/utils/SaveManager.java",
    "fileType": "functional-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.Ledger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.LedgerList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.ManualTracker;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.Entry;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.EntryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.manualtracker.subroutine.EntryTracker;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "public class SaveManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    public static void save() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        buildFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        LedgerList ledList \u003d ManualTracker.getLedgerList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        int size \u003d ledList.getItemsSize();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            Ledger led \u003d (Ledger) ledList.getItemFromIndex(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            str.append(led.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            EntryList entList \u003d led.entryList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            int entsize \u003d entList.getItemsSize();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            for (int x \u003d 0; x \u003c entsize; x++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                Entry ent \u003d (Entry) entList.getItemFromIndex(x);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                str.append(ent.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./data/save.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        fw.write(String.valueOf(str));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    public static void load() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        buildFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        File f \u003d new File(\"./data/save.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        InputParser in \u003d new InputParser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] buffer;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        int ledgerIndex \u003d -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            String str \u003d s.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            if (str.contains(\";\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                buffer \u003d str.split(\";\", 5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                if (buffer[0].contentEquals(\"Expense\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                    buffer[0] \u003d \" -e\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                } else if (buffer[0].contentEquals(\"Income\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                    buffer[0] \u003d \" -i\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                buffer[1] \u003d dictionary(buffer[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                if (buffer[3].length() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                    buffer[3] \u003d charRemoveAt(buffer[3], 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                EntryTracker.setCurrLedger((Ledger) ManualTracker.getLedgerList().getItemFromIndex(ledgerIndex));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                EntryTracker.setCommandPacket(in.parseInput(\"entry new /time \" + buffer[3] + \" /cat \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    + buffer[1] + \" /desc \" + buffer[4] + \" /amt \" + buffer[2] + buffer[0]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                EntryTracker.createEntry();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                buffer \u003d str.split(\" \", 3);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                buffer[0] \u003d dictionary(buffer[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                buffer[2] \u003d buffer[2].substring(2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "                ManualTracker.setCommandPacket(in.parseInput(\"ledger new /date \" + buffer[2] + buffer[0] + buffer[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                ManualTracker.createLedger();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                ledgerIndex++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    private static String charRemoveAt(String str, int p) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        return str.substring(0, p) + str.substring(p + 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void buildFile() throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        if (!Files.exists(Paths.get(\"./data\"))) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            Files.createDirectory(Paths.get(\"./data\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        if (!Files.exists(Paths.get(\"./data/save.txt\"))) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            Files.createFile(Paths.get(\"./data/save.txt\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Feudalord"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static String dictionary(String input) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Jan\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"01\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Feb\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"02\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Mar\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"03\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Apr\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"04\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"May\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"05\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Jun\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"06\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Jul\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"07\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Aug\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"08\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Sep\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"09\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Oct\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"10\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Nov\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"11\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"Dec\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"12\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"TRANSPORT\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"tpt\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"FOOD\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"fd\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"TRAVEL\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"tvl\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"SHOPPING\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"shp\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"BILLS\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"bll\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"SALARY\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"slr\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        case \"ALLOWANCE\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"alw\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Feudalord"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Feudalord": 111,
      "kaiwen98": 20
    }
  },
  {
    "path": "src/test/java/seedu/financeit/DukeTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public void sampleTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "kaiwen98": 3
    }
  },
  {
    "path": "src/test/java/seedu/financeit/common/CommandPacketTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.common; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Organises data from input string into distinct data types and structure."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * For scalability purposes, a hash table is implemented to map param type to its corresponding params."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class CommandPacketTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private HashMap paramMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String rawInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Constructors"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public CommandPacketTest(String taskType, HashMap paramMap) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.commandString \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap \u003d paramMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param type refers to /.* (eg. /a)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param refers to string following the param type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getParam(String paramType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!paramMap.containsKey(paramType)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return (String) paramMap.get(paramType);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String[] getParamTypes() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (String[]) paramMap.keySet().toArray(new String[0]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.commandString.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public HashMap getParamMap() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (HashMap)this.paramMap.clone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void addParamToMap(String paramType, String paramString) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap.put(paramType, paramString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"%s, %s\\n\", this.commandString, this.paramMap);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 49
    }
  },
  {
    "path": "src/test/java/seedu/financeit/financetools/SimpleInterestTest.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package seedu.financeit.financetools;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.common.CommandPacket;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.parser.InputParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import seedu.financeit.ui.UiManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class SimpleInterestTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    private static InputParser inputParser \u003d new InputParser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static CommandPacket handleInput(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        UiManager.printInputPrompt();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return inputParser.parseInput(input.toLowerCase());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    void calculateSimpleInterest_input1000_expect5() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        CommandPacket packet \u003d handleInput(\"simplecalc /amount 1000 /ir 5\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        Double interestRate \u003d FinanceTools.handleSimpleInterest(packet);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        assertEquals(interestRate, 50.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 23
    }
  },
  {
    "path": "src/test/java/seedu/financeit/utils/TestInputGenerator.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class TestInputGenerator {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String MANUAL_TRACKER_COMMAND_STRING_PREFIX \u003d \"ledger\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String ENTRY_TRACKER_COMMAND_STRING \u003d \"entry\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String generateCommand(String commandStringPrefix, String commandType, String[][] params) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d commandStringPrefix + \" \" + commandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String[] param : params) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d \" \" + param[0] + \" \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d \" \" + param[1] + \" \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 15
    }
  },
  {
    "path": "src/test/java/seedu/financeit/utils/TypicalLedgerEntries.java",
    "fileType": "test-code",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package seedu.financeit.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import seedu.financeit.manualtracker.Ledger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class TypicalLedgerEntries {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static ArrayList\u003cString\u003e commandInputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    Ledger ledger \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    TypicalLedgerEntries() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    TypicalLedgerEntries(String... commandInputs) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (String commandInput : commandInputs) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.commandInputs.add(commandInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    TypicalLedgerEntries(HashMap\u003cString, String\u003e ledgerParams, HashMap\u003cString, String\u003e[] entryParams) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "manual"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger new /date 200404"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger open /date 200404"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /amt 600 /time 1500 -e /desc Lunch with friends in the middle of the ocean on the peak of the sky pillar  sdsadsadsadsadsadsadsadsadsdsadsadsadsadsadsadsadsa /cat fd -auto"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /amt 400 /time 1600 -e /desc Bought ten chilli \u003eand five bell peppers \u003eand three carrots \u003eand a big bag of cheetos \u003eand diet coke, please /cat shp"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /amt 500 /time 1700 -i /desc Monthly wages /cat slr"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry edit /id 3 /amt 1000"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry delete /id 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 12
    }
  },
  {
    "path": "text-ui-test/input1.txt",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "manual"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger open /date 201212"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger new /date 200404"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger new /date 200504"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger open /date 202020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger open /date 200404"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time /desc /cat /amt 1500"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time 1500 /desc Go to the poll -i /cat tpt /amt 1500"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time 1500 /desc Go to the poll -i /cat tpt /amt 1501"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time 1500 /desc Go to the poll where\u003e1.the rainbow used to be nice\u003e2. and colorful, haha -i /cat tpt /amt 1503"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time 1500 /desc Go to the pole -i /cat tpt /amt 1501"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry new /time 1500 /desc Go to the pole -i /cat tpt /amt 1501 /slowbro ddffsfs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry edit /id 1 /time 1600"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "ledger open /date 200404"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "entry list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "setlocal enableextensions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "pushd %~dp0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "call ..\\..\\SwitchJava.bat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "call gradlew clean shadowJar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "cd build\\libs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "for /f \"tokens\u003d*\" %%a in ("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027dir /b *.jar\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ") do ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    set jarloc\u003d%%a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input1.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "cd ..\\..\\text-ui-test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "kaiwen98": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "./gradlew clean shadowJar"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input1.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "diff EXPECTED-UNIX.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 22,
      "kaiwen98": 1
    }
  }
]
